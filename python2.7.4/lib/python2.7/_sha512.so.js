// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET, globalScope) {
  var Module = {};
  var args = [];
  Module.arguments = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime essentials
//========================================
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.pop();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}
var __ATINIT__ = []; // functions called during startup
function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
// === Body ===
var __str9;
var __str8;
var __str7;
var __str6;
var __str5;
var __str4;
var __str3;
var __str2;
var __str17;
var __str16;
var __str15;
var __str14;
var __str13;
var __str12;
var __str11;
var __str10;
var __str1;
var __str;
var _SHA_methods;
var _SHA_members;
var _SHA_getseters;
var _SHA_functions;
var _SHA512type;
var _SHA512_update__doc__;
var _SHA512_new_kwlist;
var _SHA512_new__doc__;
var _SHA512_hexdigest__doc__;
var _SHA512_digest__doc__;
var _SHA512_copy__doc__;
var _SHA384type;
var _SHA384_new_kwlist;
var _SHA384_new__doc__;
__str9=allocate([83,72,65,51,56,52,0,0], "i8", ALLOC_NORMAL);
__str8=allocate([83,72,65,53,49,50,0,0], "i8", ALLOC_NORMAL);
__str7=allocate([110,97,109,101,0,0,0,0], "i8", ALLOC_NORMAL);
__str6=allocate([98,108,111,99,107,95,115,105,122,101,0,0], "i8", ALLOC_NORMAL);
__str5=allocate([95,115,104,97,53,49,50,46,115,104,97,53,49,50,0,0], "i8", ALLOC_NORMAL);
__str4=allocate([124,115,42,58,110,101,119,0], "i8", ALLOC_NORMAL);
__str3=allocate([115,116,114,105,110,103,0,0], "i8", ALLOC_NORMAL);
__str2=allocate([115,104,97,51,56,52,0,0], "i8", ALLOC_NORMAL);
__str17=allocate([95,115,104,97,53,49,50,46,115,104,97,51,56,52,0,0], "i8", ALLOC_NORMAL);
__str16=allocate([115,42,58,117,112,100,97,116,101,0,0,0], "i8", ALLOC_NORMAL);
__str15=allocate([117,112,100,97,116,101,0,0], "i8", ALLOC_NORMAL);
__str14=allocate([104,101,120,100,105,103,101,115,116,0,0,0], "i8", ALLOC_NORMAL);
__str13=allocate([100,105,103,101,115,116,0,0], "i8", ALLOC_NORMAL);
__str12=allocate([99,111,112,121,0,0,0,0], "i8", ALLOC_NORMAL);
__str11=allocate([100,105,103,101,115,116,115,105,122,101,0,0], "i8", ALLOC_NORMAL);
__str10=allocate([100,105,103,101,115,116,95,115,105,122,101,0], "i8", ALLOC_NORMAL);
__str1=allocate([115,104,97,53,49,50,0,0], "i8", ALLOC_NORMAL);
__str=allocate([95,115,104,97,53,49,50,0], "i8", ALLOC_NORMAL);
_SHA_methods=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_members=allocate([0,0,0,0,1,0,0,0,216,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,216,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_getseters=allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_functions=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA512type=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA512_update__doc__=allocate([85,112,100,97,116,101,32,116,104,105,115,32,104,97,115,104,32,111,98,106,101,99,116,39,115,32,115,116,97,116,101,32,119,105,116,104,32,116,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,46,0,0,0], "i8", ALLOC_NORMAL);
_SHA512_new_kwlist=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA512_new__doc__=allocate([82,101,116,117,114,110,32,97,32,110,101,119,32,83,72,65,45,53,49,50,32,104,97,115,104,32,111,98,106,101,99,116,59,32,111,112,116,105,111,110,97,108,108,121,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,97,32,115,116,114,105,110,103,46,0], "i8", ALLOC_NORMAL);
_SHA512_hexdigest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,104,101,120,97,100,101,99,105,109,97,108,32,100,105,103,105,116,115,46,0,0], "i8", ALLOC_NORMAL);
_SHA512_digest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,98,105,110,97,114,121,32,100,97,116,97,46,0], "i8", ALLOC_NORMAL);
_SHA512_copy__doc__=allocate([82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,104,97,115,104,32,111,98,106,101,99,116,46,0,0,0], "i8", ALLOC_NORMAL);
_SHA384type=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA384_new_kwlist=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA384_new__doc__=allocate([82,101,116,117,114,110,32,97,32,110,101,119,32,83,72,65,45,51,56,52,32,104,97,115,104,32,111,98,106,101,99,116,59,32,111,112,116,105,111,110,97,108,108,121,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,97,32,115,116,114,105,110,103,46,0], "i8", ALLOC_NORMAL);
/* no memory initializer */
function runPostSets() {
HEAP32[((_SHA_methods)>>2)]=((__str12)|0);
HEAP32[(((_SHA_methods)+(4))>>2)]=((FUNCTION_TABLE_OFFSET + 18));
HEAP32[(((_SHA_methods)+(12))>>2)]=((_SHA512_copy__doc__)|0);
HEAP32[(((_SHA_methods)+(16))>>2)]=((__str13)|0);
HEAP32[(((_SHA_methods)+(20))>>2)]=((FUNCTION_TABLE_OFFSET + 8));
HEAP32[(((_SHA_methods)+(28))>>2)]=((_SHA512_digest__doc__)|0);
HEAP32[(((_SHA_methods)+(32))>>2)]=((__str14)|0);
HEAP32[(((_SHA_methods)+(36))>>2)]=((FUNCTION_TABLE_OFFSET + 12));
HEAP32[(((_SHA_methods)+(44))>>2)]=((_SHA512_hexdigest__doc__)|0);
HEAP32[(((_SHA_methods)+(48))>>2)]=((__str15)|0);
HEAP32[(((_SHA_methods)+(52))>>2)]=((FUNCTION_TABLE_OFFSET + 6));
HEAP32[(((_SHA_methods)+(60))>>2)]=((_SHA512_update__doc__)|0);
HEAP32[((_SHA_members)>>2)]=((__str10)|0);
HEAP32[(((_SHA_members)+(20))>>2)]=((__str11)|0);
HEAP32[((_SHA_getseters)>>2)]=((__str6)|0);
HEAP32[(((_SHA_getseters)+(4))>>2)]=(FUNCTION_TABLE_OFFSET + 4);
HEAP32[(((_SHA_getseters)+(20))>>2)]=((__str7)|0);
HEAP32[(((_SHA_getseters)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 16);
HEAP32[((_SHA_functions)>>2)]=((__str1)|0);
HEAP32[(((_SHA_functions)+(4))>>2)]=((FUNCTION_TABLE_OFFSET + 10));
HEAP32[(((_SHA_functions)+(12))>>2)]=((_SHA512_new__doc__)|0);
HEAP32[(((_SHA_functions)+(16))>>2)]=((__str2)|0);
HEAP32[(((_SHA_functions)+(20))>>2)]=((FUNCTION_TABLE_OFFSET + 14));
HEAP32[(((_SHA_functions)+(28))>>2)]=((_SHA384_new__doc__)|0);
HEAP32[(((_SHA512type)+(12))>>2)]=((__str5)|0);
HEAP32[(((_SHA512type)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 2);
HEAP32[(((_SHA512type)+(116))>>2)]=((_SHA_methods)|0);
HEAP32[(((_SHA512type)+(120))>>2)]=((_SHA_members)|0);
HEAP32[(((_SHA512type)+(124))>>2)]=((_SHA_getseters)|0);
HEAP32[((_SHA512_new_kwlist)>>2)]=((__str3)|0);
HEAP32[(((_SHA384type)+(12))>>2)]=((__str17)|0);
HEAP32[(((_SHA384type)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 2);
HEAP32[(((_SHA384type)+(116))>>2)]=((_SHA_methods)|0);
HEAP32[(((_SHA384type)+(120))>>2)]=((_SHA_members)|0);
HEAP32[(((_SHA384type)+(124))>>2)]=((_SHA_getseters)|0);
HEAP32[((_SHA384_new_kwlist)>>2)]=((__str3)|0);
}
if (!awaitingMemoryInitializer) runPostSets();
FUNCTION_TABLE.push.apply(FUNCTION_TABLE, [0,0,_SHA512_dealloc,0,_SHA512_get_block_size,0,_SHA512_update,0,_SHA512_digest,0,_SHA512_new,0,_SHA512_hexdigest,0,_SHA384_new,0,_SHA512_get_name,0,_SHA512_copy,0]);
// EMSCRIPTEN_START_FUNCS
function _sha384_init($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 4)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i=__stackBase__;
      $1=$sha_info;
      HEAP32[(($i)>>2)]=1;
      var $2=$1;
      var $3=(($2+208)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=$i;
      var $5=HEAP8[($4)];
      var $6=(($5 << 24) >> 24);
      var $7=(($6)|(0))==1;
      if ($7) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $9=$1;
      var $10=(($9+208)|0);
      HEAP32[(($10)>>2)]=1;
      label = 3; break;
    case 3: 
      var $12=$1;
      var $13=(($12+8)|0);
      var $14=(($13)|0);
      var $$etemp$0$0=-1056596264;
      var $$etemp$0$1=-876896931;
      var $st$1$0=(($14)|0);
      HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
      var $st$2$1=(($14+4)|0);
      HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
      var $15=$1;
      var $16=(($15+8)|0);
      var $17=(($16+8)|0);
      var $$etemp$3$0=914150663;
      var $$etemp$3$1=1654270250;
      var $st$4$0=(($17)|0);
      HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
      var $st$5$1=(($17+4)|0);
      HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
      var $18=$1;
      var $19=(($18+8)|0);
      var $20=(($19+16)|0);
      var $$etemp$6$0=812702999;
      var $$etemp$6$1=-1856437926;
      var $st$7$0=(($20)|0);
      HEAP32[(($st$7$0)>>2)]=$$etemp$6$0;
      var $st$8$1=(($20+4)|0);
      HEAP32[(($st$8$1)>>2)]=$$etemp$6$1;
      var $21=$1;
      var $22=(($21+8)|0);
      var $23=(($22+24)|0);
      var $$etemp$9$0=-150054599;
      var $$etemp$9$1=355462360;
      var $st$10$0=(($23)|0);
      HEAP32[(($st$10$0)>>2)]=$$etemp$9$0;
      var $st$11$1=(($23+4)|0);
      HEAP32[(($st$11$1)>>2)]=$$etemp$9$1;
      var $24=$1;
      var $25=(($24+8)|0);
      var $26=(($25+32)|0);
      var $$etemp$12$0=-4191439;
      var $$etemp$12$1=1731405415;
      var $st$13$0=(($26)|0);
      HEAP32[(($st$13$0)>>2)]=$$etemp$12$0;
      var $st$14$1=(($26+4)|0);
      HEAP32[(($st$14$1)>>2)]=$$etemp$12$1;
      var $27=$1;
      var $28=(($27+8)|0);
      var $29=(($28+40)|0);
      var $$etemp$15$0=1750603025;
      var $$etemp$15$1=-1900787065;
      var $st$16$0=(($29)|0);
      HEAP32[(($st$16$0)>>2)]=$$etemp$15$0;
      var $st$17$1=(($29+4)|0);
      HEAP32[(($st$17$1)>>2)]=$$etemp$15$1;
      var $30=$1;
      var $31=(($30+8)|0);
      var $32=(($31+48)|0);
      var $$etemp$18$0=1694076839;
      var $$etemp$18$1=-619958771;
      var $st$19$0=(($32)|0);
      HEAP32[(($st$19$0)>>2)]=$$etemp$18$0;
      var $st$20$1=(($32+4)|0);
      HEAP32[(($st$20$1)>>2)]=$$etemp$18$1;
      var $33=$1;
      var $34=(($33+8)|0);
      var $35=(($34+56)|0);
      var $$etemp$21$0=-1090891868;
      var $$etemp$21$1=1203062813;
      var $st$22$0=(($35)|0);
      HEAP32[(($st$22$0)>>2)]=$$etemp$21$0;
      var $st$23$1=(($35+4)|0);
      HEAP32[(($st$23$1)>>2)]=$$etemp$21$1;
      var $36=$1;
      var $37=(($36+72)|0);
      HEAP32[(($37)>>2)]=0;
      var $38=$1;
      var $39=(($38+76)|0);
      HEAP32[(($39)>>2)]=0;
      var $40=$1;
      var $41=(($40+212)|0);
      HEAP32[(($41)>>2)]=0;
      var $42=$1;
      var $43=(($42+216)|0);
      HEAP32[(($43)>>2)]=48;
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _init_sha512() {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $m;
      HEAP32[((((_SHA384type+4)|0))>>2)]=_PyType_Type;
      var $1=_PyType_Ready(_SHA384type);
      var $2=(($1)|(0)) < 0;
      if ($2) { label = 2; break; } else { label = 3; break; }
    case 2: 
      label = 7; break;
    case 3: 
      HEAP32[((((_SHA512type+4)|0))>>2)]=_PyType_Type;
      var $5=_PyType_Ready(_SHA512type);
      var $6=(($5)|(0)) < 0;
      if ($6) { label = 4; break; } else { label = 5; break; }
    case 4: 
      label = 7; break;
    case 5: 
      var $9=_Py_InitModule4(((__str)|0), ((_SHA_functions)|0), 0, 0, 1013);
      $m=$9;
      var $10=$m;
      var $11=(($10)|(0))==0;
      if ($11) { label = 6; break; } else { label = 7; break; }
    case 6: 
      label = 7; break;
    case 7: 
      return;
    default: assert(0, "bad label: " + label);
  }
}
Module["_init_sha512"] = _init_sha512;
function _SHA512_new($self, $args, $kwdict) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $new;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      $4=$kwdict;
      var $5=$buf;
      _memset($5, 0, 52);
      var $6=$3;
      var $7=$4;
      var $8=_PyArg_ParseTupleAndKeywords($6, $7, ((__str4)|0), ((_SHA512_new_kwlist)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $9=(($8)|(0))!=0;
      if ($9) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 15; break;
    case 3: 
      var $12=_newSHA512object();
      $new=$12;
      var $13=(($12)|(0))==0;
      if ($13) { label = 4; break; } else { label = 5; break; }
    case 4: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 5: 
      var $16=$new;
      _sha512_init($16);
      var $17=_PyErr_Occurred();
      var $18=(($17)|(0))!=0;
      if ($18) { label = 6; break; } else { label = 12; break; }
    case 6: 
      label = 7; break;
    case 7: 
      var $21=$new;
      var $22=$21;
      var $23=(($22)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=((($24)-(1))|0);
      HEAP32[(($23)>>2)]=$25;
      var $26=(($25)|(0))!=0;
      if ($26) { label = 8; break; } else { label = 9; break; }
    case 8: 
      label = 10; break;
    case 9: 
      var $29=$new;
      var $30=$29;
      var $31=(($30+4)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32+24)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=$new;
      var $36=$35;
      FUNCTION_TABLE[$34]($36);
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 12: 
      var $40=(($buf+8)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($41)|(0)) > 0;
      if ($42) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $44=$new;
      var $45=(($buf)|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=(($buf+8)|0);
      var $48=HEAP32[(($47)>>2)];
      _sha512_update($44, $46, $48);
      label = 14; break;
    case 14: 
      _PyBuffer_Release($buf);
      var $50=$new;
      var $51=$50;
      $1=$51;
      label = 15; break;
    case 15: 
      var $53=$1;
      STACKTOP = __stackBase__;
      return $53;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA384_new($self, $args, $kwdict) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $new;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      $4=$kwdict;
      var $5=$buf;
      _memset($5, 0, 52);
      var $6=$3;
      var $7=$4;
      var $8=_PyArg_ParseTupleAndKeywords($6, $7, ((__str4)|0), ((_SHA384_new_kwlist)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $9=(($8)|(0))!=0;
      if ($9) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 15; break;
    case 3: 
      var $12=_newSHA384object();
      $new=$12;
      var $13=(($12)|(0))==0;
      if ($13) { label = 4; break; } else { label = 5; break; }
    case 4: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 5: 
      var $16=$new;
      _sha384_init($16);
      var $17=_PyErr_Occurred();
      var $18=(($17)|(0))!=0;
      if ($18) { label = 6; break; } else { label = 12; break; }
    case 6: 
      label = 7; break;
    case 7: 
      var $21=$new;
      var $22=$21;
      var $23=(($22)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=((($24)-(1))|0);
      HEAP32[(($23)>>2)]=$25;
      var $26=(($25)|(0))!=0;
      if ($26) { label = 8; break; } else { label = 9; break; }
    case 8: 
      label = 10; break;
    case 9: 
      var $29=$new;
      var $30=$29;
      var $31=(($30+4)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32+24)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=$new;
      var $36=$35;
      FUNCTION_TABLE[$34]($36);
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 12: 
      var $40=(($buf+8)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($41)|(0)) > 0;
      if ($42) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $44=$new;
      var $45=(($buf)|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=(($buf+8)|0);
      var $48=HEAP32[(($47)>>2)];
      _sha512_update($44, $46, $48);
      label = 14; break;
    case 14: 
      _PyBuffer_Release($buf);
      var $50=$new;
      var $51=$50;
      $1=$51;
      label = 15; break;
    case 15: 
      var $53=$1;
      STACKTOP = __stackBase__;
      return $53;
    default: assert(0, "bad label: " + label);
  }
}
function _newSHA384object() {
  var label = 0;
  var $1=__PyObject_New(_SHA384type);
  var $2=$1;
  return $2;
}
function _sha512_update($sha_info, $buffer, $count) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $clo;
      $1=$sha_info;
      $2=$buffer;
      $3=$count;
      var $4=$1;
      var $5=(($4+72)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=$3;
      var $8=$7 << 3;
      var $9=((($6)+($8))|0);
      $clo=$9;
      var $10=$clo;
      var $11=$1;
      var $12=(($11+72)|0);
      var $13=HEAP32[(($12)>>2)];
      var $14=(($10)>>>(0)) < (($13)>>>(0));
      if ($14) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $16=$1;
      var $17=(($16+76)|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=((($18)+(1))|0);
      HEAP32[(($17)>>2)]=$19;
      label = 3; break;
    case 3: 
      var $21=$clo;
      var $22=$1;
      var $23=(($22+72)|0);
      HEAP32[(($23)>>2)]=$21;
      var $24=$3;
      var $25=$24 >>> 29;
      var $26=$1;
      var $27=(($26+76)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=((($28)+($25))|0);
      HEAP32[(($27)>>2)]=$29;
      var $30=$1;
      var $31=(($30+212)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32)|(0))!=0;
      if ($33) { label = 4; break; } else { label = 10; break; }
    case 4: 
      var $35=$1;
      var $36=(($35+212)|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=(((128)-($37))|0);
      $i=$38;
      var $39=$i;
      var $40=$3;
      var $41=(($39)|(0)) > (($40)|(0));
      if ($41) { label = 5; break; } else { label = 6; break; }
    case 5: 
      var $43=$3;
      $i=$43;
      label = 6; break;
    case 6: 
      var $45=$1;
      var $46=(($45+80)|0);
      var $47=(($46)|0);
      var $48=$1;
      var $49=(($48+212)|0);
      var $50=HEAP32[(($49)>>2)];
      var $51=(($47+$50)|0);
      var $52=$2;
      var $53=$i;
      assert($53 % 1 === 0);_memcpy($51, $52, $53);
      var $54=$i;
      var $55=$3;
      var $56=((($55)-($54))|0);
      $3=$56;
      var $57=$i;
      var $58=$2;
      var $59=(($58+$57)|0);
      $2=$59;
      var $60=$i;
      var $61=$1;
      var $62=(($61+212)|0);
      var $63=HEAP32[(($62)>>2)];
      var $64=((($63)+($60))|0);
      HEAP32[(($62)>>2)]=$64;
      var $65=$1;
      var $66=(($65+212)|0);
      var $67=HEAP32[(($66)>>2)];
      var $68=(($67)|(0))==128;
      if ($68) { label = 7; break; } else { label = 8; break; }
    case 7: 
      var $70=$1;
      _sha512_transform($70);
      label = 9; break;
    case 8: 
      label = 14; break;
    case 9: 
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      var $75=$3;
      var $76=(($75)|(0)) >= 128;
      if ($76) { label = 12; break; } else { label = 13; break; }
    case 12: 
      var $78=$1;
      var $79=(($78+80)|0);
      var $80=$79;
      var $81=$2;
      assert(128 % 1 === 0);_memcpy($80, $81, 128);
      var $82=$2;
      var $83=(($82+128)|0);
      $2=$83;
      var $84=$3;
      var $85=((($84)-(128))|0);
      $3=$85;
      var $86=$1;
      _sha512_transform($86);
      label = 11; break;
    case 13: 
      var $88=$1;
      var $89=(($88+80)|0);
      var $90=$89;
      var $91=$2;
      var $92=$3;
      assert($92 % 1 === 0);_memcpy($90, $91, $92);
      var $93=$3;
      var $94=$1;
      var $95=(($94+212)|0);
      HEAP32[(($95)>>2)]=$93;
      label = 14; break;
    case 14: 
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _sha512_transform($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 720)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i;
      var $S=__stackBase__;
      var $W=(__stackBase__)+(64);
      var $t0=(__stackBase__)+(704);
      var $t1=(__stackBase__)+(712);
      $1=$sha_info;
      var $2=$W;
      var $3=$1;
      var $4=(($3+80)|0);
      var $5=$4;
      assert(128 % 1 === 0);_memcpy($2, $5, 128);
      var $6=(($W)|0);
      var $7=$1;
      var $8=(($7+208)|0);
      var $9=HEAP32[(($8)>>2)];
      _longReverse($6, 128, $9);
      $i=16;
      label = 2; break;
    case 2: 
      var $11=$i;
      var $12=(($11)|(0)) < 80;
      if ($12) { label = 3; break; } else { label = 5; break; }
    case 3: 
      var $14=$i;
      var $15=((($14)-(2))|0);
      var $16=(($W+($15<<3))|0);
      var $ld$0$0=(($16)|0);
      var $17$0=HEAP32[(($ld$0$0)>>2)];
      var $ld$1$1=(($16+4)|0);
      var $17$1=HEAP32[(($ld$1$1)>>2)];
      var $18$0=($17$0 >>> 19) | ($17$1 << 13);
      var $18$1=($17$1 >>> 19) | (0 << 13);
      var $19=$i;
      var $20=((($19)-(2))|0);
      var $21=(($W+($20<<3))|0);
      var $ld$2$0=(($21)|0);
      var $22$0=HEAP32[(($ld$2$0)>>2)];
      var $ld$3$1=(($21+4)|0);
      var $22$1=HEAP32[(($ld$3$1)>>2)];
      var $23$0=(0 << 13) | (0 >>> 19);
      var $23$1=($22$0 << 13) | (0 >>> 19);
      var $24$0=$18$0 | $23$0;
      var $24$1=$18$1 | $23$1;
      var $25=$i;
      var $26=((($25)-(2))|0);
      var $27=(($W+($26<<3))|0);
      var $ld$4$0=(($27)|0);
      var $28$0=HEAP32[(($ld$4$0)>>2)];
      var $ld$5$1=(($27+4)|0);
      var $28$1=HEAP32[(($ld$5$1)>>2)];
      var $29$0=($28$1 >>> 29) | (0 << 3);
      var $29$1=(0 >>> 29) | (0 << 3);
      var $30=$i;
      var $31=((($30)-(2))|0);
      var $32=(($W+($31<<3))|0);
      var $ld$6$0=(($32)|0);
      var $33$0=HEAP32[(($ld$6$0)>>2)];
      var $ld$7$1=(($32+4)|0);
      var $33$1=HEAP32[(($ld$7$1)>>2)];
      var $34$0=($33$0 << 3) | (0 >>> 29);
      var $34$1=($33$1 << 3) | ($33$0 >>> 29);
      var $35$0=$29$0 | $34$0;
      var $35$1=$29$1 | $34$1;
      var $36$0=$24$0 ^ $35$0;
      var $36$1=$24$1 ^ $35$1;
      var $37=$i;
      var $38=((($37)-(2))|0);
      var $39=(($W+($38<<3))|0);
      var $ld$8$0=(($39)|0);
      var $40$0=HEAP32[(($ld$8$0)>>2)];
      var $ld$9$1=(($39+4)|0);
      var $40$1=HEAP32[(($ld$9$1)>>2)];
      var $41$0=($40$0 >>> 6) | ($40$1 << 26);
      var $41$1=($40$1 >>> 6) | (0 << 26);
      var $42$0=$36$0 ^ $41$0;
      var $42$1=$36$1 ^ $41$1;
      var $43=$i;
      var $44=((($43)-(7))|0);
      var $45=(($W+($44<<3))|0);
      var $ld$10$0=(($45)|0);
      var $46$0=HEAP32[(($ld$10$0)>>2)];
      var $ld$11$1=(($45+4)|0);
      var $46$1=HEAP32[(($ld$11$1)>>2)];
      var $47$0 = _i64Add($42$0,$42$1,$46$0,$46$1); var $47$1 = tempRet0;
      var $48=$i;
      var $49=((($48)-(15))|0);
      var $50=(($W+($49<<3))|0);
      var $ld$12$0=(($50)|0);
      var $51$0=HEAP32[(($ld$12$0)>>2)];
      var $ld$13$1=(($50+4)|0);
      var $51$1=HEAP32[(($ld$13$1)>>2)];
      var $52$0=($51$0 >>> 1) | ($51$1 << 31);
      var $52$1=($51$1 >>> 1) | (0 << 31);
      var $53=$i;
      var $54=((($53)-(15))|0);
      var $55=(($W+($54<<3))|0);
      var $ld$14$0=(($55)|0);
      var $56$0=HEAP32[(($ld$14$0)>>2)];
      var $ld$15$1=(($55+4)|0);
      var $56$1=HEAP32[(($ld$15$1)>>2)];
      var $57$0=(0 << 31) | (0 >>> 1);
      var $57$1=($56$0 << 31) | (0 >>> 1);
      var $58$0=$52$0 | $57$0;
      var $58$1=$52$1 | $57$1;
      var $59=$i;
      var $60=((($59)-(15))|0);
      var $61=(($W+($60<<3))|0);
      var $ld$16$0=(($61)|0);
      var $62$0=HEAP32[(($ld$16$0)>>2)];
      var $ld$17$1=(($61+4)|0);
      var $62$1=HEAP32[(($ld$17$1)>>2)];
      var $63$0=($62$0 >>> 8) | ($62$1 << 24);
      var $63$1=($62$1 >>> 8) | (0 << 24);
      var $64=$i;
      var $65=((($64)-(15))|0);
      var $66=(($W+($65<<3))|0);
      var $ld$18$0=(($66)|0);
      var $67$0=HEAP32[(($ld$18$0)>>2)];
      var $ld$19$1=(($66+4)|0);
      var $67$1=HEAP32[(($ld$19$1)>>2)];
      var $68$0=(0 << 24) | (0 >>> 8);
      var $68$1=($67$0 << 24) | (0 >>> 8);
      var $69$0=$63$0 | $68$0;
      var $69$1=$63$1 | $68$1;
      var $70$0=$58$0 ^ $69$0;
      var $70$1=$58$1 ^ $69$1;
      var $71=$i;
      var $72=((($71)-(15))|0);
      var $73=(($W+($72<<3))|0);
      var $ld$20$0=(($73)|0);
      var $74$0=HEAP32[(($ld$20$0)>>2)];
      var $ld$21$1=(($73+4)|0);
      var $74$1=HEAP32[(($ld$21$1)>>2)];
      var $75$0=($74$0 >>> 7) | ($74$1 << 25);
      var $75$1=($74$1 >>> 7) | (0 << 25);
      var $76$0=$70$0 ^ $75$0;
      var $76$1=$70$1 ^ $75$1;
      var $77$0 = _i64Add($47$0,$47$1,$76$0,$76$1); var $77$1 = tempRet0;
      var $78=$i;
      var $79=((($78)-(16))|0);
      var $80=(($W+($79<<3))|0);
      var $ld$22$0=(($80)|0);
      var $81$0=HEAP32[(($ld$22$0)>>2)];
      var $ld$23$1=(($80+4)|0);
      var $81$1=HEAP32[(($ld$23$1)>>2)];
      var $82$0 = _i64Add($77$0,$77$1,$81$0,$81$1); var $82$1 = tempRet0;
      var $83=$i;
      var $84=(($W+($83<<3))|0);
      var $st$24$0=(($84)|0);
      HEAP32[(($st$24$0)>>2)]=$82$0;
      var $st$25$1=(($84+4)|0);
      HEAP32[(($st$25$1)>>2)]=$82$1;
      label = 4; break;
    case 4: 
      var $86=$i;
      var $87=((($86)+(1))|0);
      $i=$87;
      label = 2; break;
    case 5: 
      $i=0;
      label = 6; break;
    case 6: 
      var $90=$i;
      var $91=(($90)|(0)) < 8;
      if ($91) { label = 7; break; } else { label = 9; break; }
    case 7: 
      var $93=$i;
      var $94=$1;
      var $95=(($94+8)|0);
      var $96=(($95+($93<<3))|0);
      var $ld$26$0=(($96)|0);
      var $97$0=HEAP32[(($ld$26$0)>>2)];
      var $ld$27$1=(($96+4)|0);
      var $97$1=HEAP32[(($ld$27$1)>>2)];
      var $98=$i;
      var $99=(($S+($98<<3))|0);
      var $st$28$0=(($99)|0);
      HEAP32[(($st$28$0)>>2)]=$97$0;
      var $st$29$1=(($99+4)|0);
      HEAP32[(($st$29$1)>>2)]=$97$1;
      label = 8; break;
    case 8: 
      var $101=$i;
      var $102=((($101)+(1))|0);
      $i=$102;
      label = 6; break;
    case 9: 
      var $104=(($S+56)|0);
      var $ld$30$0=(($104)|0);
      var $105$0=HEAP32[(($ld$30$0)>>2)];
      var $ld$31$1=(($104+4)|0);
      var $105$1=HEAP32[(($ld$31$1)>>2)];
      var $106=(($S+32)|0);
      var $ld$32$0=(($106)|0);
      var $107$0=HEAP32[(($ld$32$0)>>2)];
      var $ld$33$1=(($106+4)|0);
      var $107$1=HEAP32[(($ld$33$1)>>2)];
      var $108$0=($107$0 >>> 14) | ($107$1 << 18);
      var $108$1=($107$1 >>> 14) | (0 << 18);
      var $109=(($S+32)|0);
      var $ld$34$0=(($109)|0);
      var $110$0=HEAP32[(($ld$34$0)>>2)];
      var $ld$35$1=(($109+4)|0);
      var $110$1=HEAP32[(($ld$35$1)>>2)];
      var $111$0=(0 << 18) | (0 >>> 14);
      var $111$1=($110$0 << 18) | (0 >>> 14);
      var $112$0=$108$0 | $111$0;
      var $112$1=$108$1 | $111$1;
      var $113=(($S+32)|0);
      var $ld$36$0=(($113)|0);
      var $114$0=HEAP32[(($ld$36$0)>>2)];
      var $ld$37$1=(($113+4)|0);
      var $114$1=HEAP32[(($ld$37$1)>>2)];
      var $115$0=($114$0 >>> 18) | ($114$1 << 14);
      var $115$1=($114$1 >>> 18) | (0 << 14);
      var $116=(($S+32)|0);
      var $ld$38$0=(($116)|0);
      var $117$0=HEAP32[(($ld$38$0)>>2)];
      var $ld$39$1=(($116+4)|0);
      var $117$1=HEAP32[(($ld$39$1)>>2)];
      var $118$0=(0 << 14) | (0 >>> 18);
      var $118$1=($117$0 << 14) | (0 >>> 18);
      var $119$0=$115$0 | $118$0;
      var $119$1=$115$1 | $118$1;
      var $120$0=$112$0 ^ $119$0;
      var $120$1=$112$1 ^ $119$1;
      var $121=(($S+32)|0);
      var $ld$40$0=(($121)|0);
      var $122$0=HEAP32[(($ld$40$0)>>2)];
      var $ld$41$1=(($121+4)|0);
      var $122$1=HEAP32[(($ld$41$1)>>2)];
      var $123$0=($122$1 >>> 9) | (0 << 23);
      var $123$1=(0 >>> 9) | (0 << 23);
      var $124=(($S+32)|0);
      var $ld$42$0=(($124)|0);
      var $125$0=HEAP32[(($ld$42$0)>>2)];
      var $ld$43$1=(($124+4)|0);
      var $125$1=HEAP32[(($ld$43$1)>>2)];
      var $126$0=($125$0 << 23) | (0 >>> 9);
      var $126$1=($125$1 << 23) | ($125$0 >>> 9);
      var $127$0=$123$0 | $126$0;
      var $127$1=$123$1 | $126$1;
      var $128$0=$120$0 ^ $127$0;
      var $128$1=$120$1 ^ $127$1;
      var $129$0 = _i64Add($105$0,$105$1,$128$0,$128$1); var $129$1 = tempRet0;
      var $130=(($S+48)|0);
      var $ld$44$0=(($130)|0);
      var $131$0=HEAP32[(($ld$44$0)>>2)];
      var $ld$45$1=(($130+4)|0);
      var $131$1=HEAP32[(($ld$45$1)>>2)];
      var $132=(($S+32)|0);
      var $ld$46$0=(($132)|0);
      var $133$0=HEAP32[(($ld$46$0)>>2)];
      var $ld$47$1=(($132+4)|0);
      var $133$1=HEAP32[(($ld$47$1)>>2)];
      var $134=(($S+40)|0);
      var $ld$48$0=(($134)|0);
      var $135$0=HEAP32[(($ld$48$0)>>2)];
      var $ld$49$1=(($134+4)|0);
      var $135$1=HEAP32[(($ld$49$1)>>2)];
      var $136=(($S+48)|0);
      var $ld$50$0=(($136)|0);
      var $137$0=HEAP32[(($ld$50$0)>>2)];
      var $ld$51$1=(($136+4)|0);
      var $137$1=HEAP32[(($ld$51$1)>>2)];
      var $138$0=$135$0 ^ $137$0;
      var $138$1=$135$1 ^ $137$1;
      var $139$0=$133$0 & $138$0;
      var $139$1=$133$1 & $138$1;
      var $140$0=$131$0 ^ $139$0;
      var $140$1=$131$1 ^ $139$1;
      var $141$0 = _i64Add($129$0,$129$1,$140$0,$140$1); var $141$1 = tempRet0;
      var $$etemp$52$0=-685199838;
      var $$etemp$52$1=1116352408;
      var $142$0 = _i64Add($141$0,$141$1,$$etemp$52$0,$$etemp$52$1); var $142$1 = tempRet0;
      var $143=(($W)|0);
      var $ld$53$0=(($143)|0);
      var $144$0=HEAP32[(($ld$53$0)>>2)];
      var $ld$54$1=(($143+4)|0);
      var $144$1=HEAP32[(($ld$54$1)>>2)];
      var $145$0 = _i64Add($142$0,$142$1,$144$0,$144$1); var $145$1 = tempRet0;
      var $st$55$0=(($t0)|0);
      HEAP32[(($st$55$0)>>2)]=$145$0;
      var $st$56$1=(($t0+4)|0);
      HEAP32[(($st$56$1)>>2)]=$145$1;
      var $146=(($S)|0);
      var $ld$57$0=(($146)|0);
      var $147$0=HEAP32[(($ld$57$0)>>2)];
      var $ld$58$1=(($146+4)|0);
      var $147$1=HEAP32[(($ld$58$1)>>2)];
      var $148$0=($147$0 >>> 28) | ($147$1 << 4);
      var $148$1=($147$1 >>> 28) | (0 << 4);
      var $149=(($S)|0);
      var $ld$59$0=(($149)|0);
      var $150$0=HEAP32[(($ld$59$0)>>2)];
      var $ld$60$1=(($149+4)|0);
      var $150$1=HEAP32[(($ld$60$1)>>2)];
      var $151$0=(0 << 4) | (0 >>> 28);
      var $151$1=($150$0 << 4) | (0 >>> 28);
      var $152$0=$148$0 | $151$0;
      var $152$1=$148$1 | $151$1;
      var $153=(($S)|0);
      var $ld$61$0=(($153)|0);
      var $154$0=HEAP32[(($ld$61$0)>>2)];
      var $ld$62$1=(($153+4)|0);
      var $154$1=HEAP32[(($ld$62$1)>>2)];
      var $155$0=($154$1 >>> 2) | (0 << 30);
      var $155$1=(0 >>> 2) | (0 << 30);
      var $156=(($S)|0);
      var $ld$63$0=(($156)|0);
      var $157$0=HEAP32[(($ld$63$0)>>2)];
      var $ld$64$1=(($156+4)|0);
      var $157$1=HEAP32[(($ld$64$1)>>2)];
      var $158$0=($157$0 << 30) | (0 >>> 2);
      var $158$1=($157$1 << 30) | ($157$0 >>> 2);
      var $159$0=$155$0 | $158$0;
      var $159$1=$155$1 | $158$1;
      var $160$0=$152$0 ^ $159$0;
      var $160$1=$152$1 ^ $159$1;
      var $161=(($S)|0);
      var $ld$65$0=(($161)|0);
      var $162$0=HEAP32[(($ld$65$0)>>2)];
      var $ld$66$1=(($161+4)|0);
      var $162$1=HEAP32[(($ld$66$1)>>2)];
      var $163$0=($162$1 >>> 7) | (0 << 25);
      var $163$1=(0 >>> 7) | (0 << 25);
      var $164=(($S)|0);
      var $ld$67$0=(($164)|0);
      var $165$0=HEAP32[(($ld$67$0)>>2)];
      var $ld$68$1=(($164+4)|0);
      var $165$1=HEAP32[(($ld$68$1)>>2)];
      var $166$0=($165$0 << 25) | (0 >>> 7);
      var $166$1=($165$1 << 25) | ($165$0 >>> 7);
      var $167$0=$163$0 | $166$0;
      var $167$1=$163$1 | $166$1;
      var $168$0=$160$0 ^ $167$0;
      var $168$1=$160$1 ^ $167$1;
      var $169=(($S)|0);
      var $ld$69$0=(($169)|0);
      var $170$0=HEAP32[(($ld$69$0)>>2)];
      var $ld$70$1=(($169+4)|0);
      var $170$1=HEAP32[(($ld$70$1)>>2)];
      var $171=(($S+8)|0);
      var $ld$71$0=(($171)|0);
      var $172$0=HEAP32[(($ld$71$0)>>2)];
      var $ld$72$1=(($171+4)|0);
      var $172$1=HEAP32[(($ld$72$1)>>2)];
      var $173$0=$170$0 | $172$0;
      var $173$1=$170$1 | $172$1;
      var $174=(($S+16)|0);
      var $ld$73$0=(($174)|0);
      var $175$0=HEAP32[(($ld$73$0)>>2)];
      var $ld$74$1=(($174+4)|0);
      var $175$1=HEAP32[(($ld$74$1)>>2)];
      var $176$0=$173$0 & $175$0;
      var $176$1=$173$1 & $175$1;
      var $177=(($S)|0);
      var $ld$75$0=(($177)|0);
      var $178$0=HEAP32[(($ld$75$0)>>2)];
      var $ld$76$1=(($177+4)|0);
      var $178$1=HEAP32[(($ld$76$1)>>2)];
      var $179=(($S+8)|0);
      var $ld$77$0=(($179)|0);
      var $180$0=HEAP32[(($ld$77$0)>>2)];
      var $ld$78$1=(($179+4)|0);
      var $180$1=HEAP32[(($ld$78$1)>>2)];
      var $181$0=$178$0 & $180$0;
      var $181$1=$178$1 & $180$1;
      var $182$0=$176$0 | $181$0;
      var $182$1=$176$1 | $181$1;
      var $183$0 = _i64Add($168$0,$168$1,$182$0,$182$1); var $183$1 = tempRet0;
      var $st$79$0=(($t1)|0);
      HEAP32[(($st$79$0)>>2)]=$183$0;
      var $st$80$1=(($t1+4)|0);
      HEAP32[(($st$80$1)>>2)]=$183$1;
      var $ld$81$0=(($t0)|0);
      var $184$0=HEAP32[(($ld$81$0)>>2)];
      var $ld$82$1=(($t0+4)|0);
      var $184$1=HEAP32[(($ld$82$1)>>2)];
      var $185=(($S+24)|0);
      var $ld$83$0=(($185)|0);
      var $186$0=HEAP32[(($ld$83$0)>>2)];
      var $ld$84$1=(($185+4)|0);
      var $186$1=HEAP32[(($ld$84$1)>>2)];
      var $187$0 = _i64Add($186$0,$186$1,$184$0,$184$1); var $187$1 = tempRet0;
      var $st$85$0=(($185)|0);
      HEAP32[(($st$85$0)>>2)]=$187$0;
      var $st$86$1=(($185+4)|0);
      HEAP32[(($st$86$1)>>2)]=$187$1;
      var $ld$87$0=(($t0)|0);
      var $188$0=HEAP32[(($ld$87$0)>>2)];
      var $ld$88$1=(($t0+4)|0);
      var $188$1=HEAP32[(($ld$88$1)>>2)];
      var $ld$89$0=(($t1)|0);
      var $189$0=HEAP32[(($ld$89$0)>>2)];
      var $ld$90$1=(($t1+4)|0);
      var $189$1=HEAP32[(($ld$90$1)>>2)];
      var $190$0 = _i64Add($188$0,$188$1,$189$0,$189$1); var $190$1 = tempRet0;
      var $191=(($S+56)|0);
      var $st$91$0=(($191)|0);
      HEAP32[(($st$91$0)>>2)]=$190$0;
      var $st$92$1=(($191+4)|0);
      HEAP32[(($st$92$1)>>2)]=$190$1;
      var $192=(($S+48)|0);
      var $ld$93$0=(($192)|0);
      var $193$0=HEAP32[(($ld$93$0)>>2)];
      var $ld$94$1=(($192+4)|0);
      var $193$1=HEAP32[(($ld$94$1)>>2)];
      var $194=(($S+24)|0);
      var $ld$95$0=(($194)|0);
      var $195$0=HEAP32[(($ld$95$0)>>2)];
      var $ld$96$1=(($194+4)|0);
      var $195$1=HEAP32[(($ld$96$1)>>2)];
      var $196$0=($195$0 >>> 14) | ($195$1 << 18);
      var $196$1=($195$1 >>> 14) | (0 << 18);
      var $197=(($S+24)|0);
      var $ld$97$0=(($197)|0);
      var $198$0=HEAP32[(($ld$97$0)>>2)];
      var $ld$98$1=(($197+4)|0);
      var $198$1=HEAP32[(($ld$98$1)>>2)];
      var $199$0=(0 << 18) | (0 >>> 14);
      var $199$1=($198$0 << 18) | (0 >>> 14);
      var $200$0=$196$0 | $199$0;
      var $200$1=$196$1 | $199$1;
      var $201=(($S+24)|0);
      var $ld$99$0=(($201)|0);
      var $202$0=HEAP32[(($ld$99$0)>>2)];
      var $ld$100$1=(($201+4)|0);
      var $202$1=HEAP32[(($ld$100$1)>>2)];
      var $203$0=($202$0 >>> 18) | ($202$1 << 14);
      var $203$1=($202$1 >>> 18) | (0 << 14);
      var $204=(($S+24)|0);
      var $ld$101$0=(($204)|0);
      var $205$0=HEAP32[(($ld$101$0)>>2)];
      var $ld$102$1=(($204+4)|0);
      var $205$1=HEAP32[(($ld$102$1)>>2)];
      var $206$0=(0 << 14) | (0 >>> 18);
      var $206$1=($205$0 << 14) | (0 >>> 18);
      var $207$0=$203$0 | $206$0;
      var $207$1=$203$1 | $206$1;
      var $208$0=$200$0 ^ $207$0;
      var $208$1=$200$1 ^ $207$1;
      var $209=(($S+24)|0);
      var $ld$103$0=(($209)|0);
      var $210$0=HEAP32[(($ld$103$0)>>2)];
      var $ld$104$1=(($209+4)|0);
      var $210$1=HEAP32[(($ld$104$1)>>2)];
      var $211$0=($210$1 >>> 9) | (0 << 23);
      var $211$1=(0 >>> 9) | (0 << 23);
      var $212=(($S+24)|0);
      var $ld$105$0=(($212)|0);
      var $213$0=HEAP32[(($ld$105$0)>>2)];
      var $ld$106$1=(($212+4)|0);
      var $213$1=HEAP32[(($ld$106$1)>>2)];
      var $214$0=($213$0 << 23) | (0 >>> 9);
      var $214$1=($213$1 << 23) | ($213$0 >>> 9);
      var $215$0=$211$0 | $214$0;
      var $215$1=$211$1 | $214$1;
      var $216$0=$208$0 ^ $215$0;
      var $216$1=$208$1 ^ $215$1;
      var $217$0 = _i64Add($193$0,$193$1,$216$0,$216$1); var $217$1 = tempRet0;
      var $218=(($S+40)|0);
      var $ld$107$0=(($218)|0);
      var $219$0=HEAP32[(($ld$107$0)>>2)];
      var $ld$108$1=(($218+4)|0);
      var $219$1=HEAP32[(($ld$108$1)>>2)];
      var $220=(($S+24)|0);
      var $ld$109$0=(($220)|0);
      var $221$0=HEAP32[(($ld$109$0)>>2)];
      var $ld$110$1=(($220+4)|0);
      var $221$1=HEAP32[(($ld$110$1)>>2)];
      var $222=(($S+32)|0);
      var $ld$111$0=(($222)|0);
      var $223$0=HEAP32[(($ld$111$0)>>2)];
      var $ld$112$1=(($222+4)|0);
      var $223$1=HEAP32[(($ld$112$1)>>2)];
      var $224=(($S+40)|0);
      var $ld$113$0=(($224)|0);
      var $225$0=HEAP32[(($ld$113$0)>>2)];
      var $ld$114$1=(($224+4)|0);
      var $225$1=HEAP32[(($ld$114$1)>>2)];
      var $226$0=$223$0 ^ $225$0;
      var $226$1=$223$1 ^ $225$1;
      var $227$0=$221$0 & $226$0;
      var $227$1=$221$1 & $226$1;
      var $228$0=$219$0 ^ $227$0;
      var $228$1=$219$1 ^ $227$1;
      var $229$0 = _i64Add($217$0,$217$1,$228$0,$228$1); var $229$1 = tempRet0;
      var $$etemp$115$0=602891725;
      var $$etemp$115$1=1899447441;
      var $230$0 = _i64Add($229$0,$229$1,$$etemp$115$0,$$etemp$115$1); var $230$1 = tempRet0;
      var $231=(($W+8)|0);
      var $ld$116$0=(($231)|0);
      var $232$0=HEAP32[(($ld$116$0)>>2)];
      var $ld$117$1=(($231+4)|0);
      var $232$1=HEAP32[(($ld$117$1)>>2)];
      var $233$0 = _i64Add($230$0,$230$1,$232$0,$232$1); var $233$1 = tempRet0;
      var $st$118$0=(($t0)|0);
      HEAP32[(($st$118$0)>>2)]=$233$0;
      var $st$119$1=(($t0+4)|0);
      HEAP32[(($st$119$1)>>2)]=$233$1;
      var $234=(($S+56)|0);
      var $ld$120$0=(($234)|0);
      var $235$0=HEAP32[(($ld$120$0)>>2)];
      var $ld$121$1=(($234+4)|0);
      var $235$1=HEAP32[(($ld$121$1)>>2)];
      var $236$0=($235$0 >>> 28) | ($235$1 << 4);
      var $236$1=($235$1 >>> 28) | (0 << 4);
      var $237=(($S+56)|0);
      var $ld$122$0=(($237)|0);
      var $238$0=HEAP32[(($ld$122$0)>>2)];
      var $ld$123$1=(($237+4)|0);
      var $238$1=HEAP32[(($ld$123$1)>>2)];
      var $239$0=(0 << 4) | (0 >>> 28);
      var $239$1=($238$0 << 4) | (0 >>> 28);
      var $240$0=$236$0 | $239$0;
      var $240$1=$236$1 | $239$1;
      var $241=(($S+56)|0);
      var $ld$124$0=(($241)|0);
      var $242$0=HEAP32[(($ld$124$0)>>2)];
      var $ld$125$1=(($241+4)|0);
      var $242$1=HEAP32[(($ld$125$1)>>2)];
      var $243$0=($242$1 >>> 2) | (0 << 30);
      var $243$1=(0 >>> 2) | (0 << 30);
      var $244=(($S+56)|0);
      var $ld$126$0=(($244)|0);
      var $245$0=HEAP32[(($ld$126$0)>>2)];
      var $ld$127$1=(($244+4)|0);
      var $245$1=HEAP32[(($ld$127$1)>>2)];
      var $246$0=($245$0 << 30) | (0 >>> 2);
      var $246$1=($245$1 << 30) | ($245$0 >>> 2);
      var $247$0=$243$0 | $246$0;
      var $247$1=$243$1 | $246$1;
      var $248$0=$240$0 ^ $247$0;
      var $248$1=$240$1 ^ $247$1;
      var $249=(($S+56)|0);
      var $ld$128$0=(($249)|0);
      var $250$0=HEAP32[(($ld$128$0)>>2)];
      var $ld$129$1=(($249+4)|0);
      var $250$1=HEAP32[(($ld$129$1)>>2)];
      var $251$0=($250$1 >>> 7) | (0 << 25);
      var $251$1=(0 >>> 7) | (0 << 25);
      var $252=(($S+56)|0);
      var $ld$130$0=(($252)|0);
      var $253$0=HEAP32[(($ld$130$0)>>2)];
      var $ld$131$1=(($252+4)|0);
      var $253$1=HEAP32[(($ld$131$1)>>2)];
      var $254$0=($253$0 << 25) | (0 >>> 7);
      var $254$1=($253$1 << 25) | ($253$0 >>> 7);
      var $255$0=$251$0 | $254$0;
      var $255$1=$251$1 | $254$1;
      var $256$0=$248$0 ^ $255$0;
      var $256$1=$248$1 ^ $255$1;
      var $257=(($S+56)|0);
      var $ld$132$0=(($257)|0);
      var $258$0=HEAP32[(($ld$132$0)>>2)];
      var $ld$133$1=(($257+4)|0);
      var $258$1=HEAP32[(($ld$133$1)>>2)];
      var $259=(($S)|0);
      var $ld$134$0=(($259)|0);
      var $260$0=HEAP32[(($ld$134$0)>>2)];
      var $ld$135$1=(($259+4)|0);
      var $260$1=HEAP32[(($ld$135$1)>>2)];
      var $261$0=$258$0 | $260$0;
      var $261$1=$258$1 | $260$1;
      var $262=(($S+8)|0);
      var $ld$136$0=(($262)|0);
      var $263$0=HEAP32[(($ld$136$0)>>2)];
      var $ld$137$1=(($262+4)|0);
      var $263$1=HEAP32[(($ld$137$1)>>2)];
      var $264$0=$261$0 & $263$0;
      var $264$1=$261$1 & $263$1;
      var $265=(($S+56)|0);
      var $ld$138$0=(($265)|0);
      var $266$0=HEAP32[(($ld$138$0)>>2)];
      var $ld$139$1=(($265+4)|0);
      var $266$1=HEAP32[(($ld$139$1)>>2)];
      var $267=(($S)|0);
      var $ld$140$0=(($267)|0);
      var $268$0=HEAP32[(($ld$140$0)>>2)];
      var $ld$141$1=(($267+4)|0);
      var $268$1=HEAP32[(($ld$141$1)>>2)];
      var $269$0=$266$0 & $268$0;
      var $269$1=$266$1 & $268$1;
      var $270$0=$264$0 | $269$0;
      var $270$1=$264$1 | $269$1;
      var $271$0 = _i64Add($256$0,$256$1,$270$0,$270$1); var $271$1 = tempRet0;
      var $st$142$0=(($t1)|0);
      HEAP32[(($st$142$0)>>2)]=$271$0;
      var $st$143$1=(($t1+4)|0);
      HEAP32[(($st$143$1)>>2)]=$271$1;
      var $ld$144$0=(($t0)|0);
      var $272$0=HEAP32[(($ld$144$0)>>2)];
      var $ld$145$1=(($t0+4)|0);
      var $272$1=HEAP32[(($ld$145$1)>>2)];
      var $273=(($S+16)|0);
      var $ld$146$0=(($273)|0);
      var $274$0=HEAP32[(($ld$146$0)>>2)];
      var $ld$147$1=(($273+4)|0);
      var $274$1=HEAP32[(($ld$147$1)>>2)];
      var $275$0 = _i64Add($274$0,$274$1,$272$0,$272$1); var $275$1 = tempRet0;
      var $st$148$0=(($273)|0);
      HEAP32[(($st$148$0)>>2)]=$275$0;
      var $st$149$1=(($273+4)|0);
      HEAP32[(($st$149$1)>>2)]=$275$1;
      var $ld$150$0=(($t0)|0);
      var $276$0=HEAP32[(($ld$150$0)>>2)];
      var $ld$151$1=(($t0+4)|0);
      var $276$1=HEAP32[(($ld$151$1)>>2)];
      var $ld$152$0=(($t1)|0);
      var $277$0=HEAP32[(($ld$152$0)>>2)];
      var $ld$153$1=(($t1+4)|0);
      var $277$1=HEAP32[(($ld$153$1)>>2)];
      var $278$0 = _i64Add($276$0,$276$1,$277$0,$277$1); var $278$1 = tempRet0;
      var $279=(($S+48)|0);
      var $st$154$0=(($279)|0);
      HEAP32[(($st$154$0)>>2)]=$278$0;
      var $st$155$1=(($279+4)|0);
      HEAP32[(($st$155$1)>>2)]=$278$1;
      var $280=(($S+40)|0);
      var $ld$156$0=(($280)|0);
      var $281$0=HEAP32[(($ld$156$0)>>2)];
      var $ld$157$1=(($280+4)|0);
      var $281$1=HEAP32[(($ld$157$1)>>2)];
      var $282=(($S+16)|0);
      var $ld$158$0=(($282)|0);
      var $283$0=HEAP32[(($ld$158$0)>>2)];
      var $ld$159$1=(($282+4)|0);
      var $283$1=HEAP32[(($ld$159$1)>>2)];
      var $284$0=($283$0 >>> 14) | ($283$1 << 18);
      var $284$1=($283$1 >>> 14) | (0 << 18);
      var $285=(($S+16)|0);
      var $ld$160$0=(($285)|0);
      var $286$0=HEAP32[(($ld$160$0)>>2)];
      var $ld$161$1=(($285+4)|0);
      var $286$1=HEAP32[(($ld$161$1)>>2)];
      var $287$0=(0 << 18) | (0 >>> 14);
      var $287$1=($286$0 << 18) | (0 >>> 14);
      var $288$0=$284$0 | $287$0;
      var $288$1=$284$1 | $287$1;
      var $289=(($S+16)|0);
      var $ld$162$0=(($289)|0);
      var $290$0=HEAP32[(($ld$162$0)>>2)];
      var $ld$163$1=(($289+4)|0);
      var $290$1=HEAP32[(($ld$163$1)>>2)];
      var $291$0=($290$0 >>> 18) | ($290$1 << 14);
      var $291$1=($290$1 >>> 18) | (0 << 14);
      var $292=(($S+16)|0);
      var $ld$164$0=(($292)|0);
      var $293$0=HEAP32[(($ld$164$0)>>2)];
      var $ld$165$1=(($292+4)|0);
      var $293$1=HEAP32[(($ld$165$1)>>2)];
      var $294$0=(0 << 14) | (0 >>> 18);
      var $294$1=($293$0 << 14) | (0 >>> 18);
      var $295$0=$291$0 | $294$0;
      var $295$1=$291$1 | $294$1;
      var $296$0=$288$0 ^ $295$0;
      var $296$1=$288$1 ^ $295$1;
      var $297=(($S+16)|0);
      var $ld$166$0=(($297)|0);
      var $298$0=HEAP32[(($ld$166$0)>>2)];
      var $ld$167$1=(($297+4)|0);
      var $298$1=HEAP32[(($ld$167$1)>>2)];
      var $299$0=($298$1 >>> 9) | (0 << 23);
      var $299$1=(0 >>> 9) | (0 << 23);
      var $300=(($S+16)|0);
      var $ld$168$0=(($300)|0);
      var $301$0=HEAP32[(($ld$168$0)>>2)];
      var $ld$169$1=(($300+4)|0);
      var $301$1=HEAP32[(($ld$169$1)>>2)];
      var $302$0=($301$0 << 23) | (0 >>> 9);
      var $302$1=($301$1 << 23) | ($301$0 >>> 9);
      var $303$0=$299$0 | $302$0;
      var $303$1=$299$1 | $302$1;
      var $304$0=$296$0 ^ $303$0;
      var $304$1=$296$1 ^ $303$1;
      var $305$0 = _i64Add($281$0,$281$1,$304$0,$304$1); var $305$1 = tempRet0;
      var $306=(($S+32)|0);
      var $ld$170$0=(($306)|0);
      var $307$0=HEAP32[(($ld$170$0)>>2)];
      var $ld$171$1=(($306+4)|0);
      var $307$1=HEAP32[(($ld$171$1)>>2)];
      var $308=(($S+16)|0);
      var $ld$172$0=(($308)|0);
      var $309$0=HEAP32[(($ld$172$0)>>2)];
      var $ld$173$1=(($308+4)|0);
      var $309$1=HEAP32[(($ld$173$1)>>2)];
      var $310=(($S+24)|0);
      var $ld$174$0=(($310)|0);
      var $311$0=HEAP32[(($ld$174$0)>>2)];
      var $ld$175$1=(($310+4)|0);
      var $311$1=HEAP32[(($ld$175$1)>>2)];
      var $312=(($S+32)|0);
      var $ld$176$0=(($312)|0);
      var $313$0=HEAP32[(($ld$176$0)>>2)];
      var $ld$177$1=(($312+4)|0);
      var $313$1=HEAP32[(($ld$177$1)>>2)];
      var $314$0=$311$0 ^ $313$0;
      var $314$1=$311$1 ^ $313$1;
      var $315$0=$309$0 & $314$0;
      var $315$1=$309$1 & $314$1;
      var $316$0=$307$0 ^ $315$0;
      var $316$1=$307$1 ^ $315$1;
      var $317$0 = _i64Add($305$0,$305$1,$316$0,$316$1); var $317$1 = tempRet0;
      var $$etemp$178$0=-330482897;
      var $$etemp$178$1=-1245643825;
      var $318$0 = _i64Add($317$0,$317$1,$$etemp$178$0,$$etemp$178$1); var $318$1 = tempRet0;
      var $319=(($W+16)|0);
      var $ld$179$0=(($319)|0);
      var $320$0=HEAP32[(($ld$179$0)>>2)];
      var $ld$180$1=(($319+4)|0);
      var $320$1=HEAP32[(($ld$180$1)>>2)];
      var $321$0 = _i64Add($318$0,$318$1,$320$0,$320$1); var $321$1 = tempRet0;
      var $st$181$0=(($t0)|0);
      HEAP32[(($st$181$0)>>2)]=$321$0;
      var $st$182$1=(($t0+4)|0);
      HEAP32[(($st$182$1)>>2)]=$321$1;
      var $322=(($S+48)|0);
      var $ld$183$0=(($322)|0);
      var $323$0=HEAP32[(($ld$183$0)>>2)];
      var $ld$184$1=(($322+4)|0);
      var $323$1=HEAP32[(($ld$184$1)>>2)];
      var $324$0=($323$0 >>> 28) | ($323$1 << 4);
      var $324$1=($323$1 >>> 28) | (0 << 4);
      var $325=(($S+48)|0);
      var $ld$185$0=(($325)|0);
      var $326$0=HEAP32[(($ld$185$0)>>2)];
      var $ld$186$1=(($325+4)|0);
      var $326$1=HEAP32[(($ld$186$1)>>2)];
      var $327$0=(0 << 4) | (0 >>> 28);
      var $327$1=($326$0 << 4) | (0 >>> 28);
      var $328$0=$324$0 | $327$0;
      var $328$1=$324$1 | $327$1;
      var $329=(($S+48)|0);
      var $ld$187$0=(($329)|0);
      var $330$0=HEAP32[(($ld$187$0)>>2)];
      var $ld$188$1=(($329+4)|0);
      var $330$1=HEAP32[(($ld$188$1)>>2)];
      var $331$0=($330$1 >>> 2) | (0 << 30);
      var $331$1=(0 >>> 2) | (0 << 30);
      var $332=(($S+48)|0);
      var $ld$189$0=(($332)|0);
      var $333$0=HEAP32[(($ld$189$0)>>2)];
      var $ld$190$1=(($332+4)|0);
      var $333$1=HEAP32[(($ld$190$1)>>2)];
      var $334$0=($333$0 << 30) | (0 >>> 2);
      var $334$1=($333$1 << 30) | ($333$0 >>> 2);
      var $335$0=$331$0 | $334$0;
      var $335$1=$331$1 | $334$1;
      var $336$0=$328$0 ^ $335$0;
      var $336$1=$328$1 ^ $335$1;
      var $337=(($S+48)|0);
      var $ld$191$0=(($337)|0);
      var $338$0=HEAP32[(($ld$191$0)>>2)];
      var $ld$192$1=(($337+4)|0);
      var $338$1=HEAP32[(($ld$192$1)>>2)];
      var $339$0=($338$1 >>> 7) | (0 << 25);
      var $339$1=(0 >>> 7) | (0 << 25);
      var $340=(($S+48)|0);
      var $ld$193$0=(($340)|0);
      var $341$0=HEAP32[(($ld$193$0)>>2)];
      var $ld$194$1=(($340+4)|0);
      var $341$1=HEAP32[(($ld$194$1)>>2)];
      var $342$0=($341$0 << 25) | (0 >>> 7);
      var $342$1=($341$1 << 25) | ($341$0 >>> 7);
      var $343$0=$339$0 | $342$0;
      var $343$1=$339$1 | $342$1;
      var $344$0=$336$0 ^ $343$0;
      var $344$1=$336$1 ^ $343$1;
      var $345=(($S+48)|0);
      var $ld$195$0=(($345)|0);
      var $346$0=HEAP32[(($ld$195$0)>>2)];
      var $ld$196$1=(($345+4)|0);
      var $346$1=HEAP32[(($ld$196$1)>>2)];
      var $347=(($S+56)|0);
      var $ld$197$0=(($347)|0);
      var $348$0=HEAP32[(($ld$197$0)>>2)];
      var $ld$198$1=(($347+4)|0);
      var $348$1=HEAP32[(($ld$198$1)>>2)];
      var $349$0=$346$0 | $348$0;
      var $349$1=$346$1 | $348$1;
      var $350=(($S)|0);
      var $ld$199$0=(($350)|0);
      var $351$0=HEAP32[(($ld$199$0)>>2)];
      var $ld$200$1=(($350+4)|0);
      var $351$1=HEAP32[(($ld$200$1)>>2)];
      var $352$0=$349$0 & $351$0;
      var $352$1=$349$1 & $351$1;
      var $353=(($S+48)|0);
      var $ld$201$0=(($353)|0);
      var $354$0=HEAP32[(($ld$201$0)>>2)];
      var $ld$202$1=(($353+4)|0);
      var $354$1=HEAP32[(($ld$202$1)>>2)];
      var $355=(($S+56)|0);
      var $ld$203$0=(($355)|0);
      var $356$0=HEAP32[(($ld$203$0)>>2)];
      var $ld$204$1=(($355+4)|0);
      var $356$1=HEAP32[(($ld$204$1)>>2)];
      var $357$0=$354$0 & $356$0;
      var $357$1=$354$1 & $356$1;
      var $358$0=$352$0 | $357$0;
      var $358$1=$352$1 | $357$1;
      var $359$0 = _i64Add($344$0,$344$1,$358$0,$358$1); var $359$1 = tempRet0;
      var $st$205$0=(($t1)|0);
      HEAP32[(($st$205$0)>>2)]=$359$0;
      var $st$206$1=(($t1+4)|0);
      HEAP32[(($st$206$1)>>2)]=$359$1;
      var $ld$207$0=(($t0)|0);
      var $360$0=HEAP32[(($ld$207$0)>>2)];
      var $ld$208$1=(($t0+4)|0);
      var $360$1=HEAP32[(($ld$208$1)>>2)];
      var $361=(($S+8)|0);
      var $ld$209$0=(($361)|0);
      var $362$0=HEAP32[(($ld$209$0)>>2)];
      var $ld$210$1=(($361+4)|0);
      var $362$1=HEAP32[(($ld$210$1)>>2)];
      var $363$0 = _i64Add($362$0,$362$1,$360$0,$360$1); var $363$1 = tempRet0;
      var $st$211$0=(($361)|0);
      HEAP32[(($st$211$0)>>2)]=$363$0;
      var $st$212$1=(($361+4)|0);
      HEAP32[(($st$212$1)>>2)]=$363$1;
      var $ld$213$0=(($t0)|0);
      var $364$0=HEAP32[(($ld$213$0)>>2)];
      var $ld$214$1=(($t0+4)|0);
      var $364$1=HEAP32[(($ld$214$1)>>2)];
      var $ld$215$0=(($t1)|0);
      var $365$0=HEAP32[(($ld$215$0)>>2)];
      var $ld$216$1=(($t1+4)|0);
      var $365$1=HEAP32[(($ld$216$1)>>2)];
      var $366$0 = _i64Add($364$0,$364$1,$365$0,$365$1); var $366$1 = tempRet0;
      var $367=(($S+40)|0);
      var $st$217$0=(($367)|0);
      HEAP32[(($st$217$0)>>2)]=$366$0;
      var $st$218$1=(($367+4)|0);
      HEAP32[(($st$218$1)>>2)]=$366$1;
      var $368=(($S+32)|0);
      var $ld$219$0=(($368)|0);
      var $369$0=HEAP32[(($ld$219$0)>>2)];
      var $ld$220$1=(($368+4)|0);
      var $369$1=HEAP32[(($ld$220$1)>>2)];
      var $370=(($S+8)|0);
      var $ld$221$0=(($370)|0);
      var $371$0=HEAP32[(($ld$221$0)>>2)];
      var $ld$222$1=(($370+4)|0);
      var $371$1=HEAP32[(($ld$222$1)>>2)];
      var $372$0=($371$0 >>> 14) | ($371$1 << 18);
      var $372$1=($371$1 >>> 14) | (0 << 18);
      var $373=(($S+8)|0);
      var $ld$223$0=(($373)|0);
      var $374$0=HEAP32[(($ld$223$0)>>2)];
      var $ld$224$1=(($373+4)|0);
      var $374$1=HEAP32[(($ld$224$1)>>2)];
      var $375$0=(0 << 18) | (0 >>> 14);
      var $375$1=($374$0 << 18) | (0 >>> 14);
      var $376$0=$372$0 | $375$0;
      var $376$1=$372$1 | $375$1;
      var $377=(($S+8)|0);
      var $ld$225$0=(($377)|0);
      var $378$0=HEAP32[(($ld$225$0)>>2)];
      var $ld$226$1=(($377+4)|0);
      var $378$1=HEAP32[(($ld$226$1)>>2)];
      var $379$0=($378$0 >>> 18) | ($378$1 << 14);
      var $379$1=($378$1 >>> 18) | (0 << 14);
      var $380=(($S+8)|0);
      var $ld$227$0=(($380)|0);
      var $381$0=HEAP32[(($ld$227$0)>>2)];
      var $ld$228$1=(($380+4)|0);
      var $381$1=HEAP32[(($ld$228$1)>>2)];
      var $382$0=(0 << 14) | (0 >>> 18);
      var $382$1=($381$0 << 14) | (0 >>> 18);
      var $383$0=$379$0 | $382$0;
      var $383$1=$379$1 | $382$1;
      var $384$0=$376$0 ^ $383$0;
      var $384$1=$376$1 ^ $383$1;
      var $385=(($S+8)|0);
      var $ld$229$0=(($385)|0);
      var $386$0=HEAP32[(($ld$229$0)>>2)];
      var $ld$230$1=(($385+4)|0);
      var $386$1=HEAP32[(($ld$230$1)>>2)];
      var $387$0=($386$1 >>> 9) | (0 << 23);
      var $387$1=(0 >>> 9) | (0 << 23);
      var $388=(($S+8)|0);
      var $ld$231$0=(($388)|0);
      var $389$0=HEAP32[(($ld$231$0)>>2)];
      var $ld$232$1=(($388+4)|0);
      var $389$1=HEAP32[(($ld$232$1)>>2)];
      var $390$0=($389$0 << 23) | (0 >>> 9);
      var $390$1=($389$1 << 23) | ($389$0 >>> 9);
      var $391$0=$387$0 | $390$0;
      var $391$1=$387$1 | $390$1;
      var $392$0=$384$0 ^ $391$0;
      var $392$1=$384$1 ^ $391$1;
      var $393$0 = _i64Add($369$0,$369$1,$392$0,$392$1); var $393$1 = tempRet0;
      var $394=(($S+24)|0);
      var $ld$233$0=(($394)|0);
      var $395$0=HEAP32[(($ld$233$0)>>2)];
      var $ld$234$1=(($394+4)|0);
      var $395$1=HEAP32[(($ld$234$1)>>2)];
      var $396=(($S+8)|0);
      var $ld$235$0=(($396)|0);
      var $397$0=HEAP32[(($ld$235$0)>>2)];
      var $ld$236$1=(($396+4)|0);
      var $397$1=HEAP32[(($ld$236$1)>>2)];
      var $398=(($S+16)|0);
      var $ld$237$0=(($398)|0);
      var $399$0=HEAP32[(($ld$237$0)>>2)];
      var $ld$238$1=(($398+4)|0);
      var $399$1=HEAP32[(($ld$238$1)>>2)];
      var $400=(($S+24)|0);
      var $ld$239$0=(($400)|0);
      var $401$0=HEAP32[(($ld$239$0)>>2)];
      var $ld$240$1=(($400+4)|0);
      var $401$1=HEAP32[(($ld$240$1)>>2)];
      var $402$0=$399$0 ^ $401$0;
      var $402$1=$399$1 ^ $401$1;
      var $403$0=$397$0 & $402$0;
      var $403$1=$397$1 & $402$1;
      var $404$0=$395$0 ^ $403$0;
      var $404$1=$395$1 ^ $403$1;
      var $405$0 = _i64Add($393$0,$393$1,$404$0,$404$1); var $405$1 = tempRet0;
      var $$etemp$241$0=-2121671748;
      var $$etemp$241$1=-373957723;
      var $406$0 = _i64Add($405$0,$405$1,$$etemp$241$0,$$etemp$241$1); var $406$1 = tempRet0;
      var $407=(($W+24)|0);
      var $ld$242$0=(($407)|0);
      var $408$0=HEAP32[(($ld$242$0)>>2)];
      var $ld$243$1=(($407+4)|0);
      var $408$1=HEAP32[(($ld$243$1)>>2)];
      var $409$0 = _i64Add($406$0,$406$1,$408$0,$408$1); var $409$1 = tempRet0;
      var $st$244$0=(($t0)|0);
      HEAP32[(($st$244$0)>>2)]=$409$0;
      var $st$245$1=(($t0+4)|0);
      HEAP32[(($st$245$1)>>2)]=$409$1;
      var $410=(($S+40)|0);
      var $ld$246$0=(($410)|0);
      var $411$0=HEAP32[(($ld$246$0)>>2)];
      var $ld$247$1=(($410+4)|0);
      var $411$1=HEAP32[(($ld$247$1)>>2)];
      var $412$0=($411$0 >>> 28) | ($411$1 << 4);
      var $412$1=($411$1 >>> 28) | (0 << 4);
      var $413=(($S+40)|0);
      var $ld$248$0=(($413)|0);
      var $414$0=HEAP32[(($ld$248$0)>>2)];
      var $ld$249$1=(($413+4)|0);
      var $414$1=HEAP32[(($ld$249$1)>>2)];
      var $415$0=(0 << 4) | (0 >>> 28);
      var $415$1=($414$0 << 4) | (0 >>> 28);
      var $416$0=$412$0 | $415$0;
      var $416$1=$412$1 | $415$1;
      var $417=(($S+40)|0);
      var $ld$250$0=(($417)|0);
      var $418$0=HEAP32[(($ld$250$0)>>2)];
      var $ld$251$1=(($417+4)|0);
      var $418$1=HEAP32[(($ld$251$1)>>2)];
      var $419$0=($418$1 >>> 2) | (0 << 30);
      var $419$1=(0 >>> 2) | (0 << 30);
      var $420=(($S+40)|0);
      var $ld$252$0=(($420)|0);
      var $421$0=HEAP32[(($ld$252$0)>>2)];
      var $ld$253$1=(($420+4)|0);
      var $421$1=HEAP32[(($ld$253$1)>>2)];
      var $422$0=($421$0 << 30) | (0 >>> 2);
      var $422$1=($421$1 << 30) | ($421$0 >>> 2);
      var $423$0=$419$0 | $422$0;
      var $423$1=$419$1 | $422$1;
      var $424$0=$416$0 ^ $423$0;
      var $424$1=$416$1 ^ $423$1;
      var $425=(($S+40)|0);
      var $ld$254$0=(($425)|0);
      var $426$0=HEAP32[(($ld$254$0)>>2)];
      var $ld$255$1=(($425+4)|0);
      var $426$1=HEAP32[(($ld$255$1)>>2)];
      var $427$0=($426$1 >>> 7) | (0 << 25);
      var $427$1=(0 >>> 7) | (0 << 25);
      var $428=(($S+40)|0);
      var $ld$256$0=(($428)|0);
      var $429$0=HEAP32[(($ld$256$0)>>2)];
      var $ld$257$1=(($428+4)|0);
      var $429$1=HEAP32[(($ld$257$1)>>2)];
      var $430$0=($429$0 << 25) | (0 >>> 7);
      var $430$1=($429$1 << 25) | ($429$0 >>> 7);
      var $431$0=$427$0 | $430$0;
      var $431$1=$427$1 | $430$1;
      var $432$0=$424$0 ^ $431$0;
      var $432$1=$424$1 ^ $431$1;
      var $433=(($S+40)|0);
      var $ld$258$0=(($433)|0);
      var $434$0=HEAP32[(($ld$258$0)>>2)];
      var $ld$259$1=(($433+4)|0);
      var $434$1=HEAP32[(($ld$259$1)>>2)];
      var $435=(($S+48)|0);
      var $ld$260$0=(($435)|0);
      var $436$0=HEAP32[(($ld$260$0)>>2)];
      var $ld$261$1=(($435+4)|0);
      var $436$1=HEAP32[(($ld$261$1)>>2)];
      var $437$0=$434$0 | $436$0;
      var $437$1=$434$1 | $436$1;
      var $438=(($S+56)|0);
      var $ld$262$0=(($438)|0);
      var $439$0=HEAP32[(($ld$262$0)>>2)];
      var $ld$263$1=(($438+4)|0);
      var $439$1=HEAP32[(($ld$263$1)>>2)];
      var $440$0=$437$0 & $439$0;
      var $440$1=$437$1 & $439$1;
      var $441=(($S+40)|0);
      var $ld$264$0=(($441)|0);
      var $442$0=HEAP32[(($ld$264$0)>>2)];
      var $ld$265$1=(($441+4)|0);
      var $442$1=HEAP32[(($ld$265$1)>>2)];
      var $443=(($S+48)|0);
      var $ld$266$0=(($443)|0);
      var $444$0=HEAP32[(($ld$266$0)>>2)];
      var $ld$267$1=(($443+4)|0);
      var $444$1=HEAP32[(($ld$267$1)>>2)];
      var $445$0=$442$0 & $444$0;
      var $445$1=$442$1 & $444$1;
      var $446$0=$440$0 | $445$0;
      var $446$1=$440$1 | $445$1;
      var $447$0 = _i64Add($432$0,$432$1,$446$0,$446$1); var $447$1 = tempRet0;
      var $st$268$0=(($t1)|0);
      HEAP32[(($st$268$0)>>2)]=$447$0;
      var $st$269$1=(($t1+4)|0);
      HEAP32[(($st$269$1)>>2)]=$447$1;
      var $ld$270$0=(($t0)|0);
      var $448$0=HEAP32[(($ld$270$0)>>2)];
      var $ld$271$1=(($t0+4)|0);
      var $448$1=HEAP32[(($ld$271$1)>>2)];
      var $449=(($S)|0);
      var $ld$272$0=(($449)|0);
      var $450$0=HEAP32[(($ld$272$0)>>2)];
      var $ld$273$1=(($449+4)|0);
      var $450$1=HEAP32[(($ld$273$1)>>2)];
      var $451$0 = _i64Add($450$0,$450$1,$448$0,$448$1); var $451$1 = tempRet0;
      var $st$274$0=(($449)|0);
      HEAP32[(($st$274$0)>>2)]=$451$0;
      var $st$275$1=(($449+4)|0);
      HEAP32[(($st$275$1)>>2)]=$451$1;
      var $ld$276$0=(($t0)|0);
      var $452$0=HEAP32[(($ld$276$0)>>2)];
      var $ld$277$1=(($t0+4)|0);
      var $452$1=HEAP32[(($ld$277$1)>>2)];
      var $ld$278$0=(($t1)|0);
      var $453$0=HEAP32[(($ld$278$0)>>2)];
      var $ld$279$1=(($t1+4)|0);
      var $453$1=HEAP32[(($ld$279$1)>>2)];
      var $454$0 = _i64Add($452$0,$452$1,$453$0,$453$1); var $454$1 = tempRet0;
      var $455=(($S+32)|0);
      var $st$280$0=(($455)|0);
      HEAP32[(($st$280$0)>>2)]=$454$0;
      var $st$281$1=(($455+4)|0);
      HEAP32[(($st$281$1)>>2)]=$454$1;
      var $456=(($S+24)|0);
      var $ld$282$0=(($456)|0);
      var $457$0=HEAP32[(($ld$282$0)>>2)];
      var $ld$283$1=(($456+4)|0);
      var $457$1=HEAP32[(($ld$283$1)>>2)];
      var $458=(($S)|0);
      var $ld$284$0=(($458)|0);
      var $459$0=HEAP32[(($ld$284$0)>>2)];
      var $ld$285$1=(($458+4)|0);
      var $459$1=HEAP32[(($ld$285$1)>>2)];
      var $460$0=($459$0 >>> 14) | ($459$1 << 18);
      var $460$1=($459$1 >>> 14) | (0 << 18);
      var $461=(($S)|0);
      var $ld$286$0=(($461)|0);
      var $462$0=HEAP32[(($ld$286$0)>>2)];
      var $ld$287$1=(($461+4)|0);
      var $462$1=HEAP32[(($ld$287$1)>>2)];
      var $463$0=(0 << 18) | (0 >>> 14);
      var $463$1=($462$0 << 18) | (0 >>> 14);
      var $464$0=$460$0 | $463$0;
      var $464$1=$460$1 | $463$1;
      var $465=(($S)|0);
      var $ld$288$0=(($465)|0);
      var $466$0=HEAP32[(($ld$288$0)>>2)];
      var $ld$289$1=(($465+4)|0);
      var $466$1=HEAP32[(($ld$289$1)>>2)];
      var $467$0=($466$0 >>> 18) | ($466$1 << 14);
      var $467$1=($466$1 >>> 18) | (0 << 14);
      var $468=(($S)|0);
      var $ld$290$0=(($468)|0);
      var $469$0=HEAP32[(($ld$290$0)>>2)];
      var $ld$291$1=(($468+4)|0);
      var $469$1=HEAP32[(($ld$291$1)>>2)];
      var $470$0=(0 << 14) | (0 >>> 18);
      var $470$1=($469$0 << 14) | (0 >>> 18);
      var $471$0=$467$0 | $470$0;
      var $471$1=$467$1 | $470$1;
      var $472$0=$464$0 ^ $471$0;
      var $472$1=$464$1 ^ $471$1;
      var $473=(($S)|0);
      var $ld$292$0=(($473)|0);
      var $474$0=HEAP32[(($ld$292$0)>>2)];
      var $ld$293$1=(($473+4)|0);
      var $474$1=HEAP32[(($ld$293$1)>>2)];
      var $475$0=($474$1 >>> 9) | (0 << 23);
      var $475$1=(0 >>> 9) | (0 << 23);
      var $476=(($S)|0);
      var $ld$294$0=(($476)|0);
      var $477$0=HEAP32[(($ld$294$0)>>2)];
      var $ld$295$1=(($476+4)|0);
      var $477$1=HEAP32[(($ld$295$1)>>2)];
      var $478$0=($477$0 << 23) | (0 >>> 9);
      var $478$1=($477$1 << 23) | ($477$0 >>> 9);
      var $479$0=$475$0 | $478$0;
      var $479$1=$475$1 | $478$1;
      var $480$0=$472$0 ^ $479$0;
      var $480$1=$472$1 ^ $479$1;
      var $481$0 = _i64Add($457$0,$457$1,$480$0,$480$1); var $481$1 = tempRet0;
      var $482=(($S+16)|0);
      var $ld$296$0=(($482)|0);
      var $483$0=HEAP32[(($ld$296$0)>>2)];
      var $ld$297$1=(($482+4)|0);
      var $483$1=HEAP32[(($ld$297$1)>>2)];
      var $484=(($S)|0);
      var $ld$298$0=(($484)|0);
      var $485$0=HEAP32[(($ld$298$0)>>2)];
      var $ld$299$1=(($484+4)|0);
      var $485$1=HEAP32[(($ld$299$1)>>2)];
      var $486=(($S+8)|0);
      var $ld$300$0=(($486)|0);
      var $487$0=HEAP32[(($ld$300$0)>>2)];
      var $ld$301$1=(($486+4)|0);
      var $487$1=HEAP32[(($ld$301$1)>>2)];
      var $488=(($S+16)|0);
      var $ld$302$0=(($488)|0);
      var $489$0=HEAP32[(($ld$302$0)>>2)];
      var $ld$303$1=(($488+4)|0);
      var $489$1=HEAP32[(($ld$303$1)>>2)];
      var $490$0=$487$0 ^ $489$0;
      var $490$1=$487$1 ^ $489$1;
      var $491$0=$485$0 & $490$0;
      var $491$1=$485$1 & $490$1;
      var $492$0=$483$0 ^ $491$0;
      var $492$1=$483$1 ^ $491$1;
      var $493$0 = _i64Add($481$0,$481$1,$492$0,$492$1); var $493$1 = tempRet0;
      var $$etemp$304$0=-213338824;
      var $$etemp$304$1=961987163;
      var $494$0 = _i64Add($493$0,$493$1,$$etemp$304$0,$$etemp$304$1); var $494$1 = tempRet0;
      var $495=(($W+32)|0);
      var $ld$305$0=(($495)|0);
      var $496$0=HEAP32[(($ld$305$0)>>2)];
      var $ld$306$1=(($495+4)|0);
      var $496$1=HEAP32[(($ld$306$1)>>2)];
      var $497$0 = _i64Add($494$0,$494$1,$496$0,$496$1); var $497$1 = tempRet0;
      var $st$307$0=(($t0)|0);
      HEAP32[(($st$307$0)>>2)]=$497$0;
      var $st$308$1=(($t0+4)|0);
      HEAP32[(($st$308$1)>>2)]=$497$1;
      var $498=(($S+32)|0);
      var $ld$309$0=(($498)|0);
      var $499$0=HEAP32[(($ld$309$0)>>2)];
      var $ld$310$1=(($498+4)|0);
      var $499$1=HEAP32[(($ld$310$1)>>2)];
      var $500$0=($499$0 >>> 28) | ($499$1 << 4);
      var $500$1=($499$1 >>> 28) | (0 << 4);
      var $501=(($S+32)|0);
      var $ld$311$0=(($501)|0);
      var $502$0=HEAP32[(($ld$311$0)>>2)];
      var $ld$312$1=(($501+4)|0);
      var $502$1=HEAP32[(($ld$312$1)>>2)];
      var $503$0=(0 << 4) | (0 >>> 28);
      var $503$1=($502$0 << 4) | (0 >>> 28);
      var $504$0=$500$0 | $503$0;
      var $504$1=$500$1 | $503$1;
      var $505=(($S+32)|0);
      var $ld$313$0=(($505)|0);
      var $506$0=HEAP32[(($ld$313$0)>>2)];
      var $ld$314$1=(($505+4)|0);
      var $506$1=HEAP32[(($ld$314$1)>>2)];
      var $507$0=($506$1 >>> 2) | (0 << 30);
      var $507$1=(0 >>> 2) | (0 << 30);
      var $508=(($S+32)|0);
      var $ld$315$0=(($508)|0);
      var $509$0=HEAP32[(($ld$315$0)>>2)];
      var $ld$316$1=(($508+4)|0);
      var $509$1=HEAP32[(($ld$316$1)>>2)];
      var $510$0=($509$0 << 30) | (0 >>> 2);
      var $510$1=($509$1 << 30) | ($509$0 >>> 2);
      var $511$0=$507$0 | $510$0;
      var $511$1=$507$1 | $510$1;
      var $512$0=$504$0 ^ $511$0;
      var $512$1=$504$1 ^ $511$1;
      var $513=(($S+32)|0);
      var $ld$317$0=(($513)|0);
      var $514$0=HEAP32[(($ld$317$0)>>2)];
      var $ld$318$1=(($513+4)|0);
      var $514$1=HEAP32[(($ld$318$1)>>2)];
      var $515$0=($514$1 >>> 7) | (0 << 25);
      var $515$1=(0 >>> 7) | (0 << 25);
      var $516=(($S+32)|0);
      var $ld$319$0=(($516)|0);
      var $517$0=HEAP32[(($ld$319$0)>>2)];
      var $ld$320$1=(($516+4)|0);
      var $517$1=HEAP32[(($ld$320$1)>>2)];
      var $518$0=($517$0 << 25) | (0 >>> 7);
      var $518$1=($517$1 << 25) | ($517$0 >>> 7);
      var $519$0=$515$0 | $518$0;
      var $519$1=$515$1 | $518$1;
      var $520$0=$512$0 ^ $519$0;
      var $520$1=$512$1 ^ $519$1;
      var $521=(($S+32)|0);
      var $ld$321$0=(($521)|0);
      var $522$0=HEAP32[(($ld$321$0)>>2)];
      var $ld$322$1=(($521+4)|0);
      var $522$1=HEAP32[(($ld$322$1)>>2)];
      var $523=(($S+40)|0);
      var $ld$323$0=(($523)|0);
      var $524$0=HEAP32[(($ld$323$0)>>2)];
      var $ld$324$1=(($523+4)|0);
      var $524$1=HEAP32[(($ld$324$1)>>2)];
      var $525$0=$522$0 | $524$0;
      var $525$1=$522$1 | $524$1;
      var $526=(($S+48)|0);
      var $ld$325$0=(($526)|0);
      var $527$0=HEAP32[(($ld$325$0)>>2)];
      var $ld$326$1=(($526+4)|0);
      var $527$1=HEAP32[(($ld$326$1)>>2)];
      var $528$0=$525$0 & $527$0;
      var $528$1=$525$1 & $527$1;
      var $529=(($S+32)|0);
      var $ld$327$0=(($529)|0);
      var $530$0=HEAP32[(($ld$327$0)>>2)];
      var $ld$328$1=(($529+4)|0);
      var $530$1=HEAP32[(($ld$328$1)>>2)];
      var $531=(($S+40)|0);
      var $ld$329$0=(($531)|0);
      var $532$0=HEAP32[(($ld$329$0)>>2)];
      var $ld$330$1=(($531+4)|0);
      var $532$1=HEAP32[(($ld$330$1)>>2)];
      var $533$0=$530$0 & $532$0;
      var $533$1=$530$1 & $532$1;
      var $534$0=$528$0 | $533$0;
      var $534$1=$528$1 | $533$1;
      var $535$0 = _i64Add($520$0,$520$1,$534$0,$534$1); var $535$1 = tempRet0;
      var $st$331$0=(($t1)|0);
      HEAP32[(($st$331$0)>>2)]=$535$0;
      var $st$332$1=(($t1+4)|0);
      HEAP32[(($st$332$1)>>2)]=$535$1;
      var $ld$333$0=(($t0)|0);
      var $536$0=HEAP32[(($ld$333$0)>>2)];
      var $ld$334$1=(($t0+4)|0);
      var $536$1=HEAP32[(($ld$334$1)>>2)];
      var $537=(($S+56)|0);
      var $ld$335$0=(($537)|0);
      var $538$0=HEAP32[(($ld$335$0)>>2)];
      var $ld$336$1=(($537+4)|0);
      var $538$1=HEAP32[(($ld$336$1)>>2)];
      var $539$0 = _i64Add($538$0,$538$1,$536$0,$536$1); var $539$1 = tempRet0;
      var $st$337$0=(($537)|0);
      HEAP32[(($st$337$0)>>2)]=$539$0;
      var $st$338$1=(($537+4)|0);
      HEAP32[(($st$338$1)>>2)]=$539$1;
      var $ld$339$0=(($t0)|0);
      var $540$0=HEAP32[(($ld$339$0)>>2)];
      var $ld$340$1=(($t0+4)|0);
      var $540$1=HEAP32[(($ld$340$1)>>2)];
      var $ld$341$0=(($t1)|0);
      var $541$0=HEAP32[(($ld$341$0)>>2)];
      var $ld$342$1=(($t1+4)|0);
      var $541$1=HEAP32[(($ld$342$1)>>2)];
      var $542$0 = _i64Add($540$0,$540$1,$541$0,$541$1); var $542$1 = tempRet0;
      var $543=(($S+24)|0);
      var $st$343$0=(($543)|0);
      HEAP32[(($st$343$0)>>2)]=$542$0;
      var $st$344$1=(($543+4)|0);
      HEAP32[(($st$344$1)>>2)]=$542$1;
      var $544=(($S+16)|0);
      var $ld$345$0=(($544)|0);
      var $545$0=HEAP32[(($ld$345$0)>>2)];
      var $ld$346$1=(($544+4)|0);
      var $545$1=HEAP32[(($ld$346$1)>>2)];
      var $546=(($S+56)|0);
      var $ld$347$0=(($546)|0);
      var $547$0=HEAP32[(($ld$347$0)>>2)];
      var $ld$348$1=(($546+4)|0);
      var $547$1=HEAP32[(($ld$348$1)>>2)];
      var $548$0=($547$0 >>> 14) | ($547$1 << 18);
      var $548$1=($547$1 >>> 14) | (0 << 18);
      var $549=(($S+56)|0);
      var $ld$349$0=(($549)|0);
      var $550$0=HEAP32[(($ld$349$0)>>2)];
      var $ld$350$1=(($549+4)|0);
      var $550$1=HEAP32[(($ld$350$1)>>2)];
      var $551$0=(0 << 18) | (0 >>> 14);
      var $551$1=($550$0 << 18) | (0 >>> 14);
      var $552$0=$548$0 | $551$0;
      var $552$1=$548$1 | $551$1;
      var $553=(($S+56)|0);
      var $ld$351$0=(($553)|0);
      var $554$0=HEAP32[(($ld$351$0)>>2)];
      var $ld$352$1=(($553+4)|0);
      var $554$1=HEAP32[(($ld$352$1)>>2)];
      var $555$0=($554$0 >>> 18) | ($554$1 << 14);
      var $555$1=($554$1 >>> 18) | (0 << 14);
      var $556=(($S+56)|0);
      var $ld$353$0=(($556)|0);
      var $557$0=HEAP32[(($ld$353$0)>>2)];
      var $ld$354$1=(($556+4)|0);
      var $557$1=HEAP32[(($ld$354$1)>>2)];
      var $558$0=(0 << 14) | (0 >>> 18);
      var $558$1=($557$0 << 14) | (0 >>> 18);
      var $559$0=$555$0 | $558$0;
      var $559$1=$555$1 | $558$1;
      var $560$0=$552$0 ^ $559$0;
      var $560$1=$552$1 ^ $559$1;
      var $561=(($S+56)|0);
      var $ld$355$0=(($561)|0);
      var $562$0=HEAP32[(($ld$355$0)>>2)];
      var $ld$356$1=(($561+4)|0);
      var $562$1=HEAP32[(($ld$356$1)>>2)];
      var $563$0=($562$1 >>> 9) | (0 << 23);
      var $563$1=(0 >>> 9) | (0 << 23);
      var $564=(($S+56)|0);
      var $ld$357$0=(($564)|0);
      var $565$0=HEAP32[(($ld$357$0)>>2)];
      var $ld$358$1=(($564+4)|0);
      var $565$1=HEAP32[(($ld$358$1)>>2)];
      var $566$0=($565$0 << 23) | (0 >>> 9);
      var $566$1=($565$1 << 23) | ($565$0 >>> 9);
      var $567$0=$563$0 | $566$0;
      var $567$1=$563$1 | $566$1;
      var $568$0=$560$0 ^ $567$0;
      var $568$1=$560$1 ^ $567$1;
      var $569$0 = _i64Add($545$0,$545$1,$568$0,$568$1); var $569$1 = tempRet0;
      var $570=(($S+8)|0);
      var $ld$359$0=(($570)|0);
      var $571$0=HEAP32[(($ld$359$0)>>2)];
      var $ld$360$1=(($570+4)|0);
      var $571$1=HEAP32[(($ld$360$1)>>2)];
      var $572=(($S+56)|0);
      var $ld$361$0=(($572)|0);
      var $573$0=HEAP32[(($ld$361$0)>>2)];
      var $ld$362$1=(($572+4)|0);
      var $573$1=HEAP32[(($ld$362$1)>>2)];
      var $574=(($S)|0);
      var $ld$363$0=(($574)|0);
      var $575$0=HEAP32[(($ld$363$0)>>2)];
      var $ld$364$1=(($574+4)|0);
      var $575$1=HEAP32[(($ld$364$1)>>2)];
      var $576=(($S+8)|0);
      var $ld$365$0=(($576)|0);
      var $577$0=HEAP32[(($ld$365$0)>>2)];
      var $ld$366$1=(($576+4)|0);
      var $577$1=HEAP32[(($ld$366$1)>>2)];
      var $578$0=$575$0 ^ $577$0;
      var $578$1=$575$1 ^ $577$1;
      var $579$0=$573$0 & $578$0;
      var $579$1=$573$1 & $578$1;
      var $580$0=$571$0 ^ $579$0;
      var $580$1=$571$1 ^ $579$1;
      var $581$0 = _i64Add($569$0,$569$1,$580$0,$580$1); var $581$1 = tempRet0;
      var $$etemp$367$0=-1241133031;
      var $$etemp$367$1=1508970993;
      var $582$0 = _i64Add($581$0,$581$1,$$etemp$367$0,$$etemp$367$1); var $582$1 = tempRet0;
      var $583=(($W+40)|0);
      var $ld$368$0=(($583)|0);
      var $584$0=HEAP32[(($ld$368$0)>>2)];
      var $ld$369$1=(($583+4)|0);
      var $584$1=HEAP32[(($ld$369$1)>>2)];
      var $585$0 = _i64Add($582$0,$582$1,$584$0,$584$1); var $585$1 = tempRet0;
      var $st$370$0=(($t0)|0);
      HEAP32[(($st$370$0)>>2)]=$585$0;
      var $st$371$1=(($t0+4)|0);
      HEAP32[(($st$371$1)>>2)]=$585$1;
      var $586=(($S+24)|0);
      var $ld$372$0=(($586)|0);
      var $587$0=HEAP32[(($ld$372$0)>>2)];
      var $ld$373$1=(($586+4)|0);
      var $587$1=HEAP32[(($ld$373$1)>>2)];
      var $588$0=($587$0 >>> 28) | ($587$1 << 4);
      var $588$1=($587$1 >>> 28) | (0 << 4);
      var $589=(($S+24)|0);
      var $ld$374$0=(($589)|0);
      var $590$0=HEAP32[(($ld$374$0)>>2)];
      var $ld$375$1=(($589+4)|0);
      var $590$1=HEAP32[(($ld$375$1)>>2)];
      var $591$0=(0 << 4) | (0 >>> 28);
      var $591$1=($590$0 << 4) | (0 >>> 28);
      var $592$0=$588$0 | $591$0;
      var $592$1=$588$1 | $591$1;
      var $593=(($S+24)|0);
      var $ld$376$0=(($593)|0);
      var $594$0=HEAP32[(($ld$376$0)>>2)];
      var $ld$377$1=(($593+4)|0);
      var $594$1=HEAP32[(($ld$377$1)>>2)];
      var $595$0=($594$1 >>> 2) | (0 << 30);
      var $595$1=(0 >>> 2) | (0 << 30);
      var $596=(($S+24)|0);
      var $ld$378$0=(($596)|0);
      var $597$0=HEAP32[(($ld$378$0)>>2)];
      var $ld$379$1=(($596+4)|0);
      var $597$1=HEAP32[(($ld$379$1)>>2)];
      var $598$0=($597$0 << 30) | (0 >>> 2);
      var $598$1=($597$1 << 30) | ($597$0 >>> 2);
      var $599$0=$595$0 | $598$0;
      var $599$1=$595$1 | $598$1;
      var $600$0=$592$0 ^ $599$0;
      var $600$1=$592$1 ^ $599$1;
      var $601=(($S+24)|0);
      var $ld$380$0=(($601)|0);
      var $602$0=HEAP32[(($ld$380$0)>>2)];
      var $ld$381$1=(($601+4)|0);
      var $602$1=HEAP32[(($ld$381$1)>>2)];
      var $603$0=($602$1 >>> 7) | (0 << 25);
      var $603$1=(0 >>> 7) | (0 << 25);
      var $604=(($S+24)|0);
      var $ld$382$0=(($604)|0);
      var $605$0=HEAP32[(($ld$382$0)>>2)];
      var $ld$383$1=(($604+4)|0);
      var $605$1=HEAP32[(($ld$383$1)>>2)];
      var $606$0=($605$0 << 25) | (0 >>> 7);
      var $606$1=($605$1 << 25) | ($605$0 >>> 7);
      var $607$0=$603$0 | $606$0;
      var $607$1=$603$1 | $606$1;
      var $608$0=$600$0 ^ $607$0;
      var $608$1=$600$1 ^ $607$1;
      var $609=(($S+24)|0);
      var $ld$384$0=(($609)|0);
      var $610$0=HEAP32[(($ld$384$0)>>2)];
      var $ld$385$1=(($609+4)|0);
      var $610$1=HEAP32[(($ld$385$1)>>2)];
      var $611=(($S+32)|0);
      var $ld$386$0=(($611)|0);
      var $612$0=HEAP32[(($ld$386$0)>>2)];
      var $ld$387$1=(($611+4)|0);
      var $612$1=HEAP32[(($ld$387$1)>>2)];
      var $613$0=$610$0 | $612$0;
      var $613$1=$610$1 | $612$1;
      var $614=(($S+40)|0);
      var $ld$388$0=(($614)|0);
      var $615$0=HEAP32[(($ld$388$0)>>2)];
      var $ld$389$1=(($614+4)|0);
      var $615$1=HEAP32[(($ld$389$1)>>2)];
      var $616$0=$613$0 & $615$0;
      var $616$1=$613$1 & $615$1;
      var $617=(($S+24)|0);
      var $ld$390$0=(($617)|0);
      var $618$0=HEAP32[(($ld$390$0)>>2)];
      var $ld$391$1=(($617+4)|0);
      var $618$1=HEAP32[(($ld$391$1)>>2)];
      var $619=(($S+32)|0);
      var $ld$392$0=(($619)|0);
      var $620$0=HEAP32[(($ld$392$0)>>2)];
      var $ld$393$1=(($619+4)|0);
      var $620$1=HEAP32[(($ld$393$1)>>2)];
      var $621$0=$618$0 & $620$0;
      var $621$1=$618$1 & $620$1;
      var $622$0=$616$0 | $621$0;
      var $622$1=$616$1 | $621$1;
      var $623$0 = _i64Add($608$0,$608$1,$622$0,$622$1); var $623$1 = tempRet0;
      var $st$394$0=(($t1)|0);
      HEAP32[(($st$394$0)>>2)]=$623$0;
      var $st$395$1=(($t1+4)|0);
      HEAP32[(($st$395$1)>>2)]=$623$1;
      var $ld$396$0=(($t0)|0);
      var $624$0=HEAP32[(($ld$396$0)>>2)];
      var $ld$397$1=(($t0+4)|0);
      var $624$1=HEAP32[(($ld$397$1)>>2)];
      var $625=(($S+48)|0);
      var $ld$398$0=(($625)|0);
      var $626$0=HEAP32[(($ld$398$0)>>2)];
      var $ld$399$1=(($625+4)|0);
      var $626$1=HEAP32[(($ld$399$1)>>2)];
      var $627$0 = _i64Add($626$0,$626$1,$624$0,$624$1); var $627$1 = tempRet0;
      var $st$400$0=(($625)|0);
      HEAP32[(($st$400$0)>>2)]=$627$0;
      var $st$401$1=(($625+4)|0);
      HEAP32[(($st$401$1)>>2)]=$627$1;
      var $ld$402$0=(($t0)|0);
      var $628$0=HEAP32[(($ld$402$0)>>2)];
      var $ld$403$1=(($t0+4)|0);
      var $628$1=HEAP32[(($ld$403$1)>>2)];
      var $ld$404$0=(($t1)|0);
      var $629$0=HEAP32[(($ld$404$0)>>2)];
      var $ld$405$1=(($t1+4)|0);
      var $629$1=HEAP32[(($ld$405$1)>>2)];
      var $630$0 = _i64Add($628$0,$628$1,$629$0,$629$1); var $630$1 = tempRet0;
      var $631=(($S+16)|0);
      var $st$406$0=(($631)|0);
      HEAP32[(($st$406$0)>>2)]=$630$0;
      var $st$407$1=(($631+4)|0);
      HEAP32[(($st$407$1)>>2)]=$630$1;
      var $632=(($S+8)|0);
      var $ld$408$0=(($632)|0);
      var $633$0=HEAP32[(($ld$408$0)>>2)];
      var $ld$409$1=(($632+4)|0);
      var $633$1=HEAP32[(($ld$409$1)>>2)];
      var $634=(($S+48)|0);
      var $ld$410$0=(($634)|0);
      var $635$0=HEAP32[(($ld$410$0)>>2)];
      var $ld$411$1=(($634+4)|0);
      var $635$1=HEAP32[(($ld$411$1)>>2)];
      var $636$0=($635$0 >>> 14) | ($635$1 << 18);
      var $636$1=($635$1 >>> 14) | (0 << 18);
      var $637=(($S+48)|0);
      var $ld$412$0=(($637)|0);
      var $638$0=HEAP32[(($ld$412$0)>>2)];
      var $ld$413$1=(($637+4)|0);
      var $638$1=HEAP32[(($ld$413$1)>>2)];
      var $639$0=(0 << 18) | (0 >>> 14);
      var $639$1=($638$0 << 18) | (0 >>> 14);
      var $640$0=$636$0 | $639$0;
      var $640$1=$636$1 | $639$1;
      var $641=(($S+48)|0);
      var $ld$414$0=(($641)|0);
      var $642$0=HEAP32[(($ld$414$0)>>2)];
      var $ld$415$1=(($641+4)|0);
      var $642$1=HEAP32[(($ld$415$1)>>2)];
      var $643$0=($642$0 >>> 18) | ($642$1 << 14);
      var $643$1=($642$1 >>> 18) | (0 << 14);
      var $644=(($S+48)|0);
      var $ld$416$0=(($644)|0);
      var $645$0=HEAP32[(($ld$416$0)>>2)];
      var $ld$417$1=(($644+4)|0);
      var $645$1=HEAP32[(($ld$417$1)>>2)];
      var $646$0=(0 << 14) | (0 >>> 18);
      var $646$1=($645$0 << 14) | (0 >>> 18);
      var $647$0=$643$0 | $646$0;
      var $647$1=$643$1 | $646$1;
      var $648$0=$640$0 ^ $647$0;
      var $648$1=$640$1 ^ $647$1;
      var $649=(($S+48)|0);
      var $ld$418$0=(($649)|0);
      var $650$0=HEAP32[(($ld$418$0)>>2)];
      var $ld$419$1=(($649+4)|0);
      var $650$1=HEAP32[(($ld$419$1)>>2)];
      var $651$0=($650$1 >>> 9) | (0 << 23);
      var $651$1=(0 >>> 9) | (0 << 23);
      var $652=(($S+48)|0);
      var $ld$420$0=(($652)|0);
      var $653$0=HEAP32[(($ld$420$0)>>2)];
      var $ld$421$1=(($652+4)|0);
      var $653$1=HEAP32[(($ld$421$1)>>2)];
      var $654$0=($653$0 << 23) | (0 >>> 9);
      var $654$1=($653$1 << 23) | ($653$0 >>> 9);
      var $655$0=$651$0 | $654$0;
      var $655$1=$651$1 | $654$1;
      var $656$0=$648$0 ^ $655$0;
      var $656$1=$648$1 ^ $655$1;
      var $657$0 = _i64Add($633$0,$633$1,$656$0,$656$1); var $657$1 = tempRet0;
      var $658=(($S)|0);
      var $ld$422$0=(($658)|0);
      var $659$0=HEAP32[(($ld$422$0)>>2)];
      var $ld$423$1=(($658+4)|0);
      var $659$1=HEAP32[(($ld$423$1)>>2)];
      var $660=(($S+48)|0);
      var $ld$424$0=(($660)|0);
      var $661$0=HEAP32[(($ld$424$0)>>2)];
      var $ld$425$1=(($660+4)|0);
      var $661$1=HEAP32[(($ld$425$1)>>2)];
      var $662=(($S+56)|0);
      var $ld$426$0=(($662)|0);
      var $663$0=HEAP32[(($ld$426$0)>>2)];
      var $ld$427$1=(($662+4)|0);
      var $663$1=HEAP32[(($ld$427$1)>>2)];
      var $664=(($S)|0);
      var $ld$428$0=(($664)|0);
      var $665$0=HEAP32[(($ld$428$0)>>2)];
      var $ld$429$1=(($664+4)|0);
      var $665$1=HEAP32[(($ld$429$1)>>2)];
      var $666$0=$663$0 ^ $665$0;
      var $666$1=$663$1 ^ $665$1;
      var $667$0=$661$0 & $666$0;
      var $667$1=$661$1 & $666$1;
      var $668$0=$659$0 ^ $667$0;
      var $668$1=$659$1 ^ $667$1;
      var $669$0 = _i64Add($657$0,$657$1,$668$0,$668$1); var $669$1 = tempRet0;
      var $$etemp$430$0=-1357295717;
      var $$etemp$430$1=-1841331548;
      var $670$0 = _i64Add($669$0,$669$1,$$etemp$430$0,$$etemp$430$1); var $670$1 = tempRet0;
      var $671=(($W+48)|0);
      var $ld$431$0=(($671)|0);
      var $672$0=HEAP32[(($ld$431$0)>>2)];
      var $ld$432$1=(($671+4)|0);
      var $672$1=HEAP32[(($ld$432$1)>>2)];
      var $673$0 = _i64Add($670$0,$670$1,$672$0,$672$1); var $673$1 = tempRet0;
      var $st$433$0=(($t0)|0);
      HEAP32[(($st$433$0)>>2)]=$673$0;
      var $st$434$1=(($t0+4)|0);
      HEAP32[(($st$434$1)>>2)]=$673$1;
      var $674=(($S+16)|0);
      var $ld$435$0=(($674)|0);
      var $675$0=HEAP32[(($ld$435$0)>>2)];
      var $ld$436$1=(($674+4)|0);
      var $675$1=HEAP32[(($ld$436$1)>>2)];
      var $676$0=($675$0 >>> 28) | ($675$1 << 4);
      var $676$1=($675$1 >>> 28) | (0 << 4);
      var $677=(($S+16)|0);
      var $ld$437$0=(($677)|0);
      var $678$0=HEAP32[(($ld$437$0)>>2)];
      var $ld$438$1=(($677+4)|0);
      var $678$1=HEAP32[(($ld$438$1)>>2)];
      var $679$0=(0 << 4) | (0 >>> 28);
      var $679$1=($678$0 << 4) | (0 >>> 28);
      var $680$0=$676$0 | $679$0;
      var $680$1=$676$1 | $679$1;
      var $681=(($S+16)|0);
      var $ld$439$0=(($681)|0);
      var $682$0=HEAP32[(($ld$439$0)>>2)];
      var $ld$440$1=(($681+4)|0);
      var $682$1=HEAP32[(($ld$440$1)>>2)];
      var $683$0=($682$1 >>> 2) | (0 << 30);
      var $683$1=(0 >>> 2) | (0 << 30);
      var $684=(($S+16)|0);
      var $ld$441$0=(($684)|0);
      var $685$0=HEAP32[(($ld$441$0)>>2)];
      var $ld$442$1=(($684+4)|0);
      var $685$1=HEAP32[(($ld$442$1)>>2)];
      var $686$0=($685$0 << 30) | (0 >>> 2);
      var $686$1=($685$1 << 30) | ($685$0 >>> 2);
      var $687$0=$683$0 | $686$0;
      var $687$1=$683$1 | $686$1;
      var $688$0=$680$0 ^ $687$0;
      var $688$1=$680$1 ^ $687$1;
      var $689=(($S+16)|0);
      var $ld$443$0=(($689)|0);
      var $690$0=HEAP32[(($ld$443$0)>>2)];
      var $ld$444$1=(($689+4)|0);
      var $690$1=HEAP32[(($ld$444$1)>>2)];
      var $691$0=($690$1 >>> 7) | (0 << 25);
      var $691$1=(0 >>> 7) | (0 << 25);
      var $692=(($S+16)|0);
      var $ld$445$0=(($692)|0);
      var $693$0=HEAP32[(($ld$445$0)>>2)];
      var $ld$446$1=(($692+4)|0);
      var $693$1=HEAP32[(($ld$446$1)>>2)];
      var $694$0=($693$0 << 25) | (0 >>> 7);
      var $694$1=($693$1 << 25) | ($693$0 >>> 7);
      var $695$0=$691$0 | $694$0;
      var $695$1=$691$1 | $694$1;
      var $696$0=$688$0 ^ $695$0;
      var $696$1=$688$1 ^ $695$1;
      var $697=(($S+16)|0);
      var $ld$447$0=(($697)|0);
      var $698$0=HEAP32[(($ld$447$0)>>2)];
      var $ld$448$1=(($697+4)|0);
      var $698$1=HEAP32[(($ld$448$1)>>2)];
      var $699=(($S+24)|0);
      var $ld$449$0=(($699)|0);
      var $700$0=HEAP32[(($ld$449$0)>>2)];
      var $ld$450$1=(($699+4)|0);
      var $700$1=HEAP32[(($ld$450$1)>>2)];
      var $701$0=$698$0 | $700$0;
      var $701$1=$698$1 | $700$1;
      var $702=(($S+32)|0);
      var $ld$451$0=(($702)|0);
      var $703$0=HEAP32[(($ld$451$0)>>2)];
      var $ld$452$1=(($702+4)|0);
      var $703$1=HEAP32[(($ld$452$1)>>2)];
      var $704$0=$701$0 & $703$0;
      var $704$1=$701$1 & $703$1;
      var $705=(($S+16)|0);
      var $ld$453$0=(($705)|0);
      var $706$0=HEAP32[(($ld$453$0)>>2)];
      var $ld$454$1=(($705+4)|0);
      var $706$1=HEAP32[(($ld$454$1)>>2)];
      var $707=(($S+24)|0);
      var $ld$455$0=(($707)|0);
      var $708$0=HEAP32[(($ld$455$0)>>2)];
      var $ld$456$1=(($707+4)|0);
      var $708$1=HEAP32[(($ld$456$1)>>2)];
      var $709$0=$706$0 & $708$0;
      var $709$1=$706$1 & $708$1;
      var $710$0=$704$0 | $709$0;
      var $710$1=$704$1 | $709$1;
      var $711$0 = _i64Add($696$0,$696$1,$710$0,$710$1); var $711$1 = tempRet0;
      var $st$457$0=(($t1)|0);
      HEAP32[(($st$457$0)>>2)]=$711$0;
      var $st$458$1=(($t1+4)|0);
      HEAP32[(($st$458$1)>>2)]=$711$1;
      var $ld$459$0=(($t0)|0);
      var $712$0=HEAP32[(($ld$459$0)>>2)];
      var $ld$460$1=(($t0+4)|0);
      var $712$1=HEAP32[(($ld$460$1)>>2)];
      var $713=(($S+40)|0);
      var $ld$461$0=(($713)|0);
      var $714$0=HEAP32[(($ld$461$0)>>2)];
      var $ld$462$1=(($713+4)|0);
      var $714$1=HEAP32[(($ld$462$1)>>2)];
      var $715$0 = _i64Add($714$0,$714$1,$712$0,$712$1); var $715$1 = tempRet0;
      var $st$463$0=(($713)|0);
      HEAP32[(($st$463$0)>>2)]=$715$0;
      var $st$464$1=(($713+4)|0);
      HEAP32[(($st$464$1)>>2)]=$715$1;
      var $ld$465$0=(($t0)|0);
      var $716$0=HEAP32[(($ld$465$0)>>2)];
      var $ld$466$1=(($t0+4)|0);
      var $716$1=HEAP32[(($ld$466$1)>>2)];
      var $ld$467$0=(($t1)|0);
      var $717$0=HEAP32[(($ld$467$0)>>2)];
      var $ld$468$1=(($t1+4)|0);
      var $717$1=HEAP32[(($ld$468$1)>>2)];
      var $718$0 = _i64Add($716$0,$716$1,$717$0,$717$1); var $718$1 = tempRet0;
      var $719=(($S+8)|0);
      var $st$469$0=(($719)|0);
      HEAP32[(($st$469$0)>>2)]=$718$0;
      var $st$470$1=(($719+4)|0);
      HEAP32[(($st$470$1)>>2)]=$718$1;
      var $720=(($S)|0);
      var $ld$471$0=(($720)|0);
      var $721$0=HEAP32[(($ld$471$0)>>2)];
      var $ld$472$1=(($720+4)|0);
      var $721$1=HEAP32[(($ld$472$1)>>2)];
      var $722=(($S+40)|0);
      var $ld$473$0=(($722)|0);
      var $723$0=HEAP32[(($ld$473$0)>>2)];
      var $ld$474$1=(($722+4)|0);
      var $723$1=HEAP32[(($ld$474$1)>>2)];
      var $724$0=($723$0 >>> 14) | ($723$1 << 18);
      var $724$1=($723$1 >>> 14) | (0 << 18);
      var $725=(($S+40)|0);
      var $ld$475$0=(($725)|0);
      var $726$0=HEAP32[(($ld$475$0)>>2)];
      var $ld$476$1=(($725+4)|0);
      var $726$1=HEAP32[(($ld$476$1)>>2)];
      var $727$0=(0 << 18) | (0 >>> 14);
      var $727$1=($726$0 << 18) | (0 >>> 14);
      var $728$0=$724$0 | $727$0;
      var $728$1=$724$1 | $727$1;
      var $729=(($S+40)|0);
      var $ld$477$0=(($729)|0);
      var $730$0=HEAP32[(($ld$477$0)>>2)];
      var $ld$478$1=(($729+4)|0);
      var $730$1=HEAP32[(($ld$478$1)>>2)];
      var $731$0=($730$0 >>> 18) | ($730$1 << 14);
      var $731$1=($730$1 >>> 18) | (0 << 14);
      var $732=(($S+40)|0);
      var $ld$479$0=(($732)|0);
      var $733$0=HEAP32[(($ld$479$0)>>2)];
      var $ld$480$1=(($732+4)|0);
      var $733$1=HEAP32[(($ld$480$1)>>2)];
      var $734$0=(0 << 14) | (0 >>> 18);
      var $734$1=($733$0 << 14) | (0 >>> 18);
      var $735$0=$731$0 | $734$0;
      var $735$1=$731$1 | $734$1;
      var $736$0=$728$0 ^ $735$0;
      var $736$1=$728$1 ^ $735$1;
      var $737=(($S+40)|0);
      var $ld$481$0=(($737)|0);
      var $738$0=HEAP32[(($ld$481$0)>>2)];
      var $ld$482$1=(($737+4)|0);
      var $738$1=HEAP32[(($ld$482$1)>>2)];
      var $739$0=($738$1 >>> 9) | (0 << 23);
      var $739$1=(0 >>> 9) | (0 << 23);
      var $740=(($S+40)|0);
      var $ld$483$0=(($740)|0);
      var $741$0=HEAP32[(($ld$483$0)>>2)];
      var $ld$484$1=(($740+4)|0);
      var $741$1=HEAP32[(($ld$484$1)>>2)];
      var $742$0=($741$0 << 23) | (0 >>> 9);
      var $742$1=($741$1 << 23) | ($741$0 >>> 9);
      var $743$0=$739$0 | $742$0;
      var $743$1=$739$1 | $742$1;
      var $744$0=$736$0 ^ $743$0;
      var $744$1=$736$1 ^ $743$1;
      var $745$0 = _i64Add($721$0,$721$1,$744$0,$744$1); var $745$1 = tempRet0;
      var $746=(($S+56)|0);
      var $ld$485$0=(($746)|0);
      var $747$0=HEAP32[(($ld$485$0)>>2)];
      var $ld$486$1=(($746+4)|0);
      var $747$1=HEAP32[(($ld$486$1)>>2)];
      var $748=(($S+40)|0);
      var $ld$487$0=(($748)|0);
      var $749$0=HEAP32[(($ld$487$0)>>2)];
      var $ld$488$1=(($748+4)|0);
      var $749$1=HEAP32[(($ld$488$1)>>2)];
      var $750=(($S+48)|0);
      var $ld$489$0=(($750)|0);
      var $751$0=HEAP32[(($ld$489$0)>>2)];
      var $ld$490$1=(($750+4)|0);
      var $751$1=HEAP32[(($ld$490$1)>>2)];
      var $752=(($S+56)|0);
      var $ld$491$0=(($752)|0);
      var $753$0=HEAP32[(($ld$491$0)>>2)];
      var $ld$492$1=(($752+4)|0);
      var $753$1=HEAP32[(($ld$492$1)>>2)];
      var $754$0=$751$0 ^ $753$0;
      var $754$1=$751$1 ^ $753$1;
      var $755$0=$749$0 & $754$0;
      var $755$1=$749$1 & $754$1;
      var $756$0=$747$0 ^ $755$0;
      var $756$1=$747$1 ^ $755$1;
      var $757$0 = _i64Add($745$0,$745$1,$756$0,$756$1); var $757$1 = tempRet0;
      var $$etemp$493$0=-630357736;
      var $$etemp$493$1=-1424204075;
      var $758$0 = _i64Add($757$0,$757$1,$$etemp$493$0,$$etemp$493$1); var $758$1 = tempRet0;
      var $759=(($W+56)|0);
      var $ld$494$0=(($759)|0);
      var $760$0=HEAP32[(($ld$494$0)>>2)];
      var $ld$495$1=(($759+4)|0);
      var $760$1=HEAP32[(($ld$495$1)>>2)];
      var $761$0 = _i64Add($758$0,$758$1,$760$0,$760$1); var $761$1 = tempRet0;
      var $st$496$0=(($t0)|0);
      HEAP32[(($st$496$0)>>2)]=$761$0;
      var $st$497$1=(($t0+4)|0);
      HEAP32[(($st$497$1)>>2)]=$761$1;
      var $762=(($S+8)|0);
      var $ld$498$0=(($762)|0);
      var $763$0=HEAP32[(($ld$498$0)>>2)];
      var $ld$499$1=(($762+4)|0);
      var $763$1=HEAP32[(($ld$499$1)>>2)];
      var $764$0=($763$0 >>> 28) | ($763$1 << 4);
      var $764$1=($763$1 >>> 28) | (0 << 4);
      var $765=(($S+8)|0);
      var $ld$500$0=(($765)|0);
      var $766$0=HEAP32[(($ld$500$0)>>2)];
      var $ld$501$1=(($765+4)|0);
      var $766$1=HEAP32[(($ld$501$1)>>2)];
      var $767$0=(0 << 4) | (0 >>> 28);
      var $767$1=($766$0 << 4) | (0 >>> 28);
      var $768$0=$764$0 | $767$0;
      var $768$1=$764$1 | $767$1;
      var $769=(($S+8)|0);
      var $ld$502$0=(($769)|0);
      var $770$0=HEAP32[(($ld$502$0)>>2)];
      var $ld$503$1=(($769+4)|0);
      var $770$1=HEAP32[(($ld$503$1)>>2)];
      var $771$0=($770$1 >>> 2) | (0 << 30);
      var $771$1=(0 >>> 2) | (0 << 30);
      var $772=(($S+8)|0);
      var $ld$504$0=(($772)|0);
      var $773$0=HEAP32[(($ld$504$0)>>2)];
      var $ld$505$1=(($772+4)|0);
      var $773$1=HEAP32[(($ld$505$1)>>2)];
      var $774$0=($773$0 << 30) | (0 >>> 2);
      var $774$1=($773$1 << 30) | ($773$0 >>> 2);
      var $775$0=$771$0 | $774$0;
      var $775$1=$771$1 | $774$1;
      var $776$0=$768$0 ^ $775$0;
      var $776$1=$768$1 ^ $775$1;
      var $777=(($S+8)|0);
      var $ld$506$0=(($777)|0);
      var $778$0=HEAP32[(($ld$506$0)>>2)];
      var $ld$507$1=(($777+4)|0);
      var $778$1=HEAP32[(($ld$507$1)>>2)];
      var $779$0=($778$1 >>> 7) | (0 << 25);
      var $779$1=(0 >>> 7) | (0 << 25);
      var $780=(($S+8)|0);
      var $ld$508$0=(($780)|0);
      var $781$0=HEAP32[(($ld$508$0)>>2)];
      var $ld$509$1=(($780+4)|0);
      var $781$1=HEAP32[(($ld$509$1)>>2)];
      var $782$0=($781$0 << 25) | (0 >>> 7);
      var $782$1=($781$1 << 25) | ($781$0 >>> 7);
      var $783$0=$779$0 | $782$0;
      var $783$1=$779$1 | $782$1;
      var $784$0=$776$0 ^ $783$0;
      var $784$1=$776$1 ^ $783$1;
      var $785=(($S+8)|0);
      var $ld$510$0=(($785)|0);
      var $786$0=HEAP32[(($ld$510$0)>>2)];
      var $ld$511$1=(($785+4)|0);
      var $786$1=HEAP32[(($ld$511$1)>>2)];
      var $787=(($S+16)|0);
      var $ld$512$0=(($787)|0);
      var $788$0=HEAP32[(($ld$512$0)>>2)];
      var $ld$513$1=(($787+4)|0);
      var $788$1=HEAP32[(($ld$513$1)>>2)];
      var $789$0=$786$0 | $788$0;
      var $789$1=$786$1 | $788$1;
      var $790=(($S+24)|0);
      var $ld$514$0=(($790)|0);
      var $791$0=HEAP32[(($ld$514$0)>>2)];
      var $ld$515$1=(($790+4)|0);
      var $791$1=HEAP32[(($ld$515$1)>>2)];
      var $792$0=$789$0 & $791$0;
      var $792$1=$789$1 & $791$1;
      var $793=(($S+8)|0);
      var $ld$516$0=(($793)|0);
      var $794$0=HEAP32[(($ld$516$0)>>2)];
      var $ld$517$1=(($793+4)|0);
      var $794$1=HEAP32[(($ld$517$1)>>2)];
      var $795=(($S+16)|0);
      var $ld$518$0=(($795)|0);
      var $796$0=HEAP32[(($ld$518$0)>>2)];
      var $ld$519$1=(($795+4)|0);
      var $796$1=HEAP32[(($ld$519$1)>>2)];
      var $797$0=$794$0 & $796$0;
      var $797$1=$794$1 & $796$1;
      var $798$0=$792$0 | $797$0;
      var $798$1=$792$1 | $797$1;
      var $799$0 = _i64Add($784$0,$784$1,$798$0,$798$1); var $799$1 = tempRet0;
      var $st$520$0=(($t1)|0);
      HEAP32[(($st$520$0)>>2)]=$799$0;
      var $st$521$1=(($t1+4)|0);
      HEAP32[(($st$521$1)>>2)]=$799$1;
      var $ld$522$0=(($t0)|0);
      var $800$0=HEAP32[(($ld$522$0)>>2)];
      var $ld$523$1=(($t0+4)|0);
      var $800$1=HEAP32[(($ld$523$1)>>2)];
      var $801=(($S+32)|0);
      var $ld$524$0=(($801)|0);
      var $802$0=HEAP32[(($ld$524$0)>>2)];
      var $ld$525$1=(($801+4)|0);
      var $802$1=HEAP32[(($ld$525$1)>>2)];
      var $803$0 = _i64Add($802$0,$802$1,$800$0,$800$1); var $803$1 = tempRet0;
      var $st$526$0=(($801)|0);
      HEAP32[(($st$526$0)>>2)]=$803$0;
      var $st$527$1=(($801+4)|0);
      HEAP32[(($st$527$1)>>2)]=$803$1;
      var $ld$528$0=(($t0)|0);
      var $804$0=HEAP32[(($ld$528$0)>>2)];
      var $ld$529$1=(($t0+4)|0);
      var $804$1=HEAP32[(($ld$529$1)>>2)];
      var $ld$530$0=(($t1)|0);
      var $805$0=HEAP32[(($ld$530$0)>>2)];
      var $ld$531$1=(($t1+4)|0);
      var $805$1=HEAP32[(($ld$531$1)>>2)];
      var $806$0 = _i64Add($804$0,$804$1,$805$0,$805$1); var $806$1 = tempRet0;
      var $807=(($S)|0);
      var $st$532$0=(($807)|0);
      HEAP32[(($st$532$0)>>2)]=$806$0;
      var $st$533$1=(($807+4)|0);
      HEAP32[(($st$533$1)>>2)]=$806$1;
      var $808=(($S+56)|0);
      var $ld$534$0=(($808)|0);
      var $809$0=HEAP32[(($ld$534$0)>>2)];
      var $ld$535$1=(($808+4)|0);
      var $809$1=HEAP32[(($ld$535$1)>>2)];
      var $810=(($S+32)|0);
      var $ld$536$0=(($810)|0);
      var $811$0=HEAP32[(($ld$536$0)>>2)];
      var $ld$537$1=(($810+4)|0);
      var $811$1=HEAP32[(($ld$537$1)>>2)];
      var $812$0=($811$0 >>> 14) | ($811$1 << 18);
      var $812$1=($811$1 >>> 14) | (0 << 18);
      var $813=(($S+32)|0);
      var $ld$538$0=(($813)|0);
      var $814$0=HEAP32[(($ld$538$0)>>2)];
      var $ld$539$1=(($813+4)|0);
      var $814$1=HEAP32[(($ld$539$1)>>2)];
      var $815$0=(0 << 18) | (0 >>> 14);
      var $815$1=($814$0 << 18) | (0 >>> 14);
      var $816$0=$812$0 | $815$0;
      var $816$1=$812$1 | $815$1;
      var $817=(($S+32)|0);
      var $ld$540$0=(($817)|0);
      var $818$0=HEAP32[(($ld$540$0)>>2)];
      var $ld$541$1=(($817+4)|0);
      var $818$1=HEAP32[(($ld$541$1)>>2)];
      var $819$0=($818$0 >>> 18) | ($818$1 << 14);
      var $819$1=($818$1 >>> 18) | (0 << 14);
      var $820=(($S+32)|0);
      var $ld$542$0=(($820)|0);
      var $821$0=HEAP32[(($ld$542$0)>>2)];
      var $ld$543$1=(($820+4)|0);
      var $821$1=HEAP32[(($ld$543$1)>>2)];
      var $822$0=(0 << 14) | (0 >>> 18);
      var $822$1=($821$0 << 14) | (0 >>> 18);
      var $823$0=$819$0 | $822$0;
      var $823$1=$819$1 | $822$1;
      var $824$0=$816$0 ^ $823$0;
      var $824$1=$816$1 ^ $823$1;
      var $825=(($S+32)|0);
      var $ld$544$0=(($825)|0);
      var $826$0=HEAP32[(($ld$544$0)>>2)];
      var $ld$545$1=(($825+4)|0);
      var $826$1=HEAP32[(($ld$545$1)>>2)];
      var $827$0=($826$1 >>> 9) | (0 << 23);
      var $827$1=(0 >>> 9) | (0 << 23);
      var $828=(($S+32)|0);
      var $ld$546$0=(($828)|0);
      var $829$0=HEAP32[(($ld$546$0)>>2)];
      var $ld$547$1=(($828+4)|0);
      var $829$1=HEAP32[(($ld$547$1)>>2)];
      var $830$0=($829$0 << 23) | (0 >>> 9);
      var $830$1=($829$1 << 23) | ($829$0 >>> 9);
      var $831$0=$827$0 | $830$0;
      var $831$1=$827$1 | $830$1;
      var $832$0=$824$0 ^ $831$0;
      var $832$1=$824$1 ^ $831$1;
      var $833$0 = _i64Add($809$0,$809$1,$832$0,$832$1); var $833$1 = tempRet0;
      var $834=(($S+48)|0);
      var $ld$548$0=(($834)|0);
      var $835$0=HEAP32[(($ld$548$0)>>2)];
      var $ld$549$1=(($834+4)|0);
      var $835$1=HEAP32[(($ld$549$1)>>2)];
      var $836=(($S+32)|0);
      var $ld$550$0=(($836)|0);
      var $837$0=HEAP32[(($ld$550$0)>>2)];
      var $ld$551$1=(($836+4)|0);
      var $837$1=HEAP32[(($ld$551$1)>>2)];
      var $838=(($S+40)|0);
      var $ld$552$0=(($838)|0);
      var $839$0=HEAP32[(($ld$552$0)>>2)];
      var $ld$553$1=(($838+4)|0);
      var $839$1=HEAP32[(($ld$553$1)>>2)];
      var $840=(($S+48)|0);
      var $ld$554$0=(($840)|0);
      var $841$0=HEAP32[(($ld$554$0)>>2)];
      var $ld$555$1=(($840+4)|0);
      var $841$1=HEAP32[(($ld$555$1)>>2)];
      var $842$0=$839$0 ^ $841$0;
      var $842$1=$839$1 ^ $841$1;
      var $843$0=$837$0 & $842$0;
      var $843$1=$837$1 & $842$1;
      var $844$0=$835$0 ^ $843$0;
      var $844$1=$835$1 ^ $843$1;
      var $845$0 = _i64Add($833$0,$833$1,$844$0,$844$1); var $845$1 = tempRet0;
      var $$etemp$556$0=-1560083902;
      var $$etemp$556$1=-670586216;
      var $846$0 = _i64Add($845$0,$845$1,$$etemp$556$0,$$etemp$556$1); var $846$1 = tempRet0;
      var $847=(($W+64)|0);
      var $ld$557$0=(($847)|0);
      var $848$0=HEAP32[(($ld$557$0)>>2)];
      var $ld$558$1=(($847+4)|0);
      var $848$1=HEAP32[(($ld$558$1)>>2)];
      var $849$0 = _i64Add($846$0,$846$1,$848$0,$848$1); var $849$1 = tempRet0;
      var $st$559$0=(($t0)|0);
      HEAP32[(($st$559$0)>>2)]=$849$0;
      var $st$560$1=(($t0+4)|0);
      HEAP32[(($st$560$1)>>2)]=$849$1;
      var $850=(($S)|0);
      var $ld$561$0=(($850)|0);
      var $851$0=HEAP32[(($ld$561$0)>>2)];
      var $ld$562$1=(($850+4)|0);
      var $851$1=HEAP32[(($ld$562$1)>>2)];
      var $852$0=($851$0 >>> 28) | ($851$1 << 4);
      var $852$1=($851$1 >>> 28) | (0 << 4);
      var $853=(($S)|0);
      var $ld$563$0=(($853)|0);
      var $854$0=HEAP32[(($ld$563$0)>>2)];
      var $ld$564$1=(($853+4)|0);
      var $854$1=HEAP32[(($ld$564$1)>>2)];
      var $855$0=(0 << 4) | (0 >>> 28);
      var $855$1=($854$0 << 4) | (0 >>> 28);
      var $856$0=$852$0 | $855$0;
      var $856$1=$852$1 | $855$1;
      var $857=(($S)|0);
      var $ld$565$0=(($857)|0);
      var $858$0=HEAP32[(($ld$565$0)>>2)];
      var $ld$566$1=(($857+4)|0);
      var $858$1=HEAP32[(($ld$566$1)>>2)];
      var $859$0=($858$1 >>> 2) | (0 << 30);
      var $859$1=(0 >>> 2) | (0 << 30);
      var $860=(($S)|0);
      var $ld$567$0=(($860)|0);
      var $861$0=HEAP32[(($ld$567$0)>>2)];
      var $ld$568$1=(($860+4)|0);
      var $861$1=HEAP32[(($ld$568$1)>>2)];
      var $862$0=($861$0 << 30) | (0 >>> 2);
      var $862$1=($861$1 << 30) | ($861$0 >>> 2);
      var $863$0=$859$0 | $862$0;
      var $863$1=$859$1 | $862$1;
      var $864$0=$856$0 ^ $863$0;
      var $864$1=$856$1 ^ $863$1;
      var $865=(($S)|0);
      var $ld$569$0=(($865)|0);
      var $866$0=HEAP32[(($ld$569$0)>>2)];
      var $ld$570$1=(($865+4)|0);
      var $866$1=HEAP32[(($ld$570$1)>>2)];
      var $867$0=($866$1 >>> 7) | (0 << 25);
      var $867$1=(0 >>> 7) | (0 << 25);
      var $868=(($S)|0);
      var $ld$571$0=(($868)|0);
      var $869$0=HEAP32[(($ld$571$0)>>2)];
      var $ld$572$1=(($868+4)|0);
      var $869$1=HEAP32[(($ld$572$1)>>2)];
      var $870$0=($869$0 << 25) | (0 >>> 7);
      var $870$1=($869$1 << 25) | ($869$0 >>> 7);
      var $871$0=$867$0 | $870$0;
      var $871$1=$867$1 | $870$1;
      var $872$0=$864$0 ^ $871$0;
      var $872$1=$864$1 ^ $871$1;
      var $873=(($S)|0);
      var $ld$573$0=(($873)|0);
      var $874$0=HEAP32[(($ld$573$0)>>2)];
      var $ld$574$1=(($873+4)|0);
      var $874$1=HEAP32[(($ld$574$1)>>2)];
      var $875=(($S+8)|0);
      var $ld$575$0=(($875)|0);
      var $876$0=HEAP32[(($ld$575$0)>>2)];
      var $ld$576$1=(($875+4)|0);
      var $876$1=HEAP32[(($ld$576$1)>>2)];
      var $877$0=$874$0 | $876$0;
      var $877$1=$874$1 | $876$1;
      var $878=(($S+16)|0);
      var $ld$577$0=(($878)|0);
      var $879$0=HEAP32[(($ld$577$0)>>2)];
      var $ld$578$1=(($878+4)|0);
      var $879$1=HEAP32[(($ld$578$1)>>2)];
      var $880$0=$877$0 & $879$0;
      var $880$1=$877$1 & $879$1;
      var $881=(($S)|0);
      var $ld$579$0=(($881)|0);
      var $882$0=HEAP32[(($ld$579$0)>>2)];
      var $ld$580$1=(($881+4)|0);
      var $882$1=HEAP32[(($ld$580$1)>>2)];
      var $883=(($S+8)|0);
      var $ld$581$0=(($883)|0);
      var $884$0=HEAP32[(($ld$581$0)>>2)];
      var $ld$582$1=(($883+4)|0);
      var $884$1=HEAP32[(($ld$582$1)>>2)];
      var $885$0=$882$0 & $884$0;
      var $885$1=$882$1 & $884$1;
      var $886$0=$880$0 | $885$0;
      var $886$1=$880$1 | $885$1;
      var $887$0 = _i64Add($872$0,$872$1,$886$0,$886$1); var $887$1 = tempRet0;
      var $st$583$0=(($t1)|0);
      HEAP32[(($st$583$0)>>2)]=$887$0;
      var $st$584$1=(($t1+4)|0);
      HEAP32[(($st$584$1)>>2)]=$887$1;
      var $ld$585$0=(($t0)|0);
      var $888$0=HEAP32[(($ld$585$0)>>2)];
      var $ld$586$1=(($t0+4)|0);
      var $888$1=HEAP32[(($ld$586$1)>>2)];
      var $889=(($S+24)|0);
      var $ld$587$0=(($889)|0);
      var $890$0=HEAP32[(($ld$587$0)>>2)];
      var $ld$588$1=(($889+4)|0);
      var $890$1=HEAP32[(($ld$588$1)>>2)];
      var $891$0 = _i64Add($890$0,$890$1,$888$0,$888$1); var $891$1 = tempRet0;
      var $st$589$0=(($889)|0);
      HEAP32[(($st$589$0)>>2)]=$891$0;
      var $st$590$1=(($889+4)|0);
      HEAP32[(($st$590$1)>>2)]=$891$1;
      var $ld$591$0=(($t0)|0);
      var $892$0=HEAP32[(($ld$591$0)>>2)];
      var $ld$592$1=(($t0+4)|0);
      var $892$1=HEAP32[(($ld$592$1)>>2)];
      var $ld$593$0=(($t1)|0);
      var $893$0=HEAP32[(($ld$593$0)>>2)];
      var $ld$594$1=(($t1+4)|0);
      var $893$1=HEAP32[(($ld$594$1)>>2)];
      var $894$0 = _i64Add($892$0,$892$1,$893$0,$893$1); var $894$1 = tempRet0;
      var $895=(($S+56)|0);
      var $st$595$0=(($895)|0);
      HEAP32[(($st$595$0)>>2)]=$894$0;
      var $st$596$1=(($895+4)|0);
      HEAP32[(($st$596$1)>>2)]=$894$1;
      var $896=(($S+48)|0);
      var $ld$597$0=(($896)|0);
      var $897$0=HEAP32[(($ld$597$0)>>2)];
      var $ld$598$1=(($896+4)|0);
      var $897$1=HEAP32[(($ld$598$1)>>2)];
      var $898=(($S+24)|0);
      var $ld$599$0=(($898)|0);
      var $899$0=HEAP32[(($ld$599$0)>>2)];
      var $ld$600$1=(($898+4)|0);
      var $899$1=HEAP32[(($ld$600$1)>>2)];
      var $900$0=($899$0 >>> 14) | ($899$1 << 18);
      var $900$1=($899$1 >>> 14) | (0 << 18);
      var $901=(($S+24)|0);
      var $ld$601$0=(($901)|0);
      var $902$0=HEAP32[(($ld$601$0)>>2)];
      var $ld$602$1=(($901+4)|0);
      var $902$1=HEAP32[(($ld$602$1)>>2)];
      var $903$0=(0 << 18) | (0 >>> 14);
      var $903$1=($902$0 << 18) | (0 >>> 14);
      var $904$0=$900$0 | $903$0;
      var $904$1=$900$1 | $903$1;
      var $905=(($S+24)|0);
      var $ld$603$0=(($905)|0);
      var $906$0=HEAP32[(($ld$603$0)>>2)];
      var $ld$604$1=(($905+4)|0);
      var $906$1=HEAP32[(($ld$604$1)>>2)];
      var $907$0=($906$0 >>> 18) | ($906$1 << 14);
      var $907$1=($906$1 >>> 18) | (0 << 14);
      var $908=(($S+24)|0);
      var $ld$605$0=(($908)|0);
      var $909$0=HEAP32[(($ld$605$0)>>2)];
      var $ld$606$1=(($908+4)|0);
      var $909$1=HEAP32[(($ld$606$1)>>2)];
      var $910$0=(0 << 14) | (0 >>> 18);
      var $910$1=($909$0 << 14) | (0 >>> 18);
      var $911$0=$907$0 | $910$0;
      var $911$1=$907$1 | $910$1;
      var $912$0=$904$0 ^ $911$0;
      var $912$1=$904$1 ^ $911$1;
      var $913=(($S+24)|0);
      var $ld$607$0=(($913)|0);
      var $914$0=HEAP32[(($ld$607$0)>>2)];
      var $ld$608$1=(($913+4)|0);
      var $914$1=HEAP32[(($ld$608$1)>>2)];
      var $915$0=($914$1 >>> 9) | (0 << 23);
      var $915$1=(0 >>> 9) | (0 << 23);
      var $916=(($S+24)|0);
      var $ld$609$0=(($916)|0);
      var $917$0=HEAP32[(($ld$609$0)>>2)];
      var $ld$610$1=(($916+4)|0);
      var $917$1=HEAP32[(($ld$610$1)>>2)];
      var $918$0=($917$0 << 23) | (0 >>> 9);
      var $918$1=($917$1 << 23) | ($917$0 >>> 9);
      var $919$0=$915$0 | $918$0;
      var $919$1=$915$1 | $918$1;
      var $920$0=$912$0 ^ $919$0;
      var $920$1=$912$1 ^ $919$1;
      var $921$0 = _i64Add($897$0,$897$1,$920$0,$920$1); var $921$1 = tempRet0;
      var $922=(($S+40)|0);
      var $ld$611$0=(($922)|0);
      var $923$0=HEAP32[(($ld$611$0)>>2)];
      var $ld$612$1=(($922+4)|0);
      var $923$1=HEAP32[(($ld$612$1)>>2)];
      var $924=(($S+24)|0);
      var $ld$613$0=(($924)|0);
      var $925$0=HEAP32[(($ld$613$0)>>2)];
      var $ld$614$1=(($924+4)|0);
      var $925$1=HEAP32[(($ld$614$1)>>2)];
      var $926=(($S+32)|0);
      var $ld$615$0=(($926)|0);
      var $927$0=HEAP32[(($ld$615$0)>>2)];
      var $ld$616$1=(($926+4)|0);
      var $927$1=HEAP32[(($ld$616$1)>>2)];
      var $928=(($S+40)|0);
      var $ld$617$0=(($928)|0);
      var $929$0=HEAP32[(($ld$617$0)>>2)];
      var $ld$618$1=(($928+4)|0);
      var $929$1=HEAP32[(($ld$618$1)>>2)];
      var $930$0=$927$0 ^ $929$0;
      var $930$1=$927$1 ^ $929$1;
      var $931$0=$925$0 & $930$0;
      var $931$1=$925$1 & $930$1;
      var $932$0=$923$0 ^ $931$0;
      var $932$1=$923$1 ^ $931$1;
      var $933$0 = _i64Add($921$0,$921$1,$932$0,$932$1); var $933$1 = tempRet0;
      var $$etemp$619$0=1164996542;
      var $$etemp$619$1=310598401;
      var $934$0 = _i64Add($933$0,$933$1,$$etemp$619$0,$$etemp$619$1); var $934$1 = tempRet0;
      var $935=(($W+72)|0);
      var $ld$620$0=(($935)|0);
      var $936$0=HEAP32[(($ld$620$0)>>2)];
      var $ld$621$1=(($935+4)|0);
      var $936$1=HEAP32[(($ld$621$1)>>2)];
      var $937$0 = _i64Add($934$0,$934$1,$936$0,$936$1); var $937$1 = tempRet0;
      var $st$622$0=(($t0)|0);
      HEAP32[(($st$622$0)>>2)]=$937$0;
      var $st$623$1=(($t0+4)|0);
      HEAP32[(($st$623$1)>>2)]=$937$1;
      var $938=(($S+56)|0);
      var $ld$624$0=(($938)|0);
      var $939$0=HEAP32[(($ld$624$0)>>2)];
      var $ld$625$1=(($938+4)|0);
      var $939$1=HEAP32[(($ld$625$1)>>2)];
      var $940$0=($939$0 >>> 28) | ($939$1 << 4);
      var $940$1=($939$1 >>> 28) | (0 << 4);
      var $941=(($S+56)|0);
      var $ld$626$0=(($941)|0);
      var $942$0=HEAP32[(($ld$626$0)>>2)];
      var $ld$627$1=(($941+4)|0);
      var $942$1=HEAP32[(($ld$627$1)>>2)];
      var $943$0=(0 << 4) | (0 >>> 28);
      var $943$1=($942$0 << 4) | (0 >>> 28);
      var $944$0=$940$0 | $943$0;
      var $944$1=$940$1 | $943$1;
      var $945=(($S+56)|0);
      var $ld$628$0=(($945)|0);
      var $946$0=HEAP32[(($ld$628$0)>>2)];
      var $ld$629$1=(($945+4)|0);
      var $946$1=HEAP32[(($ld$629$1)>>2)];
      var $947$0=($946$1 >>> 2) | (0 << 30);
      var $947$1=(0 >>> 2) | (0 << 30);
      var $948=(($S+56)|0);
      var $ld$630$0=(($948)|0);
      var $949$0=HEAP32[(($ld$630$0)>>2)];
      var $ld$631$1=(($948+4)|0);
      var $949$1=HEAP32[(($ld$631$1)>>2)];
      var $950$0=($949$0 << 30) | (0 >>> 2);
      var $950$1=($949$1 << 30) | ($949$0 >>> 2);
      var $951$0=$947$0 | $950$0;
      var $951$1=$947$1 | $950$1;
      var $952$0=$944$0 ^ $951$0;
      var $952$1=$944$1 ^ $951$1;
      var $953=(($S+56)|0);
      var $ld$632$0=(($953)|0);
      var $954$0=HEAP32[(($ld$632$0)>>2)];
      var $ld$633$1=(($953+4)|0);
      var $954$1=HEAP32[(($ld$633$1)>>2)];
      var $955$0=($954$1 >>> 7) | (0 << 25);
      var $955$1=(0 >>> 7) | (0 << 25);
      var $956=(($S+56)|0);
      var $ld$634$0=(($956)|0);
      var $957$0=HEAP32[(($ld$634$0)>>2)];
      var $ld$635$1=(($956+4)|0);
      var $957$1=HEAP32[(($ld$635$1)>>2)];
      var $958$0=($957$0 << 25) | (0 >>> 7);
      var $958$1=($957$1 << 25) | ($957$0 >>> 7);
      var $959$0=$955$0 | $958$0;
      var $959$1=$955$1 | $958$1;
      var $960$0=$952$0 ^ $959$0;
      var $960$1=$952$1 ^ $959$1;
      var $961=(($S+56)|0);
      var $ld$636$0=(($961)|0);
      var $962$0=HEAP32[(($ld$636$0)>>2)];
      var $ld$637$1=(($961+4)|0);
      var $962$1=HEAP32[(($ld$637$1)>>2)];
      var $963=(($S)|0);
      var $ld$638$0=(($963)|0);
      var $964$0=HEAP32[(($ld$638$0)>>2)];
      var $ld$639$1=(($963+4)|0);
      var $964$1=HEAP32[(($ld$639$1)>>2)];
      var $965$0=$962$0 | $964$0;
      var $965$1=$962$1 | $964$1;
      var $966=(($S+8)|0);
      var $ld$640$0=(($966)|0);
      var $967$0=HEAP32[(($ld$640$0)>>2)];
      var $ld$641$1=(($966+4)|0);
      var $967$1=HEAP32[(($ld$641$1)>>2)];
      var $968$0=$965$0 & $967$0;
      var $968$1=$965$1 & $967$1;
      var $969=(($S+56)|0);
      var $ld$642$0=(($969)|0);
      var $970$0=HEAP32[(($ld$642$0)>>2)];
      var $ld$643$1=(($969+4)|0);
      var $970$1=HEAP32[(($ld$643$1)>>2)];
      var $971=(($S)|0);
      var $ld$644$0=(($971)|0);
      var $972$0=HEAP32[(($ld$644$0)>>2)];
      var $ld$645$1=(($971+4)|0);
      var $972$1=HEAP32[(($ld$645$1)>>2)];
      var $973$0=$970$0 & $972$0;
      var $973$1=$970$1 & $972$1;
      var $974$0=$968$0 | $973$0;
      var $974$1=$968$1 | $973$1;
      var $975$0 = _i64Add($960$0,$960$1,$974$0,$974$1); var $975$1 = tempRet0;
      var $st$646$0=(($t1)|0);
      HEAP32[(($st$646$0)>>2)]=$975$0;
      var $st$647$1=(($t1+4)|0);
      HEAP32[(($st$647$1)>>2)]=$975$1;
      var $ld$648$0=(($t0)|0);
      var $976$0=HEAP32[(($ld$648$0)>>2)];
      var $ld$649$1=(($t0+4)|0);
      var $976$1=HEAP32[(($ld$649$1)>>2)];
      var $977=(($S+16)|0);
      var $ld$650$0=(($977)|0);
      var $978$0=HEAP32[(($ld$650$0)>>2)];
      var $ld$651$1=(($977+4)|0);
      var $978$1=HEAP32[(($ld$651$1)>>2)];
      var $979$0 = _i64Add($978$0,$978$1,$976$0,$976$1); var $979$1 = tempRet0;
      var $st$652$0=(($977)|0);
      HEAP32[(($st$652$0)>>2)]=$979$0;
      var $st$653$1=(($977+4)|0);
      HEAP32[(($st$653$1)>>2)]=$979$1;
      var $ld$654$0=(($t0)|0);
      var $980$0=HEAP32[(($ld$654$0)>>2)];
      var $ld$655$1=(($t0+4)|0);
      var $980$1=HEAP32[(($ld$655$1)>>2)];
      var $ld$656$0=(($t1)|0);
      var $981$0=HEAP32[(($ld$656$0)>>2)];
      var $ld$657$1=(($t1+4)|0);
      var $981$1=HEAP32[(($ld$657$1)>>2)];
      var $982$0 = _i64Add($980$0,$980$1,$981$0,$981$1); var $982$1 = tempRet0;
      var $983=(($S+48)|0);
      var $st$658$0=(($983)|0);
      HEAP32[(($st$658$0)>>2)]=$982$0;
      var $st$659$1=(($983+4)|0);
      HEAP32[(($st$659$1)>>2)]=$982$1;
      var $984=(($S+40)|0);
      var $ld$660$0=(($984)|0);
      var $985$0=HEAP32[(($ld$660$0)>>2)];
      var $ld$661$1=(($984+4)|0);
      var $985$1=HEAP32[(($ld$661$1)>>2)];
      var $986=(($S+16)|0);
      var $ld$662$0=(($986)|0);
      var $987$0=HEAP32[(($ld$662$0)>>2)];
      var $ld$663$1=(($986+4)|0);
      var $987$1=HEAP32[(($ld$663$1)>>2)];
      var $988$0=($987$0 >>> 14) | ($987$1 << 18);
      var $988$1=($987$1 >>> 14) | (0 << 18);
      var $989=(($S+16)|0);
      var $ld$664$0=(($989)|0);
      var $990$0=HEAP32[(($ld$664$0)>>2)];
      var $ld$665$1=(($989+4)|0);
      var $990$1=HEAP32[(($ld$665$1)>>2)];
      var $991$0=(0 << 18) | (0 >>> 14);
      var $991$1=($990$0 << 18) | (0 >>> 14);
      var $992$0=$988$0 | $991$0;
      var $992$1=$988$1 | $991$1;
      var $993=(($S+16)|0);
      var $ld$666$0=(($993)|0);
      var $994$0=HEAP32[(($ld$666$0)>>2)];
      var $ld$667$1=(($993+4)|0);
      var $994$1=HEAP32[(($ld$667$1)>>2)];
      var $995$0=($994$0 >>> 18) | ($994$1 << 14);
      var $995$1=($994$1 >>> 18) | (0 << 14);
      var $996=(($S+16)|0);
      var $ld$668$0=(($996)|0);
      var $997$0=HEAP32[(($ld$668$0)>>2)];
      var $ld$669$1=(($996+4)|0);
      var $997$1=HEAP32[(($ld$669$1)>>2)];
      var $998$0=(0 << 14) | (0 >>> 18);
      var $998$1=($997$0 << 14) | (0 >>> 18);
      var $999$0=$995$0 | $998$0;
      var $999$1=$995$1 | $998$1;
      var $1000$0=$992$0 ^ $999$0;
      var $1000$1=$992$1 ^ $999$1;
      var $1001=(($S+16)|0);
      var $ld$670$0=(($1001)|0);
      var $1002$0=HEAP32[(($ld$670$0)>>2)];
      var $ld$671$1=(($1001+4)|0);
      var $1002$1=HEAP32[(($ld$671$1)>>2)];
      var $1003$0=($1002$1 >>> 9) | (0 << 23);
      var $1003$1=(0 >>> 9) | (0 << 23);
      var $1004=(($S+16)|0);
      var $ld$672$0=(($1004)|0);
      var $1005$0=HEAP32[(($ld$672$0)>>2)];
      var $ld$673$1=(($1004+4)|0);
      var $1005$1=HEAP32[(($ld$673$1)>>2)];
      var $1006$0=($1005$0 << 23) | (0 >>> 9);
      var $1006$1=($1005$1 << 23) | ($1005$0 >>> 9);
      var $1007$0=$1003$0 | $1006$0;
      var $1007$1=$1003$1 | $1006$1;
      var $1008$0=$1000$0 ^ $1007$0;
      var $1008$1=$1000$1 ^ $1007$1;
      var $1009$0 = _i64Add($985$0,$985$1,$1008$0,$1008$1); var $1009$1 = tempRet0;
      var $1010=(($S+32)|0);
      var $ld$674$0=(($1010)|0);
      var $1011$0=HEAP32[(($ld$674$0)>>2)];
      var $ld$675$1=(($1010+4)|0);
      var $1011$1=HEAP32[(($ld$675$1)>>2)];
      var $1012=(($S+16)|0);
      var $ld$676$0=(($1012)|0);
      var $1013$0=HEAP32[(($ld$676$0)>>2)];
      var $ld$677$1=(($1012+4)|0);
      var $1013$1=HEAP32[(($ld$677$1)>>2)];
      var $1014=(($S+24)|0);
      var $ld$678$0=(($1014)|0);
      var $1015$0=HEAP32[(($ld$678$0)>>2)];
      var $ld$679$1=(($1014+4)|0);
      var $1015$1=HEAP32[(($ld$679$1)>>2)];
      var $1016=(($S+32)|0);
      var $ld$680$0=(($1016)|0);
      var $1017$0=HEAP32[(($ld$680$0)>>2)];
      var $ld$681$1=(($1016+4)|0);
      var $1017$1=HEAP32[(($ld$681$1)>>2)];
      var $1018$0=$1015$0 ^ $1017$0;
      var $1018$1=$1015$1 ^ $1017$1;
      var $1019$0=$1013$0 & $1018$0;
      var $1019$1=$1013$1 & $1018$1;
      var $1020$0=$1011$0 ^ $1019$0;
      var $1020$1=$1011$1 ^ $1019$1;
      var $1021$0 = _i64Add($1009$0,$1009$1,$1020$0,$1020$1); var $1021$1 = tempRet0;
      var $$etemp$682$0=1323610764;
      var $$etemp$682$1=607225278;
      var $1022$0 = _i64Add($1021$0,$1021$1,$$etemp$682$0,$$etemp$682$1); var $1022$1 = tempRet0;
      var $1023=(($W+80)|0);
      var $ld$683$0=(($1023)|0);
      var $1024$0=HEAP32[(($ld$683$0)>>2)];
      var $ld$684$1=(($1023+4)|0);
      var $1024$1=HEAP32[(($ld$684$1)>>2)];
      var $1025$0 = _i64Add($1022$0,$1022$1,$1024$0,$1024$1); var $1025$1 = tempRet0;
      var $st$685$0=(($t0)|0);
      HEAP32[(($st$685$0)>>2)]=$1025$0;
      var $st$686$1=(($t0+4)|0);
      HEAP32[(($st$686$1)>>2)]=$1025$1;
      var $1026=(($S+48)|0);
      var $ld$687$0=(($1026)|0);
      var $1027$0=HEAP32[(($ld$687$0)>>2)];
      var $ld$688$1=(($1026+4)|0);
      var $1027$1=HEAP32[(($ld$688$1)>>2)];
      var $1028$0=($1027$0 >>> 28) | ($1027$1 << 4);
      var $1028$1=($1027$1 >>> 28) | (0 << 4);
      var $1029=(($S+48)|0);
      var $ld$689$0=(($1029)|0);
      var $1030$0=HEAP32[(($ld$689$0)>>2)];
      var $ld$690$1=(($1029+4)|0);
      var $1030$1=HEAP32[(($ld$690$1)>>2)];
      var $1031$0=(0 << 4) | (0 >>> 28);
      var $1031$1=($1030$0 << 4) | (0 >>> 28);
      var $1032$0=$1028$0 | $1031$0;
      var $1032$1=$1028$1 | $1031$1;
      var $1033=(($S+48)|0);
      var $ld$691$0=(($1033)|0);
      var $1034$0=HEAP32[(($ld$691$0)>>2)];
      var $ld$692$1=(($1033+4)|0);
      var $1034$1=HEAP32[(($ld$692$1)>>2)];
      var $1035$0=($1034$1 >>> 2) | (0 << 30);
      var $1035$1=(0 >>> 2) | (0 << 30);
      var $1036=(($S+48)|0);
      var $ld$693$0=(($1036)|0);
      var $1037$0=HEAP32[(($ld$693$0)>>2)];
      var $ld$694$1=(($1036+4)|0);
      var $1037$1=HEAP32[(($ld$694$1)>>2)];
      var $1038$0=($1037$0 << 30) | (0 >>> 2);
      var $1038$1=($1037$1 << 30) | ($1037$0 >>> 2);
      var $1039$0=$1035$0 | $1038$0;
      var $1039$1=$1035$1 | $1038$1;
      var $1040$0=$1032$0 ^ $1039$0;
      var $1040$1=$1032$1 ^ $1039$1;
      var $1041=(($S+48)|0);
      var $ld$695$0=(($1041)|0);
      var $1042$0=HEAP32[(($ld$695$0)>>2)];
      var $ld$696$1=(($1041+4)|0);
      var $1042$1=HEAP32[(($ld$696$1)>>2)];
      var $1043$0=($1042$1 >>> 7) | (0 << 25);
      var $1043$1=(0 >>> 7) | (0 << 25);
      var $1044=(($S+48)|0);
      var $ld$697$0=(($1044)|0);
      var $1045$0=HEAP32[(($ld$697$0)>>2)];
      var $ld$698$1=(($1044+4)|0);
      var $1045$1=HEAP32[(($ld$698$1)>>2)];
      var $1046$0=($1045$0 << 25) | (0 >>> 7);
      var $1046$1=($1045$1 << 25) | ($1045$0 >>> 7);
      var $1047$0=$1043$0 | $1046$0;
      var $1047$1=$1043$1 | $1046$1;
      var $1048$0=$1040$0 ^ $1047$0;
      var $1048$1=$1040$1 ^ $1047$1;
      var $1049=(($S+48)|0);
      var $ld$699$0=(($1049)|0);
      var $1050$0=HEAP32[(($ld$699$0)>>2)];
      var $ld$700$1=(($1049+4)|0);
      var $1050$1=HEAP32[(($ld$700$1)>>2)];
      var $1051=(($S+56)|0);
      var $ld$701$0=(($1051)|0);
      var $1052$0=HEAP32[(($ld$701$0)>>2)];
      var $ld$702$1=(($1051+4)|0);
      var $1052$1=HEAP32[(($ld$702$1)>>2)];
      var $1053$0=$1050$0 | $1052$0;
      var $1053$1=$1050$1 | $1052$1;
      var $1054=(($S)|0);
      var $ld$703$0=(($1054)|0);
      var $1055$0=HEAP32[(($ld$703$0)>>2)];
      var $ld$704$1=(($1054+4)|0);
      var $1055$1=HEAP32[(($ld$704$1)>>2)];
      var $1056$0=$1053$0 & $1055$0;
      var $1056$1=$1053$1 & $1055$1;
      var $1057=(($S+48)|0);
      var $ld$705$0=(($1057)|0);
      var $1058$0=HEAP32[(($ld$705$0)>>2)];
      var $ld$706$1=(($1057+4)|0);
      var $1058$1=HEAP32[(($ld$706$1)>>2)];
      var $1059=(($S+56)|0);
      var $ld$707$0=(($1059)|0);
      var $1060$0=HEAP32[(($ld$707$0)>>2)];
      var $ld$708$1=(($1059+4)|0);
      var $1060$1=HEAP32[(($ld$708$1)>>2)];
      var $1061$0=$1058$0 & $1060$0;
      var $1061$1=$1058$1 & $1060$1;
      var $1062$0=$1056$0 | $1061$0;
      var $1062$1=$1056$1 | $1061$1;
      var $1063$0 = _i64Add($1048$0,$1048$1,$1062$0,$1062$1); var $1063$1 = tempRet0;
      var $st$709$0=(($t1)|0);
      HEAP32[(($st$709$0)>>2)]=$1063$0;
      var $st$710$1=(($t1+4)|0);
      HEAP32[(($st$710$1)>>2)]=$1063$1;
      var $ld$711$0=(($t0)|0);
      var $1064$0=HEAP32[(($ld$711$0)>>2)];
      var $ld$712$1=(($t0+4)|0);
      var $1064$1=HEAP32[(($ld$712$1)>>2)];
      var $1065=(($S+8)|0);
      var $ld$713$0=(($1065)|0);
      var $1066$0=HEAP32[(($ld$713$0)>>2)];
      var $ld$714$1=(($1065+4)|0);
      var $1066$1=HEAP32[(($ld$714$1)>>2)];
      var $1067$0 = _i64Add($1066$0,$1066$1,$1064$0,$1064$1); var $1067$1 = tempRet0;
      var $st$715$0=(($1065)|0);
      HEAP32[(($st$715$0)>>2)]=$1067$0;
      var $st$716$1=(($1065+4)|0);
      HEAP32[(($st$716$1)>>2)]=$1067$1;
      var $ld$717$0=(($t0)|0);
      var $1068$0=HEAP32[(($ld$717$0)>>2)];
      var $ld$718$1=(($t0+4)|0);
      var $1068$1=HEAP32[(($ld$718$1)>>2)];
      var $ld$719$0=(($t1)|0);
      var $1069$0=HEAP32[(($ld$719$0)>>2)];
      var $ld$720$1=(($t1+4)|0);
      var $1069$1=HEAP32[(($ld$720$1)>>2)];
      var $1070$0 = _i64Add($1068$0,$1068$1,$1069$0,$1069$1); var $1070$1 = tempRet0;
      var $1071=(($S+40)|0);
      var $st$721$0=(($1071)|0);
      HEAP32[(($st$721$0)>>2)]=$1070$0;
      var $st$722$1=(($1071+4)|0);
      HEAP32[(($st$722$1)>>2)]=$1070$1;
      var $1072=(($S+32)|0);
      var $ld$723$0=(($1072)|0);
      var $1073$0=HEAP32[(($ld$723$0)>>2)];
      var $ld$724$1=(($1072+4)|0);
      var $1073$1=HEAP32[(($ld$724$1)>>2)];
      var $1074=(($S+8)|0);
      var $ld$725$0=(($1074)|0);
      var $1075$0=HEAP32[(($ld$725$0)>>2)];
      var $ld$726$1=(($1074+4)|0);
      var $1075$1=HEAP32[(($ld$726$1)>>2)];
      var $1076$0=($1075$0 >>> 14) | ($1075$1 << 18);
      var $1076$1=($1075$1 >>> 14) | (0 << 18);
      var $1077=(($S+8)|0);
      var $ld$727$0=(($1077)|0);
      var $1078$0=HEAP32[(($ld$727$0)>>2)];
      var $ld$728$1=(($1077+4)|0);
      var $1078$1=HEAP32[(($ld$728$1)>>2)];
      var $1079$0=(0 << 18) | (0 >>> 14);
      var $1079$1=($1078$0 << 18) | (0 >>> 14);
      var $1080$0=$1076$0 | $1079$0;
      var $1080$1=$1076$1 | $1079$1;
      var $1081=(($S+8)|0);
      var $ld$729$0=(($1081)|0);
      var $1082$0=HEAP32[(($ld$729$0)>>2)];
      var $ld$730$1=(($1081+4)|0);
      var $1082$1=HEAP32[(($ld$730$1)>>2)];
      var $1083$0=($1082$0 >>> 18) | ($1082$1 << 14);
      var $1083$1=($1082$1 >>> 18) | (0 << 14);
      var $1084=(($S+8)|0);
      var $ld$731$0=(($1084)|0);
      var $1085$0=HEAP32[(($ld$731$0)>>2)];
      var $ld$732$1=(($1084+4)|0);
      var $1085$1=HEAP32[(($ld$732$1)>>2)];
      var $1086$0=(0 << 14) | (0 >>> 18);
      var $1086$1=($1085$0 << 14) | (0 >>> 18);
      var $1087$0=$1083$0 | $1086$0;
      var $1087$1=$1083$1 | $1086$1;
      var $1088$0=$1080$0 ^ $1087$0;
      var $1088$1=$1080$1 ^ $1087$1;
      var $1089=(($S+8)|0);
      var $ld$733$0=(($1089)|0);
      var $1090$0=HEAP32[(($ld$733$0)>>2)];
      var $ld$734$1=(($1089+4)|0);
      var $1090$1=HEAP32[(($ld$734$1)>>2)];
      var $1091$0=($1090$1 >>> 9) | (0 << 23);
      var $1091$1=(0 >>> 9) | (0 << 23);
      var $1092=(($S+8)|0);
      var $ld$735$0=(($1092)|0);
      var $1093$0=HEAP32[(($ld$735$0)>>2)];
      var $ld$736$1=(($1092+4)|0);
      var $1093$1=HEAP32[(($ld$736$1)>>2)];
      var $1094$0=($1093$0 << 23) | (0 >>> 9);
      var $1094$1=($1093$1 << 23) | ($1093$0 >>> 9);
      var $1095$0=$1091$0 | $1094$0;
      var $1095$1=$1091$1 | $1094$1;
      var $1096$0=$1088$0 ^ $1095$0;
      var $1096$1=$1088$1 ^ $1095$1;
      var $1097$0 = _i64Add($1073$0,$1073$1,$1096$0,$1096$1); var $1097$1 = tempRet0;
      var $1098=(($S+24)|0);
      var $ld$737$0=(($1098)|0);
      var $1099$0=HEAP32[(($ld$737$0)>>2)];
      var $ld$738$1=(($1098+4)|0);
      var $1099$1=HEAP32[(($ld$738$1)>>2)];
      var $1100=(($S+8)|0);
      var $ld$739$0=(($1100)|0);
      var $1101$0=HEAP32[(($ld$739$0)>>2)];
      var $ld$740$1=(($1100+4)|0);
      var $1101$1=HEAP32[(($ld$740$1)>>2)];
      var $1102=(($S+16)|0);
      var $ld$741$0=(($1102)|0);
      var $1103$0=HEAP32[(($ld$741$0)>>2)];
      var $ld$742$1=(($1102+4)|0);
      var $1103$1=HEAP32[(($ld$742$1)>>2)];
      var $1104=(($S+24)|0);
      var $ld$743$0=(($1104)|0);
      var $1105$0=HEAP32[(($ld$743$0)>>2)];
      var $ld$744$1=(($1104+4)|0);
      var $1105$1=HEAP32[(($ld$744$1)>>2)];
      var $1106$0=$1103$0 ^ $1105$0;
      var $1106$1=$1103$1 ^ $1105$1;
      var $1107$0=$1101$0 & $1106$0;
      var $1107$1=$1101$1 & $1106$1;
      var $1108$0=$1099$0 ^ $1107$0;
      var $1108$1=$1099$1 ^ $1107$1;
      var $1109$0 = _i64Add($1097$0,$1097$1,$1108$0,$1108$1); var $1109$1 = tempRet0;
      var $$etemp$745$0=-704662302;
      var $$etemp$745$1=1426881987;
      var $1110$0 = _i64Add($1109$0,$1109$1,$$etemp$745$0,$$etemp$745$1); var $1110$1 = tempRet0;
      var $1111=(($W+88)|0);
      var $ld$746$0=(($1111)|0);
      var $1112$0=HEAP32[(($ld$746$0)>>2)];
      var $ld$747$1=(($1111+4)|0);
      var $1112$1=HEAP32[(($ld$747$1)>>2)];
      var $1113$0 = _i64Add($1110$0,$1110$1,$1112$0,$1112$1); var $1113$1 = tempRet0;
      var $st$748$0=(($t0)|0);
      HEAP32[(($st$748$0)>>2)]=$1113$0;
      var $st$749$1=(($t0+4)|0);
      HEAP32[(($st$749$1)>>2)]=$1113$1;
      var $1114=(($S+40)|0);
      var $ld$750$0=(($1114)|0);
      var $1115$0=HEAP32[(($ld$750$0)>>2)];
      var $ld$751$1=(($1114+4)|0);
      var $1115$1=HEAP32[(($ld$751$1)>>2)];
      var $1116$0=($1115$0 >>> 28) | ($1115$1 << 4);
      var $1116$1=($1115$1 >>> 28) | (0 << 4);
      var $1117=(($S+40)|0);
      var $ld$752$0=(($1117)|0);
      var $1118$0=HEAP32[(($ld$752$0)>>2)];
      var $ld$753$1=(($1117+4)|0);
      var $1118$1=HEAP32[(($ld$753$1)>>2)];
      var $1119$0=(0 << 4) | (0 >>> 28);
      var $1119$1=($1118$0 << 4) | (0 >>> 28);
      var $1120$0=$1116$0 | $1119$0;
      var $1120$1=$1116$1 | $1119$1;
      var $1121=(($S+40)|0);
      var $ld$754$0=(($1121)|0);
      var $1122$0=HEAP32[(($ld$754$0)>>2)];
      var $ld$755$1=(($1121+4)|0);
      var $1122$1=HEAP32[(($ld$755$1)>>2)];
      var $1123$0=($1122$1 >>> 2) | (0 << 30);
      var $1123$1=(0 >>> 2) | (0 << 30);
      var $1124=(($S+40)|0);
      var $ld$756$0=(($1124)|0);
      var $1125$0=HEAP32[(($ld$756$0)>>2)];
      var $ld$757$1=(($1124+4)|0);
      var $1125$1=HEAP32[(($ld$757$1)>>2)];
      var $1126$0=($1125$0 << 30) | (0 >>> 2);
      var $1126$1=($1125$1 << 30) | ($1125$0 >>> 2);
      var $1127$0=$1123$0 | $1126$0;
      var $1127$1=$1123$1 | $1126$1;
      var $1128$0=$1120$0 ^ $1127$0;
      var $1128$1=$1120$1 ^ $1127$1;
      var $1129=(($S+40)|0);
      var $ld$758$0=(($1129)|0);
      var $1130$0=HEAP32[(($ld$758$0)>>2)];
      var $ld$759$1=(($1129+4)|0);
      var $1130$1=HEAP32[(($ld$759$1)>>2)];
      var $1131$0=($1130$1 >>> 7) | (0 << 25);
      var $1131$1=(0 >>> 7) | (0 << 25);
      var $1132=(($S+40)|0);
      var $ld$760$0=(($1132)|0);
      var $1133$0=HEAP32[(($ld$760$0)>>2)];
      var $ld$761$1=(($1132+4)|0);
      var $1133$1=HEAP32[(($ld$761$1)>>2)];
      var $1134$0=($1133$0 << 25) | (0 >>> 7);
      var $1134$1=($1133$1 << 25) | ($1133$0 >>> 7);
      var $1135$0=$1131$0 | $1134$0;
      var $1135$1=$1131$1 | $1134$1;
      var $1136$0=$1128$0 ^ $1135$0;
      var $1136$1=$1128$1 ^ $1135$1;
      var $1137=(($S+40)|0);
      var $ld$762$0=(($1137)|0);
      var $1138$0=HEAP32[(($ld$762$0)>>2)];
      var $ld$763$1=(($1137+4)|0);
      var $1138$1=HEAP32[(($ld$763$1)>>2)];
      var $1139=(($S+48)|0);
      var $ld$764$0=(($1139)|0);
      var $1140$0=HEAP32[(($ld$764$0)>>2)];
      var $ld$765$1=(($1139+4)|0);
      var $1140$1=HEAP32[(($ld$765$1)>>2)];
      var $1141$0=$1138$0 | $1140$0;
      var $1141$1=$1138$1 | $1140$1;
      var $1142=(($S+56)|0);
      var $ld$766$0=(($1142)|0);
      var $1143$0=HEAP32[(($ld$766$0)>>2)];
      var $ld$767$1=(($1142+4)|0);
      var $1143$1=HEAP32[(($ld$767$1)>>2)];
      var $1144$0=$1141$0 & $1143$0;
      var $1144$1=$1141$1 & $1143$1;
      var $1145=(($S+40)|0);
      var $ld$768$0=(($1145)|0);
      var $1146$0=HEAP32[(($ld$768$0)>>2)];
      var $ld$769$1=(($1145+4)|0);
      var $1146$1=HEAP32[(($ld$769$1)>>2)];
      var $1147=(($S+48)|0);
      var $ld$770$0=(($1147)|0);
      var $1148$0=HEAP32[(($ld$770$0)>>2)];
      var $ld$771$1=(($1147+4)|0);
      var $1148$1=HEAP32[(($ld$771$1)>>2)];
      var $1149$0=$1146$0 & $1148$0;
      var $1149$1=$1146$1 & $1148$1;
      var $1150$0=$1144$0 | $1149$0;
      var $1150$1=$1144$1 | $1149$1;
      var $1151$0 = _i64Add($1136$0,$1136$1,$1150$0,$1150$1); var $1151$1 = tempRet0;
      var $st$772$0=(($t1)|0);
      HEAP32[(($st$772$0)>>2)]=$1151$0;
      var $st$773$1=(($t1+4)|0);
      HEAP32[(($st$773$1)>>2)]=$1151$1;
      var $ld$774$0=(($t0)|0);
      var $1152$0=HEAP32[(($ld$774$0)>>2)];
      var $ld$775$1=(($t0+4)|0);
      var $1152$1=HEAP32[(($ld$775$1)>>2)];
      var $1153=(($S)|0);
      var $ld$776$0=(($1153)|0);
      var $1154$0=HEAP32[(($ld$776$0)>>2)];
      var $ld$777$1=(($1153+4)|0);
      var $1154$1=HEAP32[(($ld$777$1)>>2)];
      var $1155$0 = _i64Add($1154$0,$1154$1,$1152$0,$1152$1); var $1155$1 = tempRet0;
      var $st$778$0=(($1153)|0);
      HEAP32[(($st$778$0)>>2)]=$1155$0;
      var $st$779$1=(($1153+4)|0);
      HEAP32[(($st$779$1)>>2)]=$1155$1;
      var $ld$780$0=(($t0)|0);
      var $1156$0=HEAP32[(($ld$780$0)>>2)];
      var $ld$781$1=(($t0+4)|0);
      var $1156$1=HEAP32[(($ld$781$1)>>2)];
      var $ld$782$0=(($t1)|0);
      var $1157$0=HEAP32[(($ld$782$0)>>2)];
      var $ld$783$1=(($t1+4)|0);
      var $1157$1=HEAP32[(($ld$783$1)>>2)];
      var $1158$0 = _i64Add($1156$0,$1156$1,$1157$0,$1157$1); var $1158$1 = tempRet0;
      var $1159=(($S+32)|0);
      var $st$784$0=(($1159)|0);
      HEAP32[(($st$784$0)>>2)]=$1158$0;
      var $st$785$1=(($1159+4)|0);
      HEAP32[(($st$785$1)>>2)]=$1158$1;
      var $1160=(($S+24)|0);
      var $ld$786$0=(($1160)|0);
      var $1161$0=HEAP32[(($ld$786$0)>>2)];
      var $ld$787$1=(($1160+4)|0);
      var $1161$1=HEAP32[(($ld$787$1)>>2)];
      var $1162=(($S)|0);
      var $ld$788$0=(($1162)|0);
      var $1163$0=HEAP32[(($ld$788$0)>>2)];
      var $ld$789$1=(($1162+4)|0);
      var $1163$1=HEAP32[(($ld$789$1)>>2)];
      var $1164$0=($1163$0 >>> 14) | ($1163$1 << 18);
      var $1164$1=($1163$1 >>> 14) | (0 << 18);
      var $1165=(($S)|0);
      var $ld$790$0=(($1165)|0);
      var $1166$0=HEAP32[(($ld$790$0)>>2)];
      var $ld$791$1=(($1165+4)|0);
      var $1166$1=HEAP32[(($ld$791$1)>>2)];
      var $1167$0=(0 << 18) | (0 >>> 14);
      var $1167$1=($1166$0 << 18) | (0 >>> 14);
      var $1168$0=$1164$0 | $1167$0;
      var $1168$1=$1164$1 | $1167$1;
      var $1169=(($S)|0);
      var $ld$792$0=(($1169)|0);
      var $1170$0=HEAP32[(($ld$792$0)>>2)];
      var $ld$793$1=(($1169+4)|0);
      var $1170$1=HEAP32[(($ld$793$1)>>2)];
      var $1171$0=($1170$0 >>> 18) | ($1170$1 << 14);
      var $1171$1=($1170$1 >>> 18) | (0 << 14);
      var $1172=(($S)|0);
      var $ld$794$0=(($1172)|0);
      var $1173$0=HEAP32[(($ld$794$0)>>2)];
      var $ld$795$1=(($1172+4)|0);
      var $1173$1=HEAP32[(($ld$795$1)>>2)];
      var $1174$0=(0 << 14) | (0 >>> 18);
      var $1174$1=($1173$0 << 14) | (0 >>> 18);
      var $1175$0=$1171$0 | $1174$0;
      var $1175$1=$1171$1 | $1174$1;
      var $1176$0=$1168$0 ^ $1175$0;
      var $1176$1=$1168$1 ^ $1175$1;
      var $1177=(($S)|0);
      var $ld$796$0=(($1177)|0);
      var $1178$0=HEAP32[(($ld$796$0)>>2)];
      var $ld$797$1=(($1177+4)|0);
      var $1178$1=HEAP32[(($ld$797$1)>>2)];
      var $1179$0=($1178$1 >>> 9) | (0 << 23);
      var $1179$1=(0 >>> 9) | (0 << 23);
      var $1180=(($S)|0);
      var $ld$798$0=(($1180)|0);
      var $1181$0=HEAP32[(($ld$798$0)>>2)];
      var $ld$799$1=(($1180+4)|0);
      var $1181$1=HEAP32[(($ld$799$1)>>2)];
      var $1182$0=($1181$0 << 23) | (0 >>> 9);
      var $1182$1=($1181$1 << 23) | ($1181$0 >>> 9);
      var $1183$0=$1179$0 | $1182$0;
      var $1183$1=$1179$1 | $1182$1;
      var $1184$0=$1176$0 ^ $1183$0;
      var $1184$1=$1176$1 ^ $1183$1;
      var $1185$0 = _i64Add($1161$0,$1161$1,$1184$0,$1184$1); var $1185$1 = tempRet0;
      var $1186=(($S+16)|0);
      var $ld$800$0=(($1186)|0);
      var $1187$0=HEAP32[(($ld$800$0)>>2)];
      var $ld$801$1=(($1186+4)|0);
      var $1187$1=HEAP32[(($ld$801$1)>>2)];
      var $1188=(($S)|0);
      var $ld$802$0=(($1188)|0);
      var $1189$0=HEAP32[(($ld$802$0)>>2)];
      var $ld$803$1=(($1188+4)|0);
      var $1189$1=HEAP32[(($ld$803$1)>>2)];
      var $1190=(($S+8)|0);
      var $ld$804$0=(($1190)|0);
      var $1191$0=HEAP32[(($ld$804$0)>>2)];
      var $ld$805$1=(($1190+4)|0);
      var $1191$1=HEAP32[(($ld$805$1)>>2)];
      var $1192=(($S+16)|0);
      var $ld$806$0=(($1192)|0);
      var $1193$0=HEAP32[(($ld$806$0)>>2)];
      var $ld$807$1=(($1192+4)|0);
      var $1193$1=HEAP32[(($ld$807$1)>>2)];
      var $1194$0=$1191$0 ^ $1193$0;
      var $1194$1=$1191$1 ^ $1193$1;
      var $1195$0=$1189$0 & $1194$0;
      var $1195$1=$1189$1 & $1194$1;
      var $1196$0=$1187$0 ^ $1195$0;
      var $1196$1=$1187$1 ^ $1195$1;
      var $1197$0 = _i64Add($1185$0,$1185$1,$1196$0,$1196$1); var $1197$1 = tempRet0;
      var $$etemp$808$0=-226784913;
      var $$etemp$808$1=1925078388;
      var $1198$0 = _i64Add($1197$0,$1197$1,$$etemp$808$0,$$etemp$808$1); var $1198$1 = tempRet0;
      var $1199=(($W+96)|0);
      var $ld$809$0=(($1199)|0);
      var $1200$0=HEAP32[(($ld$809$0)>>2)];
      var $ld$810$1=(($1199+4)|0);
      var $1200$1=HEAP32[(($ld$810$1)>>2)];
      var $1201$0 = _i64Add($1198$0,$1198$1,$1200$0,$1200$1); var $1201$1 = tempRet0;
      var $st$811$0=(($t0)|0);
      HEAP32[(($st$811$0)>>2)]=$1201$0;
      var $st$812$1=(($t0+4)|0);
      HEAP32[(($st$812$1)>>2)]=$1201$1;
      var $1202=(($S+32)|0);
      var $ld$813$0=(($1202)|0);
      var $1203$0=HEAP32[(($ld$813$0)>>2)];
      var $ld$814$1=(($1202+4)|0);
      var $1203$1=HEAP32[(($ld$814$1)>>2)];
      var $1204$0=($1203$0 >>> 28) | ($1203$1 << 4);
      var $1204$1=($1203$1 >>> 28) | (0 << 4);
      var $1205=(($S+32)|0);
      var $ld$815$0=(($1205)|0);
      var $1206$0=HEAP32[(($ld$815$0)>>2)];
      var $ld$816$1=(($1205+4)|0);
      var $1206$1=HEAP32[(($ld$816$1)>>2)];
      var $1207$0=(0 << 4) | (0 >>> 28);
      var $1207$1=($1206$0 << 4) | (0 >>> 28);
      var $1208$0=$1204$0 | $1207$0;
      var $1208$1=$1204$1 | $1207$1;
      var $1209=(($S+32)|0);
      var $ld$817$0=(($1209)|0);
      var $1210$0=HEAP32[(($ld$817$0)>>2)];
      var $ld$818$1=(($1209+4)|0);
      var $1210$1=HEAP32[(($ld$818$1)>>2)];
      var $1211$0=($1210$1 >>> 2) | (0 << 30);
      var $1211$1=(0 >>> 2) | (0 << 30);
      var $1212=(($S+32)|0);
      var $ld$819$0=(($1212)|0);
      var $1213$0=HEAP32[(($ld$819$0)>>2)];
      var $ld$820$1=(($1212+4)|0);
      var $1213$1=HEAP32[(($ld$820$1)>>2)];
      var $1214$0=($1213$0 << 30) | (0 >>> 2);
      var $1214$1=($1213$1 << 30) | ($1213$0 >>> 2);
      var $1215$0=$1211$0 | $1214$0;
      var $1215$1=$1211$1 | $1214$1;
      var $1216$0=$1208$0 ^ $1215$0;
      var $1216$1=$1208$1 ^ $1215$1;
      var $1217=(($S+32)|0);
      var $ld$821$0=(($1217)|0);
      var $1218$0=HEAP32[(($ld$821$0)>>2)];
      var $ld$822$1=(($1217+4)|0);
      var $1218$1=HEAP32[(($ld$822$1)>>2)];
      var $1219$0=($1218$1 >>> 7) | (0 << 25);
      var $1219$1=(0 >>> 7) | (0 << 25);
      var $1220=(($S+32)|0);
      var $ld$823$0=(($1220)|0);
      var $1221$0=HEAP32[(($ld$823$0)>>2)];
      var $ld$824$1=(($1220+4)|0);
      var $1221$1=HEAP32[(($ld$824$1)>>2)];
      var $1222$0=($1221$0 << 25) | (0 >>> 7);
      var $1222$1=($1221$1 << 25) | ($1221$0 >>> 7);
      var $1223$0=$1219$0 | $1222$0;
      var $1223$1=$1219$1 | $1222$1;
      var $1224$0=$1216$0 ^ $1223$0;
      var $1224$1=$1216$1 ^ $1223$1;
      var $1225=(($S+32)|0);
      var $ld$825$0=(($1225)|0);
      var $1226$0=HEAP32[(($ld$825$0)>>2)];
      var $ld$826$1=(($1225+4)|0);
      var $1226$1=HEAP32[(($ld$826$1)>>2)];
      var $1227=(($S+40)|0);
      var $ld$827$0=(($1227)|0);
      var $1228$0=HEAP32[(($ld$827$0)>>2)];
      var $ld$828$1=(($1227+4)|0);
      var $1228$1=HEAP32[(($ld$828$1)>>2)];
      var $1229$0=$1226$0 | $1228$0;
      var $1229$1=$1226$1 | $1228$1;
      var $1230=(($S+48)|0);
      var $ld$829$0=(($1230)|0);
      var $1231$0=HEAP32[(($ld$829$0)>>2)];
      var $ld$830$1=(($1230+4)|0);
      var $1231$1=HEAP32[(($ld$830$1)>>2)];
      var $1232$0=$1229$0 & $1231$0;
      var $1232$1=$1229$1 & $1231$1;
      var $1233=(($S+32)|0);
      var $ld$831$0=(($1233)|0);
      var $1234$0=HEAP32[(($ld$831$0)>>2)];
      var $ld$832$1=(($1233+4)|0);
      var $1234$1=HEAP32[(($ld$832$1)>>2)];
      var $1235=(($S+40)|0);
      var $ld$833$0=(($1235)|0);
      var $1236$0=HEAP32[(($ld$833$0)>>2)];
      var $ld$834$1=(($1235+4)|0);
      var $1236$1=HEAP32[(($ld$834$1)>>2)];
      var $1237$0=$1234$0 & $1236$0;
      var $1237$1=$1234$1 & $1236$1;
      var $1238$0=$1232$0 | $1237$0;
      var $1238$1=$1232$1 | $1237$1;
      var $1239$0 = _i64Add($1224$0,$1224$1,$1238$0,$1238$1); var $1239$1 = tempRet0;
      var $st$835$0=(($t1)|0);
      HEAP32[(($st$835$0)>>2)]=$1239$0;
      var $st$836$1=(($t1+4)|0);
      HEAP32[(($st$836$1)>>2)]=$1239$1;
      var $ld$837$0=(($t0)|0);
      var $1240$0=HEAP32[(($ld$837$0)>>2)];
      var $ld$838$1=(($t0+4)|0);
      var $1240$1=HEAP32[(($ld$838$1)>>2)];
      var $1241=(($S+56)|0);
      var $ld$839$0=(($1241)|0);
      var $1242$0=HEAP32[(($ld$839$0)>>2)];
      var $ld$840$1=(($1241+4)|0);
      var $1242$1=HEAP32[(($ld$840$1)>>2)];
      var $1243$0 = _i64Add($1242$0,$1242$1,$1240$0,$1240$1); var $1243$1 = tempRet0;
      var $st$841$0=(($1241)|0);
      HEAP32[(($st$841$0)>>2)]=$1243$0;
      var $st$842$1=(($1241+4)|0);
      HEAP32[(($st$842$1)>>2)]=$1243$1;
      var $ld$843$0=(($t0)|0);
      var $1244$0=HEAP32[(($ld$843$0)>>2)];
      var $ld$844$1=(($t0+4)|0);
      var $1244$1=HEAP32[(($ld$844$1)>>2)];
      var $ld$845$0=(($t1)|0);
      var $1245$0=HEAP32[(($ld$845$0)>>2)];
      var $ld$846$1=(($t1+4)|0);
      var $1245$1=HEAP32[(($ld$846$1)>>2)];
      var $1246$0 = _i64Add($1244$0,$1244$1,$1245$0,$1245$1); var $1246$1 = tempRet0;
      var $1247=(($S+24)|0);
      var $st$847$0=(($1247)|0);
      HEAP32[(($st$847$0)>>2)]=$1246$0;
      var $st$848$1=(($1247+4)|0);
      HEAP32[(($st$848$1)>>2)]=$1246$1;
      var $1248=(($S+16)|0);
      var $ld$849$0=(($1248)|0);
      var $1249$0=HEAP32[(($ld$849$0)>>2)];
      var $ld$850$1=(($1248+4)|0);
      var $1249$1=HEAP32[(($ld$850$1)>>2)];
      var $1250=(($S+56)|0);
      var $ld$851$0=(($1250)|0);
      var $1251$0=HEAP32[(($ld$851$0)>>2)];
      var $ld$852$1=(($1250+4)|0);
      var $1251$1=HEAP32[(($ld$852$1)>>2)];
      var $1252$0=($1251$0 >>> 14) | ($1251$1 << 18);
      var $1252$1=($1251$1 >>> 14) | (0 << 18);
      var $1253=(($S+56)|0);
      var $ld$853$0=(($1253)|0);
      var $1254$0=HEAP32[(($ld$853$0)>>2)];
      var $ld$854$1=(($1253+4)|0);
      var $1254$1=HEAP32[(($ld$854$1)>>2)];
      var $1255$0=(0 << 18) | (0 >>> 14);
      var $1255$1=($1254$0 << 18) | (0 >>> 14);
      var $1256$0=$1252$0 | $1255$0;
      var $1256$1=$1252$1 | $1255$1;
      var $1257=(($S+56)|0);
      var $ld$855$0=(($1257)|0);
      var $1258$0=HEAP32[(($ld$855$0)>>2)];
      var $ld$856$1=(($1257+4)|0);
      var $1258$1=HEAP32[(($ld$856$1)>>2)];
      var $1259$0=($1258$0 >>> 18) | ($1258$1 << 14);
      var $1259$1=($1258$1 >>> 18) | (0 << 14);
      var $1260=(($S+56)|0);
      var $ld$857$0=(($1260)|0);
      var $1261$0=HEAP32[(($ld$857$0)>>2)];
      var $ld$858$1=(($1260+4)|0);
      var $1261$1=HEAP32[(($ld$858$1)>>2)];
      var $1262$0=(0 << 14) | (0 >>> 18);
      var $1262$1=($1261$0 << 14) | (0 >>> 18);
      var $1263$0=$1259$0 | $1262$0;
      var $1263$1=$1259$1 | $1262$1;
      var $1264$0=$1256$0 ^ $1263$0;
      var $1264$1=$1256$1 ^ $1263$1;
      var $1265=(($S+56)|0);
      var $ld$859$0=(($1265)|0);
      var $1266$0=HEAP32[(($ld$859$0)>>2)];
      var $ld$860$1=(($1265+4)|0);
      var $1266$1=HEAP32[(($ld$860$1)>>2)];
      var $1267$0=($1266$1 >>> 9) | (0 << 23);
      var $1267$1=(0 >>> 9) | (0 << 23);
      var $1268=(($S+56)|0);
      var $ld$861$0=(($1268)|0);
      var $1269$0=HEAP32[(($ld$861$0)>>2)];
      var $ld$862$1=(($1268+4)|0);
      var $1269$1=HEAP32[(($ld$862$1)>>2)];
      var $1270$0=($1269$0 << 23) | (0 >>> 9);
      var $1270$1=($1269$1 << 23) | ($1269$0 >>> 9);
      var $1271$0=$1267$0 | $1270$0;
      var $1271$1=$1267$1 | $1270$1;
      var $1272$0=$1264$0 ^ $1271$0;
      var $1272$1=$1264$1 ^ $1271$1;
      var $1273$0 = _i64Add($1249$0,$1249$1,$1272$0,$1272$1); var $1273$1 = tempRet0;
      var $1274=(($S+8)|0);
      var $ld$863$0=(($1274)|0);
      var $1275$0=HEAP32[(($ld$863$0)>>2)];
      var $ld$864$1=(($1274+4)|0);
      var $1275$1=HEAP32[(($ld$864$1)>>2)];
      var $1276=(($S+56)|0);
      var $ld$865$0=(($1276)|0);
      var $1277$0=HEAP32[(($ld$865$0)>>2)];
      var $ld$866$1=(($1276+4)|0);
      var $1277$1=HEAP32[(($ld$866$1)>>2)];
      var $1278=(($S)|0);
      var $ld$867$0=(($1278)|0);
      var $1279$0=HEAP32[(($ld$867$0)>>2)];
      var $ld$868$1=(($1278+4)|0);
      var $1279$1=HEAP32[(($ld$868$1)>>2)];
      var $1280=(($S+8)|0);
      var $ld$869$0=(($1280)|0);
      var $1281$0=HEAP32[(($ld$869$0)>>2)];
      var $ld$870$1=(($1280+4)|0);
      var $1281$1=HEAP32[(($ld$870$1)>>2)];
      var $1282$0=$1279$0 ^ $1281$0;
      var $1282$1=$1279$1 ^ $1281$1;
      var $1283$0=$1277$0 & $1282$0;
      var $1283$1=$1277$1 & $1282$1;
      var $1284$0=$1275$0 ^ $1283$0;
      var $1284$1=$1275$1 ^ $1283$1;
      var $1285$0 = _i64Add($1273$0,$1273$1,$1284$0,$1284$1); var $1285$1 = tempRet0;
      var $$etemp$871$0=991336113;
      var $$etemp$871$1=-2132889090;
      var $1286$0 = _i64Add($1285$0,$1285$1,$$etemp$871$0,$$etemp$871$1); var $1286$1 = tempRet0;
      var $1287=(($W+104)|0);
      var $ld$872$0=(($1287)|0);
      var $1288$0=HEAP32[(($ld$872$0)>>2)];
      var $ld$873$1=(($1287+4)|0);
      var $1288$1=HEAP32[(($ld$873$1)>>2)];
      var $1289$0 = _i64Add($1286$0,$1286$1,$1288$0,$1288$1); var $1289$1 = tempRet0;
      var $st$874$0=(($t0)|0);
      HEAP32[(($st$874$0)>>2)]=$1289$0;
      var $st$875$1=(($t0+4)|0);
      HEAP32[(($st$875$1)>>2)]=$1289$1;
      var $1290=(($S+24)|0);
      var $ld$876$0=(($1290)|0);
      var $1291$0=HEAP32[(($ld$876$0)>>2)];
      var $ld$877$1=(($1290+4)|0);
      var $1291$1=HEAP32[(($ld$877$1)>>2)];
      var $1292$0=($1291$0 >>> 28) | ($1291$1 << 4);
      var $1292$1=($1291$1 >>> 28) | (0 << 4);
      var $1293=(($S+24)|0);
      var $ld$878$0=(($1293)|0);
      var $1294$0=HEAP32[(($ld$878$0)>>2)];
      var $ld$879$1=(($1293+4)|0);
      var $1294$1=HEAP32[(($ld$879$1)>>2)];
      var $1295$0=(0 << 4) | (0 >>> 28);
      var $1295$1=($1294$0 << 4) | (0 >>> 28);
      var $1296$0=$1292$0 | $1295$0;
      var $1296$1=$1292$1 | $1295$1;
      var $1297=(($S+24)|0);
      var $ld$880$0=(($1297)|0);
      var $1298$0=HEAP32[(($ld$880$0)>>2)];
      var $ld$881$1=(($1297+4)|0);
      var $1298$1=HEAP32[(($ld$881$1)>>2)];
      var $1299$0=($1298$1 >>> 2) | (0 << 30);
      var $1299$1=(0 >>> 2) | (0 << 30);
      var $1300=(($S+24)|0);
      var $ld$882$0=(($1300)|0);
      var $1301$0=HEAP32[(($ld$882$0)>>2)];
      var $ld$883$1=(($1300+4)|0);
      var $1301$1=HEAP32[(($ld$883$1)>>2)];
      var $1302$0=($1301$0 << 30) | (0 >>> 2);
      var $1302$1=($1301$1 << 30) | ($1301$0 >>> 2);
      var $1303$0=$1299$0 | $1302$0;
      var $1303$1=$1299$1 | $1302$1;
      var $1304$0=$1296$0 ^ $1303$0;
      var $1304$1=$1296$1 ^ $1303$1;
      var $1305=(($S+24)|0);
      var $ld$884$0=(($1305)|0);
      var $1306$0=HEAP32[(($ld$884$0)>>2)];
      var $ld$885$1=(($1305+4)|0);
      var $1306$1=HEAP32[(($ld$885$1)>>2)];
      var $1307$0=($1306$1 >>> 7) | (0 << 25);
      var $1307$1=(0 >>> 7) | (0 << 25);
      var $1308=(($S+24)|0);
      var $ld$886$0=(($1308)|0);
      var $1309$0=HEAP32[(($ld$886$0)>>2)];
      var $ld$887$1=(($1308+4)|0);
      var $1309$1=HEAP32[(($ld$887$1)>>2)];
      var $1310$0=($1309$0 << 25) | (0 >>> 7);
      var $1310$1=($1309$1 << 25) | ($1309$0 >>> 7);
      var $1311$0=$1307$0 | $1310$0;
      var $1311$1=$1307$1 | $1310$1;
      var $1312$0=$1304$0 ^ $1311$0;
      var $1312$1=$1304$1 ^ $1311$1;
      var $1313=(($S+24)|0);
      var $ld$888$0=(($1313)|0);
      var $1314$0=HEAP32[(($ld$888$0)>>2)];
      var $ld$889$1=(($1313+4)|0);
      var $1314$1=HEAP32[(($ld$889$1)>>2)];
      var $1315=(($S+32)|0);
      var $ld$890$0=(($1315)|0);
      var $1316$0=HEAP32[(($ld$890$0)>>2)];
      var $ld$891$1=(($1315+4)|0);
      var $1316$1=HEAP32[(($ld$891$1)>>2)];
      var $1317$0=$1314$0 | $1316$0;
      var $1317$1=$1314$1 | $1316$1;
      var $1318=(($S+40)|0);
      var $ld$892$0=(($1318)|0);
      var $1319$0=HEAP32[(($ld$892$0)>>2)];
      var $ld$893$1=(($1318+4)|0);
      var $1319$1=HEAP32[(($ld$893$1)>>2)];
      var $1320$0=$1317$0 & $1319$0;
      var $1320$1=$1317$1 & $1319$1;
      var $1321=(($S+24)|0);
      var $ld$894$0=(($1321)|0);
      var $1322$0=HEAP32[(($ld$894$0)>>2)];
      var $ld$895$1=(($1321+4)|0);
      var $1322$1=HEAP32[(($ld$895$1)>>2)];
      var $1323=(($S+32)|0);
      var $ld$896$0=(($1323)|0);
      var $1324$0=HEAP32[(($ld$896$0)>>2)];
      var $ld$897$1=(($1323+4)|0);
      var $1324$1=HEAP32[(($ld$897$1)>>2)];
      var $1325$0=$1322$0 & $1324$0;
      var $1325$1=$1322$1 & $1324$1;
      var $1326$0=$1320$0 | $1325$0;
      var $1326$1=$1320$1 | $1325$1;
      var $1327$0 = _i64Add($1312$0,$1312$1,$1326$0,$1326$1); var $1327$1 = tempRet0;
      var $st$898$0=(($t1)|0);
      HEAP32[(($st$898$0)>>2)]=$1327$0;
      var $st$899$1=(($t1+4)|0);
      HEAP32[(($st$899$1)>>2)]=$1327$1;
      var $ld$900$0=(($t0)|0);
      var $1328$0=HEAP32[(($ld$900$0)>>2)];
      var $ld$901$1=(($t0+4)|0);
      var $1328$1=HEAP32[(($ld$901$1)>>2)];
      var $1329=(($S+48)|0);
      var $ld$902$0=(($1329)|0);
      var $1330$0=HEAP32[(($ld$902$0)>>2)];
      var $ld$903$1=(($1329+4)|0);
      var $1330$1=HEAP32[(($ld$903$1)>>2)];
      var $1331$0 = _i64Add($1330$0,$1330$1,$1328$0,$1328$1); var $1331$1 = tempRet0;
      var $st$904$0=(($1329)|0);
      HEAP32[(($st$904$0)>>2)]=$1331$0;
      var $st$905$1=(($1329+4)|0);
      HEAP32[(($st$905$1)>>2)]=$1331$1;
      var $ld$906$0=(($t0)|0);
      var $1332$0=HEAP32[(($ld$906$0)>>2)];
      var $ld$907$1=(($t0+4)|0);
      var $1332$1=HEAP32[(($ld$907$1)>>2)];
      var $ld$908$0=(($t1)|0);
      var $1333$0=HEAP32[(($ld$908$0)>>2)];
      var $ld$909$1=(($t1+4)|0);
      var $1333$1=HEAP32[(($ld$909$1)>>2)];
      var $1334$0 = _i64Add($1332$0,$1332$1,$1333$0,$1333$1); var $1334$1 = tempRet0;
      var $1335=(($S+16)|0);
      var $st$910$0=(($1335)|0);
      HEAP32[(($st$910$0)>>2)]=$1334$0;
      var $st$911$1=(($1335+4)|0);
      HEAP32[(($st$911$1)>>2)]=$1334$1;
      var $1336=(($S+8)|0);
      var $ld$912$0=(($1336)|0);
      var $1337$0=HEAP32[(($ld$912$0)>>2)];
      var $ld$913$1=(($1336+4)|0);
      var $1337$1=HEAP32[(($ld$913$1)>>2)];
      var $1338=(($S+48)|0);
      var $ld$914$0=(($1338)|0);
      var $1339$0=HEAP32[(($ld$914$0)>>2)];
      var $ld$915$1=(($1338+4)|0);
      var $1339$1=HEAP32[(($ld$915$1)>>2)];
      var $1340$0=($1339$0 >>> 14) | ($1339$1 << 18);
      var $1340$1=($1339$1 >>> 14) | (0 << 18);
      var $1341=(($S+48)|0);
      var $ld$916$0=(($1341)|0);
      var $1342$0=HEAP32[(($ld$916$0)>>2)];
      var $ld$917$1=(($1341+4)|0);
      var $1342$1=HEAP32[(($ld$917$1)>>2)];
      var $1343$0=(0 << 18) | (0 >>> 14);
      var $1343$1=($1342$0 << 18) | (0 >>> 14);
      var $1344$0=$1340$0 | $1343$0;
      var $1344$1=$1340$1 | $1343$1;
      var $1345=(($S+48)|0);
      var $ld$918$0=(($1345)|0);
      var $1346$0=HEAP32[(($ld$918$0)>>2)];
      var $ld$919$1=(($1345+4)|0);
      var $1346$1=HEAP32[(($ld$919$1)>>2)];
      var $1347$0=($1346$0 >>> 18) | ($1346$1 << 14);
      var $1347$1=($1346$1 >>> 18) | (0 << 14);
      var $1348=(($S+48)|0);
      var $ld$920$0=(($1348)|0);
      var $1349$0=HEAP32[(($ld$920$0)>>2)];
      var $ld$921$1=(($1348+4)|0);
      var $1349$1=HEAP32[(($ld$921$1)>>2)];
      var $1350$0=(0 << 14) | (0 >>> 18);
      var $1350$1=($1349$0 << 14) | (0 >>> 18);
      var $1351$0=$1347$0 | $1350$0;
      var $1351$1=$1347$1 | $1350$1;
      var $1352$0=$1344$0 ^ $1351$0;
      var $1352$1=$1344$1 ^ $1351$1;
      var $1353=(($S+48)|0);
      var $ld$922$0=(($1353)|0);
      var $1354$0=HEAP32[(($ld$922$0)>>2)];
      var $ld$923$1=(($1353+4)|0);
      var $1354$1=HEAP32[(($ld$923$1)>>2)];
      var $1355$0=($1354$1 >>> 9) | (0 << 23);
      var $1355$1=(0 >>> 9) | (0 << 23);
      var $1356=(($S+48)|0);
      var $ld$924$0=(($1356)|0);
      var $1357$0=HEAP32[(($ld$924$0)>>2)];
      var $ld$925$1=(($1356+4)|0);
      var $1357$1=HEAP32[(($ld$925$1)>>2)];
      var $1358$0=($1357$0 << 23) | (0 >>> 9);
      var $1358$1=($1357$1 << 23) | ($1357$0 >>> 9);
      var $1359$0=$1355$0 | $1358$0;
      var $1359$1=$1355$1 | $1358$1;
      var $1360$0=$1352$0 ^ $1359$0;
      var $1360$1=$1352$1 ^ $1359$1;
      var $1361$0 = _i64Add($1337$0,$1337$1,$1360$0,$1360$1); var $1361$1 = tempRet0;
      var $1362=(($S)|0);
      var $ld$926$0=(($1362)|0);
      var $1363$0=HEAP32[(($ld$926$0)>>2)];
      var $ld$927$1=(($1362+4)|0);
      var $1363$1=HEAP32[(($ld$927$1)>>2)];
      var $1364=(($S+48)|0);
      var $ld$928$0=(($1364)|0);
      var $1365$0=HEAP32[(($ld$928$0)>>2)];
      var $ld$929$1=(($1364+4)|0);
      var $1365$1=HEAP32[(($ld$929$1)>>2)];
      var $1366=(($S+56)|0);
      var $ld$930$0=(($1366)|0);
      var $1367$0=HEAP32[(($ld$930$0)>>2)];
      var $ld$931$1=(($1366+4)|0);
      var $1367$1=HEAP32[(($ld$931$1)>>2)];
      var $1368=(($S)|0);
      var $ld$932$0=(($1368)|0);
      var $1369$0=HEAP32[(($ld$932$0)>>2)];
      var $ld$933$1=(($1368+4)|0);
      var $1369$1=HEAP32[(($ld$933$1)>>2)];
      var $1370$0=$1367$0 ^ $1369$0;
      var $1370$1=$1367$1 ^ $1369$1;
      var $1371$0=$1365$0 & $1370$0;
      var $1371$1=$1365$1 & $1370$1;
      var $1372$0=$1363$0 ^ $1371$0;
      var $1372$1=$1363$1 ^ $1371$1;
      var $1373$0 = _i64Add($1361$0,$1361$1,$1372$0,$1372$1); var $1373$1 = tempRet0;
      var $$etemp$934$0=633803317;
      var $$etemp$934$1=-1680079193;
      var $1374$0 = _i64Add($1373$0,$1373$1,$$etemp$934$0,$$etemp$934$1); var $1374$1 = tempRet0;
      var $1375=(($W+112)|0);
      var $ld$935$0=(($1375)|0);
      var $1376$0=HEAP32[(($ld$935$0)>>2)];
      var $ld$936$1=(($1375+4)|0);
      var $1376$1=HEAP32[(($ld$936$1)>>2)];
      var $1377$0 = _i64Add($1374$0,$1374$1,$1376$0,$1376$1); var $1377$1 = tempRet0;
      var $st$937$0=(($t0)|0);
      HEAP32[(($st$937$0)>>2)]=$1377$0;
      var $st$938$1=(($t0+4)|0);
      HEAP32[(($st$938$1)>>2)]=$1377$1;
      var $1378=(($S+16)|0);
      var $ld$939$0=(($1378)|0);
      var $1379$0=HEAP32[(($ld$939$0)>>2)];
      var $ld$940$1=(($1378+4)|0);
      var $1379$1=HEAP32[(($ld$940$1)>>2)];
      var $1380$0=($1379$0 >>> 28) | ($1379$1 << 4);
      var $1380$1=($1379$1 >>> 28) | (0 << 4);
      var $1381=(($S+16)|0);
      var $ld$941$0=(($1381)|0);
      var $1382$0=HEAP32[(($ld$941$0)>>2)];
      var $ld$942$1=(($1381+4)|0);
      var $1382$1=HEAP32[(($ld$942$1)>>2)];
      var $1383$0=(0 << 4) | (0 >>> 28);
      var $1383$1=($1382$0 << 4) | (0 >>> 28);
      var $1384$0=$1380$0 | $1383$0;
      var $1384$1=$1380$1 | $1383$1;
      var $1385=(($S+16)|0);
      var $ld$943$0=(($1385)|0);
      var $1386$0=HEAP32[(($ld$943$0)>>2)];
      var $ld$944$1=(($1385+4)|0);
      var $1386$1=HEAP32[(($ld$944$1)>>2)];
      var $1387$0=($1386$1 >>> 2) | (0 << 30);
      var $1387$1=(0 >>> 2) | (0 << 30);
      var $1388=(($S+16)|0);
      var $ld$945$0=(($1388)|0);
      var $1389$0=HEAP32[(($ld$945$0)>>2)];
      var $ld$946$1=(($1388+4)|0);
      var $1389$1=HEAP32[(($ld$946$1)>>2)];
      var $1390$0=($1389$0 << 30) | (0 >>> 2);
      var $1390$1=($1389$1 << 30) | ($1389$0 >>> 2);
      var $1391$0=$1387$0 | $1390$0;
      var $1391$1=$1387$1 | $1390$1;
      var $1392$0=$1384$0 ^ $1391$0;
      var $1392$1=$1384$1 ^ $1391$1;
      var $1393=(($S+16)|0);
      var $ld$947$0=(($1393)|0);
      var $1394$0=HEAP32[(($ld$947$0)>>2)];
      var $ld$948$1=(($1393+4)|0);
      var $1394$1=HEAP32[(($ld$948$1)>>2)];
      var $1395$0=($1394$1 >>> 7) | (0 << 25);
      var $1395$1=(0 >>> 7) | (0 << 25);
      var $1396=(($S+16)|0);
      var $ld$949$0=(($1396)|0);
      var $1397$0=HEAP32[(($ld$949$0)>>2)];
      var $ld$950$1=(($1396+4)|0);
      var $1397$1=HEAP32[(($ld$950$1)>>2)];
      var $1398$0=($1397$0 << 25) | (0 >>> 7);
      var $1398$1=($1397$1 << 25) | ($1397$0 >>> 7);
      var $1399$0=$1395$0 | $1398$0;
      var $1399$1=$1395$1 | $1398$1;
      var $1400$0=$1392$0 ^ $1399$0;
      var $1400$1=$1392$1 ^ $1399$1;
      var $1401=(($S+16)|0);
      var $ld$951$0=(($1401)|0);
      var $1402$0=HEAP32[(($ld$951$0)>>2)];
      var $ld$952$1=(($1401+4)|0);
      var $1402$1=HEAP32[(($ld$952$1)>>2)];
      var $1403=(($S+24)|0);
      var $ld$953$0=(($1403)|0);
      var $1404$0=HEAP32[(($ld$953$0)>>2)];
      var $ld$954$1=(($1403+4)|0);
      var $1404$1=HEAP32[(($ld$954$1)>>2)];
      var $1405$0=$1402$0 | $1404$0;
      var $1405$1=$1402$1 | $1404$1;
      var $1406=(($S+32)|0);
      var $ld$955$0=(($1406)|0);
      var $1407$0=HEAP32[(($ld$955$0)>>2)];
      var $ld$956$1=(($1406+4)|0);
      var $1407$1=HEAP32[(($ld$956$1)>>2)];
      var $1408$0=$1405$0 & $1407$0;
      var $1408$1=$1405$1 & $1407$1;
      var $1409=(($S+16)|0);
      var $ld$957$0=(($1409)|0);
      var $1410$0=HEAP32[(($ld$957$0)>>2)];
      var $ld$958$1=(($1409+4)|0);
      var $1410$1=HEAP32[(($ld$958$1)>>2)];
      var $1411=(($S+24)|0);
      var $ld$959$0=(($1411)|0);
      var $1412$0=HEAP32[(($ld$959$0)>>2)];
      var $ld$960$1=(($1411+4)|0);
      var $1412$1=HEAP32[(($ld$960$1)>>2)];
      var $1413$0=$1410$0 & $1412$0;
      var $1413$1=$1410$1 & $1412$1;
      var $1414$0=$1408$0 | $1413$0;
      var $1414$1=$1408$1 | $1413$1;
      var $1415$0 = _i64Add($1400$0,$1400$1,$1414$0,$1414$1); var $1415$1 = tempRet0;
      var $st$961$0=(($t1)|0);
      HEAP32[(($st$961$0)>>2)]=$1415$0;
      var $st$962$1=(($t1+4)|0);
      HEAP32[(($st$962$1)>>2)]=$1415$1;
      var $ld$963$0=(($t0)|0);
      var $1416$0=HEAP32[(($ld$963$0)>>2)];
      var $ld$964$1=(($t0+4)|0);
      var $1416$1=HEAP32[(($ld$964$1)>>2)];
      var $1417=(($S+40)|0);
      var $ld$965$0=(($1417)|0);
      var $1418$0=HEAP32[(($ld$965$0)>>2)];
      var $ld$966$1=(($1417+4)|0);
      var $1418$1=HEAP32[(($ld$966$1)>>2)];
      var $1419$0 = _i64Add($1418$0,$1418$1,$1416$0,$1416$1); var $1419$1 = tempRet0;
      var $st$967$0=(($1417)|0);
      HEAP32[(($st$967$0)>>2)]=$1419$0;
      var $st$968$1=(($1417+4)|0);
      HEAP32[(($st$968$1)>>2)]=$1419$1;
      var $ld$969$0=(($t0)|0);
      var $1420$0=HEAP32[(($ld$969$0)>>2)];
      var $ld$970$1=(($t0+4)|0);
      var $1420$1=HEAP32[(($ld$970$1)>>2)];
      var $ld$971$0=(($t1)|0);
      var $1421$0=HEAP32[(($ld$971$0)>>2)];
      var $ld$972$1=(($t1+4)|0);
      var $1421$1=HEAP32[(($ld$972$1)>>2)];
      var $1422$0 = _i64Add($1420$0,$1420$1,$1421$0,$1421$1); var $1422$1 = tempRet0;
      var $1423=(($S+8)|0);
      var $st$973$0=(($1423)|0);
      HEAP32[(($st$973$0)>>2)]=$1422$0;
      var $st$974$1=(($1423+4)|0);
      HEAP32[(($st$974$1)>>2)]=$1422$1;
      var $1424=(($S)|0);
      var $ld$975$0=(($1424)|0);
      var $1425$0=HEAP32[(($ld$975$0)>>2)];
      var $ld$976$1=(($1424+4)|0);
      var $1425$1=HEAP32[(($ld$976$1)>>2)];
      var $1426=(($S+40)|0);
      var $ld$977$0=(($1426)|0);
      var $1427$0=HEAP32[(($ld$977$0)>>2)];
      var $ld$978$1=(($1426+4)|0);
      var $1427$1=HEAP32[(($ld$978$1)>>2)];
      var $1428$0=($1427$0 >>> 14) | ($1427$1 << 18);
      var $1428$1=($1427$1 >>> 14) | (0 << 18);
      var $1429=(($S+40)|0);
      var $ld$979$0=(($1429)|0);
      var $1430$0=HEAP32[(($ld$979$0)>>2)];
      var $ld$980$1=(($1429+4)|0);
      var $1430$1=HEAP32[(($ld$980$1)>>2)];
      var $1431$0=(0 << 18) | (0 >>> 14);
      var $1431$1=($1430$0 << 18) | (0 >>> 14);
      var $1432$0=$1428$0 | $1431$0;
      var $1432$1=$1428$1 | $1431$1;
      var $1433=(($S+40)|0);
      var $ld$981$0=(($1433)|0);
      var $1434$0=HEAP32[(($ld$981$0)>>2)];
      var $ld$982$1=(($1433+4)|0);
      var $1434$1=HEAP32[(($ld$982$1)>>2)];
      var $1435$0=($1434$0 >>> 18) | ($1434$1 << 14);
      var $1435$1=($1434$1 >>> 18) | (0 << 14);
      var $1436=(($S+40)|0);
      var $ld$983$0=(($1436)|0);
      var $1437$0=HEAP32[(($ld$983$0)>>2)];
      var $ld$984$1=(($1436+4)|0);
      var $1437$1=HEAP32[(($ld$984$1)>>2)];
      var $1438$0=(0 << 14) | (0 >>> 18);
      var $1438$1=($1437$0 << 14) | (0 >>> 18);
      var $1439$0=$1435$0 | $1438$0;
      var $1439$1=$1435$1 | $1438$1;
      var $1440$0=$1432$0 ^ $1439$0;
      var $1440$1=$1432$1 ^ $1439$1;
      var $1441=(($S+40)|0);
      var $ld$985$0=(($1441)|0);
      var $1442$0=HEAP32[(($ld$985$0)>>2)];
      var $ld$986$1=(($1441+4)|0);
      var $1442$1=HEAP32[(($ld$986$1)>>2)];
      var $1443$0=($1442$1 >>> 9) | (0 << 23);
      var $1443$1=(0 >>> 9) | (0 << 23);
      var $1444=(($S+40)|0);
      var $ld$987$0=(($1444)|0);
      var $1445$0=HEAP32[(($ld$987$0)>>2)];
      var $ld$988$1=(($1444+4)|0);
      var $1445$1=HEAP32[(($ld$988$1)>>2)];
      var $1446$0=($1445$0 << 23) | (0 >>> 9);
      var $1446$1=($1445$1 << 23) | ($1445$0 >>> 9);
      var $1447$0=$1443$0 | $1446$0;
      var $1447$1=$1443$1 | $1446$1;
      var $1448$0=$1440$0 ^ $1447$0;
      var $1448$1=$1440$1 ^ $1447$1;
      var $1449$0 = _i64Add($1425$0,$1425$1,$1448$0,$1448$1); var $1449$1 = tempRet0;
      var $1450=(($S+56)|0);
      var $ld$989$0=(($1450)|0);
      var $1451$0=HEAP32[(($ld$989$0)>>2)];
      var $ld$990$1=(($1450+4)|0);
      var $1451$1=HEAP32[(($ld$990$1)>>2)];
      var $1452=(($S+40)|0);
      var $ld$991$0=(($1452)|0);
      var $1453$0=HEAP32[(($ld$991$0)>>2)];
      var $ld$992$1=(($1452+4)|0);
      var $1453$1=HEAP32[(($ld$992$1)>>2)];
      var $1454=(($S+48)|0);
      var $ld$993$0=(($1454)|0);
      var $1455$0=HEAP32[(($ld$993$0)>>2)];
      var $ld$994$1=(($1454+4)|0);
      var $1455$1=HEAP32[(($ld$994$1)>>2)];
      var $1456=(($S+56)|0);
      var $ld$995$0=(($1456)|0);
      var $1457$0=HEAP32[(($ld$995$0)>>2)];
      var $ld$996$1=(($1456+4)|0);
      var $1457$1=HEAP32[(($ld$996$1)>>2)];
      var $1458$0=$1455$0 ^ $1457$0;
      var $1458$1=$1455$1 ^ $1457$1;
      var $1459$0=$1453$0 & $1458$0;
      var $1459$1=$1453$1 & $1458$1;
      var $1460$0=$1451$0 ^ $1459$0;
      var $1460$1=$1451$1 ^ $1459$1;
      var $1461$0 = _i64Add($1449$0,$1449$1,$1460$0,$1460$1); var $1461$1 = tempRet0;
      var $$etemp$997$0=-815192428;
      var $$etemp$997$1=-1046744716;
      var $1462$0 = _i64Add($1461$0,$1461$1,$$etemp$997$0,$$etemp$997$1); var $1462$1 = tempRet0;
      var $1463=(($W+120)|0);
      var $ld$998$0=(($1463)|0);
      var $1464$0=HEAP32[(($ld$998$0)>>2)];
      var $ld$999$1=(($1463+4)|0);
      var $1464$1=HEAP32[(($ld$999$1)>>2)];
      var $1465$0 = _i64Add($1462$0,$1462$1,$1464$0,$1464$1); var $1465$1 = tempRet0;
      var $st$1000$0=(($t0)|0);
      HEAP32[(($st$1000$0)>>2)]=$1465$0;
      var $st$1001$1=(($t0+4)|0);
      HEAP32[(($st$1001$1)>>2)]=$1465$1;
      var $1466=(($S+8)|0);
      var $ld$1002$0=(($1466)|0);
      var $1467$0=HEAP32[(($ld$1002$0)>>2)];
      var $ld$1003$1=(($1466+4)|0);
      var $1467$1=HEAP32[(($ld$1003$1)>>2)];
      var $1468$0=($1467$0 >>> 28) | ($1467$1 << 4);
      var $1468$1=($1467$1 >>> 28) | (0 << 4);
      var $1469=(($S+8)|0);
      var $ld$1004$0=(($1469)|0);
      var $1470$0=HEAP32[(($ld$1004$0)>>2)];
      var $ld$1005$1=(($1469+4)|0);
      var $1470$1=HEAP32[(($ld$1005$1)>>2)];
      var $1471$0=(0 << 4) | (0 >>> 28);
      var $1471$1=($1470$0 << 4) | (0 >>> 28);
      var $1472$0=$1468$0 | $1471$0;
      var $1472$1=$1468$1 | $1471$1;
      var $1473=(($S+8)|0);
      var $ld$1006$0=(($1473)|0);
      var $1474$0=HEAP32[(($ld$1006$0)>>2)];
      var $ld$1007$1=(($1473+4)|0);
      var $1474$1=HEAP32[(($ld$1007$1)>>2)];
      var $1475$0=($1474$1 >>> 2) | (0 << 30);
      var $1475$1=(0 >>> 2) | (0 << 30);
      var $1476=(($S+8)|0);
      var $ld$1008$0=(($1476)|0);
      var $1477$0=HEAP32[(($ld$1008$0)>>2)];
      var $ld$1009$1=(($1476+4)|0);
      var $1477$1=HEAP32[(($ld$1009$1)>>2)];
      var $1478$0=($1477$0 << 30) | (0 >>> 2);
      var $1478$1=($1477$1 << 30) | ($1477$0 >>> 2);
      var $1479$0=$1475$0 | $1478$0;
      var $1479$1=$1475$1 | $1478$1;
      var $1480$0=$1472$0 ^ $1479$0;
      var $1480$1=$1472$1 ^ $1479$1;
      var $1481=(($S+8)|0);
      var $ld$1010$0=(($1481)|0);
      var $1482$0=HEAP32[(($ld$1010$0)>>2)];
      var $ld$1011$1=(($1481+4)|0);
      var $1482$1=HEAP32[(($ld$1011$1)>>2)];
      var $1483$0=($1482$1 >>> 7) | (0 << 25);
      var $1483$1=(0 >>> 7) | (0 << 25);
      var $1484=(($S+8)|0);
      var $ld$1012$0=(($1484)|0);
      var $1485$0=HEAP32[(($ld$1012$0)>>2)];
      var $ld$1013$1=(($1484+4)|0);
      var $1485$1=HEAP32[(($ld$1013$1)>>2)];
      var $1486$0=($1485$0 << 25) | (0 >>> 7);
      var $1486$1=($1485$1 << 25) | ($1485$0 >>> 7);
      var $1487$0=$1483$0 | $1486$0;
      var $1487$1=$1483$1 | $1486$1;
      var $1488$0=$1480$0 ^ $1487$0;
      var $1488$1=$1480$1 ^ $1487$1;
      var $1489=(($S+8)|0);
      var $ld$1014$0=(($1489)|0);
      var $1490$0=HEAP32[(($ld$1014$0)>>2)];
      var $ld$1015$1=(($1489+4)|0);
      var $1490$1=HEAP32[(($ld$1015$1)>>2)];
      var $1491=(($S+16)|0);
      var $ld$1016$0=(($1491)|0);
      var $1492$0=HEAP32[(($ld$1016$0)>>2)];
      var $ld$1017$1=(($1491+4)|0);
      var $1492$1=HEAP32[(($ld$1017$1)>>2)];
      var $1493$0=$1490$0 | $1492$0;
      var $1493$1=$1490$1 | $1492$1;
      var $1494=(($S+24)|0);
      var $ld$1018$0=(($1494)|0);
      var $1495$0=HEAP32[(($ld$1018$0)>>2)];
      var $ld$1019$1=(($1494+4)|0);
      var $1495$1=HEAP32[(($ld$1019$1)>>2)];
      var $1496$0=$1493$0 & $1495$0;
      var $1496$1=$1493$1 & $1495$1;
      var $1497=(($S+8)|0);
      var $ld$1020$0=(($1497)|0);
      var $1498$0=HEAP32[(($ld$1020$0)>>2)];
      var $ld$1021$1=(($1497+4)|0);
      var $1498$1=HEAP32[(($ld$1021$1)>>2)];
      var $1499=(($S+16)|0);
      var $ld$1022$0=(($1499)|0);
      var $1500$0=HEAP32[(($ld$1022$0)>>2)];
      var $ld$1023$1=(($1499+4)|0);
      var $1500$1=HEAP32[(($ld$1023$1)>>2)];
      var $1501$0=$1498$0 & $1500$0;
      var $1501$1=$1498$1 & $1500$1;
      var $1502$0=$1496$0 | $1501$0;
      var $1502$1=$1496$1 | $1501$1;
      var $1503$0 = _i64Add($1488$0,$1488$1,$1502$0,$1502$1); var $1503$1 = tempRet0;
      var $st$1024$0=(($t1)|0);
      HEAP32[(($st$1024$0)>>2)]=$1503$0;
      var $st$1025$1=(($t1+4)|0);
      HEAP32[(($st$1025$1)>>2)]=$1503$1;
      var $ld$1026$0=(($t0)|0);
      var $1504$0=HEAP32[(($ld$1026$0)>>2)];
      var $ld$1027$1=(($t0+4)|0);
      var $1504$1=HEAP32[(($ld$1027$1)>>2)];
      var $1505=(($S+32)|0);
      var $ld$1028$0=(($1505)|0);
      var $1506$0=HEAP32[(($ld$1028$0)>>2)];
      var $ld$1029$1=(($1505+4)|0);
      var $1506$1=HEAP32[(($ld$1029$1)>>2)];
      var $1507$0 = _i64Add($1506$0,$1506$1,$1504$0,$1504$1); var $1507$1 = tempRet0;
      var $st$1030$0=(($1505)|0);
      HEAP32[(($st$1030$0)>>2)]=$1507$0;
      var $st$1031$1=(($1505+4)|0);
      HEAP32[(($st$1031$1)>>2)]=$1507$1;
      var $ld$1032$0=(($t0)|0);
      var $1508$0=HEAP32[(($ld$1032$0)>>2)];
      var $ld$1033$1=(($t0+4)|0);
      var $1508$1=HEAP32[(($ld$1033$1)>>2)];
      var $ld$1034$0=(($t1)|0);
      var $1509$0=HEAP32[(($ld$1034$0)>>2)];
      var $ld$1035$1=(($t1+4)|0);
      var $1509$1=HEAP32[(($ld$1035$1)>>2)];
      var $1510$0 = _i64Add($1508$0,$1508$1,$1509$0,$1509$1); var $1510$1 = tempRet0;
      var $1511=(($S)|0);
      var $st$1036$0=(($1511)|0);
      HEAP32[(($st$1036$0)>>2)]=$1510$0;
      var $st$1037$1=(($1511+4)|0);
      HEAP32[(($st$1037$1)>>2)]=$1510$1;
      var $1512=(($S+56)|0);
      var $ld$1038$0=(($1512)|0);
      var $1513$0=HEAP32[(($ld$1038$0)>>2)];
      var $ld$1039$1=(($1512+4)|0);
      var $1513$1=HEAP32[(($ld$1039$1)>>2)];
      var $1514=(($S+32)|0);
      var $ld$1040$0=(($1514)|0);
      var $1515$0=HEAP32[(($ld$1040$0)>>2)];
      var $ld$1041$1=(($1514+4)|0);
      var $1515$1=HEAP32[(($ld$1041$1)>>2)];
      var $1516$0=($1515$0 >>> 14) | ($1515$1 << 18);
      var $1516$1=($1515$1 >>> 14) | (0 << 18);
      var $1517=(($S+32)|0);
      var $ld$1042$0=(($1517)|0);
      var $1518$0=HEAP32[(($ld$1042$0)>>2)];
      var $ld$1043$1=(($1517+4)|0);
      var $1518$1=HEAP32[(($ld$1043$1)>>2)];
      var $1519$0=(0 << 18) | (0 >>> 14);
      var $1519$1=($1518$0 << 18) | (0 >>> 14);
      var $1520$0=$1516$0 | $1519$0;
      var $1520$1=$1516$1 | $1519$1;
      var $1521=(($S+32)|0);
      var $ld$1044$0=(($1521)|0);
      var $1522$0=HEAP32[(($ld$1044$0)>>2)];
      var $ld$1045$1=(($1521+4)|0);
      var $1522$1=HEAP32[(($ld$1045$1)>>2)];
      var $1523$0=($1522$0 >>> 18) | ($1522$1 << 14);
      var $1523$1=($1522$1 >>> 18) | (0 << 14);
      var $1524=(($S+32)|0);
      var $ld$1046$0=(($1524)|0);
      var $1525$0=HEAP32[(($ld$1046$0)>>2)];
      var $ld$1047$1=(($1524+4)|0);
      var $1525$1=HEAP32[(($ld$1047$1)>>2)];
      var $1526$0=(0 << 14) | (0 >>> 18);
      var $1526$1=($1525$0 << 14) | (0 >>> 18);
      var $1527$0=$1523$0 | $1526$0;
      var $1527$1=$1523$1 | $1526$1;
      var $1528$0=$1520$0 ^ $1527$0;
      var $1528$1=$1520$1 ^ $1527$1;
      var $1529=(($S+32)|0);
      var $ld$1048$0=(($1529)|0);
      var $1530$0=HEAP32[(($ld$1048$0)>>2)];
      var $ld$1049$1=(($1529+4)|0);
      var $1530$1=HEAP32[(($ld$1049$1)>>2)];
      var $1531$0=($1530$1 >>> 9) | (0 << 23);
      var $1531$1=(0 >>> 9) | (0 << 23);
      var $1532=(($S+32)|0);
      var $ld$1050$0=(($1532)|0);
      var $1533$0=HEAP32[(($ld$1050$0)>>2)];
      var $ld$1051$1=(($1532+4)|0);
      var $1533$1=HEAP32[(($ld$1051$1)>>2)];
      var $1534$0=($1533$0 << 23) | (0 >>> 9);
      var $1534$1=($1533$1 << 23) | ($1533$0 >>> 9);
      var $1535$0=$1531$0 | $1534$0;
      var $1535$1=$1531$1 | $1534$1;
      var $1536$0=$1528$0 ^ $1535$0;
      var $1536$1=$1528$1 ^ $1535$1;
      var $1537$0 = _i64Add($1513$0,$1513$1,$1536$0,$1536$1); var $1537$1 = tempRet0;
      var $1538=(($S+48)|0);
      var $ld$1052$0=(($1538)|0);
      var $1539$0=HEAP32[(($ld$1052$0)>>2)];
      var $ld$1053$1=(($1538+4)|0);
      var $1539$1=HEAP32[(($ld$1053$1)>>2)];
      var $1540=(($S+32)|0);
      var $ld$1054$0=(($1540)|0);
      var $1541$0=HEAP32[(($ld$1054$0)>>2)];
      var $ld$1055$1=(($1540+4)|0);
      var $1541$1=HEAP32[(($ld$1055$1)>>2)];
      var $1542=(($S+40)|0);
      var $ld$1056$0=(($1542)|0);
      var $1543$0=HEAP32[(($ld$1056$0)>>2)];
      var $ld$1057$1=(($1542+4)|0);
      var $1543$1=HEAP32[(($ld$1057$1)>>2)];
      var $1544=(($S+48)|0);
      var $ld$1058$0=(($1544)|0);
      var $1545$0=HEAP32[(($ld$1058$0)>>2)];
      var $ld$1059$1=(($1544+4)|0);
      var $1545$1=HEAP32[(($ld$1059$1)>>2)];
      var $1546$0=$1543$0 ^ $1545$0;
      var $1546$1=$1543$1 ^ $1545$1;
      var $1547$0=$1541$0 & $1546$0;
      var $1547$1=$1541$1 & $1546$1;
      var $1548$0=$1539$0 ^ $1547$0;
      var $1548$1=$1539$1 ^ $1547$1;
      var $1549$0 = _i64Add($1537$0,$1537$1,$1548$0,$1548$1); var $1549$1 = tempRet0;
      var $$etemp$1060$0=-1628353838;
      var $$etemp$1060$1=-459576895;
      var $1550$0 = _i64Add($1549$0,$1549$1,$$etemp$1060$0,$$etemp$1060$1); var $1550$1 = tempRet0;
      var $1551=(($W+128)|0);
      var $ld$1061$0=(($1551)|0);
      var $1552$0=HEAP32[(($ld$1061$0)>>2)];
      var $ld$1062$1=(($1551+4)|0);
      var $1552$1=HEAP32[(($ld$1062$1)>>2)];
      var $1553$0 = _i64Add($1550$0,$1550$1,$1552$0,$1552$1); var $1553$1 = tempRet0;
      var $st$1063$0=(($t0)|0);
      HEAP32[(($st$1063$0)>>2)]=$1553$0;
      var $st$1064$1=(($t0+4)|0);
      HEAP32[(($st$1064$1)>>2)]=$1553$1;
      var $1554=(($S)|0);
      var $ld$1065$0=(($1554)|0);
      var $1555$0=HEAP32[(($ld$1065$0)>>2)];
      var $ld$1066$1=(($1554+4)|0);
      var $1555$1=HEAP32[(($ld$1066$1)>>2)];
      var $1556$0=($1555$0 >>> 28) | ($1555$1 << 4);
      var $1556$1=($1555$1 >>> 28) | (0 << 4);
      var $1557=(($S)|0);
      var $ld$1067$0=(($1557)|0);
      var $1558$0=HEAP32[(($ld$1067$0)>>2)];
      var $ld$1068$1=(($1557+4)|0);
      var $1558$1=HEAP32[(($ld$1068$1)>>2)];
      var $1559$0=(0 << 4) | (0 >>> 28);
      var $1559$1=($1558$0 << 4) | (0 >>> 28);
      var $1560$0=$1556$0 | $1559$0;
      var $1560$1=$1556$1 | $1559$1;
      var $1561=(($S)|0);
      var $ld$1069$0=(($1561)|0);
      var $1562$0=HEAP32[(($ld$1069$0)>>2)];
      var $ld$1070$1=(($1561+4)|0);
      var $1562$1=HEAP32[(($ld$1070$1)>>2)];
      var $1563$0=($1562$1 >>> 2) | (0 << 30);
      var $1563$1=(0 >>> 2) | (0 << 30);
      var $1564=(($S)|0);
      var $ld$1071$0=(($1564)|0);
      var $1565$0=HEAP32[(($ld$1071$0)>>2)];
      var $ld$1072$1=(($1564+4)|0);
      var $1565$1=HEAP32[(($ld$1072$1)>>2)];
      var $1566$0=($1565$0 << 30) | (0 >>> 2);
      var $1566$1=($1565$1 << 30) | ($1565$0 >>> 2);
      var $1567$0=$1563$0 | $1566$0;
      var $1567$1=$1563$1 | $1566$1;
      var $1568$0=$1560$0 ^ $1567$0;
      var $1568$1=$1560$1 ^ $1567$1;
      var $1569=(($S)|0);
      var $ld$1073$0=(($1569)|0);
      var $1570$0=HEAP32[(($ld$1073$0)>>2)];
      var $ld$1074$1=(($1569+4)|0);
      var $1570$1=HEAP32[(($ld$1074$1)>>2)];
      var $1571$0=($1570$1 >>> 7) | (0 << 25);
      var $1571$1=(0 >>> 7) | (0 << 25);
      var $1572=(($S)|0);
      var $ld$1075$0=(($1572)|0);
      var $1573$0=HEAP32[(($ld$1075$0)>>2)];
      var $ld$1076$1=(($1572+4)|0);
      var $1573$1=HEAP32[(($ld$1076$1)>>2)];
      var $1574$0=($1573$0 << 25) | (0 >>> 7);
      var $1574$1=($1573$1 << 25) | ($1573$0 >>> 7);
      var $1575$0=$1571$0 | $1574$0;
      var $1575$1=$1571$1 | $1574$1;
      var $1576$0=$1568$0 ^ $1575$0;
      var $1576$1=$1568$1 ^ $1575$1;
      var $1577=(($S)|0);
      var $ld$1077$0=(($1577)|0);
      var $1578$0=HEAP32[(($ld$1077$0)>>2)];
      var $ld$1078$1=(($1577+4)|0);
      var $1578$1=HEAP32[(($ld$1078$1)>>2)];
      var $1579=(($S+8)|0);
      var $ld$1079$0=(($1579)|0);
      var $1580$0=HEAP32[(($ld$1079$0)>>2)];
      var $ld$1080$1=(($1579+4)|0);
      var $1580$1=HEAP32[(($ld$1080$1)>>2)];
      var $1581$0=$1578$0 | $1580$0;
      var $1581$1=$1578$1 | $1580$1;
      var $1582=(($S+16)|0);
      var $ld$1081$0=(($1582)|0);
      var $1583$0=HEAP32[(($ld$1081$0)>>2)];
      var $ld$1082$1=(($1582+4)|0);
      var $1583$1=HEAP32[(($ld$1082$1)>>2)];
      var $1584$0=$1581$0 & $1583$0;
      var $1584$1=$1581$1 & $1583$1;
      var $1585=(($S)|0);
      var $ld$1083$0=(($1585)|0);
      var $1586$0=HEAP32[(($ld$1083$0)>>2)];
      var $ld$1084$1=(($1585+4)|0);
      var $1586$1=HEAP32[(($ld$1084$1)>>2)];
      var $1587=(($S+8)|0);
      var $ld$1085$0=(($1587)|0);
      var $1588$0=HEAP32[(($ld$1085$0)>>2)];
      var $ld$1086$1=(($1587+4)|0);
      var $1588$1=HEAP32[(($ld$1086$1)>>2)];
      var $1589$0=$1586$0 & $1588$0;
      var $1589$1=$1586$1 & $1588$1;
      var $1590$0=$1584$0 | $1589$0;
      var $1590$1=$1584$1 | $1589$1;
      var $1591$0 = _i64Add($1576$0,$1576$1,$1590$0,$1590$1); var $1591$1 = tempRet0;
      var $st$1087$0=(($t1)|0);
      HEAP32[(($st$1087$0)>>2)]=$1591$0;
      var $st$1088$1=(($t1+4)|0);
      HEAP32[(($st$1088$1)>>2)]=$1591$1;
      var $ld$1089$0=(($t0)|0);
      var $1592$0=HEAP32[(($ld$1089$0)>>2)];
      var $ld$1090$1=(($t0+4)|0);
      var $1592$1=HEAP32[(($ld$1090$1)>>2)];
      var $1593=(($S+24)|0);
      var $ld$1091$0=(($1593)|0);
      var $1594$0=HEAP32[(($ld$1091$0)>>2)];
      var $ld$1092$1=(($1593+4)|0);
      var $1594$1=HEAP32[(($ld$1092$1)>>2)];
      var $1595$0 = _i64Add($1594$0,$1594$1,$1592$0,$1592$1); var $1595$1 = tempRet0;
      var $st$1093$0=(($1593)|0);
      HEAP32[(($st$1093$0)>>2)]=$1595$0;
      var $st$1094$1=(($1593+4)|0);
      HEAP32[(($st$1094$1)>>2)]=$1595$1;
      var $ld$1095$0=(($t0)|0);
      var $1596$0=HEAP32[(($ld$1095$0)>>2)];
      var $ld$1096$1=(($t0+4)|0);
      var $1596$1=HEAP32[(($ld$1096$1)>>2)];
      var $ld$1097$0=(($t1)|0);
      var $1597$0=HEAP32[(($ld$1097$0)>>2)];
      var $ld$1098$1=(($t1+4)|0);
      var $1597$1=HEAP32[(($ld$1098$1)>>2)];
      var $1598$0 = _i64Add($1596$0,$1596$1,$1597$0,$1597$1); var $1598$1 = tempRet0;
      var $1599=(($S+56)|0);
      var $st$1099$0=(($1599)|0);
      HEAP32[(($st$1099$0)>>2)]=$1598$0;
      var $st$1100$1=(($1599+4)|0);
      HEAP32[(($st$1100$1)>>2)]=$1598$1;
      var $1600=(($S+48)|0);
      var $ld$1101$0=(($1600)|0);
      var $1601$0=HEAP32[(($ld$1101$0)>>2)];
      var $ld$1102$1=(($1600+4)|0);
      var $1601$1=HEAP32[(($ld$1102$1)>>2)];
      var $1602=(($S+24)|0);
      var $ld$1103$0=(($1602)|0);
      var $1603$0=HEAP32[(($ld$1103$0)>>2)];
      var $ld$1104$1=(($1602+4)|0);
      var $1603$1=HEAP32[(($ld$1104$1)>>2)];
      var $1604$0=($1603$0 >>> 14) | ($1603$1 << 18);
      var $1604$1=($1603$1 >>> 14) | (0 << 18);
      var $1605=(($S+24)|0);
      var $ld$1105$0=(($1605)|0);
      var $1606$0=HEAP32[(($ld$1105$0)>>2)];
      var $ld$1106$1=(($1605+4)|0);
      var $1606$1=HEAP32[(($ld$1106$1)>>2)];
      var $1607$0=(0 << 18) | (0 >>> 14);
      var $1607$1=($1606$0 << 18) | (0 >>> 14);
      var $1608$0=$1604$0 | $1607$0;
      var $1608$1=$1604$1 | $1607$1;
      var $1609=(($S+24)|0);
      var $ld$1107$0=(($1609)|0);
      var $1610$0=HEAP32[(($ld$1107$0)>>2)];
      var $ld$1108$1=(($1609+4)|0);
      var $1610$1=HEAP32[(($ld$1108$1)>>2)];
      var $1611$0=($1610$0 >>> 18) | ($1610$1 << 14);
      var $1611$1=($1610$1 >>> 18) | (0 << 14);
      var $1612=(($S+24)|0);
      var $ld$1109$0=(($1612)|0);
      var $1613$0=HEAP32[(($ld$1109$0)>>2)];
      var $ld$1110$1=(($1612+4)|0);
      var $1613$1=HEAP32[(($ld$1110$1)>>2)];
      var $1614$0=(0 << 14) | (0 >>> 18);
      var $1614$1=($1613$0 << 14) | (0 >>> 18);
      var $1615$0=$1611$0 | $1614$0;
      var $1615$1=$1611$1 | $1614$1;
      var $1616$0=$1608$0 ^ $1615$0;
      var $1616$1=$1608$1 ^ $1615$1;
      var $1617=(($S+24)|0);
      var $ld$1111$0=(($1617)|0);
      var $1618$0=HEAP32[(($ld$1111$0)>>2)];
      var $ld$1112$1=(($1617+4)|0);
      var $1618$1=HEAP32[(($ld$1112$1)>>2)];
      var $1619$0=($1618$1 >>> 9) | (0 << 23);
      var $1619$1=(0 >>> 9) | (0 << 23);
      var $1620=(($S+24)|0);
      var $ld$1113$0=(($1620)|0);
      var $1621$0=HEAP32[(($ld$1113$0)>>2)];
      var $ld$1114$1=(($1620+4)|0);
      var $1621$1=HEAP32[(($ld$1114$1)>>2)];
      var $1622$0=($1621$0 << 23) | (0 >>> 9);
      var $1622$1=($1621$1 << 23) | ($1621$0 >>> 9);
      var $1623$0=$1619$0 | $1622$0;
      var $1623$1=$1619$1 | $1622$1;
      var $1624$0=$1616$0 ^ $1623$0;
      var $1624$1=$1616$1 ^ $1623$1;
      var $1625$0 = _i64Add($1601$0,$1601$1,$1624$0,$1624$1); var $1625$1 = tempRet0;
      var $1626=(($S+40)|0);
      var $ld$1115$0=(($1626)|0);
      var $1627$0=HEAP32[(($ld$1115$0)>>2)];
      var $ld$1116$1=(($1626+4)|0);
      var $1627$1=HEAP32[(($ld$1116$1)>>2)];
      var $1628=(($S+24)|0);
      var $ld$1117$0=(($1628)|0);
      var $1629$0=HEAP32[(($ld$1117$0)>>2)];
      var $ld$1118$1=(($1628+4)|0);
      var $1629$1=HEAP32[(($ld$1118$1)>>2)];
      var $1630=(($S+32)|0);
      var $ld$1119$0=(($1630)|0);
      var $1631$0=HEAP32[(($ld$1119$0)>>2)];
      var $ld$1120$1=(($1630+4)|0);
      var $1631$1=HEAP32[(($ld$1120$1)>>2)];
      var $1632=(($S+40)|0);
      var $ld$1121$0=(($1632)|0);
      var $1633$0=HEAP32[(($ld$1121$0)>>2)];
      var $ld$1122$1=(($1632+4)|0);
      var $1633$1=HEAP32[(($ld$1122$1)>>2)];
      var $1634$0=$1631$0 ^ $1633$0;
      var $1634$1=$1631$1 ^ $1633$1;
      var $1635$0=$1629$0 & $1634$0;
      var $1635$1=$1629$1 & $1634$1;
      var $1636$0=$1627$0 ^ $1635$0;
      var $1636$1=$1627$1 ^ $1635$1;
      var $1637$0 = _i64Add($1625$0,$1625$1,$1636$0,$1636$1); var $1637$1 = tempRet0;
      var $$etemp$1123$0=944711139;
      var $$etemp$1123$1=-272742522;
      var $1638$0 = _i64Add($1637$0,$1637$1,$$etemp$1123$0,$$etemp$1123$1); var $1638$1 = tempRet0;
      var $1639=(($W+136)|0);
      var $ld$1124$0=(($1639)|0);
      var $1640$0=HEAP32[(($ld$1124$0)>>2)];
      var $ld$1125$1=(($1639+4)|0);
      var $1640$1=HEAP32[(($ld$1125$1)>>2)];
      var $1641$0 = _i64Add($1638$0,$1638$1,$1640$0,$1640$1); var $1641$1 = tempRet0;
      var $st$1126$0=(($t0)|0);
      HEAP32[(($st$1126$0)>>2)]=$1641$0;
      var $st$1127$1=(($t0+4)|0);
      HEAP32[(($st$1127$1)>>2)]=$1641$1;
      var $1642=(($S+56)|0);
      var $ld$1128$0=(($1642)|0);
      var $1643$0=HEAP32[(($ld$1128$0)>>2)];
      var $ld$1129$1=(($1642+4)|0);
      var $1643$1=HEAP32[(($ld$1129$1)>>2)];
      var $1644$0=($1643$0 >>> 28) | ($1643$1 << 4);
      var $1644$1=($1643$1 >>> 28) | (0 << 4);
      var $1645=(($S+56)|0);
      var $ld$1130$0=(($1645)|0);
      var $1646$0=HEAP32[(($ld$1130$0)>>2)];
      var $ld$1131$1=(($1645+4)|0);
      var $1646$1=HEAP32[(($ld$1131$1)>>2)];
      var $1647$0=(0 << 4) | (0 >>> 28);
      var $1647$1=($1646$0 << 4) | (0 >>> 28);
      var $1648$0=$1644$0 | $1647$0;
      var $1648$1=$1644$1 | $1647$1;
      var $1649=(($S+56)|0);
      var $ld$1132$0=(($1649)|0);
      var $1650$0=HEAP32[(($ld$1132$0)>>2)];
      var $ld$1133$1=(($1649+4)|0);
      var $1650$1=HEAP32[(($ld$1133$1)>>2)];
      var $1651$0=($1650$1 >>> 2) | (0 << 30);
      var $1651$1=(0 >>> 2) | (0 << 30);
      var $1652=(($S+56)|0);
      var $ld$1134$0=(($1652)|0);
      var $1653$0=HEAP32[(($ld$1134$0)>>2)];
      var $ld$1135$1=(($1652+4)|0);
      var $1653$1=HEAP32[(($ld$1135$1)>>2)];
      var $1654$0=($1653$0 << 30) | (0 >>> 2);
      var $1654$1=($1653$1 << 30) | ($1653$0 >>> 2);
      var $1655$0=$1651$0 | $1654$0;
      var $1655$1=$1651$1 | $1654$1;
      var $1656$0=$1648$0 ^ $1655$0;
      var $1656$1=$1648$1 ^ $1655$1;
      var $1657=(($S+56)|0);
      var $ld$1136$0=(($1657)|0);
      var $1658$0=HEAP32[(($ld$1136$0)>>2)];
      var $ld$1137$1=(($1657+4)|0);
      var $1658$1=HEAP32[(($ld$1137$1)>>2)];
      var $1659$0=($1658$1 >>> 7) | (0 << 25);
      var $1659$1=(0 >>> 7) | (0 << 25);
      var $1660=(($S+56)|0);
      var $ld$1138$0=(($1660)|0);
      var $1661$0=HEAP32[(($ld$1138$0)>>2)];
      var $ld$1139$1=(($1660+4)|0);
      var $1661$1=HEAP32[(($ld$1139$1)>>2)];
      var $1662$0=($1661$0 << 25) | (0 >>> 7);
      var $1662$1=($1661$1 << 25) | ($1661$0 >>> 7);
      var $1663$0=$1659$0 | $1662$0;
      var $1663$1=$1659$1 | $1662$1;
      var $1664$0=$1656$0 ^ $1663$0;
      var $1664$1=$1656$1 ^ $1663$1;
      var $1665=(($S+56)|0);
      var $ld$1140$0=(($1665)|0);
      var $1666$0=HEAP32[(($ld$1140$0)>>2)];
      var $ld$1141$1=(($1665+4)|0);
      var $1666$1=HEAP32[(($ld$1141$1)>>2)];
      var $1667=(($S)|0);
      var $ld$1142$0=(($1667)|0);
      var $1668$0=HEAP32[(($ld$1142$0)>>2)];
      var $ld$1143$1=(($1667+4)|0);
      var $1668$1=HEAP32[(($ld$1143$1)>>2)];
      var $1669$0=$1666$0 | $1668$0;
      var $1669$1=$1666$1 | $1668$1;
      var $1670=(($S+8)|0);
      var $ld$1144$0=(($1670)|0);
      var $1671$0=HEAP32[(($ld$1144$0)>>2)];
      var $ld$1145$1=(($1670+4)|0);
      var $1671$1=HEAP32[(($ld$1145$1)>>2)];
      var $1672$0=$1669$0 & $1671$0;
      var $1672$1=$1669$1 & $1671$1;
      var $1673=(($S+56)|0);
      var $ld$1146$0=(($1673)|0);
      var $1674$0=HEAP32[(($ld$1146$0)>>2)];
      var $ld$1147$1=(($1673+4)|0);
      var $1674$1=HEAP32[(($ld$1147$1)>>2)];
      var $1675=(($S)|0);
      var $ld$1148$0=(($1675)|0);
      var $1676$0=HEAP32[(($ld$1148$0)>>2)];
      var $ld$1149$1=(($1675+4)|0);
      var $1676$1=HEAP32[(($ld$1149$1)>>2)];
      var $1677$0=$1674$0 & $1676$0;
      var $1677$1=$1674$1 & $1676$1;
      var $1678$0=$1672$0 | $1677$0;
      var $1678$1=$1672$1 | $1677$1;
      var $1679$0 = _i64Add($1664$0,$1664$1,$1678$0,$1678$1); var $1679$1 = tempRet0;
      var $st$1150$0=(($t1)|0);
      HEAP32[(($st$1150$0)>>2)]=$1679$0;
      var $st$1151$1=(($t1+4)|0);
      HEAP32[(($st$1151$1)>>2)]=$1679$1;
      var $ld$1152$0=(($t0)|0);
      var $1680$0=HEAP32[(($ld$1152$0)>>2)];
      var $ld$1153$1=(($t0+4)|0);
      var $1680$1=HEAP32[(($ld$1153$1)>>2)];
      var $1681=(($S+16)|0);
      var $ld$1154$0=(($1681)|0);
      var $1682$0=HEAP32[(($ld$1154$0)>>2)];
      var $ld$1155$1=(($1681+4)|0);
      var $1682$1=HEAP32[(($ld$1155$1)>>2)];
      var $1683$0 = _i64Add($1682$0,$1682$1,$1680$0,$1680$1); var $1683$1 = tempRet0;
      var $st$1156$0=(($1681)|0);
      HEAP32[(($st$1156$0)>>2)]=$1683$0;
      var $st$1157$1=(($1681+4)|0);
      HEAP32[(($st$1157$1)>>2)]=$1683$1;
      var $ld$1158$0=(($t0)|0);
      var $1684$0=HEAP32[(($ld$1158$0)>>2)];
      var $ld$1159$1=(($t0+4)|0);
      var $1684$1=HEAP32[(($ld$1159$1)>>2)];
      var $ld$1160$0=(($t1)|0);
      var $1685$0=HEAP32[(($ld$1160$0)>>2)];
      var $ld$1161$1=(($t1+4)|0);
      var $1685$1=HEAP32[(($ld$1161$1)>>2)];
      var $1686$0 = _i64Add($1684$0,$1684$1,$1685$0,$1685$1); var $1686$1 = tempRet0;
      var $1687=(($S+48)|0);
      var $st$1162$0=(($1687)|0);
      HEAP32[(($st$1162$0)>>2)]=$1686$0;
      var $st$1163$1=(($1687+4)|0);
      HEAP32[(($st$1163$1)>>2)]=$1686$1;
      var $1688=(($S+40)|0);
      var $ld$1164$0=(($1688)|0);
      var $1689$0=HEAP32[(($ld$1164$0)>>2)];
      var $ld$1165$1=(($1688+4)|0);
      var $1689$1=HEAP32[(($ld$1165$1)>>2)];
      var $1690=(($S+16)|0);
      var $ld$1166$0=(($1690)|0);
      var $1691$0=HEAP32[(($ld$1166$0)>>2)];
      var $ld$1167$1=(($1690+4)|0);
      var $1691$1=HEAP32[(($ld$1167$1)>>2)];
      var $1692$0=($1691$0 >>> 14) | ($1691$1 << 18);
      var $1692$1=($1691$1 >>> 14) | (0 << 18);
      var $1693=(($S+16)|0);
      var $ld$1168$0=(($1693)|0);
      var $1694$0=HEAP32[(($ld$1168$0)>>2)];
      var $ld$1169$1=(($1693+4)|0);
      var $1694$1=HEAP32[(($ld$1169$1)>>2)];
      var $1695$0=(0 << 18) | (0 >>> 14);
      var $1695$1=($1694$0 << 18) | (0 >>> 14);
      var $1696$0=$1692$0 | $1695$0;
      var $1696$1=$1692$1 | $1695$1;
      var $1697=(($S+16)|0);
      var $ld$1170$0=(($1697)|0);
      var $1698$0=HEAP32[(($ld$1170$0)>>2)];
      var $ld$1171$1=(($1697+4)|0);
      var $1698$1=HEAP32[(($ld$1171$1)>>2)];
      var $1699$0=($1698$0 >>> 18) | ($1698$1 << 14);
      var $1699$1=($1698$1 >>> 18) | (0 << 14);
      var $1700=(($S+16)|0);
      var $ld$1172$0=(($1700)|0);
      var $1701$0=HEAP32[(($ld$1172$0)>>2)];
      var $ld$1173$1=(($1700+4)|0);
      var $1701$1=HEAP32[(($ld$1173$1)>>2)];
      var $1702$0=(0 << 14) | (0 >>> 18);
      var $1702$1=($1701$0 << 14) | (0 >>> 18);
      var $1703$0=$1699$0 | $1702$0;
      var $1703$1=$1699$1 | $1702$1;
      var $1704$0=$1696$0 ^ $1703$0;
      var $1704$1=$1696$1 ^ $1703$1;
      var $1705=(($S+16)|0);
      var $ld$1174$0=(($1705)|0);
      var $1706$0=HEAP32[(($ld$1174$0)>>2)];
      var $ld$1175$1=(($1705+4)|0);
      var $1706$1=HEAP32[(($ld$1175$1)>>2)];
      var $1707$0=($1706$1 >>> 9) | (0 << 23);
      var $1707$1=(0 >>> 9) | (0 << 23);
      var $1708=(($S+16)|0);
      var $ld$1176$0=(($1708)|0);
      var $1709$0=HEAP32[(($ld$1176$0)>>2)];
      var $ld$1177$1=(($1708+4)|0);
      var $1709$1=HEAP32[(($ld$1177$1)>>2)];
      var $1710$0=($1709$0 << 23) | (0 >>> 9);
      var $1710$1=($1709$1 << 23) | ($1709$0 >>> 9);
      var $1711$0=$1707$0 | $1710$0;
      var $1711$1=$1707$1 | $1710$1;
      var $1712$0=$1704$0 ^ $1711$0;
      var $1712$1=$1704$1 ^ $1711$1;
      var $1713$0 = _i64Add($1689$0,$1689$1,$1712$0,$1712$1); var $1713$1 = tempRet0;
      var $1714=(($S+32)|0);
      var $ld$1178$0=(($1714)|0);
      var $1715$0=HEAP32[(($ld$1178$0)>>2)];
      var $ld$1179$1=(($1714+4)|0);
      var $1715$1=HEAP32[(($ld$1179$1)>>2)];
      var $1716=(($S+16)|0);
      var $ld$1180$0=(($1716)|0);
      var $1717$0=HEAP32[(($ld$1180$0)>>2)];
      var $ld$1181$1=(($1716+4)|0);
      var $1717$1=HEAP32[(($ld$1181$1)>>2)];
      var $1718=(($S+24)|0);
      var $ld$1182$0=(($1718)|0);
      var $1719$0=HEAP32[(($ld$1182$0)>>2)];
      var $ld$1183$1=(($1718+4)|0);
      var $1719$1=HEAP32[(($ld$1183$1)>>2)];
      var $1720=(($S+32)|0);
      var $ld$1184$0=(($1720)|0);
      var $1721$0=HEAP32[(($ld$1184$0)>>2)];
      var $ld$1185$1=(($1720+4)|0);
      var $1721$1=HEAP32[(($ld$1185$1)>>2)];
      var $1722$0=$1719$0 ^ $1721$0;
      var $1722$1=$1719$1 ^ $1721$1;
      var $1723$0=$1717$0 & $1722$0;
      var $1723$1=$1717$1 & $1722$1;
      var $1724$0=$1715$0 ^ $1723$0;
      var $1724$1=$1715$1 ^ $1723$1;
      var $1725$0 = _i64Add($1713$0,$1713$1,$1724$0,$1724$1); var $1725$1 = tempRet0;
      var $$etemp$1186$0=-1953704523;
      var $$etemp$1186$1=264347078;
      var $1726$0 = _i64Add($1725$0,$1725$1,$$etemp$1186$0,$$etemp$1186$1); var $1726$1 = tempRet0;
      var $1727=(($W+144)|0);
      var $ld$1187$0=(($1727)|0);
      var $1728$0=HEAP32[(($ld$1187$0)>>2)];
      var $ld$1188$1=(($1727+4)|0);
      var $1728$1=HEAP32[(($ld$1188$1)>>2)];
      var $1729$0 = _i64Add($1726$0,$1726$1,$1728$0,$1728$1); var $1729$1 = tempRet0;
      var $st$1189$0=(($t0)|0);
      HEAP32[(($st$1189$0)>>2)]=$1729$0;
      var $st$1190$1=(($t0+4)|0);
      HEAP32[(($st$1190$1)>>2)]=$1729$1;
      var $1730=(($S+48)|0);
      var $ld$1191$0=(($1730)|0);
      var $1731$0=HEAP32[(($ld$1191$0)>>2)];
      var $ld$1192$1=(($1730+4)|0);
      var $1731$1=HEAP32[(($ld$1192$1)>>2)];
      var $1732$0=($1731$0 >>> 28) | ($1731$1 << 4);
      var $1732$1=($1731$1 >>> 28) | (0 << 4);
      var $1733=(($S+48)|0);
      var $ld$1193$0=(($1733)|0);
      var $1734$0=HEAP32[(($ld$1193$0)>>2)];
      var $ld$1194$1=(($1733+4)|0);
      var $1734$1=HEAP32[(($ld$1194$1)>>2)];
      var $1735$0=(0 << 4) | (0 >>> 28);
      var $1735$1=($1734$0 << 4) | (0 >>> 28);
      var $1736$0=$1732$0 | $1735$0;
      var $1736$1=$1732$1 | $1735$1;
      var $1737=(($S+48)|0);
      var $ld$1195$0=(($1737)|0);
      var $1738$0=HEAP32[(($ld$1195$0)>>2)];
      var $ld$1196$1=(($1737+4)|0);
      var $1738$1=HEAP32[(($ld$1196$1)>>2)];
      var $1739$0=($1738$1 >>> 2) | (0 << 30);
      var $1739$1=(0 >>> 2) | (0 << 30);
      var $1740=(($S+48)|0);
      var $ld$1197$0=(($1740)|0);
      var $1741$0=HEAP32[(($ld$1197$0)>>2)];
      var $ld$1198$1=(($1740+4)|0);
      var $1741$1=HEAP32[(($ld$1198$1)>>2)];
      var $1742$0=($1741$0 << 30) | (0 >>> 2);
      var $1742$1=($1741$1 << 30) | ($1741$0 >>> 2);
      var $1743$0=$1739$0 | $1742$0;
      var $1743$1=$1739$1 | $1742$1;
      var $1744$0=$1736$0 ^ $1743$0;
      var $1744$1=$1736$1 ^ $1743$1;
      var $1745=(($S+48)|0);
      var $ld$1199$0=(($1745)|0);
      var $1746$0=HEAP32[(($ld$1199$0)>>2)];
      var $ld$1200$1=(($1745+4)|0);
      var $1746$1=HEAP32[(($ld$1200$1)>>2)];
      var $1747$0=($1746$1 >>> 7) | (0 << 25);
      var $1747$1=(0 >>> 7) | (0 << 25);
      var $1748=(($S+48)|0);
      var $ld$1201$0=(($1748)|0);
      var $1749$0=HEAP32[(($ld$1201$0)>>2)];
      var $ld$1202$1=(($1748+4)|0);
      var $1749$1=HEAP32[(($ld$1202$1)>>2)];
      var $1750$0=($1749$0 << 25) | (0 >>> 7);
      var $1750$1=($1749$1 << 25) | ($1749$0 >>> 7);
      var $1751$0=$1747$0 | $1750$0;
      var $1751$1=$1747$1 | $1750$1;
      var $1752$0=$1744$0 ^ $1751$0;
      var $1752$1=$1744$1 ^ $1751$1;
      var $1753=(($S+48)|0);
      var $ld$1203$0=(($1753)|0);
      var $1754$0=HEAP32[(($ld$1203$0)>>2)];
      var $ld$1204$1=(($1753+4)|0);
      var $1754$1=HEAP32[(($ld$1204$1)>>2)];
      var $1755=(($S+56)|0);
      var $ld$1205$0=(($1755)|0);
      var $1756$0=HEAP32[(($ld$1205$0)>>2)];
      var $ld$1206$1=(($1755+4)|0);
      var $1756$1=HEAP32[(($ld$1206$1)>>2)];
      var $1757$0=$1754$0 | $1756$0;
      var $1757$1=$1754$1 | $1756$1;
      var $1758=(($S)|0);
      var $ld$1207$0=(($1758)|0);
      var $1759$0=HEAP32[(($ld$1207$0)>>2)];
      var $ld$1208$1=(($1758+4)|0);
      var $1759$1=HEAP32[(($ld$1208$1)>>2)];
      var $1760$0=$1757$0 & $1759$0;
      var $1760$1=$1757$1 & $1759$1;
      var $1761=(($S+48)|0);
      var $ld$1209$0=(($1761)|0);
      var $1762$0=HEAP32[(($ld$1209$0)>>2)];
      var $ld$1210$1=(($1761+4)|0);
      var $1762$1=HEAP32[(($ld$1210$1)>>2)];
      var $1763=(($S+56)|0);
      var $ld$1211$0=(($1763)|0);
      var $1764$0=HEAP32[(($ld$1211$0)>>2)];
      var $ld$1212$1=(($1763+4)|0);
      var $1764$1=HEAP32[(($ld$1212$1)>>2)];
      var $1765$0=$1762$0 & $1764$0;
      var $1765$1=$1762$1 & $1764$1;
      var $1766$0=$1760$0 | $1765$0;
      var $1766$1=$1760$1 | $1765$1;
      var $1767$0 = _i64Add($1752$0,$1752$1,$1766$0,$1766$1); var $1767$1 = tempRet0;
      var $st$1213$0=(($t1)|0);
      HEAP32[(($st$1213$0)>>2)]=$1767$0;
      var $st$1214$1=(($t1+4)|0);
      HEAP32[(($st$1214$1)>>2)]=$1767$1;
      var $ld$1215$0=(($t0)|0);
      var $1768$0=HEAP32[(($ld$1215$0)>>2)];
      var $ld$1216$1=(($t0+4)|0);
      var $1768$1=HEAP32[(($ld$1216$1)>>2)];
      var $1769=(($S+8)|0);
      var $ld$1217$0=(($1769)|0);
      var $1770$0=HEAP32[(($ld$1217$0)>>2)];
      var $ld$1218$1=(($1769+4)|0);
      var $1770$1=HEAP32[(($ld$1218$1)>>2)];
      var $1771$0 = _i64Add($1770$0,$1770$1,$1768$0,$1768$1); var $1771$1 = tempRet0;
      var $st$1219$0=(($1769)|0);
      HEAP32[(($st$1219$0)>>2)]=$1771$0;
      var $st$1220$1=(($1769+4)|0);
      HEAP32[(($st$1220$1)>>2)]=$1771$1;
      var $ld$1221$0=(($t0)|0);
      var $1772$0=HEAP32[(($ld$1221$0)>>2)];
      var $ld$1222$1=(($t0+4)|0);
      var $1772$1=HEAP32[(($ld$1222$1)>>2)];
      var $ld$1223$0=(($t1)|0);
      var $1773$0=HEAP32[(($ld$1223$0)>>2)];
      var $ld$1224$1=(($t1+4)|0);
      var $1773$1=HEAP32[(($ld$1224$1)>>2)];
      var $1774$0 = _i64Add($1772$0,$1772$1,$1773$0,$1773$1); var $1774$1 = tempRet0;
      var $1775=(($S+40)|0);
      var $st$1225$0=(($1775)|0);
      HEAP32[(($st$1225$0)>>2)]=$1774$0;
      var $st$1226$1=(($1775+4)|0);
      HEAP32[(($st$1226$1)>>2)]=$1774$1;
      var $1776=(($S+32)|0);
      var $ld$1227$0=(($1776)|0);
      var $1777$0=HEAP32[(($ld$1227$0)>>2)];
      var $ld$1228$1=(($1776+4)|0);
      var $1777$1=HEAP32[(($ld$1228$1)>>2)];
      var $1778=(($S+8)|0);
      var $ld$1229$0=(($1778)|0);
      var $1779$0=HEAP32[(($ld$1229$0)>>2)];
      var $ld$1230$1=(($1778+4)|0);
      var $1779$1=HEAP32[(($ld$1230$1)>>2)];
      var $1780$0=($1779$0 >>> 14) | ($1779$1 << 18);
      var $1780$1=($1779$1 >>> 14) | (0 << 18);
      var $1781=(($S+8)|0);
      var $ld$1231$0=(($1781)|0);
      var $1782$0=HEAP32[(($ld$1231$0)>>2)];
      var $ld$1232$1=(($1781+4)|0);
      var $1782$1=HEAP32[(($ld$1232$1)>>2)];
      var $1783$0=(0 << 18) | (0 >>> 14);
      var $1783$1=($1782$0 << 18) | (0 >>> 14);
      var $1784$0=$1780$0 | $1783$0;
      var $1784$1=$1780$1 | $1783$1;
      var $1785=(($S+8)|0);
      var $ld$1233$0=(($1785)|0);
      var $1786$0=HEAP32[(($ld$1233$0)>>2)];
      var $ld$1234$1=(($1785+4)|0);
      var $1786$1=HEAP32[(($ld$1234$1)>>2)];
      var $1787$0=($1786$0 >>> 18) | ($1786$1 << 14);
      var $1787$1=($1786$1 >>> 18) | (0 << 14);
      var $1788=(($S+8)|0);
      var $ld$1235$0=(($1788)|0);
      var $1789$0=HEAP32[(($ld$1235$0)>>2)];
      var $ld$1236$1=(($1788+4)|0);
      var $1789$1=HEAP32[(($ld$1236$1)>>2)];
      var $1790$0=(0 << 14) | (0 >>> 18);
      var $1790$1=($1789$0 << 14) | (0 >>> 18);
      var $1791$0=$1787$0 | $1790$0;
      var $1791$1=$1787$1 | $1790$1;
      var $1792$0=$1784$0 ^ $1791$0;
      var $1792$1=$1784$1 ^ $1791$1;
      var $1793=(($S+8)|0);
      var $ld$1237$0=(($1793)|0);
      var $1794$0=HEAP32[(($ld$1237$0)>>2)];
      var $ld$1238$1=(($1793+4)|0);
      var $1794$1=HEAP32[(($ld$1238$1)>>2)];
      var $1795$0=($1794$1 >>> 9) | (0 << 23);
      var $1795$1=(0 >>> 9) | (0 << 23);
      var $1796=(($S+8)|0);
      var $ld$1239$0=(($1796)|0);
      var $1797$0=HEAP32[(($ld$1239$0)>>2)];
      var $ld$1240$1=(($1796+4)|0);
      var $1797$1=HEAP32[(($ld$1240$1)>>2)];
      var $1798$0=($1797$0 << 23) | (0 >>> 9);
      var $1798$1=($1797$1 << 23) | ($1797$0 >>> 9);
      var $1799$0=$1795$0 | $1798$0;
      var $1799$1=$1795$1 | $1798$1;
      var $1800$0=$1792$0 ^ $1799$0;
      var $1800$1=$1792$1 ^ $1799$1;
      var $1801$0 = _i64Add($1777$0,$1777$1,$1800$0,$1800$1); var $1801$1 = tempRet0;
      var $1802=(($S+24)|0);
      var $ld$1241$0=(($1802)|0);
      var $1803$0=HEAP32[(($ld$1241$0)>>2)];
      var $ld$1242$1=(($1802+4)|0);
      var $1803$1=HEAP32[(($ld$1242$1)>>2)];
      var $1804=(($S+8)|0);
      var $ld$1243$0=(($1804)|0);
      var $1805$0=HEAP32[(($ld$1243$0)>>2)];
      var $ld$1244$1=(($1804+4)|0);
      var $1805$1=HEAP32[(($ld$1244$1)>>2)];
      var $1806=(($S+16)|0);
      var $ld$1245$0=(($1806)|0);
      var $1807$0=HEAP32[(($ld$1245$0)>>2)];
      var $ld$1246$1=(($1806+4)|0);
      var $1807$1=HEAP32[(($ld$1246$1)>>2)];
      var $1808=(($S+24)|0);
      var $ld$1247$0=(($1808)|0);
      var $1809$0=HEAP32[(($ld$1247$0)>>2)];
      var $ld$1248$1=(($1808+4)|0);
      var $1809$1=HEAP32[(($ld$1248$1)>>2)];
      var $1810$0=$1807$0 ^ $1809$0;
      var $1810$1=$1807$1 ^ $1809$1;
      var $1811$0=$1805$0 & $1810$0;
      var $1811$1=$1805$1 & $1810$1;
      var $1812$0=$1803$0 ^ $1811$0;
      var $1812$1=$1803$1 ^ $1811$1;
      var $1813$0 = _i64Add($1801$0,$1801$1,$1812$0,$1812$1); var $1813$1 = tempRet0;
      var $$etemp$1249$0=2007800933;
      var $$etemp$1249$1=604807628;
      var $1814$0 = _i64Add($1813$0,$1813$1,$$etemp$1249$0,$$etemp$1249$1); var $1814$1 = tempRet0;
      var $1815=(($W+152)|0);
      var $ld$1250$0=(($1815)|0);
      var $1816$0=HEAP32[(($ld$1250$0)>>2)];
      var $ld$1251$1=(($1815+4)|0);
      var $1816$1=HEAP32[(($ld$1251$1)>>2)];
      var $1817$0 = _i64Add($1814$0,$1814$1,$1816$0,$1816$1); var $1817$1 = tempRet0;
      var $st$1252$0=(($t0)|0);
      HEAP32[(($st$1252$0)>>2)]=$1817$0;
      var $st$1253$1=(($t0+4)|0);
      HEAP32[(($st$1253$1)>>2)]=$1817$1;
      var $1818=(($S+40)|0);
      var $ld$1254$0=(($1818)|0);
      var $1819$0=HEAP32[(($ld$1254$0)>>2)];
      var $ld$1255$1=(($1818+4)|0);
      var $1819$1=HEAP32[(($ld$1255$1)>>2)];
      var $1820$0=($1819$0 >>> 28) | ($1819$1 << 4);
      var $1820$1=($1819$1 >>> 28) | (0 << 4);
      var $1821=(($S+40)|0);
      var $ld$1256$0=(($1821)|0);
      var $1822$0=HEAP32[(($ld$1256$0)>>2)];
      var $ld$1257$1=(($1821+4)|0);
      var $1822$1=HEAP32[(($ld$1257$1)>>2)];
      var $1823$0=(0 << 4) | (0 >>> 28);
      var $1823$1=($1822$0 << 4) | (0 >>> 28);
      var $1824$0=$1820$0 | $1823$0;
      var $1824$1=$1820$1 | $1823$1;
      var $1825=(($S+40)|0);
      var $ld$1258$0=(($1825)|0);
      var $1826$0=HEAP32[(($ld$1258$0)>>2)];
      var $ld$1259$1=(($1825+4)|0);
      var $1826$1=HEAP32[(($ld$1259$1)>>2)];
      var $1827$0=($1826$1 >>> 2) | (0 << 30);
      var $1827$1=(0 >>> 2) | (0 << 30);
      var $1828=(($S+40)|0);
      var $ld$1260$0=(($1828)|0);
      var $1829$0=HEAP32[(($ld$1260$0)>>2)];
      var $ld$1261$1=(($1828+4)|0);
      var $1829$1=HEAP32[(($ld$1261$1)>>2)];
      var $1830$0=($1829$0 << 30) | (0 >>> 2);
      var $1830$1=($1829$1 << 30) | ($1829$0 >>> 2);
      var $1831$0=$1827$0 | $1830$0;
      var $1831$1=$1827$1 | $1830$1;
      var $1832$0=$1824$0 ^ $1831$0;
      var $1832$1=$1824$1 ^ $1831$1;
      var $1833=(($S+40)|0);
      var $ld$1262$0=(($1833)|0);
      var $1834$0=HEAP32[(($ld$1262$0)>>2)];
      var $ld$1263$1=(($1833+4)|0);
      var $1834$1=HEAP32[(($ld$1263$1)>>2)];
      var $1835$0=($1834$1 >>> 7) | (0 << 25);
      var $1835$1=(0 >>> 7) | (0 << 25);
      var $1836=(($S+40)|0);
      var $ld$1264$0=(($1836)|0);
      var $1837$0=HEAP32[(($ld$1264$0)>>2)];
      var $ld$1265$1=(($1836+4)|0);
      var $1837$1=HEAP32[(($ld$1265$1)>>2)];
      var $1838$0=($1837$0 << 25) | (0 >>> 7);
      var $1838$1=($1837$1 << 25) | ($1837$0 >>> 7);
      var $1839$0=$1835$0 | $1838$0;
      var $1839$1=$1835$1 | $1838$1;
      var $1840$0=$1832$0 ^ $1839$0;
      var $1840$1=$1832$1 ^ $1839$1;
      var $1841=(($S+40)|0);
      var $ld$1266$0=(($1841)|0);
      var $1842$0=HEAP32[(($ld$1266$0)>>2)];
      var $ld$1267$1=(($1841+4)|0);
      var $1842$1=HEAP32[(($ld$1267$1)>>2)];
      var $1843=(($S+48)|0);
      var $ld$1268$0=(($1843)|0);
      var $1844$0=HEAP32[(($ld$1268$0)>>2)];
      var $ld$1269$1=(($1843+4)|0);
      var $1844$1=HEAP32[(($ld$1269$1)>>2)];
      var $1845$0=$1842$0 | $1844$0;
      var $1845$1=$1842$1 | $1844$1;
      var $1846=(($S+56)|0);
      var $ld$1270$0=(($1846)|0);
      var $1847$0=HEAP32[(($ld$1270$0)>>2)];
      var $ld$1271$1=(($1846+4)|0);
      var $1847$1=HEAP32[(($ld$1271$1)>>2)];
      var $1848$0=$1845$0 & $1847$0;
      var $1848$1=$1845$1 & $1847$1;
      var $1849=(($S+40)|0);
      var $ld$1272$0=(($1849)|0);
      var $1850$0=HEAP32[(($ld$1272$0)>>2)];
      var $ld$1273$1=(($1849+4)|0);
      var $1850$1=HEAP32[(($ld$1273$1)>>2)];
      var $1851=(($S+48)|0);
      var $ld$1274$0=(($1851)|0);
      var $1852$0=HEAP32[(($ld$1274$0)>>2)];
      var $ld$1275$1=(($1851+4)|0);
      var $1852$1=HEAP32[(($ld$1275$1)>>2)];
      var $1853$0=$1850$0 & $1852$0;
      var $1853$1=$1850$1 & $1852$1;
      var $1854$0=$1848$0 | $1853$0;
      var $1854$1=$1848$1 | $1853$1;
      var $1855$0 = _i64Add($1840$0,$1840$1,$1854$0,$1854$1); var $1855$1 = tempRet0;
      var $st$1276$0=(($t1)|0);
      HEAP32[(($st$1276$0)>>2)]=$1855$0;
      var $st$1277$1=(($t1+4)|0);
      HEAP32[(($st$1277$1)>>2)]=$1855$1;
      var $ld$1278$0=(($t0)|0);
      var $1856$0=HEAP32[(($ld$1278$0)>>2)];
      var $ld$1279$1=(($t0+4)|0);
      var $1856$1=HEAP32[(($ld$1279$1)>>2)];
      var $1857=(($S)|0);
      var $ld$1280$0=(($1857)|0);
      var $1858$0=HEAP32[(($ld$1280$0)>>2)];
      var $ld$1281$1=(($1857+4)|0);
      var $1858$1=HEAP32[(($ld$1281$1)>>2)];
      var $1859$0 = _i64Add($1858$0,$1858$1,$1856$0,$1856$1); var $1859$1 = tempRet0;
      var $st$1282$0=(($1857)|0);
      HEAP32[(($st$1282$0)>>2)]=$1859$0;
      var $st$1283$1=(($1857+4)|0);
      HEAP32[(($st$1283$1)>>2)]=$1859$1;
      var $ld$1284$0=(($t0)|0);
      var $1860$0=HEAP32[(($ld$1284$0)>>2)];
      var $ld$1285$1=(($t0+4)|0);
      var $1860$1=HEAP32[(($ld$1285$1)>>2)];
      var $ld$1286$0=(($t1)|0);
      var $1861$0=HEAP32[(($ld$1286$0)>>2)];
      var $ld$1287$1=(($t1+4)|0);
      var $1861$1=HEAP32[(($ld$1287$1)>>2)];
      var $1862$0 = _i64Add($1860$0,$1860$1,$1861$0,$1861$1); var $1862$1 = tempRet0;
      var $1863=(($S+32)|0);
      var $st$1288$0=(($1863)|0);
      HEAP32[(($st$1288$0)>>2)]=$1862$0;
      var $st$1289$1=(($1863+4)|0);
      HEAP32[(($st$1289$1)>>2)]=$1862$1;
      var $1864=(($S+24)|0);
      var $ld$1290$0=(($1864)|0);
      var $1865$0=HEAP32[(($ld$1290$0)>>2)];
      var $ld$1291$1=(($1864+4)|0);
      var $1865$1=HEAP32[(($ld$1291$1)>>2)];
      var $1866=(($S)|0);
      var $ld$1292$0=(($1866)|0);
      var $1867$0=HEAP32[(($ld$1292$0)>>2)];
      var $ld$1293$1=(($1866+4)|0);
      var $1867$1=HEAP32[(($ld$1293$1)>>2)];
      var $1868$0=($1867$0 >>> 14) | ($1867$1 << 18);
      var $1868$1=($1867$1 >>> 14) | (0 << 18);
      var $1869=(($S)|0);
      var $ld$1294$0=(($1869)|0);
      var $1870$0=HEAP32[(($ld$1294$0)>>2)];
      var $ld$1295$1=(($1869+4)|0);
      var $1870$1=HEAP32[(($ld$1295$1)>>2)];
      var $1871$0=(0 << 18) | (0 >>> 14);
      var $1871$1=($1870$0 << 18) | (0 >>> 14);
      var $1872$0=$1868$0 | $1871$0;
      var $1872$1=$1868$1 | $1871$1;
      var $1873=(($S)|0);
      var $ld$1296$0=(($1873)|0);
      var $1874$0=HEAP32[(($ld$1296$0)>>2)];
      var $ld$1297$1=(($1873+4)|0);
      var $1874$1=HEAP32[(($ld$1297$1)>>2)];
      var $1875$0=($1874$0 >>> 18) | ($1874$1 << 14);
      var $1875$1=($1874$1 >>> 18) | (0 << 14);
      var $1876=(($S)|0);
      var $ld$1298$0=(($1876)|0);
      var $1877$0=HEAP32[(($ld$1298$0)>>2)];
      var $ld$1299$1=(($1876+4)|0);
      var $1877$1=HEAP32[(($ld$1299$1)>>2)];
      var $1878$0=(0 << 14) | (0 >>> 18);
      var $1878$1=($1877$0 << 14) | (0 >>> 18);
      var $1879$0=$1875$0 | $1878$0;
      var $1879$1=$1875$1 | $1878$1;
      var $1880$0=$1872$0 ^ $1879$0;
      var $1880$1=$1872$1 ^ $1879$1;
      var $1881=(($S)|0);
      var $ld$1300$0=(($1881)|0);
      var $1882$0=HEAP32[(($ld$1300$0)>>2)];
      var $ld$1301$1=(($1881+4)|0);
      var $1882$1=HEAP32[(($ld$1301$1)>>2)];
      var $1883$0=($1882$1 >>> 9) | (0 << 23);
      var $1883$1=(0 >>> 9) | (0 << 23);
      var $1884=(($S)|0);
      var $ld$1302$0=(($1884)|0);
      var $1885$0=HEAP32[(($ld$1302$0)>>2)];
      var $ld$1303$1=(($1884+4)|0);
      var $1885$1=HEAP32[(($ld$1303$1)>>2)];
      var $1886$0=($1885$0 << 23) | (0 >>> 9);
      var $1886$1=($1885$1 << 23) | ($1885$0 >>> 9);
      var $1887$0=$1883$0 | $1886$0;
      var $1887$1=$1883$1 | $1886$1;
      var $1888$0=$1880$0 ^ $1887$0;
      var $1888$1=$1880$1 ^ $1887$1;
      var $1889$0 = _i64Add($1865$0,$1865$1,$1888$0,$1888$1); var $1889$1 = tempRet0;
      var $1890=(($S+16)|0);
      var $ld$1304$0=(($1890)|0);
      var $1891$0=HEAP32[(($ld$1304$0)>>2)];
      var $ld$1305$1=(($1890+4)|0);
      var $1891$1=HEAP32[(($ld$1305$1)>>2)];
      var $1892=(($S)|0);
      var $ld$1306$0=(($1892)|0);
      var $1893$0=HEAP32[(($ld$1306$0)>>2)];
      var $ld$1307$1=(($1892+4)|0);
      var $1893$1=HEAP32[(($ld$1307$1)>>2)];
      var $1894=(($S+8)|0);
      var $ld$1308$0=(($1894)|0);
      var $1895$0=HEAP32[(($ld$1308$0)>>2)];
      var $ld$1309$1=(($1894+4)|0);
      var $1895$1=HEAP32[(($ld$1309$1)>>2)];
      var $1896=(($S+16)|0);
      var $ld$1310$0=(($1896)|0);
      var $1897$0=HEAP32[(($ld$1310$0)>>2)];
      var $ld$1311$1=(($1896+4)|0);
      var $1897$1=HEAP32[(($ld$1311$1)>>2)];
      var $1898$0=$1895$0 ^ $1897$0;
      var $1898$1=$1895$1 ^ $1897$1;
      var $1899$0=$1893$0 & $1898$0;
      var $1899$1=$1893$1 & $1898$1;
      var $1900$0=$1891$0 ^ $1899$0;
      var $1900$1=$1891$1 ^ $1899$1;
      var $1901$0 = _i64Add($1889$0,$1889$1,$1900$0,$1900$1); var $1901$1 = tempRet0;
      var $$etemp$1312$0=1495990901;
      var $$etemp$1312$1=770255983;
      var $1902$0 = _i64Add($1901$0,$1901$1,$$etemp$1312$0,$$etemp$1312$1); var $1902$1 = tempRet0;
      var $1903=(($W+160)|0);
      var $ld$1313$0=(($1903)|0);
      var $1904$0=HEAP32[(($ld$1313$0)>>2)];
      var $ld$1314$1=(($1903+4)|0);
      var $1904$1=HEAP32[(($ld$1314$1)>>2)];
      var $1905$0 = _i64Add($1902$0,$1902$1,$1904$0,$1904$1); var $1905$1 = tempRet0;
      var $st$1315$0=(($t0)|0);
      HEAP32[(($st$1315$0)>>2)]=$1905$0;
      var $st$1316$1=(($t0+4)|0);
      HEAP32[(($st$1316$1)>>2)]=$1905$1;
      var $1906=(($S+32)|0);
      var $ld$1317$0=(($1906)|0);
      var $1907$0=HEAP32[(($ld$1317$0)>>2)];
      var $ld$1318$1=(($1906+4)|0);
      var $1907$1=HEAP32[(($ld$1318$1)>>2)];
      var $1908$0=($1907$0 >>> 28) | ($1907$1 << 4);
      var $1908$1=($1907$1 >>> 28) | (0 << 4);
      var $1909=(($S+32)|0);
      var $ld$1319$0=(($1909)|0);
      var $1910$0=HEAP32[(($ld$1319$0)>>2)];
      var $ld$1320$1=(($1909+4)|0);
      var $1910$1=HEAP32[(($ld$1320$1)>>2)];
      var $1911$0=(0 << 4) | (0 >>> 28);
      var $1911$1=($1910$0 << 4) | (0 >>> 28);
      var $1912$0=$1908$0 | $1911$0;
      var $1912$1=$1908$1 | $1911$1;
      var $1913=(($S+32)|0);
      var $ld$1321$0=(($1913)|0);
      var $1914$0=HEAP32[(($ld$1321$0)>>2)];
      var $ld$1322$1=(($1913+4)|0);
      var $1914$1=HEAP32[(($ld$1322$1)>>2)];
      var $1915$0=($1914$1 >>> 2) | (0 << 30);
      var $1915$1=(0 >>> 2) | (0 << 30);
      var $1916=(($S+32)|0);
      var $ld$1323$0=(($1916)|0);
      var $1917$0=HEAP32[(($ld$1323$0)>>2)];
      var $ld$1324$1=(($1916+4)|0);
      var $1917$1=HEAP32[(($ld$1324$1)>>2)];
      var $1918$0=($1917$0 << 30) | (0 >>> 2);
      var $1918$1=($1917$1 << 30) | ($1917$0 >>> 2);
      var $1919$0=$1915$0 | $1918$0;
      var $1919$1=$1915$1 | $1918$1;
      var $1920$0=$1912$0 ^ $1919$0;
      var $1920$1=$1912$1 ^ $1919$1;
      var $1921=(($S+32)|0);
      var $ld$1325$0=(($1921)|0);
      var $1922$0=HEAP32[(($ld$1325$0)>>2)];
      var $ld$1326$1=(($1921+4)|0);
      var $1922$1=HEAP32[(($ld$1326$1)>>2)];
      var $1923$0=($1922$1 >>> 7) | (0 << 25);
      var $1923$1=(0 >>> 7) | (0 << 25);
      var $1924=(($S+32)|0);
      var $ld$1327$0=(($1924)|0);
      var $1925$0=HEAP32[(($ld$1327$0)>>2)];
      var $ld$1328$1=(($1924+4)|0);
      var $1925$1=HEAP32[(($ld$1328$1)>>2)];
      var $1926$0=($1925$0 << 25) | (0 >>> 7);
      var $1926$1=($1925$1 << 25) | ($1925$0 >>> 7);
      var $1927$0=$1923$0 | $1926$0;
      var $1927$1=$1923$1 | $1926$1;
      var $1928$0=$1920$0 ^ $1927$0;
      var $1928$1=$1920$1 ^ $1927$1;
      var $1929=(($S+32)|0);
      var $ld$1329$0=(($1929)|0);
      var $1930$0=HEAP32[(($ld$1329$0)>>2)];
      var $ld$1330$1=(($1929+4)|0);
      var $1930$1=HEAP32[(($ld$1330$1)>>2)];
      var $1931=(($S+40)|0);
      var $ld$1331$0=(($1931)|0);
      var $1932$0=HEAP32[(($ld$1331$0)>>2)];
      var $ld$1332$1=(($1931+4)|0);
      var $1932$1=HEAP32[(($ld$1332$1)>>2)];
      var $1933$0=$1930$0 | $1932$0;
      var $1933$1=$1930$1 | $1932$1;
      var $1934=(($S+48)|0);
      var $ld$1333$0=(($1934)|0);
      var $1935$0=HEAP32[(($ld$1333$0)>>2)];
      var $ld$1334$1=(($1934+4)|0);
      var $1935$1=HEAP32[(($ld$1334$1)>>2)];
      var $1936$0=$1933$0 & $1935$0;
      var $1936$1=$1933$1 & $1935$1;
      var $1937=(($S+32)|0);
      var $ld$1335$0=(($1937)|0);
      var $1938$0=HEAP32[(($ld$1335$0)>>2)];
      var $ld$1336$1=(($1937+4)|0);
      var $1938$1=HEAP32[(($ld$1336$1)>>2)];
      var $1939=(($S+40)|0);
      var $ld$1337$0=(($1939)|0);
      var $1940$0=HEAP32[(($ld$1337$0)>>2)];
      var $ld$1338$1=(($1939+4)|0);
      var $1940$1=HEAP32[(($ld$1338$1)>>2)];
      var $1941$0=$1938$0 & $1940$0;
      var $1941$1=$1938$1 & $1940$1;
      var $1942$0=$1936$0 | $1941$0;
      var $1942$1=$1936$1 | $1941$1;
      var $1943$0 = _i64Add($1928$0,$1928$1,$1942$0,$1942$1); var $1943$1 = tempRet0;
      var $st$1339$0=(($t1)|0);
      HEAP32[(($st$1339$0)>>2)]=$1943$0;
      var $st$1340$1=(($t1+4)|0);
      HEAP32[(($st$1340$1)>>2)]=$1943$1;
      var $ld$1341$0=(($t0)|0);
      var $1944$0=HEAP32[(($ld$1341$0)>>2)];
      var $ld$1342$1=(($t0+4)|0);
      var $1944$1=HEAP32[(($ld$1342$1)>>2)];
      var $1945=(($S+56)|0);
      var $ld$1343$0=(($1945)|0);
      var $1946$0=HEAP32[(($ld$1343$0)>>2)];
      var $ld$1344$1=(($1945+4)|0);
      var $1946$1=HEAP32[(($ld$1344$1)>>2)];
      var $1947$0 = _i64Add($1946$0,$1946$1,$1944$0,$1944$1); var $1947$1 = tempRet0;
      var $st$1345$0=(($1945)|0);
      HEAP32[(($st$1345$0)>>2)]=$1947$0;
      var $st$1346$1=(($1945+4)|0);
      HEAP32[(($st$1346$1)>>2)]=$1947$1;
      var $ld$1347$0=(($t0)|0);
      var $1948$0=HEAP32[(($ld$1347$0)>>2)];
      var $ld$1348$1=(($t0+4)|0);
      var $1948$1=HEAP32[(($ld$1348$1)>>2)];
      var $ld$1349$0=(($t1)|0);
      var $1949$0=HEAP32[(($ld$1349$0)>>2)];
      var $ld$1350$1=(($t1+4)|0);
      var $1949$1=HEAP32[(($ld$1350$1)>>2)];
      var $1950$0 = _i64Add($1948$0,$1948$1,$1949$0,$1949$1); var $1950$1 = tempRet0;
      var $1951=(($S+24)|0);
      var $st$1351$0=(($1951)|0);
      HEAP32[(($st$1351$0)>>2)]=$1950$0;
      var $st$1352$1=(($1951+4)|0);
      HEAP32[(($st$1352$1)>>2)]=$1950$1;
      var $1952=(($S+16)|0);
      var $ld$1353$0=(($1952)|0);
      var $1953$0=HEAP32[(($ld$1353$0)>>2)];
      var $ld$1354$1=(($1952+4)|0);
      var $1953$1=HEAP32[(($ld$1354$1)>>2)];
      var $1954=(($S+56)|0);
      var $ld$1355$0=(($1954)|0);
      var $1955$0=HEAP32[(($ld$1355$0)>>2)];
      var $ld$1356$1=(($1954+4)|0);
      var $1955$1=HEAP32[(($ld$1356$1)>>2)];
      var $1956$0=($1955$0 >>> 14) | ($1955$1 << 18);
      var $1956$1=($1955$1 >>> 14) | (0 << 18);
      var $1957=(($S+56)|0);
      var $ld$1357$0=(($1957)|0);
      var $1958$0=HEAP32[(($ld$1357$0)>>2)];
      var $ld$1358$1=(($1957+4)|0);
      var $1958$1=HEAP32[(($ld$1358$1)>>2)];
      var $1959$0=(0 << 18) | (0 >>> 14);
      var $1959$1=($1958$0 << 18) | (0 >>> 14);
      var $1960$0=$1956$0 | $1959$0;
      var $1960$1=$1956$1 | $1959$1;
      var $1961=(($S+56)|0);
      var $ld$1359$0=(($1961)|0);
      var $1962$0=HEAP32[(($ld$1359$0)>>2)];
      var $ld$1360$1=(($1961+4)|0);
      var $1962$1=HEAP32[(($ld$1360$1)>>2)];
      var $1963$0=($1962$0 >>> 18) | ($1962$1 << 14);
      var $1963$1=($1962$1 >>> 18) | (0 << 14);
      var $1964=(($S+56)|0);
      var $ld$1361$0=(($1964)|0);
      var $1965$0=HEAP32[(($ld$1361$0)>>2)];
      var $ld$1362$1=(($1964+4)|0);
      var $1965$1=HEAP32[(($ld$1362$1)>>2)];
      var $1966$0=(0 << 14) | (0 >>> 18);
      var $1966$1=($1965$0 << 14) | (0 >>> 18);
      var $1967$0=$1963$0 | $1966$0;
      var $1967$1=$1963$1 | $1966$1;
      var $1968$0=$1960$0 ^ $1967$0;
      var $1968$1=$1960$1 ^ $1967$1;
      var $1969=(($S+56)|0);
      var $ld$1363$0=(($1969)|0);
      var $1970$0=HEAP32[(($ld$1363$0)>>2)];
      var $ld$1364$1=(($1969+4)|0);
      var $1970$1=HEAP32[(($ld$1364$1)>>2)];
      var $1971$0=($1970$1 >>> 9) | (0 << 23);
      var $1971$1=(0 >>> 9) | (0 << 23);
      var $1972=(($S+56)|0);
      var $ld$1365$0=(($1972)|0);
      var $1973$0=HEAP32[(($ld$1365$0)>>2)];
      var $ld$1366$1=(($1972+4)|0);
      var $1973$1=HEAP32[(($ld$1366$1)>>2)];
      var $1974$0=($1973$0 << 23) | (0 >>> 9);
      var $1974$1=($1973$1 << 23) | ($1973$0 >>> 9);
      var $1975$0=$1971$0 | $1974$0;
      var $1975$1=$1971$1 | $1974$1;
      var $1976$0=$1968$0 ^ $1975$0;
      var $1976$1=$1968$1 ^ $1975$1;
      var $1977$0 = _i64Add($1953$0,$1953$1,$1976$0,$1976$1); var $1977$1 = tempRet0;
      var $1978=(($S+8)|0);
      var $ld$1367$0=(($1978)|0);
      var $1979$0=HEAP32[(($ld$1367$0)>>2)];
      var $ld$1368$1=(($1978+4)|0);
      var $1979$1=HEAP32[(($ld$1368$1)>>2)];
      var $1980=(($S+56)|0);
      var $ld$1369$0=(($1980)|0);
      var $1981$0=HEAP32[(($ld$1369$0)>>2)];
      var $ld$1370$1=(($1980+4)|0);
      var $1981$1=HEAP32[(($ld$1370$1)>>2)];
      var $1982=(($S)|0);
      var $ld$1371$0=(($1982)|0);
      var $1983$0=HEAP32[(($ld$1371$0)>>2)];
      var $ld$1372$1=(($1982+4)|0);
      var $1983$1=HEAP32[(($ld$1372$1)>>2)];
      var $1984=(($S+8)|0);
      var $ld$1373$0=(($1984)|0);
      var $1985$0=HEAP32[(($ld$1373$0)>>2)];
      var $ld$1374$1=(($1984+4)|0);
      var $1985$1=HEAP32[(($ld$1374$1)>>2)];
      var $1986$0=$1983$0 ^ $1985$0;
      var $1986$1=$1983$1 ^ $1985$1;
      var $1987$0=$1981$0 & $1986$0;
      var $1987$1=$1981$1 & $1986$1;
      var $1988$0=$1979$0 ^ $1987$0;
      var $1988$1=$1979$1 ^ $1987$1;
      var $1989$0 = _i64Add($1977$0,$1977$1,$1988$0,$1988$1); var $1989$1 = tempRet0;
      var $$etemp$1375$0=1856431235;
      var $$etemp$1375$1=1249150122;
      var $1990$0 = _i64Add($1989$0,$1989$1,$$etemp$1375$0,$$etemp$1375$1); var $1990$1 = tempRet0;
      var $1991=(($W+168)|0);
      var $ld$1376$0=(($1991)|0);
      var $1992$0=HEAP32[(($ld$1376$0)>>2)];
      var $ld$1377$1=(($1991+4)|0);
      var $1992$1=HEAP32[(($ld$1377$1)>>2)];
      var $1993$0 = _i64Add($1990$0,$1990$1,$1992$0,$1992$1); var $1993$1 = tempRet0;
      var $st$1378$0=(($t0)|0);
      HEAP32[(($st$1378$0)>>2)]=$1993$0;
      var $st$1379$1=(($t0+4)|0);
      HEAP32[(($st$1379$1)>>2)]=$1993$1;
      var $1994=(($S+24)|0);
      var $ld$1380$0=(($1994)|0);
      var $1995$0=HEAP32[(($ld$1380$0)>>2)];
      var $ld$1381$1=(($1994+4)|0);
      var $1995$1=HEAP32[(($ld$1381$1)>>2)];
      var $1996$0=($1995$0 >>> 28) | ($1995$1 << 4);
      var $1996$1=($1995$1 >>> 28) | (0 << 4);
      var $1997=(($S+24)|0);
      var $ld$1382$0=(($1997)|0);
      var $1998$0=HEAP32[(($ld$1382$0)>>2)];
      var $ld$1383$1=(($1997+4)|0);
      var $1998$1=HEAP32[(($ld$1383$1)>>2)];
      var $1999$0=(0 << 4) | (0 >>> 28);
      var $1999$1=($1998$0 << 4) | (0 >>> 28);
      var $2000$0=$1996$0 | $1999$0;
      var $2000$1=$1996$1 | $1999$1;
      var $2001=(($S+24)|0);
      var $ld$1384$0=(($2001)|0);
      var $2002$0=HEAP32[(($ld$1384$0)>>2)];
      var $ld$1385$1=(($2001+4)|0);
      var $2002$1=HEAP32[(($ld$1385$1)>>2)];
      var $2003$0=($2002$1 >>> 2) | (0 << 30);
      var $2003$1=(0 >>> 2) | (0 << 30);
      var $2004=(($S+24)|0);
      var $ld$1386$0=(($2004)|0);
      var $2005$0=HEAP32[(($ld$1386$0)>>2)];
      var $ld$1387$1=(($2004+4)|0);
      var $2005$1=HEAP32[(($ld$1387$1)>>2)];
      var $2006$0=($2005$0 << 30) | (0 >>> 2);
      var $2006$1=($2005$1 << 30) | ($2005$0 >>> 2);
      var $2007$0=$2003$0 | $2006$0;
      var $2007$1=$2003$1 | $2006$1;
      var $2008$0=$2000$0 ^ $2007$0;
      var $2008$1=$2000$1 ^ $2007$1;
      var $2009=(($S+24)|0);
      var $ld$1388$0=(($2009)|0);
      var $2010$0=HEAP32[(($ld$1388$0)>>2)];
      var $ld$1389$1=(($2009+4)|0);
      var $2010$1=HEAP32[(($ld$1389$1)>>2)];
      var $2011$0=($2010$1 >>> 7) | (0 << 25);
      var $2011$1=(0 >>> 7) | (0 << 25);
      var $2012=(($S+24)|0);
      var $ld$1390$0=(($2012)|0);
      var $2013$0=HEAP32[(($ld$1390$0)>>2)];
      var $ld$1391$1=(($2012+4)|0);
      var $2013$1=HEAP32[(($ld$1391$1)>>2)];
      var $2014$0=($2013$0 << 25) | (0 >>> 7);
      var $2014$1=($2013$1 << 25) | ($2013$0 >>> 7);
      var $2015$0=$2011$0 | $2014$0;
      var $2015$1=$2011$1 | $2014$1;
      var $2016$0=$2008$0 ^ $2015$0;
      var $2016$1=$2008$1 ^ $2015$1;
      var $2017=(($S+24)|0);
      var $ld$1392$0=(($2017)|0);
      var $2018$0=HEAP32[(($ld$1392$0)>>2)];
      var $ld$1393$1=(($2017+4)|0);
      var $2018$1=HEAP32[(($ld$1393$1)>>2)];
      var $2019=(($S+32)|0);
      var $ld$1394$0=(($2019)|0);
      var $2020$0=HEAP32[(($ld$1394$0)>>2)];
      var $ld$1395$1=(($2019+4)|0);
      var $2020$1=HEAP32[(($ld$1395$1)>>2)];
      var $2021$0=$2018$0 | $2020$0;
      var $2021$1=$2018$1 | $2020$1;
      var $2022=(($S+40)|0);
      var $ld$1396$0=(($2022)|0);
      var $2023$0=HEAP32[(($ld$1396$0)>>2)];
      var $ld$1397$1=(($2022+4)|0);
      var $2023$1=HEAP32[(($ld$1397$1)>>2)];
      var $2024$0=$2021$0 & $2023$0;
      var $2024$1=$2021$1 & $2023$1;
      var $2025=(($S+24)|0);
      var $ld$1398$0=(($2025)|0);
      var $2026$0=HEAP32[(($ld$1398$0)>>2)];
      var $ld$1399$1=(($2025+4)|0);
      var $2026$1=HEAP32[(($ld$1399$1)>>2)];
      var $2027=(($S+32)|0);
      var $ld$1400$0=(($2027)|0);
      var $2028$0=HEAP32[(($ld$1400$0)>>2)];
      var $ld$1401$1=(($2027+4)|0);
      var $2028$1=HEAP32[(($ld$1401$1)>>2)];
      var $2029$0=$2026$0 & $2028$0;
      var $2029$1=$2026$1 & $2028$1;
      var $2030$0=$2024$0 | $2029$0;
      var $2030$1=$2024$1 | $2029$1;
      var $2031$0 = _i64Add($2016$0,$2016$1,$2030$0,$2030$1); var $2031$1 = tempRet0;
      var $st$1402$0=(($t1)|0);
      HEAP32[(($st$1402$0)>>2)]=$2031$0;
      var $st$1403$1=(($t1+4)|0);
      HEAP32[(($st$1403$1)>>2)]=$2031$1;
      var $ld$1404$0=(($t0)|0);
      var $2032$0=HEAP32[(($ld$1404$0)>>2)];
      var $ld$1405$1=(($t0+4)|0);
      var $2032$1=HEAP32[(($ld$1405$1)>>2)];
      var $2033=(($S+48)|0);
      var $ld$1406$0=(($2033)|0);
      var $2034$0=HEAP32[(($ld$1406$0)>>2)];
      var $ld$1407$1=(($2033+4)|0);
      var $2034$1=HEAP32[(($ld$1407$1)>>2)];
      var $2035$0 = _i64Add($2034$0,$2034$1,$2032$0,$2032$1); var $2035$1 = tempRet0;
      var $st$1408$0=(($2033)|0);
      HEAP32[(($st$1408$0)>>2)]=$2035$0;
      var $st$1409$1=(($2033+4)|0);
      HEAP32[(($st$1409$1)>>2)]=$2035$1;
      var $ld$1410$0=(($t0)|0);
      var $2036$0=HEAP32[(($ld$1410$0)>>2)];
      var $ld$1411$1=(($t0+4)|0);
      var $2036$1=HEAP32[(($ld$1411$1)>>2)];
      var $ld$1412$0=(($t1)|0);
      var $2037$0=HEAP32[(($ld$1412$0)>>2)];
      var $ld$1413$1=(($t1+4)|0);
      var $2037$1=HEAP32[(($ld$1413$1)>>2)];
      var $2038$0 = _i64Add($2036$0,$2036$1,$2037$0,$2037$1); var $2038$1 = tempRet0;
      var $2039=(($S+16)|0);
      var $st$1414$0=(($2039)|0);
      HEAP32[(($st$1414$0)>>2)]=$2038$0;
      var $st$1415$1=(($2039+4)|0);
      HEAP32[(($st$1415$1)>>2)]=$2038$1;
      var $2040=(($S+8)|0);
      var $ld$1416$0=(($2040)|0);
      var $2041$0=HEAP32[(($ld$1416$0)>>2)];
      var $ld$1417$1=(($2040+4)|0);
      var $2041$1=HEAP32[(($ld$1417$1)>>2)];
      var $2042=(($S+48)|0);
      var $ld$1418$0=(($2042)|0);
      var $2043$0=HEAP32[(($ld$1418$0)>>2)];
      var $ld$1419$1=(($2042+4)|0);
      var $2043$1=HEAP32[(($ld$1419$1)>>2)];
      var $2044$0=($2043$0 >>> 14) | ($2043$1 << 18);
      var $2044$1=($2043$1 >>> 14) | (0 << 18);
      var $2045=(($S+48)|0);
      var $ld$1420$0=(($2045)|0);
      var $2046$0=HEAP32[(($ld$1420$0)>>2)];
      var $ld$1421$1=(($2045+4)|0);
      var $2046$1=HEAP32[(($ld$1421$1)>>2)];
      var $2047$0=(0 << 18) | (0 >>> 14);
      var $2047$1=($2046$0 << 18) | (0 >>> 14);
      var $2048$0=$2044$0 | $2047$0;
      var $2048$1=$2044$1 | $2047$1;
      var $2049=(($S+48)|0);
      var $ld$1422$0=(($2049)|0);
      var $2050$0=HEAP32[(($ld$1422$0)>>2)];
      var $ld$1423$1=(($2049+4)|0);
      var $2050$1=HEAP32[(($ld$1423$1)>>2)];
      var $2051$0=($2050$0 >>> 18) | ($2050$1 << 14);
      var $2051$1=($2050$1 >>> 18) | (0 << 14);
      var $2052=(($S+48)|0);
      var $ld$1424$0=(($2052)|0);
      var $2053$0=HEAP32[(($ld$1424$0)>>2)];
      var $ld$1425$1=(($2052+4)|0);
      var $2053$1=HEAP32[(($ld$1425$1)>>2)];
      var $2054$0=(0 << 14) | (0 >>> 18);
      var $2054$1=($2053$0 << 14) | (0 >>> 18);
      var $2055$0=$2051$0 | $2054$0;
      var $2055$1=$2051$1 | $2054$1;
      var $2056$0=$2048$0 ^ $2055$0;
      var $2056$1=$2048$1 ^ $2055$1;
      var $2057=(($S+48)|0);
      var $ld$1426$0=(($2057)|0);
      var $2058$0=HEAP32[(($ld$1426$0)>>2)];
      var $ld$1427$1=(($2057+4)|0);
      var $2058$1=HEAP32[(($ld$1427$1)>>2)];
      var $2059$0=($2058$1 >>> 9) | (0 << 23);
      var $2059$1=(0 >>> 9) | (0 << 23);
      var $2060=(($S+48)|0);
      var $ld$1428$0=(($2060)|0);
      var $2061$0=HEAP32[(($ld$1428$0)>>2)];
      var $ld$1429$1=(($2060+4)|0);
      var $2061$1=HEAP32[(($ld$1429$1)>>2)];
      var $2062$0=($2061$0 << 23) | (0 >>> 9);
      var $2062$1=($2061$1 << 23) | ($2061$0 >>> 9);
      var $2063$0=$2059$0 | $2062$0;
      var $2063$1=$2059$1 | $2062$1;
      var $2064$0=$2056$0 ^ $2063$0;
      var $2064$1=$2056$1 ^ $2063$1;
      var $2065$0 = _i64Add($2041$0,$2041$1,$2064$0,$2064$1); var $2065$1 = tempRet0;
      var $2066=(($S)|0);
      var $ld$1430$0=(($2066)|0);
      var $2067$0=HEAP32[(($ld$1430$0)>>2)];
      var $ld$1431$1=(($2066+4)|0);
      var $2067$1=HEAP32[(($ld$1431$1)>>2)];
      var $2068=(($S+48)|0);
      var $ld$1432$0=(($2068)|0);
      var $2069$0=HEAP32[(($ld$1432$0)>>2)];
      var $ld$1433$1=(($2068+4)|0);
      var $2069$1=HEAP32[(($ld$1433$1)>>2)];
      var $2070=(($S+56)|0);
      var $ld$1434$0=(($2070)|0);
      var $2071$0=HEAP32[(($ld$1434$0)>>2)];
      var $ld$1435$1=(($2070+4)|0);
      var $2071$1=HEAP32[(($ld$1435$1)>>2)];
      var $2072=(($S)|0);
      var $ld$1436$0=(($2072)|0);
      var $2073$0=HEAP32[(($ld$1436$0)>>2)];
      var $ld$1437$1=(($2072+4)|0);
      var $2073$1=HEAP32[(($ld$1437$1)>>2)];
      var $2074$0=$2071$0 ^ $2073$0;
      var $2074$1=$2071$1 ^ $2073$1;
      var $2075$0=$2069$0 & $2074$0;
      var $2075$1=$2069$1 & $2074$1;
      var $2076$0=$2067$0 ^ $2075$0;
      var $2076$1=$2067$1 ^ $2075$1;
      var $2077$0 = _i64Add($2065$0,$2065$1,$2076$0,$2076$1); var $2077$1 = tempRet0;
      var $$etemp$1438$0=-1119749164;
      var $$etemp$1438$1=1555081692;
      var $2078$0 = _i64Add($2077$0,$2077$1,$$etemp$1438$0,$$etemp$1438$1); var $2078$1 = tempRet0;
      var $2079=(($W+176)|0);
      var $ld$1439$0=(($2079)|0);
      var $2080$0=HEAP32[(($ld$1439$0)>>2)];
      var $ld$1440$1=(($2079+4)|0);
      var $2080$1=HEAP32[(($ld$1440$1)>>2)];
      var $2081$0 = _i64Add($2078$0,$2078$1,$2080$0,$2080$1); var $2081$1 = tempRet0;
      var $st$1441$0=(($t0)|0);
      HEAP32[(($st$1441$0)>>2)]=$2081$0;
      var $st$1442$1=(($t0+4)|0);
      HEAP32[(($st$1442$1)>>2)]=$2081$1;
      var $2082=(($S+16)|0);
      var $ld$1443$0=(($2082)|0);
      var $2083$0=HEAP32[(($ld$1443$0)>>2)];
      var $ld$1444$1=(($2082+4)|0);
      var $2083$1=HEAP32[(($ld$1444$1)>>2)];
      var $2084$0=($2083$0 >>> 28) | ($2083$1 << 4);
      var $2084$1=($2083$1 >>> 28) | (0 << 4);
      var $2085=(($S+16)|0);
      var $ld$1445$0=(($2085)|0);
      var $2086$0=HEAP32[(($ld$1445$0)>>2)];
      var $ld$1446$1=(($2085+4)|0);
      var $2086$1=HEAP32[(($ld$1446$1)>>2)];
      var $2087$0=(0 << 4) | (0 >>> 28);
      var $2087$1=($2086$0 << 4) | (0 >>> 28);
      var $2088$0=$2084$0 | $2087$0;
      var $2088$1=$2084$1 | $2087$1;
      var $2089=(($S+16)|0);
      var $ld$1447$0=(($2089)|0);
      var $2090$0=HEAP32[(($ld$1447$0)>>2)];
      var $ld$1448$1=(($2089+4)|0);
      var $2090$1=HEAP32[(($ld$1448$1)>>2)];
      var $2091$0=($2090$1 >>> 2) | (0 << 30);
      var $2091$1=(0 >>> 2) | (0 << 30);
      var $2092=(($S+16)|0);
      var $ld$1449$0=(($2092)|0);
      var $2093$0=HEAP32[(($ld$1449$0)>>2)];
      var $ld$1450$1=(($2092+4)|0);
      var $2093$1=HEAP32[(($ld$1450$1)>>2)];
      var $2094$0=($2093$0 << 30) | (0 >>> 2);
      var $2094$1=($2093$1 << 30) | ($2093$0 >>> 2);
      var $2095$0=$2091$0 | $2094$0;
      var $2095$1=$2091$1 | $2094$1;
      var $2096$0=$2088$0 ^ $2095$0;
      var $2096$1=$2088$1 ^ $2095$1;
      var $2097=(($S+16)|0);
      var $ld$1451$0=(($2097)|0);
      var $2098$0=HEAP32[(($ld$1451$0)>>2)];
      var $ld$1452$1=(($2097+4)|0);
      var $2098$1=HEAP32[(($ld$1452$1)>>2)];
      var $2099$0=($2098$1 >>> 7) | (0 << 25);
      var $2099$1=(0 >>> 7) | (0 << 25);
      var $2100=(($S+16)|0);
      var $ld$1453$0=(($2100)|0);
      var $2101$0=HEAP32[(($ld$1453$0)>>2)];
      var $ld$1454$1=(($2100+4)|0);
      var $2101$1=HEAP32[(($ld$1454$1)>>2)];
      var $2102$0=($2101$0 << 25) | (0 >>> 7);
      var $2102$1=($2101$1 << 25) | ($2101$0 >>> 7);
      var $2103$0=$2099$0 | $2102$0;
      var $2103$1=$2099$1 | $2102$1;
      var $2104$0=$2096$0 ^ $2103$0;
      var $2104$1=$2096$1 ^ $2103$1;
      var $2105=(($S+16)|0);
      var $ld$1455$0=(($2105)|0);
      var $2106$0=HEAP32[(($ld$1455$0)>>2)];
      var $ld$1456$1=(($2105+4)|0);
      var $2106$1=HEAP32[(($ld$1456$1)>>2)];
      var $2107=(($S+24)|0);
      var $ld$1457$0=(($2107)|0);
      var $2108$0=HEAP32[(($ld$1457$0)>>2)];
      var $ld$1458$1=(($2107+4)|0);
      var $2108$1=HEAP32[(($ld$1458$1)>>2)];
      var $2109$0=$2106$0 | $2108$0;
      var $2109$1=$2106$1 | $2108$1;
      var $2110=(($S+32)|0);
      var $ld$1459$0=(($2110)|0);
      var $2111$0=HEAP32[(($ld$1459$0)>>2)];
      var $ld$1460$1=(($2110+4)|0);
      var $2111$1=HEAP32[(($ld$1460$1)>>2)];
      var $2112$0=$2109$0 & $2111$0;
      var $2112$1=$2109$1 & $2111$1;
      var $2113=(($S+16)|0);
      var $ld$1461$0=(($2113)|0);
      var $2114$0=HEAP32[(($ld$1461$0)>>2)];
      var $ld$1462$1=(($2113+4)|0);
      var $2114$1=HEAP32[(($ld$1462$1)>>2)];
      var $2115=(($S+24)|0);
      var $ld$1463$0=(($2115)|0);
      var $2116$0=HEAP32[(($ld$1463$0)>>2)];
      var $ld$1464$1=(($2115+4)|0);
      var $2116$1=HEAP32[(($ld$1464$1)>>2)];
      var $2117$0=$2114$0 & $2116$0;
      var $2117$1=$2114$1 & $2116$1;
      var $2118$0=$2112$0 | $2117$0;
      var $2118$1=$2112$1 | $2117$1;
      var $2119$0 = _i64Add($2104$0,$2104$1,$2118$0,$2118$1); var $2119$1 = tempRet0;
      var $st$1465$0=(($t1)|0);
      HEAP32[(($st$1465$0)>>2)]=$2119$0;
      var $st$1466$1=(($t1+4)|0);
      HEAP32[(($st$1466$1)>>2)]=$2119$1;
      var $ld$1467$0=(($t0)|0);
      var $2120$0=HEAP32[(($ld$1467$0)>>2)];
      var $ld$1468$1=(($t0+4)|0);
      var $2120$1=HEAP32[(($ld$1468$1)>>2)];
      var $2121=(($S+40)|0);
      var $ld$1469$0=(($2121)|0);
      var $2122$0=HEAP32[(($ld$1469$0)>>2)];
      var $ld$1470$1=(($2121+4)|0);
      var $2122$1=HEAP32[(($ld$1470$1)>>2)];
      var $2123$0 = _i64Add($2122$0,$2122$1,$2120$0,$2120$1); var $2123$1 = tempRet0;
      var $st$1471$0=(($2121)|0);
      HEAP32[(($st$1471$0)>>2)]=$2123$0;
      var $st$1472$1=(($2121+4)|0);
      HEAP32[(($st$1472$1)>>2)]=$2123$1;
      var $ld$1473$0=(($t0)|0);
      var $2124$0=HEAP32[(($ld$1473$0)>>2)];
      var $ld$1474$1=(($t0+4)|0);
      var $2124$1=HEAP32[(($ld$1474$1)>>2)];
      var $ld$1475$0=(($t1)|0);
      var $2125$0=HEAP32[(($ld$1475$0)>>2)];
      var $ld$1476$1=(($t1+4)|0);
      var $2125$1=HEAP32[(($ld$1476$1)>>2)];
      var $2126$0 = _i64Add($2124$0,$2124$1,$2125$0,$2125$1); var $2126$1 = tempRet0;
      var $2127=(($S+8)|0);
      var $st$1477$0=(($2127)|0);
      HEAP32[(($st$1477$0)>>2)]=$2126$0;
      var $st$1478$1=(($2127+4)|0);
      HEAP32[(($st$1478$1)>>2)]=$2126$1;
      var $2128=(($S)|0);
      var $ld$1479$0=(($2128)|0);
      var $2129$0=HEAP32[(($ld$1479$0)>>2)];
      var $ld$1480$1=(($2128+4)|0);
      var $2129$1=HEAP32[(($ld$1480$1)>>2)];
      var $2130=(($S+40)|0);
      var $ld$1481$0=(($2130)|0);
      var $2131$0=HEAP32[(($ld$1481$0)>>2)];
      var $ld$1482$1=(($2130+4)|0);
      var $2131$1=HEAP32[(($ld$1482$1)>>2)];
      var $2132$0=($2131$0 >>> 14) | ($2131$1 << 18);
      var $2132$1=($2131$1 >>> 14) | (0 << 18);
      var $2133=(($S+40)|0);
      var $ld$1483$0=(($2133)|0);
      var $2134$0=HEAP32[(($ld$1483$0)>>2)];
      var $ld$1484$1=(($2133+4)|0);
      var $2134$1=HEAP32[(($ld$1484$1)>>2)];
      var $2135$0=(0 << 18) | (0 >>> 14);
      var $2135$1=($2134$0 << 18) | (0 >>> 14);
      var $2136$0=$2132$0 | $2135$0;
      var $2136$1=$2132$1 | $2135$1;
      var $2137=(($S+40)|0);
      var $ld$1485$0=(($2137)|0);
      var $2138$0=HEAP32[(($ld$1485$0)>>2)];
      var $ld$1486$1=(($2137+4)|0);
      var $2138$1=HEAP32[(($ld$1486$1)>>2)];
      var $2139$0=($2138$0 >>> 18) | ($2138$1 << 14);
      var $2139$1=($2138$1 >>> 18) | (0 << 14);
      var $2140=(($S+40)|0);
      var $ld$1487$0=(($2140)|0);
      var $2141$0=HEAP32[(($ld$1487$0)>>2)];
      var $ld$1488$1=(($2140+4)|0);
      var $2141$1=HEAP32[(($ld$1488$1)>>2)];
      var $2142$0=(0 << 14) | (0 >>> 18);
      var $2142$1=($2141$0 << 14) | (0 >>> 18);
      var $2143$0=$2139$0 | $2142$0;
      var $2143$1=$2139$1 | $2142$1;
      var $2144$0=$2136$0 ^ $2143$0;
      var $2144$1=$2136$1 ^ $2143$1;
      var $2145=(($S+40)|0);
      var $ld$1489$0=(($2145)|0);
      var $2146$0=HEAP32[(($ld$1489$0)>>2)];
      var $ld$1490$1=(($2145+4)|0);
      var $2146$1=HEAP32[(($ld$1490$1)>>2)];
      var $2147$0=($2146$1 >>> 9) | (0 << 23);
      var $2147$1=(0 >>> 9) | (0 << 23);
      var $2148=(($S+40)|0);
      var $ld$1491$0=(($2148)|0);
      var $2149$0=HEAP32[(($ld$1491$0)>>2)];
      var $ld$1492$1=(($2148+4)|0);
      var $2149$1=HEAP32[(($ld$1492$1)>>2)];
      var $2150$0=($2149$0 << 23) | (0 >>> 9);
      var $2150$1=($2149$1 << 23) | ($2149$0 >>> 9);
      var $2151$0=$2147$0 | $2150$0;
      var $2151$1=$2147$1 | $2150$1;
      var $2152$0=$2144$0 ^ $2151$0;
      var $2152$1=$2144$1 ^ $2151$1;
      var $2153$0 = _i64Add($2129$0,$2129$1,$2152$0,$2152$1); var $2153$1 = tempRet0;
      var $2154=(($S+56)|0);
      var $ld$1493$0=(($2154)|0);
      var $2155$0=HEAP32[(($ld$1493$0)>>2)];
      var $ld$1494$1=(($2154+4)|0);
      var $2155$1=HEAP32[(($ld$1494$1)>>2)];
      var $2156=(($S+40)|0);
      var $ld$1495$0=(($2156)|0);
      var $2157$0=HEAP32[(($ld$1495$0)>>2)];
      var $ld$1496$1=(($2156+4)|0);
      var $2157$1=HEAP32[(($ld$1496$1)>>2)];
      var $2158=(($S+48)|0);
      var $ld$1497$0=(($2158)|0);
      var $2159$0=HEAP32[(($ld$1497$0)>>2)];
      var $ld$1498$1=(($2158+4)|0);
      var $2159$1=HEAP32[(($ld$1498$1)>>2)];
      var $2160=(($S+56)|0);
      var $ld$1499$0=(($2160)|0);
      var $2161$0=HEAP32[(($ld$1499$0)>>2)];
      var $ld$1500$1=(($2160+4)|0);
      var $2161$1=HEAP32[(($ld$1500$1)>>2)];
      var $2162$0=$2159$0 ^ $2161$0;
      var $2162$1=$2159$1 ^ $2161$1;
      var $2163$0=$2157$0 & $2162$0;
      var $2163$1=$2157$1 & $2162$1;
      var $2164$0=$2155$0 ^ $2163$0;
      var $2164$1=$2155$1 ^ $2163$1;
      var $2165$0 = _i64Add($2153$0,$2153$1,$2164$0,$2164$1); var $2165$1 = tempRet0;
      var $$etemp$1501$0=-2096016459;
      var $$etemp$1501$1=1996064986;
      var $2166$0 = _i64Add($2165$0,$2165$1,$$etemp$1501$0,$$etemp$1501$1); var $2166$1 = tempRet0;
      var $2167=(($W+184)|0);
      var $ld$1502$0=(($2167)|0);
      var $2168$0=HEAP32[(($ld$1502$0)>>2)];
      var $ld$1503$1=(($2167+4)|0);
      var $2168$1=HEAP32[(($ld$1503$1)>>2)];
      var $2169$0 = _i64Add($2166$0,$2166$1,$2168$0,$2168$1); var $2169$1 = tempRet0;
      var $st$1504$0=(($t0)|0);
      HEAP32[(($st$1504$0)>>2)]=$2169$0;
      var $st$1505$1=(($t0+4)|0);
      HEAP32[(($st$1505$1)>>2)]=$2169$1;
      var $2170=(($S+8)|0);
      var $ld$1506$0=(($2170)|0);
      var $2171$0=HEAP32[(($ld$1506$0)>>2)];
      var $ld$1507$1=(($2170+4)|0);
      var $2171$1=HEAP32[(($ld$1507$1)>>2)];
      var $2172$0=($2171$0 >>> 28) | ($2171$1 << 4);
      var $2172$1=($2171$1 >>> 28) | (0 << 4);
      var $2173=(($S+8)|0);
      var $ld$1508$0=(($2173)|0);
      var $2174$0=HEAP32[(($ld$1508$0)>>2)];
      var $ld$1509$1=(($2173+4)|0);
      var $2174$1=HEAP32[(($ld$1509$1)>>2)];
      var $2175$0=(0 << 4) | (0 >>> 28);
      var $2175$1=($2174$0 << 4) | (0 >>> 28);
      var $2176$0=$2172$0 | $2175$0;
      var $2176$1=$2172$1 | $2175$1;
      var $2177=(($S+8)|0);
      var $ld$1510$0=(($2177)|0);
      var $2178$0=HEAP32[(($ld$1510$0)>>2)];
      var $ld$1511$1=(($2177+4)|0);
      var $2178$1=HEAP32[(($ld$1511$1)>>2)];
      var $2179$0=($2178$1 >>> 2) | (0 << 30);
      var $2179$1=(0 >>> 2) | (0 << 30);
      var $2180=(($S+8)|0);
      var $ld$1512$0=(($2180)|0);
      var $2181$0=HEAP32[(($ld$1512$0)>>2)];
      var $ld$1513$1=(($2180+4)|0);
      var $2181$1=HEAP32[(($ld$1513$1)>>2)];
      var $2182$0=($2181$0 << 30) | (0 >>> 2);
      var $2182$1=($2181$1 << 30) | ($2181$0 >>> 2);
      var $2183$0=$2179$0 | $2182$0;
      var $2183$1=$2179$1 | $2182$1;
      var $2184$0=$2176$0 ^ $2183$0;
      var $2184$1=$2176$1 ^ $2183$1;
      var $2185=(($S+8)|0);
      var $ld$1514$0=(($2185)|0);
      var $2186$0=HEAP32[(($ld$1514$0)>>2)];
      var $ld$1515$1=(($2185+4)|0);
      var $2186$1=HEAP32[(($ld$1515$1)>>2)];
      var $2187$0=($2186$1 >>> 7) | (0 << 25);
      var $2187$1=(0 >>> 7) | (0 << 25);
      var $2188=(($S+8)|0);
      var $ld$1516$0=(($2188)|0);
      var $2189$0=HEAP32[(($ld$1516$0)>>2)];
      var $ld$1517$1=(($2188+4)|0);
      var $2189$1=HEAP32[(($ld$1517$1)>>2)];
      var $2190$0=($2189$0 << 25) | (0 >>> 7);
      var $2190$1=($2189$1 << 25) | ($2189$0 >>> 7);
      var $2191$0=$2187$0 | $2190$0;
      var $2191$1=$2187$1 | $2190$1;
      var $2192$0=$2184$0 ^ $2191$0;
      var $2192$1=$2184$1 ^ $2191$1;
      var $2193=(($S+8)|0);
      var $ld$1518$0=(($2193)|0);
      var $2194$0=HEAP32[(($ld$1518$0)>>2)];
      var $ld$1519$1=(($2193+4)|0);
      var $2194$1=HEAP32[(($ld$1519$1)>>2)];
      var $2195=(($S+16)|0);
      var $ld$1520$0=(($2195)|0);
      var $2196$0=HEAP32[(($ld$1520$0)>>2)];
      var $ld$1521$1=(($2195+4)|0);
      var $2196$1=HEAP32[(($ld$1521$1)>>2)];
      var $2197$0=$2194$0 | $2196$0;
      var $2197$1=$2194$1 | $2196$1;
      var $2198=(($S+24)|0);
      var $ld$1522$0=(($2198)|0);
      var $2199$0=HEAP32[(($ld$1522$0)>>2)];
      var $ld$1523$1=(($2198+4)|0);
      var $2199$1=HEAP32[(($ld$1523$1)>>2)];
      var $2200$0=$2197$0 & $2199$0;
      var $2200$1=$2197$1 & $2199$1;
      var $2201=(($S+8)|0);
      var $ld$1524$0=(($2201)|0);
      var $2202$0=HEAP32[(($ld$1524$0)>>2)];
      var $ld$1525$1=(($2201+4)|0);
      var $2202$1=HEAP32[(($ld$1525$1)>>2)];
      var $2203=(($S+16)|0);
      var $ld$1526$0=(($2203)|0);
      var $2204$0=HEAP32[(($ld$1526$0)>>2)];
      var $ld$1527$1=(($2203+4)|0);
      var $2204$1=HEAP32[(($ld$1527$1)>>2)];
      var $2205$0=$2202$0 & $2204$0;
      var $2205$1=$2202$1 & $2204$1;
      var $2206$0=$2200$0 | $2205$0;
      var $2206$1=$2200$1 | $2205$1;
      var $2207$0 = _i64Add($2192$0,$2192$1,$2206$0,$2206$1); var $2207$1 = tempRet0;
      var $st$1528$0=(($t1)|0);
      HEAP32[(($st$1528$0)>>2)]=$2207$0;
      var $st$1529$1=(($t1+4)|0);
      HEAP32[(($st$1529$1)>>2)]=$2207$1;
      var $ld$1530$0=(($t0)|0);
      var $2208$0=HEAP32[(($ld$1530$0)>>2)];
      var $ld$1531$1=(($t0+4)|0);
      var $2208$1=HEAP32[(($ld$1531$1)>>2)];
      var $2209=(($S+32)|0);
      var $ld$1532$0=(($2209)|0);
      var $2210$0=HEAP32[(($ld$1532$0)>>2)];
      var $ld$1533$1=(($2209+4)|0);
      var $2210$1=HEAP32[(($ld$1533$1)>>2)];
      var $2211$0 = _i64Add($2210$0,$2210$1,$2208$0,$2208$1); var $2211$1 = tempRet0;
      var $st$1534$0=(($2209)|0);
      HEAP32[(($st$1534$0)>>2)]=$2211$0;
      var $st$1535$1=(($2209+4)|0);
      HEAP32[(($st$1535$1)>>2)]=$2211$1;
      var $ld$1536$0=(($t0)|0);
      var $2212$0=HEAP32[(($ld$1536$0)>>2)];
      var $ld$1537$1=(($t0+4)|0);
      var $2212$1=HEAP32[(($ld$1537$1)>>2)];
      var $ld$1538$0=(($t1)|0);
      var $2213$0=HEAP32[(($ld$1538$0)>>2)];
      var $ld$1539$1=(($t1+4)|0);
      var $2213$1=HEAP32[(($ld$1539$1)>>2)];
      var $2214$0 = _i64Add($2212$0,$2212$1,$2213$0,$2213$1); var $2214$1 = tempRet0;
      var $2215=(($S)|0);
      var $st$1540$0=(($2215)|0);
      HEAP32[(($st$1540$0)>>2)]=$2214$0;
      var $st$1541$1=(($2215+4)|0);
      HEAP32[(($st$1541$1)>>2)]=$2214$1;
      var $2216=(($S+56)|0);
      var $ld$1542$0=(($2216)|0);
      var $2217$0=HEAP32[(($ld$1542$0)>>2)];
      var $ld$1543$1=(($2216+4)|0);
      var $2217$1=HEAP32[(($ld$1543$1)>>2)];
      var $2218=(($S+32)|0);
      var $ld$1544$0=(($2218)|0);
      var $2219$0=HEAP32[(($ld$1544$0)>>2)];
      var $ld$1545$1=(($2218+4)|0);
      var $2219$1=HEAP32[(($ld$1545$1)>>2)];
      var $2220$0=($2219$0 >>> 14) | ($2219$1 << 18);
      var $2220$1=($2219$1 >>> 14) | (0 << 18);
      var $2221=(($S+32)|0);
      var $ld$1546$0=(($2221)|0);
      var $2222$0=HEAP32[(($ld$1546$0)>>2)];
      var $ld$1547$1=(($2221+4)|0);
      var $2222$1=HEAP32[(($ld$1547$1)>>2)];
      var $2223$0=(0 << 18) | (0 >>> 14);
      var $2223$1=($2222$0 << 18) | (0 >>> 14);
      var $2224$0=$2220$0 | $2223$0;
      var $2224$1=$2220$1 | $2223$1;
      var $2225=(($S+32)|0);
      var $ld$1548$0=(($2225)|0);
      var $2226$0=HEAP32[(($ld$1548$0)>>2)];
      var $ld$1549$1=(($2225+4)|0);
      var $2226$1=HEAP32[(($ld$1549$1)>>2)];
      var $2227$0=($2226$0 >>> 18) | ($2226$1 << 14);
      var $2227$1=($2226$1 >>> 18) | (0 << 14);
      var $2228=(($S+32)|0);
      var $ld$1550$0=(($2228)|0);
      var $2229$0=HEAP32[(($ld$1550$0)>>2)];
      var $ld$1551$1=(($2228+4)|0);
      var $2229$1=HEAP32[(($ld$1551$1)>>2)];
      var $2230$0=(0 << 14) | (0 >>> 18);
      var $2230$1=($2229$0 << 14) | (0 >>> 18);
      var $2231$0=$2227$0 | $2230$0;
      var $2231$1=$2227$1 | $2230$1;
      var $2232$0=$2224$0 ^ $2231$0;
      var $2232$1=$2224$1 ^ $2231$1;
      var $2233=(($S+32)|0);
      var $ld$1552$0=(($2233)|0);
      var $2234$0=HEAP32[(($ld$1552$0)>>2)];
      var $ld$1553$1=(($2233+4)|0);
      var $2234$1=HEAP32[(($ld$1553$1)>>2)];
      var $2235$0=($2234$1 >>> 9) | (0 << 23);
      var $2235$1=(0 >>> 9) | (0 << 23);
      var $2236=(($S+32)|0);
      var $ld$1554$0=(($2236)|0);
      var $2237$0=HEAP32[(($ld$1554$0)>>2)];
      var $ld$1555$1=(($2236+4)|0);
      var $2237$1=HEAP32[(($ld$1555$1)>>2)];
      var $2238$0=($2237$0 << 23) | (0 >>> 9);
      var $2238$1=($2237$1 << 23) | ($2237$0 >>> 9);
      var $2239$0=$2235$0 | $2238$0;
      var $2239$1=$2235$1 | $2238$1;
      var $2240$0=$2232$0 ^ $2239$0;
      var $2240$1=$2232$1 ^ $2239$1;
      var $2241$0 = _i64Add($2217$0,$2217$1,$2240$0,$2240$1); var $2241$1 = tempRet0;
      var $2242=(($S+48)|0);
      var $ld$1556$0=(($2242)|0);
      var $2243$0=HEAP32[(($ld$1556$0)>>2)];
      var $ld$1557$1=(($2242+4)|0);
      var $2243$1=HEAP32[(($ld$1557$1)>>2)];
      var $2244=(($S+32)|0);
      var $ld$1558$0=(($2244)|0);
      var $2245$0=HEAP32[(($ld$1558$0)>>2)];
      var $ld$1559$1=(($2244+4)|0);
      var $2245$1=HEAP32[(($ld$1559$1)>>2)];
      var $2246=(($S+40)|0);
      var $ld$1560$0=(($2246)|0);
      var $2247$0=HEAP32[(($ld$1560$0)>>2)];
      var $ld$1561$1=(($2246+4)|0);
      var $2247$1=HEAP32[(($ld$1561$1)>>2)];
      var $2248=(($S+48)|0);
      var $ld$1562$0=(($2248)|0);
      var $2249$0=HEAP32[(($ld$1562$0)>>2)];
      var $ld$1563$1=(($2248+4)|0);
      var $2249$1=HEAP32[(($ld$1563$1)>>2)];
      var $2250$0=$2247$0 ^ $2249$0;
      var $2250$1=$2247$1 ^ $2249$1;
      var $2251$0=$2245$0 & $2250$0;
      var $2251$1=$2245$1 & $2250$1;
      var $2252$0=$2243$0 ^ $2251$0;
      var $2252$1=$2243$1 ^ $2251$1;
      var $2253$0 = _i64Add($2241$0,$2241$1,$2252$0,$2252$1); var $2253$1 = tempRet0;
      var $$etemp$1564$0=-295247957;
      var $$etemp$1564$1=-1740746414;
      var $2254$0 = _i64Add($2253$0,$2253$1,$$etemp$1564$0,$$etemp$1564$1); var $2254$1 = tempRet0;
      var $2255=(($W+192)|0);
      var $ld$1565$0=(($2255)|0);
      var $2256$0=HEAP32[(($ld$1565$0)>>2)];
      var $ld$1566$1=(($2255+4)|0);
      var $2256$1=HEAP32[(($ld$1566$1)>>2)];
      var $2257$0 = _i64Add($2254$0,$2254$1,$2256$0,$2256$1); var $2257$1 = tempRet0;
      var $st$1567$0=(($t0)|0);
      HEAP32[(($st$1567$0)>>2)]=$2257$0;
      var $st$1568$1=(($t0+4)|0);
      HEAP32[(($st$1568$1)>>2)]=$2257$1;
      var $2258=(($S)|0);
      var $ld$1569$0=(($2258)|0);
      var $2259$0=HEAP32[(($ld$1569$0)>>2)];
      var $ld$1570$1=(($2258+4)|0);
      var $2259$1=HEAP32[(($ld$1570$1)>>2)];
      var $2260$0=($2259$0 >>> 28) | ($2259$1 << 4);
      var $2260$1=($2259$1 >>> 28) | (0 << 4);
      var $2261=(($S)|0);
      var $ld$1571$0=(($2261)|0);
      var $2262$0=HEAP32[(($ld$1571$0)>>2)];
      var $ld$1572$1=(($2261+4)|0);
      var $2262$1=HEAP32[(($ld$1572$1)>>2)];
      var $2263$0=(0 << 4) | (0 >>> 28);
      var $2263$1=($2262$0 << 4) | (0 >>> 28);
      var $2264$0=$2260$0 | $2263$0;
      var $2264$1=$2260$1 | $2263$1;
      var $2265=(($S)|0);
      var $ld$1573$0=(($2265)|0);
      var $2266$0=HEAP32[(($ld$1573$0)>>2)];
      var $ld$1574$1=(($2265+4)|0);
      var $2266$1=HEAP32[(($ld$1574$1)>>2)];
      var $2267$0=($2266$1 >>> 2) | (0 << 30);
      var $2267$1=(0 >>> 2) | (0 << 30);
      var $2268=(($S)|0);
      var $ld$1575$0=(($2268)|0);
      var $2269$0=HEAP32[(($ld$1575$0)>>2)];
      var $ld$1576$1=(($2268+4)|0);
      var $2269$1=HEAP32[(($ld$1576$1)>>2)];
      var $2270$0=($2269$0 << 30) | (0 >>> 2);
      var $2270$1=($2269$1 << 30) | ($2269$0 >>> 2);
      var $2271$0=$2267$0 | $2270$0;
      var $2271$1=$2267$1 | $2270$1;
      var $2272$0=$2264$0 ^ $2271$0;
      var $2272$1=$2264$1 ^ $2271$1;
      var $2273=(($S)|0);
      var $ld$1577$0=(($2273)|0);
      var $2274$0=HEAP32[(($ld$1577$0)>>2)];
      var $ld$1578$1=(($2273+4)|0);
      var $2274$1=HEAP32[(($ld$1578$1)>>2)];
      var $2275$0=($2274$1 >>> 7) | (0 << 25);
      var $2275$1=(0 >>> 7) | (0 << 25);
      var $2276=(($S)|0);
      var $ld$1579$0=(($2276)|0);
      var $2277$0=HEAP32[(($ld$1579$0)>>2)];
      var $ld$1580$1=(($2276+4)|0);
      var $2277$1=HEAP32[(($ld$1580$1)>>2)];
      var $2278$0=($2277$0 << 25) | (0 >>> 7);
      var $2278$1=($2277$1 << 25) | ($2277$0 >>> 7);
      var $2279$0=$2275$0 | $2278$0;
      var $2279$1=$2275$1 | $2278$1;
      var $2280$0=$2272$0 ^ $2279$0;
      var $2280$1=$2272$1 ^ $2279$1;
      var $2281=(($S)|0);
      var $ld$1581$0=(($2281)|0);
      var $2282$0=HEAP32[(($ld$1581$0)>>2)];
      var $ld$1582$1=(($2281+4)|0);
      var $2282$1=HEAP32[(($ld$1582$1)>>2)];
      var $2283=(($S+8)|0);
      var $ld$1583$0=(($2283)|0);
      var $2284$0=HEAP32[(($ld$1583$0)>>2)];
      var $ld$1584$1=(($2283+4)|0);
      var $2284$1=HEAP32[(($ld$1584$1)>>2)];
      var $2285$0=$2282$0 | $2284$0;
      var $2285$1=$2282$1 | $2284$1;
      var $2286=(($S+16)|0);
      var $ld$1585$0=(($2286)|0);
      var $2287$0=HEAP32[(($ld$1585$0)>>2)];
      var $ld$1586$1=(($2286+4)|0);
      var $2287$1=HEAP32[(($ld$1586$1)>>2)];
      var $2288$0=$2285$0 & $2287$0;
      var $2288$1=$2285$1 & $2287$1;
      var $2289=(($S)|0);
      var $ld$1587$0=(($2289)|0);
      var $2290$0=HEAP32[(($ld$1587$0)>>2)];
      var $ld$1588$1=(($2289+4)|0);
      var $2290$1=HEAP32[(($ld$1588$1)>>2)];
      var $2291=(($S+8)|0);
      var $ld$1589$0=(($2291)|0);
      var $2292$0=HEAP32[(($ld$1589$0)>>2)];
      var $ld$1590$1=(($2291+4)|0);
      var $2292$1=HEAP32[(($ld$1590$1)>>2)];
      var $2293$0=$2290$0 & $2292$0;
      var $2293$1=$2290$1 & $2292$1;
      var $2294$0=$2288$0 | $2293$0;
      var $2294$1=$2288$1 | $2293$1;
      var $2295$0 = _i64Add($2280$0,$2280$1,$2294$0,$2294$1); var $2295$1 = tempRet0;
      var $st$1591$0=(($t1)|0);
      HEAP32[(($st$1591$0)>>2)]=$2295$0;
      var $st$1592$1=(($t1+4)|0);
      HEAP32[(($st$1592$1)>>2)]=$2295$1;
      var $ld$1593$0=(($t0)|0);
      var $2296$0=HEAP32[(($ld$1593$0)>>2)];
      var $ld$1594$1=(($t0+4)|0);
      var $2296$1=HEAP32[(($ld$1594$1)>>2)];
      var $2297=(($S+24)|0);
      var $ld$1595$0=(($2297)|0);
      var $2298$0=HEAP32[(($ld$1595$0)>>2)];
      var $ld$1596$1=(($2297+4)|0);
      var $2298$1=HEAP32[(($ld$1596$1)>>2)];
      var $2299$0 = _i64Add($2298$0,$2298$1,$2296$0,$2296$1); var $2299$1 = tempRet0;
      var $st$1597$0=(($2297)|0);
      HEAP32[(($st$1597$0)>>2)]=$2299$0;
      var $st$1598$1=(($2297+4)|0);
      HEAP32[(($st$1598$1)>>2)]=$2299$1;
      var $ld$1599$0=(($t0)|0);
      var $2300$0=HEAP32[(($ld$1599$0)>>2)];
      var $ld$1600$1=(($t0+4)|0);
      var $2300$1=HEAP32[(($ld$1600$1)>>2)];
      var $ld$1601$0=(($t1)|0);
      var $2301$0=HEAP32[(($ld$1601$0)>>2)];
      var $ld$1602$1=(($t1+4)|0);
      var $2301$1=HEAP32[(($ld$1602$1)>>2)];
      var $2302$0 = _i64Add($2300$0,$2300$1,$2301$0,$2301$1); var $2302$1 = tempRet0;
      var $2303=(($S+56)|0);
      var $st$1603$0=(($2303)|0);
      HEAP32[(($st$1603$0)>>2)]=$2302$0;
      var $st$1604$1=(($2303+4)|0);
      HEAP32[(($st$1604$1)>>2)]=$2302$1;
      var $2304=(($S+48)|0);
      var $ld$1605$0=(($2304)|0);
      var $2305$0=HEAP32[(($ld$1605$0)>>2)];
      var $ld$1606$1=(($2304+4)|0);
      var $2305$1=HEAP32[(($ld$1606$1)>>2)];
      var $2306=(($S+24)|0);
      var $ld$1607$0=(($2306)|0);
      var $2307$0=HEAP32[(($ld$1607$0)>>2)];
      var $ld$1608$1=(($2306+4)|0);
      var $2307$1=HEAP32[(($ld$1608$1)>>2)];
      var $2308$0=($2307$0 >>> 14) | ($2307$1 << 18);
      var $2308$1=($2307$1 >>> 14) | (0 << 18);
      var $2309=(($S+24)|0);
      var $ld$1609$0=(($2309)|0);
      var $2310$0=HEAP32[(($ld$1609$0)>>2)];
      var $ld$1610$1=(($2309+4)|0);
      var $2310$1=HEAP32[(($ld$1610$1)>>2)];
      var $2311$0=(0 << 18) | (0 >>> 14);
      var $2311$1=($2310$0 << 18) | (0 >>> 14);
      var $2312$0=$2308$0 | $2311$0;
      var $2312$1=$2308$1 | $2311$1;
      var $2313=(($S+24)|0);
      var $ld$1611$0=(($2313)|0);
      var $2314$0=HEAP32[(($ld$1611$0)>>2)];
      var $ld$1612$1=(($2313+4)|0);
      var $2314$1=HEAP32[(($ld$1612$1)>>2)];
      var $2315$0=($2314$0 >>> 18) | ($2314$1 << 14);
      var $2315$1=($2314$1 >>> 18) | (0 << 14);
      var $2316=(($S+24)|0);
      var $ld$1613$0=(($2316)|0);
      var $2317$0=HEAP32[(($ld$1613$0)>>2)];
      var $ld$1614$1=(($2316+4)|0);
      var $2317$1=HEAP32[(($ld$1614$1)>>2)];
      var $2318$0=(0 << 14) | (0 >>> 18);
      var $2318$1=($2317$0 << 14) | (0 >>> 18);
      var $2319$0=$2315$0 | $2318$0;
      var $2319$1=$2315$1 | $2318$1;
      var $2320$0=$2312$0 ^ $2319$0;
      var $2320$1=$2312$1 ^ $2319$1;
      var $2321=(($S+24)|0);
      var $ld$1615$0=(($2321)|0);
      var $2322$0=HEAP32[(($ld$1615$0)>>2)];
      var $ld$1616$1=(($2321+4)|0);
      var $2322$1=HEAP32[(($ld$1616$1)>>2)];
      var $2323$0=($2322$1 >>> 9) | (0 << 23);
      var $2323$1=(0 >>> 9) | (0 << 23);
      var $2324=(($S+24)|0);
      var $ld$1617$0=(($2324)|0);
      var $2325$0=HEAP32[(($ld$1617$0)>>2)];
      var $ld$1618$1=(($2324+4)|0);
      var $2325$1=HEAP32[(($ld$1618$1)>>2)];
      var $2326$0=($2325$0 << 23) | (0 >>> 9);
      var $2326$1=($2325$1 << 23) | ($2325$0 >>> 9);
      var $2327$0=$2323$0 | $2326$0;
      var $2327$1=$2323$1 | $2326$1;
      var $2328$0=$2320$0 ^ $2327$0;
      var $2328$1=$2320$1 ^ $2327$1;
      var $2329$0 = _i64Add($2305$0,$2305$1,$2328$0,$2328$1); var $2329$1 = tempRet0;
      var $2330=(($S+40)|0);
      var $ld$1619$0=(($2330)|0);
      var $2331$0=HEAP32[(($ld$1619$0)>>2)];
      var $ld$1620$1=(($2330+4)|0);
      var $2331$1=HEAP32[(($ld$1620$1)>>2)];
      var $2332=(($S+24)|0);
      var $ld$1621$0=(($2332)|0);
      var $2333$0=HEAP32[(($ld$1621$0)>>2)];
      var $ld$1622$1=(($2332+4)|0);
      var $2333$1=HEAP32[(($ld$1622$1)>>2)];
      var $2334=(($S+32)|0);
      var $ld$1623$0=(($2334)|0);
      var $2335$0=HEAP32[(($ld$1623$0)>>2)];
      var $ld$1624$1=(($2334+4)|0);
      var $2335$1=HEAP32[(($ld$1624$1)>>2)];
      var $2336=(($S+40)|0);
      var $ld$1625$0=(($2336)|0);
      var $2337$0=HEAP32[(($ld$1625$0)>>2)];
      var $ld$1626$1=(($2336+4)|0);
      var $2337$1=HEAP32[(($ld$1626$1)>>2)];
      var $2338$0=$2335$0 ^ $2337$0;
      var $2338$1=$2335$1 ^ $2337$1;
      var $2339$0=$2333$0 & $2338$0;
      var $2339$1=$2333$1 & $2338$1;
      var $2340$0=$2331$0 ^ $2339$0;
      var $2340$1=$2331$1 ^ $2339$1;
      var $2341$0 = _i64Add($2329$0,$2329$1,$2340$0,$2340$1); var $2341$1 = tempRet0;
      var $$etemp$1627$0=766784016;
      var $$etemp$1627$1=-1473132947;
      var $2342$0 = _i64Add($2341$0,$2341$1,$$etemp$1627$0,$$etemp$1627$1); var $2342$1 = tempRet0;
      var $2343=(($W+200)|0);
      var $ld$1628$0=(($2343)|0);
      var $2344$0=HEAP32[(($ld$1628$0)>>2)];
      var $ld$1629$1=(($2343+4)|0);
      var $2344$1=HEAP32[(($ld$1629$1)>>2)];
      var $2345$0 = _i64Add($2342$0,$2342$1,$2344$0,$2344$1); var $2345$1 = tempRet0;
      var $st$1630$0=(($t0)|0);
      HEAP32[(($st$1630$0)>>2)]=$2345$0;
      var $st$1631$1=(($t0+4)|0);
      HEAP32[(($st$1631$1)>>2)]=$2345$1;
      var $2346=(($S+56)|0);
      var $ld$1632$0=(($2346)|0);
      var $2347$0=HEAP32[(($ld$1632$0)>>2)];
      var $ld$1633$1=(($2346+4)|0);
      var $2347$1=HEAP32[(($ld$1633$1)>>2)];
      var $2348$0=($2347$0 >>> 28) | ($2347$1 << 4);
      var $2348$1=($2347$1 >>> 28) | (0 << 4);
      var $2349=(($S+56)|0);
      var $ld$1634$0=(($2349)|0);
      var $2350$0=HEAP32[(($ld$1634$0)>>2)];
      var $ld$1635$1=(($2349+4)|0);
      var $2350$1=HEAP32[(($ld$1635$1)>>2)];
      var $2351$0=(0 << 4) | (0 >>> 28);
      var $2351$1=($2350$0 << 4) | (0 >>> 28);
      var $2352$0=$2348$0 | $2351$0;
      var $2352$1=$2348$1 | $2351$1;
      var $2353=(($S+56)|0);
      var $ld$1636$0=(($2353)|0);
      var $2354$0=HEAP32[(($ld$1636$0)>>2)];
      var $ld$1637$1=(($2353+4)|0);
      var $2354$1=HEAP32[(($ld$1637$1)>>2)];
      var $2355$0=($2354$1 >>> 2) | (0 << 30);
      var $2355$1=(0 >>> 2) | (0 << 30);
      var $2356=(($S+56)|0);
      var $ld$1638$0=(($2356)|0);
      var $2357$0=HEAP32[(($ld$1638$0)>>2)];
      var $ld$1639$1=(($2356+4)|0);
      var $2357$1=HEAP32[(($ld$1639$1)>>2)];
      var $2358$0=($2357$0 << 30) | (0 >>> 2);
      var $2358$1=($2357$1 << 30) | ($2357$0 >>> 2);
      var $2359$0=$2355$0 | $2358$0;
      var $2359$1=$2355$1 | $2358$1;
      var $2360$0=$2352$0 ^ $2359$0;
      var $2360$1=$2352$1 ^ $2359$1;
      var $2361=(($S+56)|0);
      var $ld$1640$0=(($2361)|0);
      var $2362$0=HEAP32[(($ld$1640$0)>>2)];
      var $ld$1641$1=(($2361+4)|0);
      var $2362$1=HEAP32[(($ld$1641$1)>>2)];
      var $2363$0=($2362$1 >>> 7) | (0 << 25);
      var $2363$1=(0 >>> 7) | (0 << 25);
      var $2364=(($S+56)|0);
      var $ld$1642$0=(($2364)|0);
      var $2365$0=HEAP32[(($ld$1642$0)>>2)];
      var $ld$1643$1=(($2364+4)|0);
      var $2365$1=HEAP32[(($ld$1643$1)>>2)];
      var $2366$0=($2365$0 << 25) | (0 >>> 7);
      var $2366$1=($2365$1 << 25) | ($2365$0 >>> 7);
      var $2367$0=$2363$0 | $2366$0;
      var $2367$1=$2363$1 | $2366$1;
      var $2368$0=$2360$0 ^ $2367$0;
      var $2368$1=$2360$1 ^ $2367$1;
      var $2369=(($S+56)|0);
      var $ld$1644$0=(($2369)|0);
      var $2370$0=HEAP32[(($ld$1644$0)>>2)];
      var $ld$1645$1=(($2369+4)|0);
      var $2370$1=HEAP32[(($ld$1645$1)>>2)];
      var $2371=(($S)|0);
      var $ld$1646$0=(($2371)|0);
      var $2372$0=HEAP32[(($ld$1646$0)>>2)];
      var $ld$1647$1=(($2371+4)|0);
      var $2372$1=HEAP32[(($ld$1647$1)>>2)];
      var $2373$0=$2370$0 | $2372$0;
      var $2373$1=$2370$1 | $2372$1;
      var $2374=(($S+8)|0);
      var $ld$1648$0=(($2374)|0);
      var $2375$0=HEAP32[(($ld$1648$0)>>2)];
      var $ld$1649$1=(($2374+4)|0);
      var $2375$1=HEAP32[(($ld$1649$1)>>2)];
      var $2376$0=$2373$0 & $2375$0;
      var $2376$1=$2373$1 & $2375$1;
      var $2377=(($S+56)|0);
      var $ld$1650$0=(($2377)|0);
      var $2378$0=HEAP32[(($ld$1650$0)>>2)];
      var $ld$1651$1=(($2377+4)|0);
      var $2378$1=HEAP32[(($ld$1651$1)>>2)];
      var $2379=(($S)|0);
      var $ld$1652$0=(($2379)|0);
      var $2380$0=HEAP32[(($ld$1652$0)>>2)];
      var $ld$1653$1=(($2379+4)|0);
      var $2380$1=HEAP32[(($ld$1653$1)>>2)];
      var $2381$0=$2378$0 & $2380$0;
      var $2381$1=$2378$1 & $2380$1;
      var $2382$0=$2376$0 | $2381$0;
      var $2382$1=$2376$1 | $2381$1;
      var $2383$0 = _i64Add($2368$0,$2368$1,$2382$0,$2382$1); var $2383$1 = tempRet0;
      var $st$1654$0=(($t1)|0);
      HEAP32[(($st$1654$0)>>2)]=$2383$0;
      var $st$1655$1=(($t1+4)|0);
      HEAP32[(($st$1655$1)>>2)]=$2383$1;
      var $ld$1656$0=(($t0)|0);
      var $2384$0=HEAP32[(($ld$1656$0)>>2)];
      var $ld$1657$1=(($t0+4)|0);
      var $2384$1=HEAP32[(($ld$1657$1)>>2)];
      var $2385=(($S+16)|0);
      var $ld$1658$0=(($2385)|0);
      var $2386$0=HEAP32[(($ld$1658$0)>>2)];
      var $ld$1659$1=(($2385+4)|0);
      var $2386$1=HEAP32[(($ld$1659$1)>>2)];
      var $2387$0 = _i64Add($2386$0,$2386$1,$2384$0,$2384$1); var $2387$1 = tempRet0;
      var $st$1660$0=(($2385)|0);
      HEAP32[(($st$1660$0)>>2)]=$2387$0;
      var $st$1661$1=(($2385+4)|0);
      HEAP32[(($st$1661$1)>>2)]=$2387$1;
      var $ld$1662$0=(($t0)|0);
      var $2388$0=HEAP32[(($ld$1662$0)>>2)];
      var $ld$1663$1=(($t0+4)|0);
      var $2388$1=HEAP32[(($ld$1663$1)>>2)];
      var $ld$1664$0=(($t1)|0);
      var $2389$0=HEAP32[(($ld$1664$0)>>2)];
      var $ld$1665$1=(($t1+4)|0);
      var $2389$1=HEAP32[(($ld$1665$1)>>2)];
      var $2390$0 = _i64Add($2388$0,$2388$1,$2389$0,$2389$1); var $2390$1 = tempRet0;
      var $2391=(($S+48)|0);
      var $st$1666$0=(($2391)|0);
      HEAP32[(($st$1666$0)>>2)]=$2390$0;
      var $st$1667$1=(($2391+4)|0);
      HEAP32[(($st$1667$1)>>2)]=$2390$1;
      var $2392=(($S+40)|0);
      var $ld$1668$0=(($2392)|0);
      var $2393$0=HEAP32[(($ld$1668$0)>>2)];
      var $ld$1669$1=(($2392+4)|0);
      var $2393$1=HEAP32[(($ld$1669$1)>>2)];
      var $2394=(($S+16)|0);
      var $ld$1670$0=(($2394)|0);
      var $2395$0=HEAP32[(($ld$1670$0)>>2)];
      var $ld$1671$1=(($2394+4)|0);
      var $2395$1=HEAP32[(($ld$1671$1)>>2)];
      var $2396$0=($2395$0 >>> 14) | ($2395$1 << 18);
      var $2396$1=($2395$1 >>> 14) | (0 << 18);
      var $2397=(($S+16)|0);
      var $ld$1672$0=(($2397)|0);
      var $2398$0=HEAP32[(($ld$1672$0)>>2)];
      var $ld$1673$1=(($2397+4)|0);
      var $2398$1=HEAP32[(($ld$1673$1)>>2)];
      var $2399$0=(0 << 18) | (0 >>> 14);
      var $2399$1=($2398$0 << 18) | (0 >>> 14);
      var $2400$0=$2396$0 | $2399$0;
      var $2400$1=$2396$1 | $2399$1;
      var $2401=(($S+16)|0);
      var $ld$1674$0=(($2401)|0);
      var $2402$0=HEAP32[(($ld$1674$0)>>2)];
      var $ld$1675$1=(($2401+4)|0);
      var $2402$1=HEAP32[(($ld$1675$1)>>2)];
      var $2403$0=($2402$0 >>> 18) | ($2402$1 << 14);
      var $2403$1=($2402$1 >>> 18) | (0 << 14);
      var $2404=(($S+16)|0);
      var $ld$1676$0=(($2404)|0);
      var $2405$0=HEAP32[(($ld$1676$0)>>2)];
      var $ld$1677$1=(($2404+4)|0);
      var $2405$1=HEAP32[(($ld$1677$1)>>2)];
      var $2406$0=(0 << 14) | (0 >>> 18);
      var $2406$1=($2405$0 << 14) | (0 >>> 18);
      var $2407$0=$2403$0 | $2406$0;
      var $2407$1=$2403$1 | $2406$1;
      var $2408$0=$2400$0 ^ $2407$0;
      var $2408$1=$2400$1 ^ $2407$1;
      var $2409=(($S+16)|0);
      var $ld$1678$0=(($2409)|0);
      var $2410$0=HEAP32[(($ld$1678$0)>>2)];
      var $ld$1679$1=(($2409+4)|0);
      var $2410$1=HEAP32[(($ld$1679$1)>>2)];
      var $2411$0=($2410$1 >>> 9) | (0 << 23);
      var $2411$1=(0 >>> 9) | (0 << 23);
      var $2412=(($S+16)|0);
      var $ld$1680$0=(($2412)|0);
      var $2413$0=HEAP32[(($ld$1680$0)>>2)];
      var $ld$1681$1=(($2412+4)|0);
      var $2413$1=HEAP32[(($ld$1681$1)>>2)];
      var $2414$0=($2413$0 << 23) | (0 >>> 9);
      var $2414$1=($2413$1 << 23) | ($2413$0 >>> 9);
      var $2415$0=$2411$0 | $2414$0;
      var $2415$1=$2411$1 | $2414$1;
      var $2416$0=$2408$0 ^ $2415$0;
      var $2416$1=$2408$1 ^ $2415$1;
      var $2417$0 = _i64Add($2393$0,$2393$1,$2416$0,$2416$1); var $2417$1 = tempRet0;
      var $2418=(($S+32)|0);
      var $ld$1682$0=(($2418)|0);
      var $2419$0=HEAP32[(($ld$1682$0)>>2)];
      var $ld$1683$1=(($2418+4)|0);
      var $2419$1=HEAP32[(($ld$1683$1)>>2)];
      var $2420=(($S+16)|0);
      var $ld$1684$0=(($2420)|0);
      var $2421$0=HEAP32[(($ld$1684$0)>>2)];
      var $ld$1685$1=(($2420+4)|0);
      var $2421$1=HEAP32[(($ld$1685$1)>>2)];
      var $2422=(($S+24)|0);
      var $ld$1686$0=(($2422)|0);
      var $2423$0=HEAP32[(($ld$1686$0)>>2)];
      var $ld$1687$1=(($2422+4)|0);
      var $2423$1=HEAP32[(($ld$1687$1)>>2)];
      var $2424=(($S+32)|0);
      var $ld$1688$0=(($2424)|0);
      var $2425$0=HEAP32[(($ld$1688$0)>>2)];
      var $ld$1689$1=(($2424+4)|0);
      var $2425$1=HEAP32[(($ld$1689$1)>>2)];
      var $2426$0=$2423$0 ^ $2425$0;
      var $2426$1=$2423$1 ^ $2425$1;
      var $2427$0=$2421$0 & $2426$0;
      var $2427$1=$2421$1 & $2426$1;
      var $2428$0=$2419$0 ^ $2427$0;
      var $2428$1=$2419$1 ^ $2427$1;
      var $2429$0 = _i64Add($2417$0,$2417$1,$2428$0,$2428$1); var $2429$1 = tempRet0;
      var $$etemp$1690$0=-1728372417;
      var $$etemp$1690$1=-1341970488;
      var $2430$0 = _i64Add($2429$0,$2429$1,$$etemp$1690$0,$$etemp$1690$1); var $2430$1 = tempRet0;
      var $2431=(($W+208)|0);
      var $ld$1691$0=(($2431)|0);
      var $2432$0=HEAP32[(($ld$1691$0)>>2)];
      var $ld$1692$1=(($2431+4)|0);
      var $2432$1=HEAP32[(($ld$1692$1)>>2)];
      var $2433$0 = _i64Add($2430$0,$2430$1,$2432$0,$2432$1); var $2433$1 = tempRet0;
      var $st$1693$0=(($t0)|0);
      HEAP32[(($st$1693$0)>>2)]=$2433$0;
      var $st$1694$1=(($t0+4)|0);
      HEAP32[(($st$1694$1)>>2)]=$2433$1;
      var $2434=(($S+48)|0);
      var $ld$1695$0=(($2434)|0);
      var $2435$0=HEAP32[(($ld$1695$0)>>2)];
      var $ld$1696$1=(($2434+4)|0);
      var $2435$1=HEAP32[(($ld$1696$1)>>2)];
      var $2436$0=($2435$0 >>> 28) | ($2435$1 << 4);
      var $2436$1=($2435$1 >>> 28) | (0 << 4);
      var $2437=(($S+48)|0);
      var $ld$1697$0=(($2437)|0);
      var $2438$0=HEAP32[(($ld$1697$0)>>2)];
      var $ld$1698$1=(($2437+4)|0);
      var $2438$1=HEAP32[(($ld$1698$1)>>2)];
      var $2439$0=(0 << 4) | (0 >>> 28);
      var $2439$1=($2438$0 << 4) | (0 >>> 28);
      var $2440$0=$2436$0 | $2439$0;
      var $2440$1=$2436$1 | $2439$1;
      var $2441=(($S+48)|0);
      var $ld$1699$0=(($2441)|0);
      var $2442$0=HEAP32[(($ld$1699$0)>>2)];
      var $ld$1700$1=(($2441+4)|0);
      var $2442$1=HEAP32[(($ld$1700$1)>>2)];
      var $2443$0=($2442$1 >>> 2) | (0 << 30);
      var $2443$1=(0 >>> 2) | (0 << 30);
      var $2444=(($S+48)|0);
      var $ld$1701$0=(($2444)|0);
      var $2445$0=HEAP32[(($ld$1701$0)>>2)];
      var $ld$1702$1=(($2444+4)|0);
      var $2445$1=HEAP32[(($ld$1702$1)>>2)];
      var $2446$0=($2445$0 << 30) | (0 >>> 2);
      var $2446$1=($2445$1 << 30) | ($2445$0 >>> 2);
      var $2447$0=$2443$0 | $2446$0;
      var $2447$1=$2443$1 | $2446$1;
      var $2448$0=$2440$0 ^ $2447$0;
      var $2448$1=$2440$1 ^ $2447$1;
      var $2449=(($S+48)|0);
      var $ld$1703$0=(($2449)|0);
      var $2450$0=HEAP32[(($ld$1703$0)>>2)];
      var $ld$1704$1=(($2449+4)|0);
      var $2450$1=HEAP32[(($ld$1704$1)>>2)];
      var $2451$0=($2450$1 >>> 7) | (0 << 25);
      var $2451$1=(0 >>> 7) | (0 << 25);
      var $2452=(($S+48)|0);
      var $ld$1705$0=(($2452)|0);
      var $2453$0=HEAP32[(($ld$1705$0)>>2)];
      var $ld$1706$1=(($2452+4)|0);
      var $2453$1=HEAP32[(($ld$1706$1)>>2)];
      var $2454$0=($2453$0 << 25) | (0 >>> 7);
      var $2454$1=($2453$1 << 25) | ($2453$0 >>> 7);
      var $2455$0=$2451$0 | $2454$0;
      var $2455$1=$2451$1 | $2454$1;
      var $2456$0=$2448$0 ^ $2455$0;
      var $2456$1=$2448$1 ^ $2455$1;
      var $2457=(($S+48)|0);
      var $ld$1707$0=(($2457)|0);
      var $2458$0=HEAP32[(($ld$1707$0)>>2)];
      var $ld$1708$1=(($2457+4)|0);
      var $2458$1=HEAP32[(($ld$1708$1)>>2)];
      var $2459=(($S+56)|0);
      var $ld$1709$0=(($2459)|0);
      var $2460$0=HEAP32[(($ld$1709$0)>>2)];
      var $ld$1710$1=(($2459+4)|0);
      var $2460$1=HEAP32[(($ld$1710$1)>>2)];
      var $2461$0=$2458$0 | $2460$0;
      var $2461$1=$2458$1 | $2460$1;
      var $2462=(($S)|0);
      var $ld$1711$0=(($2462)|0);
      var $2463$0=HEAP32[(($ld$1711$0)>>2)];
      var $ld$1712$1=(($2462+4)|0);
      var $2463$1=HEAP32[(($ld$1712$1)>>2)];
      var $2464$0=$2461$0 & $2463$0;
      var $2464$1=$2461$1 & $2463$1;
      var $2465=(($S+48)|0);
      var $ld$1713$0=(($2465)|0);
      var $2466$0=HEAP32[(($ld$1713$0)>>2)];
      var $ld$1714$1=(($2465+4)|0);
      var $2466$1=HEAP32[(($ld$1714$1)>>2)];
      var $2467=(($S+56)|0);
      var $ld$1715$0=(($2467)|0);
      var $2468$0=HEAP32[(($ld$1715$0)>>2)];
      var $ld$1716$1=(($2467+4)|0);
      var $2468$1=HEAP32[(($ld$1716$1)>>2)];
      var $2469$0=$2466$0 & $2468$0;
      var $2469$1=$2466$1 & $2468$1;
      var $2470$0=$2464$0 | $2469$0;
      var $2470$1=$2464$1 | $2469$1;
      var $2471$0 = _i64Add($2456$0,$2456$1,$2470$0,$2470$1); var $2471$1 = tempRet0;
      var $st$1717$0=(($t1)|0);
      HEAP32[(($st$1717$0)>>2)]=$2471$0;
      var $st$1718$1=(($t1+4)|0);
      HEAP32[(($st$1718$1)>>2)]=$2471$1;
      var $ld$1719$0=(($t0)|0);
      var $2472$0=HEAP32[(($ld$1719$0)>>2)];
      var $ld$1720$1=(($t0+4)|0);
      var $2472$1=HEAP32[(($ld$1720$1)>>2)];
      var $2473=(($S+8)|0);
      var $ld$1721$0=(($2473)|0);
      var $2474$0=HEAP32[(($ld$1721$0)>>2)];
      var $ld$1722$1=(($2473+4)|0);
      var $2474$1=HEAP32[(($ld$1722$1)>>2)];
      var $2475$0 = _i64Add($2474$0,$2474$1,$2472$0,$2472$1); var $2475$1 = tempRet0;
      var $st$1723$0=(($2473)|0);
      HEAP32[(($st$1723$0)>>2)]=$2475$0;
      var $st$1724$1=(($2473+4)|0);
      HEAP32[(($st$1724$1)>>2)]=$2475$1;
      var $ld$1725$0=(($t0)|0);
      var $2476$0=HEAP32[(($ld$1725$0)>>2)];
      var $ld$1726$1=(($t0+4)|0);
      var $2476$1=HEAP32[(($ld$1726$1)>>2)];
      var $ld$1727$0=(($t1)|0);
      var $2477$0=HEAP32[(($ld$1727$0)>>2)];
      var $ld$1728$1=(($t1+4)|0);
      var $2477$1=HEAP32[(($ld$1728$1)>>2)];
      var $2478$0 = _i64Add($2476$0,$2476$1,$2477$0,$2477$1); var $2478$1 = tempRet0;
      var $2479=(($S+40)|0);
      var $st$1729$0=(($2479)|0);
      HEAP32[(($st$1729$0)>>2)]=$2478$0;
      var $st$1730$1=(($2479+4)|0);
      HEAP32[(($st$1730$1)>>2)]=$2478$1;
      var $2480=(($S+32)|0);
      var $ld$1731$0=(($2480)|0);
      var $2481$0=HEAP32[(($ld$1731$0)>>2)];
      var $ld$1732$1=(($2480+4)|0);
      var $2481$1=HEAP32[(($ld$1732$1)>>2)];
      var $2482=(($S+8)|0);
      var $ld$1733$0=(($2482)|0);
      var $2483$0=HEAP32[(($ld$1733$0)>>2)];
      var $ld$1734$1=(($2482+4)|0);
      var $2483$1=HEAP32[(($ld$1734$1)>>2)];
      var $2484$0=($2483$0 >>> 14) | ($2483$1 << 18);
      var $2484$1=($2483$1 >>> 14) | (0 << 18);
      var $2485=(($S+8)|0);
      var $ld$1735$0=(($2485)|0);
      var $2486$0=HEAP32[(($ld$1735$0)>>2)];
      var $ld$1736$1=(($2485+4)|0);
      var $2486$1=HEAP32[(($ld$1736$1)>>2)];
      var $2487$0=(0 << 18) | (0 >>> 14);
      var $2487$1=($2486$0 << 18) | (0 >>> 14);
      var $2488$0=$2484$0 | $2487$0;
      var $2488$1=$2484$1 | $2487$1;
      var $2489=(($S+8)|0);
      var $ld$1737$0=(($2489)|0);
      var $2490$0=HEAP32[(($ld$1737$0)>>2)];
      var $ld$1738$1=(($2489+4)|0);
      var $2490$1=HEAP32[(($ld$1738$1)>>2)];
      var $2491$0=($2490$0 >>> 18) | ($2490$1 << 14);
      var $2491$1=($2490$1 >>> 18) | (0 << 14);
      var $2492=(($S+8)|0);
      var $ld$1739$0=(($2492)|0);
      var $2493$0=HEAP32[(($ld$1739$0)>>2)];
      var $ld$1740$1=(($2492+4)|0);
      var $2493$1=HEAP32[(($ld$1740$1)>>2)];
      var $2494$0=(0 << 14) | (0 >>> 18);
      var $2494$1=($2493$0 << 14) | (0 >>> 18);
      var $2495$0=$2491$0 | $2494$0;
      var $2495$1=$2491$1 | $2494$1;
      var $2496$0=$2488$0 ^ $2495$0;
      var $2496$1=$2488$1 ^ $2495$1;
      var $2497=(($S+8)|0);
      var $ld$1741$0=(($2497)|0);
      var $2498$0=HEAP32[(($ld$1741$0)>>2)];
      var $ld$1742$1=(($2497+4)|0);
      var $2498$1=HEAP32[(($ld$1742$1)>>2)];
      var $2499$0=($2498$1 >>> 9) | (0 << 23);
      var $2499$1=(0 >>> 9) | (0 << 23);
      var $2500=(($S+8)|0);
      var $ld$1743$0=(($2500)|0);
      var $2501$0=HEAP32[(($ld$1743$0)>>2)];
      var $ld$1744$1=(($2500+4)|0);
      var $2501$1=HEAP32[(($ld$1744$1)>>2)];
      var $2502$0=($2501$0 << 23) | (0 >>> 9);
      var $2502$1=($2501$1 << 23) | ($2501$0 >>> 9);
      var $2503$0=$2499$0 | $2502$0;
      var $2503$1=$2499$1 | $2502$1;
      var $2504$0=$2496$0 ^ $2503$0;
      var $2504$1=$2496$1 ^ $2503$1;
      var $2505$0 = _i64Add($2481$0,$2481$1,$2504$0,$2504$1); var $2505$1 = tempRet0;
      var $2506=(($S+24)|0);
      var $ld$1745$0=(($2506)|0);
      var $2507$0=HEAP32[(($ld$1745$0)>>2)];
      var $ld$1746$1=(($2506+4)|0);
      var $2507$1=HEAP32[(($ld$1746$1)>>2)];
      var $2508=(($S+8)|0);
      var $ld$1747$0=(($2508)|0);
      var $2509$0=HEAP32[(($ld$1747$0)>>2)];
      var $ld$1748$1=(($2508+4)|0);
      var $2509$1=HEAP32[(($ld$1748$1)>>2)];
      var $2510=(($S+16)|0);
      var $ld$1749$0=(($2510)|0);
      var $2511$0=HEAP32[(($ld$1749$0)>>2)];
      var $ld$1750$1=(($2510+4)|0);
      var $2511$1=HEAP32[(($ld$1750$1)>>2)];
      var $2512=(($S+24)|0);
      var $ld$1751$0=(($2512)|0);
      var $2513$0=HEAP32[(($ld$1751$0)>>2)];
      var $ld$1752$1=(($2512+4)|0);
      var $2513$1=HEAP32[(($ld$1752$1)>>2)];
      var $2514$0=$2511$0 ^ $2513$0;
      var $2514$1=$2511$1 ^ $2513$1;
      var $2515$0=$2509$0 & $2514$0;
      var $2515$1=$2509$1 & $2514$1;
      var $2516$0=$2507$0 ^ $2515$0;
      var $2516$1=$2507$1 ^ $2515$1;
      var $2517$0 = _i64Add($2505$0,$2505$1,$2516$0,$2516$1); var $2517$1 = tempRet0;
      var $$etemp$1753$0=-1091629340;
      var $$etemp$1753$1=-1084653625;
      var $2518$0 = _i64Add($2517$0,$2517$1,$$etemp$1753$0,$$etemp$1753$1); var $2518$1 = tempRet0;
      var $2519=(($W+216)|0);
      var $ld$1754$0=(($2519)|0);
      var $2520$0=HEAP32[(($ld$1754$0)>>2)];
      var $ld$1755$1=(($2519+4)|0);
      var $2520$1=HEAP32[(($ld$1755$1)>>2)];
      var $2521$0 = _i64Add($2518$0,$2518$1,$2520$0,$2520$1); var $2521$1 = tempRet0;
      var $st$1756$0=(($t0)|0);
      HEAP32[(($st$1756$0)>>2)]=$2521$0;
      var $st$1757$1=(($t0+4)|0);
      HEAP32[(($st$1757$1)>>2)]=$2521$1;
      var $2522=(($S+40)|0);
      var $ld$1758$0=(($2522)|0);
      var $2523$0=HEAP32[(($ld$1758$0)>>2)];
      var $ld$1759$1=(($2522+4)|0);
      var $2523$1=HEAP32[(($ld$1759$1)>>2)];
      var $2524$0=($2523$0 >>> 28) | ($2523$1 << 4);
      var $2524$1=($2523$1 >>> 28) | (0 << 4);
      var $2525=(($S+40)|0);
      var $ld$1760$0=(($2525)|0);
      var $2526$0=HEAP32[(($ld$1760$0)>>2)];
      var $ld$1761$1=(($2525+4)|0);
      var $2526$1=HEAP32[(($ld$1761$1)>>2)];
      var $2527$0=(0 << 4) | (0 >>> 28);
      var $2527$1=($2526$0 << 4) | (0 >>> 28);
      var $2528$0=$2524$0 | $2527$0;
      var $2528$1=$2524$1 | $2527$1;
      var $2529=(($S+40)|0);
      var $ld$1762$0=(($2529)|0);
      var $2530$0=HEAP32[(($ld$1762$0)>>2)];
      var $ld$1763$1=(($2529+4)|0);
      var $2530$1=HEAP32[(($ld$1763$1)>>2)];
      var $2531$0=($2530$1 >>> 2) | (0 << 30);
      var $2531$1=(0 >>> 2) | (0 << 30);
      var $2532=(($S+40)|0);
      var $ld$1764$0=(($2532)|0);
      var $2533$0=HEAP32[(($ld$1764$0)>>2)];
      var $ld$1765$1=(($2532+4)|0);
      var $2533$1=HEAP32[(($ld$1765$1)>>2)];
      var $2534$0=($2533$0 << 30) | (0 >>> 2);
      var $2534$1=($2533$1 << 30) | ($2533$0 >>> 2);
      var $2535$0=$2531$0 | $2534$0;
      var $2535$1=$2531$1 | $2534$1;
      var $2536$0=$2528$0 ^ $2535$0;
      var $2536$1=$2528$1 ^ $2535$1;
      var $2537=(($S+40)|0);
      var $ld$1766$0=(($2537)|0);
      var $2538$0=HEAP32[(($ld$1766$0)>>2)];
      var $ld$1767$1=(($2537+4)|0);
      var $2538$1=HEAP32[(($ld$1767$1)>>2)];
      var $2539$0=($2538$1 >>> 7) | (0 << 25);
      var $2539$1=(0 >>> 7) | (0 << 25);
      var $2540=(($S+40)|0);
      var $ld$1768$0=(($2540)|0);
      var $2541$0=HEAP32[(($ld$1768$0)>>2)];
      var $ld$1769$1=(($2540+4)|0);
      var $2541$1=HEAP32[(($ld$1769$1)>>2)];
      var $2542$0=($2541$0 << 25) | (0 >>> 7);
      var $2542$1=($2541$1 << 25) | ($2541$0 >>> 7);
      var $2543$0=$2539$0 | $2542$0;
      var $2543$1=$2539$1 | $2542$1;
      var $2544$0=$2536$0 ^ $2543$0;
      var $2544$1=$2536$1 ^ $2543$1;
      var $2545=(($S+40)|0);
      var $ld$1770$0=(($2545)|0);
      var $2546$0=HEAP32[(($ld$1770$0)>>2)];
      var $ld$1771$1=(($2545+4)|0);
      var $2546$1=HEAP32[(($ld$1771$1)>>2)];
      var $2547=(($S+48)|0);
      var $ld$1772$0=(($2547)|0);
      var $2548$0=HEAP32[(($ld$1772$0)>>2)];
      var $ld$1773$1=(($2547+4)|0);
      var $2548$1=HEAP32[(($ld$1773$1)>>2)];
      var $2549$0=$2546$0 | $2548$0;
      var $2549$1=$2546$1 | $2548$1;
      var $2550=(($S+56)|0);
      var $ld$1774$0=(($2550)|0);
      var $2551$0=HEAP32[(($ld$1774$0)>>2)];
      var $ld$1775$1=(($2550+4)|0);
      var $2551$1=HEAP32[(($ld$1775$1)>>2)];
      var $2552$0=$2549$0 & $2551$0;
      var $2552$1=$2549$1 & $2551$1;
      var $2553=(($S+40)|0);
      var $ld$1776$0=(($2553)|0);
      var $2554$0=HEAP32[(($ld$1776$0)>>2)];
      var $ld$1777$1=(($2553+4)|0);
      var $2554$1=HEAP32[(($ld$1777$1)>>2)];
      var $2555=(($S+48)|0);
      var $ld$1778$0=(($2555)|0);
      var $2556$0=HEAP32[(($ld$1778$0)>>2)];
      var $ld$1779$1=(($2555+4)|0);
      var $2556$1=HEAP32[(($ld$1779$1)>>2)];
      var $2557$0=$2554$0 & $2556$0;
      var $2557$1=$2554$1 & $2556$1;
      var $2558$0=$2552$0 | $2557$0;
      var $2558$1=$2552$1 | $2557$1;
      var $2559$0 = _i64Add($2544$0,$2544$1,$2558$0,$2558$1); var $2559$1 = tempRet0;
      var $st$1780$0=(($t1)|0);
      HEAP32[(($st$1780$0)>>2)]=$2559$0;
      var $st$1781$1=(($t1+4)|0);
      HEAP32[(($st$1781$1)>>2)]=$2559$1;
      var $ld$1782$0=(($t0)|0);
      var $2560$0=HEAP32[(($ld$1782$0)>>2)];
      var $ld$1783$1=(($t0+4)|0);
      var $2560$1=HEAP32[(($ld$1783$1)>>2)];
      var $2561=(($S)|0);
      var $ld$1784$0=(($2561)|0);
      var $2562$0=HEAP32[(($ld$1784$0)>>2)];
      var $ld$1785$1=(($2561+4)|0);
      var $2562$1=HEAP32[(($ld$1785$1)>>2)];
      var $2563$0 = _i64Add($2562$0,$2562$1,$2560$0,$2560$1); var $2563$1 = tempRet0;
      var $st$1786$0=(($2561)|0);
      HEAP32[(($st$1786$0)>>2)]=$2563$0;
      var $st$1787$1=(($2561+4)|0);
      HEAP32[(($st$1787$1)>>2)]=$2563$1;
      var $ld$1788$0=(($t0)|0);
      var $2564$0=HEAP32[(($ld$1788$0)>>2)];
      var $ld$1789$1=(($t0+4)|0);
      var $2564$1=HEAP32[(($ld$1789$1)>>2)];
      var $ld$1790$0=(($t1)|0);
      var $2565$0=HEAP32[(($ld$1790$0)>>2)];
      var $ld$1791$1=(($t1+4)|0);
      var $2565$1=HEAP32[(($ld$1791$1)>>2)];
      var $2566$0 = _i64Add($2564$0,$2564$1,$2565$0,$2565$1); var $2566$1 = tempRet0;
      var $2567=(($S+32)|0);
      var $st$1792$0=(($2567)|0);
      HEAP32[(($st$1792$0)>>2)]=$2566$0;
      var $st$1793$1=(($2567+4)|0);
      HEAP32[(($st$1793$1)>>2)]=$2566$1;
      var $2568=(($S+24)|0);
      var $ld$1794$0=(($2568)|0);
      var $2569$0=HEAP32[(($ld$1794$0)>>2)];
      var $ld$1795$1=(($2568+4)|0);
      var $2569$1=HEAP32[(($ld$1795$1)>>2)];
      var $2570=(($S)|0);
      var $ld$1796$0=(($2570)|0);
      var $2571$0=HEAP32[(($ld$1796$0)>>2)];
      var $ld$1797$1=(($2570+4)|0);
      var $2571$1=HEAP32[(($ld$1797$1)>>2)];
      var $2572$0=($2571$0 >>> 14) | ($2571$1 << 18);
      var $2572$1=($2571$1 >>> 14) | (0 << 18);
      var $2573=(($S)|0);
      var $ld$1798$0=(($2573)|0);
      var $2574$0=HEAP32[(($ld$1798$0)>>2)];
      var $ld$1799$1=(($2573+4)|0);
      var $2574$1=HEAP32[(($ld$1799$1)>>2)];
      var $2575$0=(0 << 18) | (0 >>> 14);
      var $2575$1=($2574$0 << 18) | (0 >>> 14);
      var $2576$0=$2572$0 | $2575$0;
      var $2576$1=$2572$1 | $2575$1;
      var $2577=(($S)|0);
      var $ld$1800$0=(($2577)|0);
      var $2578$0=HEAP32[(($ld$1800$0)>>2)];
      var $ld$1801$1=(($2577+4)|0);
      var $2578$1=HEAP32[(($ld$1801$1)>>2)];
      var $2579$0=($2578$0 >>> 18) | ($2578$1 << 14);
      var $2579$1=($2578$1 >>> 18) | (0 << 14);
      var $2580=(($S)|0);
      var $ld$1802$0=(($2580)|0);
      var $2581$0=HEAP32[(($ld$1802$0)>>2)];
      var $ld$1803$1=(($2580+4)|0);
      var $2581$1=HEAP32[(($ld$1803$1)>>2)];
      var $2582$0=(0 << 14) | (0 >>> 18);
      var $2582$1=($2581$0 << 14) | (0 >>> 18);
      var $2583$0=$2579$0 | $2582$0;
      var $2583$1=$2579$1 | $2582$1;
      var $2584$0=$2576$0 ^ $2583$0;
      var $2584$1=$2576$1 ^ $2583$1;
      var $2585=(($S)|0);
      var $ld$1804$0=(($2585)|0);
      var $2586$0=HEAP32[(($ld$1804$0)>>2)];
      var $ld$1805$1=(($2585+4)|0);
      var $2586$1=HEAP32[(($ld$1805$1)>>2)];
      var $2587$0=($2586$1 >>> 9) | (0 << 23);
      var $2587$1=(0 >>> 9) | (0 << 23);
      var $2588=(($S)|0);
      var $ld$1806$0=(($2588)|0);
      var $2589$0=HEAP32[(($ld$1806$0)>>2)];
      var $ld$1807$1=(($2588+4)|0);
      var $2589$1=HEAP32[(($ld$1807$1)>>2)];
      var $2590$0=($2589$0 << 23) | (0 >>> 9);
      var $2590$1=($2589$1 << 23) | ($2589$0 >>> 9);
      var $2591$0=$2587$0 | $2590$0;
      var $2591$1=$2587$1 | $2590$1;
      var $2592$0=$2584$0 ^ $2591$0;
      var $2592$1=$2584$1 ^ $2591$1;
      var $2593$0 = _i64Add($2569$0,$2569$1,$2592$0,$2592$1); var $2593$1 = tempRet0;
      var $2594=(($S+16)|0);
      var $ld$1808$0=(($2594)|0);
      var $2595$0=HEAP32[(($ld$1808$0)>>2)];
      var $ld$1809$1=(($2594+4)|0);
      var $2595$1=HEAP32[(($ld$1809$1)>>2)];
      var $2596=(($S)|0);
      var $ld$1810$0=(($2596)|0);
      var $2597$0=HEAP32[(($ld$1810$0)>>2)];
      var $ld$1811$1=(($2596+4)|0);
      var $2597$1=HEAP32[(($ld$1811$1)>>2)];
      var $2598=(($S+8)|0);
      var $ld$1812$0=(($2598)|0);
      var $2599$0=HEAP32[(($ld$1812$0)>>2)];
      var $ld$1813$1=(($2598+4)|0);
      var $2599$1=HEAP32[(($ld$1813$1)>>2)];
      var $2600=(($S+16)|0);
      var $ld$1814$0=(($2600)|0);
      var $2601$0=HEAP32[(($ld$1814$0)>>2)];
      var $ld$1815$1=(($2600+4)|0);
      var $2601$1=HEAP32[(($ld$1815$1)>>2)];
      var $2602$0=$2599$0 ^ $2601$0;
      var $2602$1=$2599$1 ^ $2601$1;
      var $2603$0=$2597$0 & $2602$0;
      var $2603$1=$2597$1 & $2602$1;
      var $2604$0=$2595$0 ^ $2603$0;
      var $2604$1=$2595$1 ^ $2603$1;
      var $2605$0 = _i64Add($2593$0,$2593$1,$2604$0,$2604$1); var $2605$1 = tempRet0;
      var $$etemp$1816$0=1034457026;
      var $$etemp$1816$1=-958395405;
      var $2606$0 = _i64Add($2605$0,$2605$1,$$etemp$1816$0,$$etemp$1816$1); var $2606$1 = tempRet0;
      var $2607=(($W+224)|0);
      var $ld$1817$0=(($2607)|0);
      var $2608$0=HEAP32[(($ld$1817$0)>>2)];
      var $ld$1818$1=(($2607+4)|0);
      var $2608$1=HEAP32[(($ld$1818$1)>>2)];
      var $2609$0 = _i64Add($2606$0,$2606$1,$2608$0,$2608$1); var $2609$1 = tempRet0;
      var $st$1819$0=(($t0)|0);
      HEAP32[(($st$1819$0)>>2)]=$2609$0;
      var $st$1820$1=(($t0+4)|0);
      HEAP32[(($st$1820$1)>>2)]=$2609$1;
      var $2610=(($S+32)|0);
      var $ld$1821$0=(($2610)|0);
      var $2611$0=HEAP32[(($ld$1821$0)>>2)];
      var $ld$1822$1=(($2610+4)|0);
      var $2611$1=HEAP32[(($ld$1822$1)>>2)];
      var $2612$0=($2611$0 >>> 28) | ($2611$1 << 4);
      var $2612$1=($2611$1 >>> 28) | (0 << 4);
      var $2613=(($S+32)|0);
      var $ld$1823$0=(($2613)|0);
      var $2614$0=HEAP32[(($ld$1823$0)>>2)];
      var $ld$1824$1=(($2613+4)|0);
      var $2614$1=HEAP32[(($ld$1824$1)>>2)];
      var $2615$0=(0 << 4) | (0 >>> 28);
      var $2615$1=($2614$0 << 4) | (0 >>> 28);
      var $2616$0=$2612$0 | $2615$0;
      var $2616$1=$2612$1 | $2615$1;
      var $2617=(($S+32)|0);
      var $ld$1825$0=(($2617)|0);
      var $2618$0=HEAP32[(($ld$1825$0)>>2)];
      var $ld$1826$1=(($2617+4)|0);
      var $2618$1=HEAP32[(($ld$1826$1)>>2)];
      var $2619$0=($2618$1 >>> 2) | (0 << 30);
      var $2619$1=(0 >>> 2) | (0 << 30);
      var $2620=(($S+32)|0);
      var $ld$1827$0=(($2620)|0);
      var $2621$0=HEAP32[(($ld$1827$0)>>2)];
      var $ld$1828$1=(($2620+4)|0);
      var $2621$1=HEAP32[(($ld$1828$1)>>2)];
      var $2622$0=($2621$0 << 30) | (0 >>> 2);
      var $2622$1=($2621$1 << 30) | ($2621$0 >>> 2);
      var $2623$0=$2619$0 | $2622$0;
      var $2623$1=$2619$1 | $2622$1;
      var $2624$0=$2616$0 ^ $2623$0;
      var $2624$1=$2616$1 ^ $2623$1;
      var $2625=(($S+32)|0);
      var $ld$1829$0=(($2625)|0);
      var $2626$0=HEAP32[(($ld$1829$0)>>2)];
      var $ld$1830$1=(($2625+4)|0);
      var $2626$1=HEAP32[(($ld$1830$1)>>2)];
      var $2627$0=($2626$1 >>> 7) | (0 << 25);
      var $2627$1=(0 >>> 7) | (0 << 25);
      var $2628=(($S+32)|0);
      var $ld$1831$0=(($2628)|0);
      var $2629$0=HEAP32[(($ld$1831$0)>>2)];
      var $ld$1832$1=(($2628+4)|0);
      var $2629$1=HEAP32[(($ld$1832$1)>>2)];
      var $2630$0=($2629$0 << 25) | (0 >>> 7);
      var $2630$1=($2629$1 << 25) | ($2629$0 >>> 7);
      var $2631$0=$2627$0 | $2630$0;
      var $2631$1=$2627$1 | $2630$1;
      var $2632$0=$2624$0 ^ $2631$0;
      var $2632$1=$2624$1 ^ $2631$1;
      var $2633=(($S+32)|0);
      var $ld$1833$0=(($2633)|0);
      var $2634$0=HEAP32[(($ld$1833$0)>>2)];
      var $ld$1834$1=(($2633+4)|0);
      var $2634$1=HEAP32[(($ld$1834$1)>>2)];
      var $2635=(($S+40)|0);
      var $ld$1835$0=(($2635)|0);
      var $2636$0=HEAP32[(($ld$1835$0)>>2)];
      var $ld$1836$1=(($2635+4)|0);
      var $2636$1=HEAP32[(($ld$1836$1)>>2)];
      var $2637$0=$2634$0 | $2636$0;
      var $2637$1=$2634$1 | $2636$1;
      var $2638=(($S+48)|0);
      var $ld$1837$0=(($2638)|0);
      var $2639$0=HEAP32[(($ld$1837$0)>>2)];
      var $ld$1838$1=(($2638+4)|0);
      var $2639$1=HEAP32[(($ld$1838$1)>>2)];
      var $2640$0=$2637$0 & $2639$0;
      var $2640$1=$2637$1 & $2639$1;
      var $2641=(($S+32)|0);
      var $ld$1839$0=(($2641)|0);
      var $2642$0=HEAP32[(($ld$1839$0)>>2)];
      var $ld$1840$1=(($2641+4)|0);
      var $2642$1=HEAP32[(($ld$1840$1)>>2)];
      var $2643=(($S+40)|0);
      var $ld$1841$0=(($2643)|0);
      var $2644$0=HEAP32[(($ld$1841$0)>>2)];
      var $ld$1842$1=(($2643+4)|0);
      var $2644$1=HEAP32[(($ld$1842$1)>>2)];
      var $2645$0=$2642$0 & $2644$0;
      var $2645$1=$2642$1 & $2644$1;
      var $2646$0=$2640$0 | $2645$0;
      var $2646$1=$2640$1 | $2645$1;
      var $2647$0 = _i64Add($2632$0,$2632$1,$2646$0,$2646$1); var $2647$1 = tempRet0;
      var $st$1843$0=(($t1)|0);
      HEAP32[(($st$1843$0)>>2)]=$2647$0;
      var $st$1844$1=(($t1+4)|0);
      HEAP32[(($st$1844$1)>>2)]=$2647$1;
      var $ld$1845$0=(($t0)|0);
      var $2648$0=HEAP32[(($ld$1845$0)>>2)];
      var $ld$1846$1=(($t0+4)|0);
      var $2648$1=HEAP32[(($ld$1846$1)>>2)];
      var $2649=(($S+56)|0);
      var $ld$1847$0=(($2649)|0);
      var $2650$0=HEAP32[(($ld$1847$0)>>2)];
      var $ld$1848$1=(($2649+4)|0);
      var $2650$1=HEAP32[(($ld$1848$1)>>2)];
      var $2651$0 = _i64Add($2650$0,$2650$1,$2648$0,$2648$1); var $2651$1 = tempRet0;
      var $st$1849$0=(($2649)|0);
      HEAP32[(($st$1849$0)>>2)]=$2651$0;
      var $st$1850$1=(($2649+4)|0);
      HEAP32[(($st$1850$1)>>2)]=$2651$1;
      var $ld$1851$0=(($t0)|0);
      var $2652$0=HEAP32[(($ld$1851$0)>>2)];
      var $ld$1852$1=(($t0+4)|0);
      var $2652$1=HEAP32[(($ld$1852$1)>>2)];
      var $ld$1853$0=(($t1)|0);
      var $2653$0=HEAP32[(($ld$1853$0)>>2)];
      var $ld$1854$1=(($t1+4)|0);
      var $2653$1=HEAP32[(($ld$1854$1)>>2)];
      var $2654$0 = _i64Add($2652$0,$2652$1,$2653$0,$2653$1); var $2654$1 = tempRet0;
      var $2655=(($S+24)|0);
      var $st$1855$0=(($2655)|0);
      HEAP32[(($st$1855$0)>>2)]=$2654$0;
      var $st$1856$1=(($2655+4)|0);
      HEAP32[(($st$1856$1)>>2)]=$2654$1;
      var $2656=(($S+16)|0);
      var $ld$1857$0=(($2656)|0);
      var $2657$0=HEAP32[(($ld$1857$0)>>2)];
      var $ld$1858$1=(($2656+4)|0);
      var $2657$1=HEAP32[(($ld$1858$1)>>2)];
      var $2658=(($S+56)|0);
      var $ld$1859$0=(($2658)|0);
      var $2659$0=HEAP32[(($ld$1859$0)>>2)];
      var $ld$1860$1=(($2658+4)|0);
      var $2659$1=HEAP32[(($ld$1860$1)>>2)];
      var $2660$0=($2659$0 >>> 14) | ($2659$1 << 18);
      var $2660$1=($2659$1 >>> 14) | (0 << 18);
      var $2661=(($S+56)|0);
      var $ld$1861$0=(($2661)|0);
      var $2662$0=HEAP32[(($ld$1861$0)>>2)];
      var $ld$1862$1=(($2661+4)|0);
      var $2662$1=HEAP32[(($ld$1862$1)>>2)];
      var $2663$0=(0 << 18) | (0 >>> 14);
      var $2663$1=($2662$0 << 18) | (0 >>> 14);
      var $2664$0=$2660$0 | $2663$0;
      var $2664$1=$2660$1 | $2663$1;
      var $2665=(($S+56)|0);
      var $ld$1863$0=(($2665)|0);
      var $2666$0=HEAP32[(($ld$1863$0)>>2)];
      var $ld$1864$1=(($2665+4)|0);
      var $2666$1=HEAP32[(($ld$1864$1)>>2)];
      var $2667$0=($2666$0 >>> 18) | ($2666$1 << 14);
      var $2667$1=($2666$1 >>> 18) | (0 << 14);
      var $2668=(($S+56)|0);
      var $ld$1865$0=(($2668)|0);
      var $2669$0=HEAP32[(($ld$1865$0)>>2)];
      var $ld$1866$1=(($2668+4)|0);
      var $2669$1=HEAP32[(($ld$1866$1)>>2)];
      var $2670$0=(0 << 14) | (0 >>> 18);
      var $2670$1=($2669$0 << 14) | (0 >>> 18);
      var $2671$0=$2667$0 | $2670$0;
      var $2671$1=$2667$1 | $2670$1;
      var $2672$0=$2664$0 ^ $2671$0;
      var $2672$1=$2664$1 ^ $2671$1;
      var $2673=(($S+56)|0);
      var $ld$1867$0=(($2673)|0);
      var $2674$0=HEAP32[(($ld$1867$0)>>2)];
      var $ld$1868$1=(($2673+4)|0);
      var $2674$1=HEAP32[(($ld$1868$1)>>2)];
      var $2675$0=($2674$1 >>> 9) | (0 << 23);
      var $2675$1=(0 >>> 9) | (0 << 23);
      var $2676=(($S+56)|0);
      var $ld$1869$0=(($2676)|0);
      var $2677$0=HEAP32[(($ld$1869$0)>>2)];
      var $ld$1870$1=(($2676+4)|0);
      var $2677$1=HEAP32[(($ld$1870$1)>>2)];
      var $2678$0=($2677$0 << 23) | (0 >>> 9);
      var $2678$1=($2677$1 << 23) | ($2677$0 >>> 9);
      var $2679$0=$2675$0 | $2678$0;
      var $2679$1=$2675$1 | $2678$1;
      var $2680$0=$2672$0 ^ $2679$0;
      var $2680$1=$2672$1 ^ $2679$1;
      var $2681$0 = _i64Add($2657$0,$2657$1,$2680$0,$2680$1); var $2681$1 = tempRet0;
      var $2682=(($S+8)|0);
      var $ld$1871$0=(($2682)|0);
      var $2683$0=HEAP32[(($ld$1871$0)>>2)];
      var $ld$1872$1=(($2682+4)|0);
      var $2683$1=HEAP32[(($ld$1872$1)>>2)];
      var $2684=(($S+56)|0);
      var $ld$1873$0=(($2684)|0);
      var $2685$0=HEAP32[(($ld$1873$0)>>2)];
      var $ld$1874$1=(($2684+4)|0);
      var $2685$1=HEAP32[(($ld$1874$1)>>2)];
      var $2686=(($S)|0);
      var $ld$1875$0=(($2686)|0);
      var $2687$0=HEAP32[(($ld$1875$0)>>2)];
      var $ld$1876$1=(($2686+4)|0);
      var $2687$1=HEAP32[(($ld$1876$1)>>2)];
      var $2688=(($S+8)|0);
      var $ld$1877$0=(($2688)|0);
      var $2689$0=HEAP32[(($ld$1877$0)>>2)];
      var $ld$1878$1=(($2688+4)|0);
      var $2689$1=HEAP32[(($ld$1878$1)>>2)];
      var $2690$0=$2687$0 ^ $2689$0;
      var $2690$1=$2687$1 ^ $2689$1;
      var $2691$0=$2685$0 & $2690$0;
      var $2691$1=$2685$1 & $2690$1;
      var $2692$0=$2683$0 ^ $2691$0;
      var $2692$1=$2683$1 ^ $2691$1;
      var $2693$0 = _i64Add($2681$0,$2681$1,$2692$0,$2692$1); var $2693$1 = tempRet0;
      var $$etemp$1879$0=-1828018395;
      var $$etemp$1879$1=-710438585;
      var $2694$0 = _i64Add($2693$0,$2693$1,$$etemp$1879$0,$$etemp$1879$1); var $2694$1 = tempRet0;
      var $2695=(($W+232)|0);
      var $ld$1880$0=(($2695)|0);
      var $2696$0=HEAP32[(($ld$1880$0)>>2)];
      var $ld$1881$1=(($2695+4)|0);
      var $2696$1=HEAP32[(($ld$1881$1)>>2)];
      var $2697$0 = _i64Add($2694$0,$2694$1,$2696$0,$2696$1); var $2697$1 = tempRet0;
      var $st$1882$0=(($t0)|0);
      HEAP32[(($st$1882$0)>>2)]=$2697$0;
      var $st$1883$1=(($t0+4)|0);
      HEAP32[(($st$1883$1)>>2)]=$2697$1;
      var $2698=(($S+24)|0);
      var $ld$1884$0=(($2698)|0);
      var $2699$0=HEAP32[(($ld$1884$0)>>2)];
      var $ld$1885$1=(($2698+4)|0);
      var $2699$1=HEAP32[(($ld$1885$1)>>2)];
      var $2700$0=($2699$0 >>> 28) | ($2699$1 << 4);
      var $2700$1=($2699$1 >>> 28) | (0 << 4);
      var $2701=(($S+24)|0);
      var $ld$1886$0=(($2701)|0);
      var $2702$0=HEAP32[(($ld$1886$0)>>2)];
      var $ld$1887$1=(($2701+4)|0);
      var $2702$1=HEAP32[(($ld$1887$1)>>2)];
      var $2703$0=(0 << 4) | (0 >>> 28);
      var $2703$1=($2702$0 << 4) | (0 >>> 28);
      var $2704$0=$2700$0 | $2703$0;
      var $2704$1=$2700$1 | $2703$1;
      var $2705=(($S+24)|0);
      var $ld$1888$0=(($2705)|0);
      var $2706$0=HEAP32[(($ld$1888$0)>>2)];
      var $ld$1889$1=(($2705+4)|0);
      var $2706$1=HEAP32[(($ld$1889$1)>>2)];
      var $2707$0=($2706$1 >>> 2) | (0 << 30);
      var $2707$1=(0 >>> 2) | (0 << 30);
      var $2708=(($S+24)|0);
      var $ld$1890$0=(($2708)|0);
      var $2709$0=HEAP32[(($ld$1890$0)>>2)];
      var $ld$1891$1=(($2708+4)|0);
      var $2709$1=HEAP32[(($ld$1891$1)>>2)];
      var $2710$0=($2709$0 << 30) | (0 >>> 2);
      var $2710$1=($2709$1 << 30) | ($2709$0 >>> 2);
      var $2711$0=$2707$0 | $2710$0;
      var $2711$1=$2707$1 | $2710$1;
      var $2712$0=$2704$0 ^ $2711$0;
      var $2712$1=$2704$1 ^ $2711$1;
      var $2713=(($S+24)|0);
      var $ld$1892$0=(($2713)|0);
      var $2714$0=HEAP32[(($ld$1892$0)>>2)];
      var $ld$1893$1=(($2713+4)|0);
      var $2714$1=HEAP32[(($ld$1893$1)>>2)];
      var $2715$0=($2714$1 >>> 7) | (0 << 25);
      var $2715$1=(0 >>> 7) | (0 << 25);
      var $2716=(($S+24)|0);
      var $ld$1894$0=(($2716)|0);
      var $2717$0=HEAP32[(($ld$1894$0)>>2)];
      var $ld$1895$1=(($2716+4)|0);
      var $2717$1=HEAP32[(($ld$1895$1)>>2)];
      var $2718$0=($2717$0 << 25) | (0 >>> 7);
      var $2718$1=($2717$1 << 25) | ($2717$0 >>> 7);
      var $2719$0=$2715$0 | $2718$0;
      var $2719$1=$2715$1 | $2718$1;
      var $2720$0=$2712$0 ^ $2719$0;
      var $2720$1=$2712$1 ^ $2719$1;
      var $2721=(($S+24)|0);
      var $ld$1896$0=(($2721)|0);
      var $2722$0=HEAP32[(($ld$1896$0)>>2)];
      var $ld$1897$1=(($2721+4)|0);
      var $2722$1=HEAP32[(($ld$1897$1)>>2)];
      var $2723=(($S+32)|0);
      var $ld$1898$0=(($2723)|0);
      var $2724$0=HEAP32[(($ld$1898$0)>>2)];
      var $ld$1899$1=(($2723+4)|0);
      var $2724$1=HEAP32[(($ld$1899$1)>>2)];
      var $2725$0=$2722$0 | $2724$0;
      var $2725$1=$2722$1 | $2724$1;
      var $2726=(($S+40)|0);
      var $ld$1900$0=(($2726)|0);
      var $2727$0=HEAP32[(($ld$1900$0)>>2)];
      var $ld$1901$1=(($2726+4)|0);
      var $2727$1=HEAP32[(($ld$1901$1)>>2)];
      var $2728$0=$2725$0 & $2727$0;
      var $2728$1=$2725$1 & $2727$1;
      var $2729=(($S+24)|0);
      var $ld$1902$0=(($2729)|0);
      var $2730$0=HEAP32[(($ld$1902$0)>>2)];
      var $ld$1903$1=(($2729+4)|0);
      var $2730$1=HEAP32[(($ld$1903$1)>>2)];
      var $2731=(($S+32)|0);
      var $ld$1904$0=(($2731)|0);
      var $2732$0=HEAP32[(($ld$1904$0)>>2)];
      var $ld$1905$1=(($2731+4)|0);
      var $2732$1=HEAP32[(($ld$1905$1)>>2)];
      var $2733$0=$2730$0 & $2732$0;
      var $2733$1=$2730$1 & $2732$1;
      var $2734$0=$2728$0 | $2733$0;
      var $2734$1=$2728$1 | $2733$1;
      var $2735$0 = _i64Add($2720$0,$2720$1,$2734$0,$2734$1); var $2735$1 = tempRet0;
      var $st$1906$0=(($t1)|0);
      HEAP32[(($st$1906$0)>>2)]=$2735$0;
      var $st$1907$1=(($t1+4)|0);
      HEAP32[(($st$1907$1)>>2)]=$2735$1;
      var $ld$1908$0=(($t0)|0);
      var $2736$0=HEAP32[(($ld$1908$0)>>2)];
      var $ld$1909$1=(($t0+4)|0);
      var $2736$1=HEAP32[(($ld$1909$1)>>2)];
      var $2737=(($S+48)|0);
      var $ld$1910$0=(($2737)|0);
      var $2738$0=HEAP32[(($ld$1910$0)>>2)];
      var $ld$1911$1=(($2737+4)|0);
      var $2738$1=HEAP32[(($ld$1911$1)>>2)];
      var $2739$0 = _i64Add($2738$0,$2738$1,$2736$0,$2736$1); var $2739$1 = tempRet0;
      var $st$1912$0=(($2737)|0);
      HEAP32[(($st$1912$0)>>2)]=$2739$0;
      var $st$1913$1=(($2737+4)|0);
      HEAP32[(($st$1913$1)>>2)]=$2739$1;
      var $ld$1914$0=(($t0)|0);
      var $2740$0=HEAP32[(($ld$1914$0)>>2)];
      var $ld$1915$1=(($t0+4)|0);
      var $2740$1=HEAP32[(($ld$1915$1)>>2)];
      var $ld$1916$0=(($t1)|0);
      var $2741$0=HEAP32[(($ld$1916$0)>>2)];
      var $ld$1917$1=(($t1+4)|0);
      var $2741$1=HEAP32[(($ld$1917$1)>>2)];
      var $2742$0 = _i64Add($2740$0,$2740$1,$2741$0,$2741$1); var $2742$1 = tempRet0;
      var $2743=(($S+16)|0);
      var $st$1918$0=(($2743)|0);
      HEAP32[(($st$1918$0)>>2)]=$2742$0;
      var $st$1919$1=(($2743+4)|0);
      HEAP32[(($st$1919$1)>>2)]=$2742$1;
      var $2744=(($S+8)|0);
      var $ld$1920$0=(($2744)|0);
      var $2745$0=HEAP32[(($ld$1920$0)>>2)];
      var $ld$1921$1=(($2744+4)|0);
      var $2745$1=HEAP32[(($ld$1921$1)>>2)];
      var $2746=(($S+48)|0);
      var $ld$1922$0=(($2746)|0);
      var $2747$0=HEAP32[(($ld$1922$0)>>2)];
      var $ld$1923$1=(($2746+4)|0);
      var $2747$1=HEAP32[(($ld$1923$1)>>2)];
      var $2748$0=($2747$0 >>> 14) | ($2747$1 << 18);
      var $2748$1=($2747$1 >>> 14) | (0 << 18);
      var $2749=(($S+48)|0);
      var $ld$1924$0=(($2749)|0);
      var $2750$0=HEAP32[(($ld$1924$0)>>2)];
      var $ld$1925$1=(($2749+4)|0);
      var $2750$1=HEAP32[(($ld$1925$1)>>2)];
      var $2751$0=(0 << 18) | (0 >>> 14);
      var $2751$1=($2750$0 << 18) | (0 >>> 14);
      var $2752$0=$2748$0 | $2751$0;
      var $2752$1=$2748$1 | $2751$1;
      var $2753=(($S+48)|0);
      var $ld$1926$0=(($2753)|0);
      var $2754$0=HEAP32[(($ld$1926$0)>>2)];
      var $ld$1927$1=(($2753+4)|0);
      var $2754$1=HEAP32[(($ld$1927$1)>>2)];
      var $2755$0=($2754$0 >>> 18) | ($2754$1 << 14);
      var $2755$1=($2754$1 >>> 18) | (0 << 14);
      var $2756=(($S+48)|0);
      var $ld$1928$0=(($2756)|0);
      var $2757$0=HEAP32[(($ld$1928$0)>>2)];
      var $ld$1929$1=(($2756+4)|0);
      var $2757$1=HEAP32[(($ld$1929$1)>>2)];
      var $2758$0=(0 << 14) | (0 >>> 18);
      var $2758$1=($2757$0 << 14) | (0 >>> 18);
      var $2759$0=$2755$0 | $2758$0;
      var $2759$1=$2755$1 | $2758$1;
      var $2760$0=$2752$0 ^ $2759$0;
      var $2760$1=$2752$1 ^ $2759$1;
      var $2761=(($S+48)|0);
      var $ld$1930$0=(($2761)|0);
      var $2762$0=HEAP32[(($ld$1930$0)>>2)];
      var $ld$1931$1=(($2761+4)|0);
      var $2762$1=HEAP32[(($ld$1931$1)>>2)];
      var $2763$0=($2762$1 >>> 9) | (0 << 23);
      var $2763$1=(0 >>> 9) | (0 << 23);
      var $2764=(($S+48)|0);
      var $ld$1932$0=(($2764)|0);
      var $2765$0=HEAP32[(($ld$1932$0)>>2)];
      var $ld$1933$1=(($2764+4)|0);
      var $2765$1=HEAP32[(($ld$1933$1)>>2)];
      var $2766$0=($2765$0 << 23) | (0 >>> 9);
      var $2766$1=($2765$1 << 23) | ($2765$0 >>> 9);
      var $2767$0=$2763$0 | $2766$0;
      var $2767$1=$2763$1 | $2766$1;
      var $2768$0=$2760$0 ^ $2767$0;
      var $2768$1=$2760$1 ^ $2767$1;
      var $2769$0 = _i64Add($2745$0,$2745$1,$2768$0,$2768$1); var $2769$1 = tempRet0;
      var $2770=(($S)|0);
      var $ld$1934$0=(($2770)|0);
      var $2771$0=HEAP32[(($ld$1934$0)>>2)];
      var $ld$1935$1=(($2770+4)|0);
      var $2771$1=HEAP32[(($ld$1935$1)>>2)];
      var $2772=(($S+48)|0);
      var $ld$1936$0=(($2772)|0);
      var $2773$0=HEAP32[(($ld$1936$0)>>2)];
      var $ld$1937$1=(($2772+4)|0);
      var $2773$1=HEAP32[(($ld$1937$1)>>2)];
      var $2774=(($S+56)|0);
      var $ld$1938$0=(($2774)|0);
      var $2775$0=HEAP32[(($ld$1938$0)>>2)];
      var $ld$1939$1=(($2774+4)|0);
      var $2775$1=HEAP32[(($ld$1939$1)>>2)];
      var $2776=(($S)|0);
      var $ld$1940$0=(($2776)|0);
      var $2777$0=HEAP32[(($ld$1940$0)>>2)];
      var $ld$1941$1=(($2776+4)|0);
      var $2777$1=HEAP32[(($ld$1941$1)>>2)];
      var $2778$0=$2775$0 ^ $2777$0;
      var $2778$1=$2775$1 ^ $2777$1;
      var $2779$0=$2773$0 & $2778$0;
      var $2779$1=$2773$1 & $2778$1;
      var $2780$0=$2771$0 ^ $2779$0;
      var $2780$1=$2771$1 ^ $2779$1;
      var $2781$0 = _i64Add($2769$0,$2769$1,$2780$0,$2780$1); var $2781$1 = tempRet0;
      var $$etemp$1942$0=-536640913;
      var $$etemp$1942$1=113926993;
      var $2782$0 = _i64Add($2781$0,$2781$1,$$etemp$1942$0,$$etemp$1942$1); var $2782$1 = tempRet0;
      var $2783=(($W+240)|0);
      var $ld$1943$0=(($2783)|0);
      var $2784$0=HEAP32[(($ld$1943$0)>>2)];
      var $ld$1944$1=(($2783+4)|0);
      var $2784$1=HEAP32[(($ld$1944$1)>>2)];
      var $2785$0 = _i64Add($2782$0,$2782$1,$2784$0,$2784$1); var $2785$1 = tempRet0;
      var $st$1945$0=(($t0)|0);
      HEAP32[(($st$1945$0)>>2)]=$2785$0;
      var $st$1946$1=(($t0+4)|0);
      HEAP32[(($st$1946$1)>>2)]=$2785$1;
      var $2786=(($S+16)|0);
      var $ld$1947$0=(($2786)|0);
      var $2787$0=HEAP32[(($ld$1947$0)>>2)];
      var $ld$1948$1=(($2786+4)|0);
      var $2787$1=HEAP32[(($ld$1948$1)>>2)];
      var $2788$0=($2787$0 >>> 28) | ($2787$1 << 4);
      var $2788$1=($2787$1 >>> 28) | (0 << 4);
      var $2789=(($S+16)|0);
      var $ld$1949$0=(($2789)|0);
      var $2790$0=HEAP32[(($ld$1949$0)>>2)];
      var $ld$1950$1=(($2789+4)|0);
      var $2790$1=HEAP32[(($ld$1950$1)>>2)];
      var $2791$0=(0 << 4) | (0 >>> 28);
      var $2791$1=($2790$0 << 4) | (0 >>> 28);
      var $2792$0=$2788$0 | $2791$0;
      var $2792$1=$2788$1 | $2791$1;
      var $2793=(($S+16)|0);
      var $ld$1951$0=(($2793)|0);
      var $2794$0=HEAP32[(($ld$1951$0)>>2)];
      var $ld$1952$1=(($2793+4)|0);
      var $2794$1=HEAP32[(($ld$1952$1)>>2)];
      var $2795$0=($2794$1 >>> 2) | (0 << 30);
      var $2795$1=(0 >>> 2) | (0 << 30);
      var $2796=(($S+16)|0);
      var $ld$1953$0=(($2796)|0);
      var $2797$0=HEAP32[(($ld$1953$0)>>2)];
      var $ld$1954$1=(($2796+4)|0);
      var $2797$1=HEAP32[(($ld$1954$1)>>2)];
      var $2798$0=($2797$0 << 30) | (0 >>> 2);
      var $2798$1=($2797$1 << 30) | ($2797$0 >>> 2);
      var $2799$0=$2795$0 | $2798$0;
      var $2799$1=$2795$1 | $2798$1;
      var $2800$0=$2792$0 ^ $2799$0;
      var $2800$1=$2792$1 ^ $2799$1;
      var $2801=(($S+16)|0);
      var $ld$1955$0=(($2801)|0);
      var $2802$0=HEAP32[(($ld$1955$0)>>2)];
      var $ld$1956$1=(($2801+4)|0);
      var $2802$1=HEAP32[(($ld$1956$1)>>2)];
      var $2803$0=($2802$1 >>> 7) | (0 << 25);
      var $2803$1=(0 >>> 7) | (0 << 25);
      var $2804=(($S+16)|0);
      var $ld$1957$0=(($2804)|0);
      var $2805$0=HEAP32[(($ld$1957$0)>>2)];
      var $ld$1958$1=(($2804+4)|0);
      var $2805$1=HEAP32[(($ld$1958$1)>>2)];
      var $2806$0=($2805$0 << 25) | (0 >>> 7);
      var $2806$1=($2805$1 << 25) | ($2805$0 >>> 7);
      var $2807$0=$2803$0 | $2806$0;
      var $2807$1=$2803$1 | $2806$1;
      var $2808$0=$2800$0 ^ $2807$0;
      var $2808$1=$2800$1 ^ $2807$1;
      var $2809=(($S+16)|0);
      var $ld$1959$0=(($2809)|0);
      var $2810$0=HEAP32[(($ld$1959$0)>>2)];
      var $ld$1960$1=(($2809+4)|0);
      var $2810$1=HEAP32[(($ld$1960$1)>>2)];
      var $2811=(($S+24)|0);
      var $ld$1961$0=(($2811)|0);
      var $2812$0=HEAP32[(($ld$1961$0)>>2)];
      var $ld$1962$1=(($2811+4)|0);
      var $2812$1=HEAP32[(($ld$1962$1)>>2)];
      var $2813$0=$2810$0 | $2812$0;
      var $2813$1=$2810$1 | $2812$1;
      var $2814=(($S+32)|0);
      var $ld$1963$0=(($2814)|0);
      var $2815$0=HEAP32[(($ld$1963$0)>>2)];
      var $ld$1964$1=(($2814+4)|0);
      var $2815$1=HEAP32[(($ld$1964$1)>>2)];
      var $2816$0=$2813$0 & $2815$0;
      var $2816$1=$2813$1 & $2815$1;
      var $2817=(($S+16)|0);
      var $ld$1965$0=(($2817)|0);
      var $2818$0=HEAP32[(($ld$1965$0)>>2)];
      var $ld$1966$1=(($2817+4)|0);
      var $2818$1=HEAP32[(($ld$1966$1)>>2)];
      var $2819=(($S+24)|0);
      var $ld$1967$0=(($2819)|0);
      var $2820$0=HEAP32[(($ld$1967$0)>>2)];
      var $ld$1968$1=(($2819+4)|0);
      var $2820$1=HEAP32[(($ld$1968$1)>>2)];
      var $2821$0=$2818$0 & $2820$0;
      var $2821$1=$2818$1 & $2820$1;
      var $2822$0=$2816$0 | $2821$0;
      var $2822$1=$2816$1 | $2821$1;
      var $2823$0 = _i64Add($2808$0,$2808$1,$2822$0,$2822$1); var $2823$1 = tempRet0;
      var $st$1969$0=(($t1)|0);
      HEAP32[(($st$1969$0)>>2)]=$2823$0;
      var $st$1970$1=(($t1+4)|0);
      HEAP32[(($st$1970$1)>>2)]=$2823$1;
      var $ld$1971$0=(($t0)|0);
      var $2824$0=HEAP32[(($ld$1971$0)>>2)];
      var $ld$1972$1=(($t0+4)|0);
      var $2824$1=HEAP32[(($ld$1972$1)>>2)];
      var $2825=(($S+40)|0);
      var $ld$1973$0=(($2825)|0);
      var $2826$0=HEAP32[(($ld$1973$0)>>2)];
      var $ld$1974$1=(($2825+4)|0);
      var $2826$1=HEAP32[(($ld$1974$1)>>2)];
      var $2827$0 = _i64Add($2826$0,$2826$1,$2824$0,$2824$1); var $2827$1 = tempRet0;
      var $st$1975$0=(($2825)|0);
      HEAP32[(($st$1975$0)>>2)]=$2827$0;
      var $st$1976$1=(($2825+4)|0);
      HEAP32[(($st$1976$1)>>2)]=$2827$1;
      var $ld$1977$0=(($t0)|0);
      var $2828$0=HEAP32[(($ld$1977$0)>>2)];
      var $ld$1978$1=(($t0+4)|0);
      var $2828$1=HEAP32[(($ld$1978$1)>>2)];
      var $ld$1979$0=(($t1)|0);
      var $2829$0=HEAP32[(($ld$1979$0)>>2)];
      var $ld$1980$1=(($t1+4)|0);
      var $2829$1=HEAP32[(($ld$1980$1)>>2)];
      var $2830$0 = _i64Add($2828$0,$2828$1,$2829$0,$2829$1); var $2830$1 = tempRet0;
      var $2831=(($S+8)|0);
      var $st$1981$0=(($2831)|0);
      HEAP32[(($st$1981$0)>>2)]=$2830$0;
      var $st$1982$1=(($2831+4)|0);
      HEAP32[(($st$1982$1)>>2)]=$2830$1;
      var $2832=(($S)|0);
      var $ld$1983$0=(($2832)|0);
      var $2833$0=HEAP32[(($ld$1983$0)>>2)];
      var $ld$1984$1=(($2832+4)|0);
      var $2833$1=HEAP32[(($ld$1984$1)>>2)];
      var $2834=(($S+40)|0);
      var $ld$1985$0=(($2834)|0);
      var $2835$0=HEAP32[(($ld$1985$0)>>2)];
      var $ld$1986$1=(($2834+4)|0);
      var $2835$1=HEAP32[(($ld$1986$1)>>2)];
      var $2836$0=($2835$0 >>> 14) | ($2835$1 << 18);
      var $2836$1=($2835$1 >>> 14) | (0 << 18);
      var $2837=(($S+40)|0);
      var $ld$1987$0=(($2837)|0);
      var $2838$0=HEAP32[(($ld$1987$0)>>2)];
      var $ld$1988$1=(($2837+4)|0);
      var $2838$1=HEAP32[(($ld$1988$1)>>2)];
      var $2839$0=(0 << 18) | (0 >>> 14);
      var $2839$1=($2838$0 << 18) | (0 >>> 14);
      var $2840$0=$2836$0 | $2839$0;
      var $2840$1=$2836$1 | $2839$1;
      var $2841=(($S+40)|0);
      var $ld$1989$0=(($2841)|0);
      var $2842$0=HEAP32[(($ld$1989$0)>>2)];
      var $ld$1990$1=(($2841+4)|0);
      var $2842$1=HEAP32[(($ld$1990$1)>>2)];
      var $2843$0=($2842$0 >>> 18) | ($2842$1 << 14);
      var $2843$1=($2842$1 >>> 18) | (0 << 14);
      var $2844=(($S+40)|0);
      var $ld$1991$0=(($2844)|0);
      var $2845$0=HEAP32[(($ld$1991$0)>>2)];
      var $ld$1992$1=(($2844+4)|0);
      var $2845$1=HEAP32[(($ld$1992$1)>>2)];
      var $2846$0=(0 << 14) | (0 >>> 18);
      var $2846$1=($2845$0 << 14) | (0 >>> 18);
      var $2847$0=$2843$0 | $2846$0;
      var $2847$1=$2843$1 | $2846$1;
      var $2848$0=$2840$0 ^ $2847$0;
      var $2848$1=$2840$1 ^ $2847$1;
      var $2849=(($S+40)|0);
      var $ld$1993$0=(($2849)|0);
      var $2850$0=HEAP32[(($ld$1993$0)>>2)];
      var $ld$1994$1=(($2849+4)|0);
      var $2850$1=HEAP32[(($ld$1994$1)>>2)];
      var $2851$0=($2850$1 >>> 9) | (0 << 23);
      var $2851$1=(0 >>> 9) | (0 << 23);
      var $2852=(($S+40)|0);
      var $ld$1995$0=(($2852)|0);
      var $2853$0=HEAP32[(($ld$1995$0)>>2)];
      var $ld$1996$1=(($2852+4)|0);
      var $2853$1=HEAP32[(($ld$1996$1)>>2)];
      var $2854$0=($2853$0 << 23) | (0 >>> 9);
      var $2854$1=($2853$1 << 23) | ($2853$0 >>> 9);
      var $2855$0=$2851$0 | $2854$0;
      var $2855$1=$2851$1 | $2854$1;
      var $2856$0=$2848$0 ^ $2855$0;
      var $2856$1=$2848$1 ^ $2855$1;
      var $2857$0 = _i64Add($2833$0,$2833$1,$2856$0,$2856$1); var $2857$1 = tempRet0;
      var $2858=(($S+56)|0);
      var $ld$1997$0=(($2858)|0);
      var $2859$0=HEAP32[(($ld$1997$0)>>2)];
      var $ld$1998$1=(($2858+4)|0);
      var $2859$1=HEAP32[(($ld$1998$1)>>2)];
      var $2860=(($S+40)|0);
      var $ld$1999$0=(($2860)|0);
      var $2861$0=HEAP32[(($ld$1999$0)>>2)];
      var $ld$2000$1=(($2860+4)|0);
      var $2861$1=HEAP32[(($ld$2000$1)>>2)];
      var $2862=(($S+48)|0);
      var $ld$2001$0=(($2862)|0);
      var $2863$0=HEAP32[(($ld$2001$0)>>2)];
      var $ld$2002$1=(($2862+4)|0);
      var $2863$1=HEAP32[(($ld$2002$1)>>2)];
      var $2864=(($S+56)|0);
      var $ld$2003$0=(($2864)|0);
      var $2865$0=HEAP32[(($ld$2003$0)>>2)];
      var $ld$2004$1=(($2864+4)|0);
      var $2865$1=HEAP32[(($ld$2004$1)>>2)];
      var $2866$0=$2863$0 ^ $2865$0;
      var $2866$1=$2863$1 ^ $2865$1;
      var $2867$0=$2861$0 & $2866$0;
      var $2867$1=$2861$1 & $2866$1;
      var $2868$0=$2859$0 ^ $2867$0;
      var $2868$1=$2859$1 ^ $2867$1;
      var $2869$0 = _i64Add($2857$0,$2857$1,$2868$0,$2868$1); var $2869$1 = tempRet0;
      var $$etemp$2005$0=168717936;
      var $$etemp$2005$1=338241895;
      var $2870$0 = _i64Add($2869$0,$2869$1,$$etemp$2005$0,$$etemp$2005$1); var $2870$1 = tempRet0;
      var $2871=(($W+248)|0);
      var $ld$2006$0=(($2871)|0);
      var $2872$0=HEAP32[(($ld$2006$0)>>2)];
      var $ld$2007$1=(($2871+4)|0);
      var $2872$1=HEAP32[(($ld$2007$1)>>2)];
      var $2873$0 = _i64Add($2870$0,$2870$1,$2872$0,$2872$1); var $2873$1 = tempRet0;
      var $st$2008$0=(($t0)|0);
      HEAP32[(($st$2008$0)>>2)]=$2873$0;
      var $st$2009$1=(($t0+4)|0);
      HEAP32[(($st$2009$1)>>2)]=$2873$1;
      var $2874=(($S+8)|0);
      var $ld$2010$0=(($2874)|0);
      var $2875$0=HEAP32[(($ld$2010$0)>>2)];
      var $ld$2011$1=(($2874+4)|0);
      var $2875$1=HEAP32[(($ld$2011$1)>>2)];
      var $2876$0=($2875$0 >>> 28) | ($2875$1 << 4);
      var $2876$1=($2875$1 >>> 28) | (0 << 4);
      var $2877=(($S+8)|0);
      var $ld$2012$0=(($2877)|0);
      var $2878$0=HEAP32[(($ld$2012$0)>>2)];
      var $ld$2013$1=(($2877+4)|0);
      var $2878$1=HEAP32[(($ld$2013$1)>>2)];
      var $2879$0=(0 << 4) | (0 >>> 28);
      var $2879$1=($2878$0 << 4) | (0 >>> 28);
      var $2880$0=$2876$0 | $2879$0;
      var $2880$1=$2876$1 | $2879$1;
      var $2881=(($S+8)|0);
      var $ld$2014$0=(($2881)|0);
      var $2882$0=HEAP32[(($ld$2014$0)>>2)];
      var $ld$2015$1=(($2881+4)|0);
      var $2882$1=HEAP32[(($ld$2015$1)>>2)];
      var $2883$0=($2882$1 >>> 2) | (0 << 30);
      var $2883$1=(0 >>> 2) | (0 << 30);
      var $2884=(($S+8)|0);
      var $ld$2016$0=(($2884)|0);
      var $2885$0=HEAP32[(($ld$2016$0)>>2)];
      var $ld$2017$1=(($2884+4)|0);
      var $2885$1=HEAP32[(($ld$2017$1)>>2)];
      var $2886$0=($2885$0 << 30) | (0 >>> 2);
      var $2886$1=($2885$1 << 30) | ($2885$0 >>> 2);
      var $2887$0=$2883$0 | $2886$0;
      var $2887$1=$2883$1 | $2886$1;
      var $2888$0=$2880$0 ^ $2887$0;
      var $2888$1=$2880$1 ^ $2887$1;
      var $2889=(($S+8)|0);
      var $ld$2018$0=(($2889)|0);
      var $2890$0=HEAP32[(($ld$2018$0)>>2)];
      var $ld$2019$1=(($2889+4)|0);
      var $2890$1=HEAP32[(($ld$2019$1)>>2)];
      var $2891$0=($2890$1 >>> 7) | (0 << 25);
      var $2891$1=(0 >>> 7) | (0 << 25);
      var $2892=(($S+8)|0);
      var $ld$2020$0=(($2892)|0);
      var $2893$0=HEAP32[(($ld$2020$0)>>2)];
      var $ld$2021$1=(($2892+4)|0);
      var $2893$1=HEAP32[(($ld$2021$1)>>2)];
      var $2894$0=($2893$0 << 25) | (0 >>> 7);
      var $2894$1=($2893$1 << 25) | ($2893$0 >>> 7);
      var $2895$0=$2891$0 | $2894$0;
      var $2895$1=$2891$1 | $2894$1;
      var $2896$0=$2888$0 ^ $2895$0;
      var $2896$1=$2888$1 ^ $2895$1;
      var $2897=(($S+8)|0);
      var $ld$2022$0=(($2897)|0);
      var $2898$0=HEAP32[(($ld$2022$0)>>2)];
      var $ld$2023$1=(($2897+4)|0);
      var $2898$1=HEAP32[(($ld$2023$1)>>2)];
      var $2899=(($S+16)|0);
      var $ld$2024$0=(($2899)|0);
      var $2900$0=HEAP32[(($ld$2024$0)>>2)];
      var $ld$2025$1=(($2899+4)|0);
      var $2900$1=HEAP32[(($ld$2025$1)>>2)];
      var $2901$0=$2898$0 | $2900$0;
      var $2901$1=$2898$1 | $2900$1;
      var $2902=(($S+24)|0);
      var $ld$2026$0=(($2902)|0);
      var $2903$0=HEAP32[(($ld$2026$0)>>2)];
      var $ld$2027$1=(($2902+4)|0);
      var $2903$1=HEAP32[(($ld$2027$1)>>2)];
      var $2904$0=$2901$0 & $2903$0;
      var $2904$1=$2901$1 & $2903$1;
      var $2905=(($S+8)|0);
      var $ld$2028$0=(($2905)|0);
      var $2906$0=HEAP32[(($ld$2028$0)>>2)];
      var $ld$2029$1=(($2905+4)|0);
      var $2906$1=HEAP32[(($ld$2029$1)>>2)];
      var $2907=(($S+16)|0);
      var $ld$2030$0=(($2907)|0);
      var $2908$0=HEAP32[(($ld$2030$0)>>2)];
      var $ld$2031$1=(($2907+4)|0);
      var $2908$1=HEAP32[(($ld$2031$1)>>2)];
      var $2909$0=$2906$0 & $2908$0;
      var $2909$1=$2906$1 & $2908$1;
      var $2910$0=$2904$0 | $2909$0;
      var $2910$1=$2904$1 | $2909$1;
      var $2911$0 = _i64Add($2896$0,$2896$1,$2910$0,$2910$1); var $2911$1 = tempRet0;
      var $st$2032$0=(($t1)|0);
      HEAP32[(($st$2032$0)>>2)]=$2911$0;
      var $st$2033$1=(($t1+4)|0);
      HEAP32[(($st$2033$1)>>2)]=$2911$1;
      var $ld$2034$0=(($t0)|0);
      var $2912$0=HEAP32[(($ld$2034$0)>>2)];
      var $ld$2035$1=(($t0+4)|0);
      var $2912$1=HEAP32[(($ld$2035$1)>>2)];
      var $2913=(($S+32)|0);
      var $ld$2036$0=(($2913)|0);
      var $2914$0=HEAP32[(($ld$2036$0)>>2)];
      var $ld$2037$1=(($2913+4)|0);
      var $2914$1=HEAP32[(($ld$2037$1)>>2)];
      var $2915$0 = _i64Add($2914$0,$2914$1,$2912$0,$2912$1); var $2915$1 = tempRet0;
      var $st$2038$0=(($2913)|0);
      HEAP32[(($st$2038$0)>>2)]=$2915$0;
      var $st$2039$1=(($2913+4)|0);
      HEAP32[(($st$2039$1)>>2)]=$2915$1;
      var $ld$2040$0=(($t0)|0);
      var $2916$0=HEAP32[(($ld$2040$0)>>2)];
      var $ld$2041$1=(($t0+4)|0);
      var $2916$1=HEAP32[(($ld$2041$1)>>2)];
      var $ld$2042$0=(($t1)|0);
      var $2917$0=HEAP32[(($ld$2042$0)>>2)];
      var $ld$2043$1=(($t1+4)|0);
      var $2917$1=HEAP32[(($ld$2043$1)>>2)];
      var $2918$0 = _i64Add($2916$0,$2916$1,$2917$0,$2917$1); var $2918$1 = tempRet0;
      var $2919=(($S)|0);
      var $st$2044$0=(($2919)|0);
      HEAP32[(($st$2044$0)>>2)]=$2918$0;
      var $st$2045$1=(($2919+4)|0);
      HEAP32[(($st$2045$1)>>2)]=$2918$1;
      var $2920=(($S+56)|0);
      var $ld$2046$0=(($2920)|0);
      var $2921$0=HEAP32[(($ld$2046$0)>>2)];
      var $ld$2047$1=(($2920+4)|0);
      var $2921$1=HEAP32[(($ld$2047$1)>>2)];
      var $2922=(($S+32)|0);
      var $ld$2048$0=(($2922)|0);
      var $2923$0=HEAP32[(($ld$2048$0)>>2)];
      var $ld$2049$1=(($2922+4)|0);
      var $2923$1=HEAP32[(($ld$2049$1)>>2)];
      var $2924$0=($2923$0 >>> 14) | ($2923$1 << 18);
      var $2924$1=($2923$1 >>> 14) | (0 << 18);
      var $2925=(($S+32)|0);
      var $ld$2050$0=(($2925)|0);
      var $2926$0=HEAP32[(($ld$2050$0)>>2)];
      var $ld$2051$1=(($2925+4)|0);
      var $2926$1=HEAP32[(($ld$2051$1)>>2)];
      var $2927$0=(0 << 18) | (0 >>> 14);
      var $2927$1=($2926$0 << 18) | (0 >>> 14);
      var $2928$0=$2924$0 | $2927$0;
      var $2928$1=$2924$1 | $2927$1;
      var $2929=(($S+32)|0);
      var $ld$2052$0=(($2929)|0);
      var $2930$0=HEAP32[(($ld$2052$0)>>2)];
      var $ld$2053$1=(($2929+4)|0);
      var $2930$1=HEAP32[(($ld$2053$1)>>2)];
      var $2931$0=($2930$0 >>> 18) | ($2930$1 << 14);
      var $2931$1=($2930$1 >>> 18) | (0 << 14);
      var $2932=(($S+32)|0);
      var $ld$2054$0=(($2932)|0);
      var $2933$0=HEAP32[(($ld$2054$0)>>2)];
      var $ld$2055$1=(($2932+4)|0);
      var $2933$1=HEAP32[(($ld$2055$1)>>2)];
      var $2934$0=(0 << 14) | (0 >>> 18);
      var $2934$1=($2933$0 << 14) | (0 >>> 18);
      var $2935$0=$2931$0 | $2934$0;
      var $2935$1=$2931$1 | $2934$1;
      var $2936$0=$2928$0 ^ $2935$0;
      var $2936$1=$2928$1 ^ $2935$1;
      var $2937=(($S+32)|0);
      var $ld$2056$0=(($2937)|0);
      var $2938$0=HEAP32[(($ld$2056$0)>>2)];
      var $ld$2057$1=(($2937+4)|0);
      var $2938$1=HEAP32[(($ld$2057$1)>>2)];
      var $2939$0=($2938$1 >>> 9) | (0 << 23);
      var $2939$1=(0 >>> 9) | (0 << 23);
      var $2940=(($S+32)|0);
      var $ld$2058$0=(($2940)|0);
      var $2941$0=HEAP32[(($ld$2058$0)>>2)];
      var $ld$2059$1=(($2940+4)|0);
      var $2941$1=HEAP32[(($ld$2059$1)>>2)];
      var $2942$0=($2941$0 << 23) | (0 >>> 9);
      var $2942$1=($2941$1 << 23) | ($2941$0 >>> 9);
      var $2943$0=$2939$0 | $2942$0;
      var $2943$1=$2939$1 | $2942$1;
      var $2944$0=$2936$0 ^ $2943$0;
      var $2944$1=$2936$1 ^ $2943$1;
      var $2945$0 = _i64Add($2921$0,$2921$1,$2944$0,$2944$1); var $2945$1 = tempRet0;
      var $2946=(($S+48)|0);
      var $ld$2060$0=(($2946)|0);
      var $2947$0=HEAP32[(($ld$2060$0)>>2)];
      var $ld$2061$1=(($2946+4)|0);
      var $2947$1=HEAP32[(($ld$2061$1)>>2)];
      var $2948=(($S+32)|0);
      var $ld$2062$0=(($2948)|0);
      var $2949$0=HEAP32[(($ld$2062$0)>>2)];
      var $ld$2063$1=(($2948+4)|0);
      var $2949$1=HEAP32[(($ld$2063$1)>>2)];
      var $2950=(($S+40)|0);
      var $ld$2064$0=(($2950)|0);
      var $2951$0=HEAP32[(($ld$2064$0)>>2)];
      var $ld$2065$1=(($2950+4)|0);
      var $2951$1=HEAP32[(($ld$2065$1)>>2)];
      var $2952=(($S+48)|0);
      var $ld$2066$0=(($2952)|0);
      var $2953$0=HEAP32[(($ld$2066$0)>>2)];
      var $ld$2067$1=(($2952+4)|0);
      var $2953$1=HEAP32[(($ld$2067$1)>>2)];
      var $2954$0=$2951$0 ^ $2953$0;
      var $2954$1=$2951$1 ^ $2953$1;
      var $2955$0=$2949$0 & $2954$0;
      var $2955$1=$2949$1 & $2954$1;
      var $2956$0=$2947$0 ^ $2955$0;
      var $2956$1=$2947$1 ^ $2955$1;
      var $2957$0 = _i64Add($2945$0,$2945$1,$2956$0,$2956$1); var $2957$1 = tempRet0;
      var $$etemp$2068$0=1188179964;
      var $$etemp$2068$1=666307205;
      var $2958$0 = _i64Add($2957$0,$2957$1,$$etemp$2068$0,$$etemp$2068$1); var $2958$1 = tempRet0;
      var $2959=(($W+256)|0);
      var $ld$2069$0=(($2959)|0);
      var $2960$0=HEAP32[(($ld$2069$0)>>2)];
      var $ld$2070$1=(($2959+4)|0);
      var $2960$1=HEAP32[(($ld$2070$1)>>2)];
      var $2961$0 = _i64Add($2958$0,$2958$1,$2960$0,$2960$1); var $2961$1 = tempRet0;
      var $st$2071$0=(($t0)|0);
      HEAP32[(($st$2071$0)>>2)]=$2961$0;
      var $st$2072$1=(($t0+4)|0);
      HEAP32[(($st$2072$1)>>2)]=$2961$1;
      var $2962=(($S)|0);
      var $ld$2073$0=(($2962)|0);
      var $2963$0=HEAP32[(($ld$2073$0)>>2)];
      var $ld$2074$1=(($2962+4)|0);
      var $2963$1=HEAP32[(($ld$2074$1)>>2)];
      var $2964$0=($2963$0 >>> 28) | ($2963$1 << 4);
      var $2964$1=($2963$1 >>> 28) | (0 << 4);
      var $2965=(($S)|0);
      var $ld$2075$0=(($2965)|0);
      var $2966$0=HEAP32[(($ld$2075$0)>>2)];
      var $ld$2076$1=(($2965+4)|0);
      var $2966$1=HEAP32[(($ld$2076$1)>>2)];
      var $2967$0=(0 << 4) | (0 >>> 28);
      var $2967$1=($2966$0 << 4) | (0 >>> 28);
      var $2968$0=$2964$0 | $2967$0;
      var $2968$1=$2964$1 | $2967$1;
      var $2969=(($S)|0);
      var $ld$2077$0=(($2969)|0);
      var $2970$0=HEAP32[(($ld$2077$0)>>2)];
      var $ld$2078$1=(($2969+4)|0);
      var $2970$1=HEAP32[(($ld$2078$1)>>2)];
      var $2971$0=($2970$1 >>> 2) | (0 << 30);
      var $2971$1=(0 >>> 2) | (0 << 30);
      var $2972=(($S)|0);
      var $ld$2079$0=(($2972)|0);
      var $2973$0=HEAP32[(($ld$2079$0)>>2)];
      var $ld$2080$1=(($2972+4)|0);
      var $2973$1=HEAP32[(($ld$2080$1)>>2)];
      var $2974$0=($2973$0 << 30) | (0 >>> 2);
      var $2974$1=($2973$1 << 30) | ($2973$0 >>> 2);
      var $2975$0=$2971$0 | $2974$0;
      var $2975$1=$2971$1 | $2974$1;
      var $2976$0=$2968$0 ^ $2975$0;
      var $2976$1=$2968$1 ^ $2975$1;
      var $2977=(($S)|0);
      var $ld$2081$0=(($2977)|0);
      var $2978$0=HEAP32[(($ld$2081$0)>>2)];
      var $ld$2082$1=(($2977+4)|0);
      var $2978$1=HEAP32[(($ld$2082$1)>>2)];
      var $2979$0=($2978$1 >>> 7) | (0 << 25);
      var $2979$1=(0 >>> 7) | (0 << 25);
      var $2980=(($S)|0);
      var $ld$2083$0=(($2980)|0);
      var $2981$0=HEAP32[(($ld$2083$0)>>2)];
      var $ld$2084$1=(($2980+4)|0);
      var $2981$1=HEAP32[(($ld$2084$1)>>2)];
      var $2982$0=($2981$0 << 25) | (0 >>> 7);
      var $2982$1=($2981$1 << 25) | ($2981$0 >>> 7);
      var $2983$0=$2979$0 | $2982$0;
      var $2983$1=$2979$1 | $2982$1;
      var $2984$0=$2976$0 ^ $2983$0;
      var $2984$1=$2976$1 ^ $2983$1;
      var $2985=(($S)|0);
      var $ld$2085$0=(($2985)|0);
      var $2986$0=HEAP32[(($ld$2085$0)>>2)];
      var $ld$2086$1=(($2985+4)|0);
      var $2986$1=HEAP32[(($ld$2086$1)>>2)];
      var $2987=(($S+8)|0);
      var $ld$2087$0=(($2987)|0);
      var $2988$0=HEAP32[(($ld$2087$0)>>2)];
      var $ld$2088$1=(($2987+4)|0);
      var $2988$1=HEAP32[(($ld$2088$1)>>2)];
      var $2989$0=$2986$0 | $2988$0;
      var $2989$1=$2986$1 | $2988$1;
      var $2990=(($S+16)|0);
      var $ld$2089$0=(($2990)|0);
      var $2991$0=HEAP32[(($ld$2089$0)>>2)];
      var $ld$2090$1=(($2990+4)|0);
      var $2991$1=HEAP32[(($ld$2090$1)>>2)];
      var $2992$0=$2989$0 & $2991$0;
      var $2992$1=$2989$1 & $2991$1;
      var $2993=(($S)|0);
      var $ld$2091$0=(($2993)|0);
      var $2994$0=HEAP32[(($ld$2091$0)>>2)];
      var $ld$2092$1=(($2993+4)|0);
      var $2994$1=HEAP32[(($ld$2092$1)>>2)];
      var $2995=(($S+8)|0);
      var $ld$2093$0=(($2995)|0);
      var $2996$0=HEAP32[(($ld$2093$0)>>2)];
      var $ld$2094$1=(($2995+4)|0);
      var $2996$1=HEAP32[(($ld$2094$1)>>2)];
      var $2997$0=$2994$0 & $2996$0;
      var $2997$1=$2994$1 & $2996$1;
      var $2998$0=$2992$0 | $2997$0;
      var $2998$1=$2992$1 | $2997$1;
      var $2999$0 = _i64Add($2984$0,$2984$1,$2998$0,$2998$1); var $2999$1 = tempRet0;
      var $st$2095$0=(($t1)|0);
      HEAP32[(($st$2095$0)>>2)]=$2999$0;
      var $st$2096$1=(($t1+4)|0);
      HEAP32[(($st$2096$1)>>2)]=$2999$1;
      var $ld$2097$0=(($t0)|0);
      var $3000$0=HEAP32[(($ld$2097$0)>>2)];
      var $ld$2098$1=(($t0+4)|0);
      var $3000$1=HEAP32[(($ld$2098$1)>>2)];
      var $3001=(($S+24)|0);
      var $ld$2099$0=(($3001)|0);
      var $3002$0=HEAP32[(($ld$2099$0)>>2)];
      var $ld$2100$1=(($3001+4)|0);
      var $3002$1=HEAP32[(($ld$2100$1)>>2)];
      var $3003$0 = _i64Add($3002$0,$3002$1,$3000$0,$3000$1); var $3003$1 = tempRet0;
      var $st$2101$0=(($3001)|0);
      HEAP32[(($st$2101$0)>>2)]=$3003$0;
      var $st$2102$1=(($3001+4)|0);
      HEAP32[(($st$2102$1)>>2)]=$3003$1;
      var $ld$2103$0=(($t0)|0);
      var $3004$0=HEAP32[(($ld$2103$0)>>2)];
      var $ld$2104$1=(($t0+4)|0);
      var $3004$1=HEAP32[(($ld$2104$1)>>2)];
      var $ld$2105$0=(($t1)|0);
      var $3005$0=HEAP32[(($ld$2105$0)>>2)];
      var $ld$2106$1=(($t1+4)|0);
      var $3005$1=HEAP32[(($ld$2106$1)>>2)];
      var $3006$0 = _i64Add($3004$0,$3004$1,$3005$0,$3005$1); var $3006$1 = tempRet0;
      var $3007=(($S+56)|0);
      var $st$2107$0=(($3007)|0);
      HEAP32[(($st$2107$0)>>2)]=$3006$0;
      var $st$2108$1=(($3007+4)|0);
      HEAP32[(($st$2108$1)>>2)]=$3006$1;
      var $3008=(($S+48)|0);
      var $ld$2109$0=(($3008)|0);
      var $3009$0=HEAP32[(($ld$2109$0)>>2)];
      var $ld$2110$1=(($3008+4)|0);
      var $3009$1=HEAP32[(($ld$2110$1)>>2)];
      var $3010=(($S+24)|0);
      var $ld$2111$0=(($3010)|0);
      var $3011$0=HEAP32[(($ld$2111$0)>>2)];
      var $ld$2112$1=(($3010+4)|0);
      var $3011$1=HEAP32[(($ld$2112$1)>>2)];
      var $3012$0=($3011$0 >>> 14) | ($3011$1 << 18);
      var $3012$1=($3011$1 >>> 14) | (0 << 18);
      var $3013=(($S+24)|0);
      var $ld$2113$0=(($3013)|0);
      var $3014$0=HEAP32[(($ld$2113$0)>>2)];
      var $ld$2114$1=(($3013+4)|0);
      var $3014$1=HEAP32[(($ld$2114$1)>>2)];
      var $3015$0=(0 << 18) | (0 >>> 14);
      var $3015$1=($3014$0 << 18) | (0 >>> 14);
      var $3016$0=$3012$0 | $3015$0;
      var $3016$1=$3012$1 | $3015$1;
      var $3017=(($S+24)|0);
      var $ld$2115$0=(($3017)|0);
      var $3018$0=HEAP32[(($ld$2115$0)>>2)];
      var $ld$2116$1=(($3017+4)|0);
      var $3018$1=HEAP32[(($ld$2116$1)>>2)];
      var $3019$0=($3018$0 >>> 18) | ($3018$1 << 14);
      var $3019$1=($3018$1 >>> 18) | (0 << 14);
      var $3020=(($S+24)|0);
      var $ld$2117$0=(($3020)|0);
      var $3021$0=HEAP32[(($ld$2117$0)>>2)];
      var $ld$2118$1=(($3020+4)|0);
      var $3021$1=HEAP32[(($ld$2118$1)>>2)];
      var $3022$0=(0 << 14) | (0 >>> 18);
      var $3022$1=($3021$0 << 14) | (0 >>> 18);
      var $3023$0=$3019$0 | $3022$0;
      var $3023$1=$3019$1 | $3022$1;
      var $3024$0=$3016$0 ^ $3023$0;
      var $3024$1=$3016$1 ^ $3023$1;
      var $3025=(($S+24)|0);
      var $ld$2119$0=(($3025)|0);
      var $3026$0=HEAP32[(($ld$2119$0)>>2)];
      var $ld$2120$1=(($3025+4)|0);
      var $3026$1=HEAP32[(($ld$2120$1)>>2)];
      var $3027$0=($3026$1 >>> 9) | (0 << 23);
      var $3027$1=(0 >>> 9) | (0 << 23);
      var $3028=(($S+24)|0);
      var $ld$2121$0=(($3028)|0);
      var $3029$0=HEAP32[(($ld$2121$0)>>2)];
      var $ld$2122$1=(($3028+4)|0);
      var $3029$1=HEAP32[(($ld$2122$1)>>2)];
      var $3030$0=($3029$0 << 23) | (0 >>> 9);
      var $3030$1=($3029$1 << 23) | ($3029$0 >>> 9);
      var $3031$0=$3027$0 | $3030$0;
      var $3031$1=$3027$1 | $3030$1;
      var $3032$0=$3024$0 ^ $3031$0;
      var $3032$1=$3024$1 ^ $3031$1;
      var $3033$0 = _i64Add($3009$0,$3009$1,$3032$0,$3032$1); var $3033$1 = tempRet0;
      var $3034=(($S+40)|0);
      var $ld$2123$0=(($3034)|0);
      var $3035$0=HEAP32[(($ld$2123$0)>>2)];
      var $ld$2124$1=(($3034+4)|0);
      var $3035$1=HEAP32[(($ld$2124$1)>>2)];
      var $3036=(($S+24)|0);
      var $ld$2125$0=(($3036)|0);
      var $3037$0=HEAP32[(($ld$2125$0)>>2)];
      var $ld$2126$1=(($3036+4)|0);
      var $3037$1=HEAP32[(($ld$2126$1)>>2)];
      var $3038=(($S+32)|0);
      var $ld$2127$0=(($3038)|0);
      var $3039$0=HEAP32[(($ld$2127$0)>>2)];
      var $ld$2128$1=(($3038+4)|0);
      var $3039$1=HEAP32[(($ld$2128$1)>>2)];
      var $3040=(($S+40)|0);
      var $ld$2129$0=(($3040)|0);
      var $3041$0=HEAP32[(($ld$2129$0)>>2)];
      var $ld$2130$1=(($3040+4)|0);
      var $3041$1=HEAP32[(($ld$2130$1)>>2)];
      var $3042$0=$3039$0 ^ $3041$0;
      var $3042$1=$3039$1 ^ $3041$1;
      var $3043$0=$3037$0 & $3042$0;
      var $3043$1=$3037$1 & $3042$1;
      var $3044$0=$3035$0 ^ $3043$0;
      var $3044$1=$3035$1 ^ $3043$1;
      var $3045$0 = _i64Add($3033$0,$3033$1,$3044$0,$3044$1); var $3045$1 = tempRet0;
      var $$etemp$2131$0=1546045734;
      var $$etemp$2131$1=773529912;
      var $3046$0 = _i64Add($3045$0,$3045$1,$$etemp$2131$0,$$etemp$2131$1); var $3046$1 = tempRet0;
      var $3047=(($W+264)|0);
      var $ld$2132$0=(($3047)|0);
      var $3048$0=HEAP32[(($ld$2132$0)>>2)];
      var $ld$2133$1=(($3047+4)|0);
      var $3048$1=HEAP32[(($ld$2133$1)>>2)];
      var $3049$0 = _i64Add($3046$0,$3046$1,$3048$0,$3048$1); var $3049$1 = tempRet0;
      var $st$2134$0=(($t0)|0);
      HEAP32[(($st$2134$0)>>2)]=$3049$0;
      var $st$2135$1=(($t0+4)|0);
      HEAP32[(($st$2135$1)>>2)]=$3049$1;
      var $3050=(($S+56)|0);
      var $ld$2136$0=(($3050)|0);
      var $3051$0=HEAP32[(($ld$2136$0)>>2)];
      var $ld$2137$1=(($3050+4)|0);
      var $3051$1=HEAP32[(($ld$2137$1)>>2)];
      var $3052$0=($3051$0 >>> 28) | ($3051$1 << 4);
      var $3052$1=($3051$1 >>> 28) | (0 << 4);
      var $3053=(($S+56)|0);
      var $ld$2138$0=(($3053)|0);
      var $3054$0=HEAP32[(($ld$2138$0)>>2)];
      var $ld$2139$1=(($3053+4)|0);
      var $3054$1=HEAP32[(($ld$2139$1)>>2)];
      var $3055$0=(0 << 4) | (0 >>> 28);
      var $3055$1=($3054$0 << 4) | (0 >>> 28);
      var $3056$0=$3052$0 | $3055$0;
      var $3056$1=$3052$1 | $3055$1;
      var $3057=(($S+56)|0);
      var $ld$2140$0=(($3057)|0);
      var $3058$0=HEAP32[(($ld$2140$0)>>2)];
      var $ld$2141$1=(($3057+4)|0);
      var $3058$1=HEAP32[(($ld$2141$1)>>2)];
      var $3059$0=($3058$1 >>> 2) | (0 << 30);
      var $3059$1=(0 >>> 2) | (0 << 30);
      var $3060=(($S+56)|0);
      var $ld$2142$0=(($3060)|0);
      var $3061$0=HEAP32[(($ld$2142$0)>>2)];
      var $ld$2143$1=(($3060+4)|0);
      var $3061$1=HEAP32[(($ld$2143$1)>>2)];
      var $3062$0=($3061$0 << 30) | (0 >>> 2);
      var $3062$1=($3061$1 << 30) | ($3061$0 >>> 2);
      var $3063$0=$3059$0 | $3062$0;
      var $3063$1=$3059$1 | $3062$1;
      var $3064$0=$3056$0 ^ $3063$0;
      var $3064$1=$3056$1 ^ $3063$1;
      var $3065=(($S+56)|0);
      var $ld$2144$0=(($3065)|0);
      var $3066$0=HEAP32[(($ld$2144$0)>>2)];
      var $ld$2145$1=(($3065+4)|0);
      var $3066$1=HEAP32[(($ld$2145$1)>>2)];
      var $3067$0=($3066$1 >>> 7) | (0 << 25);
      var $3067$1=(0 >>> 7) | (0 << 25);
      var $3068=(($S+56)|0);
      var $ld$2146$0=(($3068)|0);
      var $3069$0=HEAP32[(($ld$2146$0)>>2)];
      var $ld$2147$1=(($3068+4)|0);
      var $3069$1=HEAP32[(($ld$2147$1)>>2)];
      var $3070$0=($3069$0 << 25) | (0 >>> 7);
      var $3070$1=($3069$1 << 25) | ($3069$0 >>> 7);
      var $3071$0=$3067$0 | $3070$0;
      var $3071$1=$3067$1 | $3070$1;
      var $3072$0=$3064$0 ^ $3071$0;
      var $3072$1=$3064$1 ^ $3071$1;
      var $3073=(($S+56)|0);
      var $ld$2148$0=(($3073)|0);
      var $3074$0=HEAP32[(($ld$2148$0)>>2)];
      var $ld$2149$1=(($3073+4)|0);
      var $3074$1=HEAP32[(($ld$2149$1)>>2)];
      var $3075=(($S)|0);
      var $ld$2150$0=(($3075)|0);
      var $3076$0=HEAP32[(($ld$2150$0)>>2)];
      var $ld$2151$1=(($3075+4)|0);
      var $3076$1=HEAP32[(($ld$2151$1)>>2)];
      var $3077$0=$3074$0 | $3076$0;
      var $3077$1=$3074$1 | $3076$1;
      var $3078=(($S+8)|0);
      var $ld$2152$0=(($3078)|0);
      var $3079$0=HEAP32[(($ld$2152$0)>>2)];
      var $ld$2153$1=(($3078+4)|0);
      var $3079$1=HEAP32[(($ld$2153$1)>>2)];
      var $3080$0=$3077$0 & $3079$0;
      var $3080$1=$3077$1 & $3079$1;
      var $3081=(($S+56)|0);
      var $ld$2154$0=(($3081)|0);
      var $3082$0=HEAP32[(($ld$2154$0)>>2)];
      var $ld$2155$1=(($3081+4)|0);
      var $3082$1=HEAP32[(($ld$2155$1)>>2)];
      var $3083=(($S)|0);
      var $ld$2156$0=(($3083)|0);
      var $3084$0=HEAP32[(($ld$2156$0)>>2)];
      var $ld$2157$1=(($3083+4)|0);
      var $3084$1=HEAP32[(($ld$2157$1)>>2)];
      var $3085$0=$3082$0 & $3084$0;
      var $3085$1=$3082$1 & $3084$1;
      var $3086$0=$3080$0 | $3085$0;
      var $3086$1=$3080$1 | $3085$1;
      var $3087$0 = _i64Add($3072$0,$3072$1,$3086$0,$3086$1); var $3087$1 = tempRet0;
      var $st$2158$0=(($t1)|0);
      HEAP32[(($st$2158$0)>>2)]=$3087$0;
      var $st$2159$1=(($t1+4)|0);
      HEAP32[(($st$2159$1)>>2)]=$3087$1;
      var $ld$2160$0=(($t0)|0);
      var $3088$0=HEAP32[(($ld$2160$0)>>2)];
      var $ld$2161$1=(($t0+4)|0);
      var $3088$1=HEAP32[(($ld$2161$1)>>2)];
      var $3089=(($S+16)|0);
      var $ld$2162$0=(($3089)|0);
      var $3090$0=HEAP32[(($ld$2162$0)>>2)];
      var $ld$2163$1=(($3089+4)|0);
      var $3090$1=HEAP32[(($ld$2163$1)>>2)];
      var $3091$0 = _i64Add($3090$0,$3090$1,$3088$0,$3088$1); var $3091$1 = tempRet0;
      var $st$2164$0=(($3089)|0);
      HEAP32[(($st$2164$0)>>2)]=$3091$0;
      var $st$2165$1=(($3089+4)|0);
      HEAP32[(($st$2165$1)>>2)]=$3091$1;
      var $ld$2166$0=(($t0)|0);
      var $3092$0=HEAP32[(($ld$2166$0)>>2)];
      var $ld$2167$1=(($t0+4)|0);
      var $3092$1=HEAP32[(($ld$2167$1)>>2)];
      var $ld$2168$0=(($t1)|0);
      var $3093$0=HEAP32[(($ld$2168$0)>>2)];
      var $ld$2169$1=(($t1+4)|0);
      var $3093$1=HEAP32[(($ld$2169$1)>>2)];
      var $3094$0 = _i64Add($3092$0,$3092$1,$3093$0,$3093$1); var $3094$1 = tempRet0;
      var $3095=(($S+48)|0);
      var $st$2170$0=(($3095)|0);
      HEAP32[(($st$2170$0)>>2)]=$3094$0;
      var $st$2171$1=(($3095+4)|0);
      HEAP32[(($st$2171$1)>>2)]=$3094$1;
      var $3096=(($S+40)|0);
      var $ld$2172$0=(($3096)|0);
      var $3097$0=HEAP32[(($ld$2172$0)>>2)];
      var $ld$2173$1=(($3096+4)|0);
      var $3097$1=HEAP32[(($ld$2173$1)>>2)];
      var $3098=(($S+16)|0);
      var $ld$2174$0=(($3098)|0);
      var $3099$0=HEAP32[(($ld$2174$0)>>2)];
      var $ld$2175$1=(($3098+4)|0);
      var $3099$1=HEAP32[(($ld$2175$1)>>2)];
      var $3100$0=($3099$0 >>> 14) | ($3099$1 << 18);
      var $3100$1=($3099$1 >>> 14) | (0 << 18);
      var $3101=(($S+16)|0);
      var $ld$2176$0=(($3101)|0);
      var $3102$0=HEAP32[(($ld$2176$0)>>2)];
      var $ld$2177$1=(($3101+4)|0);
      var $3102$1=HEAP32[(($ld$2177$1)>>2)];
      var $3103$0=(0 << 18) | (0 >>> 14);
      var $3103$1=($3102$0 << 18) | (0 >>> 14);
      var $3104$0=$3100$0 | $3103$0;
      var $3104$1=$3100$1 | $3103$1;
      var $3105=(($S+16)|0);
      var $ld$2178$0=(($3105)|0);
      var $3106$0=HEAP32[(($ld$2178$0)>>2)];
      var $ld$2179$1=(($3105+4)|0);
      var $3106$1=HEAP32[(($ld$2179$1)>>2)];
      var $3107$0=($3106$0 >>> 18) | ($3106$1 << 14);
      var $3107$1=($3106$1 >>> 18) | (0 << 14);
      var $3108=(($S+16)|0);
      var $ld$2180$0=(($3108)|0);
      var $3109$0=HEAP32[(($ld$2180$0)>>2)];
      var $ld$2181$1=(($3108+4)|0);
      var $3109$1=HEAP32[(($ld$2181$1)>>2)];
      var $3110$0=(0 << 14) | (0 >>> 18);
      var $3110$1=($3109$0 << 14) | (0 >>> 18);
      var $3111$0=$3107$0 | $3110$0;
      var $3111$1=$3107$1 | $3110$1;
      var $3112$0=$3104$0 ^ $3111$0;
      var $3112$1=$3104$1 ^ $3111$1;
      var $3113=(($S+16)|0);
      var $ld$2182$0=(($3113)|0);
      var $3114$0=HEAP32[(($ld$2182$0)>>2)];
      var $ld$2183$1=(($3113+4)|0);
      var $3114$1=HEAP32[(($ld$2183$1)>>2)];
      var $3115$0=($3114$1 >>> 9) | (0 << 23);
      var $3115$1=(0 >>> 9) | (0 << 23);
      var $3116=(($S+16)|0);
      var $ld$2184$0=(($3116)|0);
      var $3117$0=HEAP32[(($ld$2184$0)>>2)];
      var $ld$2185$1=(($3116+4)|0);
      var $3117$1=HEAP32[(($ld$2185$1)>>2)];
      var $3118$0=($3117$0 << 23) | (0 >>> 9);
      var $3118$1=($3117$1 << 23) | ($3117$0 >>> 9);
      var $3119$0=$3115$0 | $3118$0;
      var $3119$1=$3115$1 | $3118$1;
      var $3120$0=$3112$0 ^ $3119$0;
      var $3120$1=$3112$1 ^ $3119$1;
      var $3121$0 = _i64Add($3097$0,$3097$1,$3120$0,$3120$1); var $3121$1 = tempRet0;
      var $3122=(($S+32)|0);
      var $ld$2186$0=(($3122)|0);
      var $3123$0=HEAP32[(($ld$2186$0)>>2)];
      var $ld$2187$1=(($3122+4)|0);
      var $3123$1=HEAP32[(($ld$2187$1)>>2)];
      var $3124=(($S+16)|0);
      var $ld$2188$0=(($3124)|0);
      var $3125$0=HEAP32[(($ld$2188$0)>>2)];
      var $ld$2189$1=(($3124+4)|0);
      var $3125$1=HEAP32[(($ld$2189$1)>>2)];
      var $3126=(($S+24)|0);
      var $ld$2190$0=(($3126)|0);
      var $3127$0=HEAP32[(($ld$2190$0)>>2)];
      var $ld$2191$1=(($3126+4)|0);
      var $3127$1=HEAP32[(($ld$2191$1)>>2)];
      var $3128=(($S+32)|0);
      var $ld$2192$0=(($3128)|0);
      var $3129$0=HEAP32[(($ld$2192$0)>>2)];
      var $ld$2193$1=(($3128+4)|0);
      var $3129$1=HEAP32[(($ld$2193$1)>>2)];
      var $3130$0=$3127$0 ^ $3129$0;
      var $3130$1=$3127$1 ^ $3129$1;
      var $3131$0=$3125$0 & $3130$0;
      var $3131$1=$3125$1 & $3130$1;
      var $3132$0=$3123$0 ^ $3131$0;
      var $3132$1=$3123$1 ^ $3131$1;
      var $3133$0 = _i64Add($3121$0,$3121$1,$3132$0,$3132$1); var $3133$1 = tempRet0;
      var $$etemp$2194$0=1522805485;
      var $$etemp$2194$1=1294757372;
      var $3134$0 = _i64Add($3133$0,$3133$1,$$etemp$2194$0,$$etemp$2194$1); var $3134$1 = tempRet0;
      var $3135=(($W+272)|0);
      var $ld$2195$0=(($3135)|0);
      var $3136$0=HEAP32[(($ld$2195$0)>>2)];
      var $ld$2196$1=(($3135+4)|0);
      var $3136$1=HEAP32[(($ld$2196$1)>>2)];
      var $3137$0 = _i64Add($3134$0,$3134$1,$3136$0,$3136$1); var $3137$1 = tempRet0;
      var $st$2197$0=(($t0)|0);
      HEAP32[(($st$2197$0)>>2)]=$3137$0;
      var $st$2198$1=(($t0+4)|0);
      HEAP32[(($st$2198$1)>>2)]=$3137$1;
      var $3138=(($S+48)|0);
      var $ld$2199$0=(($3138)|0);
      var $3139$0=HEAP32[(($ld$2199$0)>>2)];
      var $ld$2200$1=(($3138+4)|0);
      var $3139$1=HEAP32[(($ld$2200$1)>>2)];
      var $3140$0=($3139$0 >>> 28) | ($3139$1 << 4);
      var $3140$1=($3139$1 >>> 28) | (0 << 4);
      var $3141=(($S+48)|0);
      var $ld$2201$0=(($3141)|0);
      var $3142$0=HEAP32[(($ld$2201$0)>>2)];
      var $ld$2202$1=(($3141+4)|0);
      var $3142$1=HEAP32[(($ld$2202$1)>>2)];
      var $3143$0=(0 << 4) | (0 >>> 28);
      var $3143$1=($3142$0 << 4) | (0 >>> 28);
      var $3144$0=$3140$0 | $3143$0;
      var $3144$1=$3140$1 | $3143$1;
      var $3145=(($S+48)|0);
      var $ld$2203$0=(($3145)|0);
      var $3146$0=HEAP32[(($ld$2203$0)>>2)];
      var $ld$2204$1=(($3145+4)|0);
      var $3146$1=HEAP32[(($ld$2204$1)>>2)];
      var $3147$0=($3146$1 >>> 2) | (0 << 30);
      var $3147$1=(0 >>> 2) | (0 << 30);
      var $3148=(($S+48)|0);
      var $ld$2205$0=(($3148)|0);
      var $3149$0=HEAP32[(($ld$2205$0)>>2)];
      var $ld$2206$1=(($3148+4)|0);
      var $3149$1=HEAP32[(($ld$2206$1)>>2)];
      var $3150$0=($3149$0 << 30) | (0 >>> 2);
      var $3150$1=($3149$1 << 30) | ($3149$0 >>> 2);
      var $3151$0=$3147$0 | $3150$0;
      var $3151$1=$3147$1 | $3150$1;
      var $3152$0=$3144$0 ^ $3151$0;
      var $3152$1=$3144$1 ^ $3151$1;
      var $3153=(($S+48)|0);
      var $ld$2207$0=(($3153)|0);
      var $3154$0=HEAP32[(($ld$2207$0)>>2)];
      var $ld$2208$1=(($3153+4)|0);
      var $3154$1=HEAP32[(($ld$2208$1)>>2)];
      var $3155$0=($3154$1 >>> 7) | (0 << 25);
      var $3155$1=(0 >>> 7) | (0 << 25);
      var $3156=(($S+48)|0);
      var $ld$2209$0=(($3156)|0);
      var $3157$0=HEAP32[(($ld$2209$0)>>2)];
      var $ld$2210$1=(($3156+4)|0);
      var $3157$1=HEAP32[(($ld$2210$1)>>2)];
      var $3158$0=($3157$0 << 25) | (0 >>> 7);
      var $3158$1=($3157$1 << 25) | ($3157$0 >>> 7);
      var $3159$0=$3155$0 | $3158$0;
      var $3159$1=$3155$1 | $3158$1;
      var $3160$0=$3152$0 ^ $3159$0;
      var $3160$1=$3152$1 ^ $3159$1;
      var $3161=(($S+48)|0);
      var $ld$2211$0=(($3161)|0);
      var $3162$0=HEAP32[(($ld$2211$0)>>2)];
      var $ld$2212$1=(($3161+4)|0);
      var $3162$1=HEAP32[(($ld$2212$1)>>2)];
      var $3163=(($S+56)|0);
      var $ld$2213$0=(($3163)|0);
      var $3164$0=HEAP32[(($ld$2213$0)>>2)];
      var $ld$2214$1=(($3163+4)|0);
      var $3164$1=HEAP32[(($ld$2214$1)>>2)];
      var $3165$0=$3162$0 | $3164$0;
      var $3165$1=$3162$1 | $3164$1;
      var $3166=(($S)|0);
      var $ld$2215$0=(($3166)|0);
      var $3167$0=HEAP32[(($ld$2215$0)>>2)];
      var $ld$2216$1=(($3166+4)|0);
      var $3167$1=HEAP32[(($ld$2216$1)>>2)];
      var $3168$0=$3165$0 & $3167$0;
      var $3168$1=$3165$1 & $3167$1;
      var $3169=(($S+48)|0);
      var $ld$2217$0=(($3169)|0);
      var $3170$0=HEAP32[(($ld$2217$0)>>2)];
      var $ld$2218$1=(($3169+4)|0);
      var $3170$1=HEAP32[(($ld$2218$1)>>2)];
      var $3171=(($S+56)|0);
      var $ld$2219$0=(($3171)|0);
      var $3172$0=HEAP32[(($ld$2219$0)>>2)];
      var $ld$2220$1=(($3171+4)|0);
      var $3172$1=HEAP32[(($ld$2220$1)>>2)];
      var $3173$0=$3170$0 & $3172$0;
      var $3173$1=$3170$1 & $3172$1;
      var $3174$0=$3168$0 | $3173$0;
      var $3174$1=$3168$1 | $3173$1;
      var $3175$0 = _i64Add($3160$0,$3160$1,$3174$0,$3174$1); var $3175$1 = tempRet0;
      var $st$2221$0=(($t1)|0);
      HEAP32[(($st$2221$0)>>2)]=$3175$0;
      var $st$2222$1=(($t1+4)|0);
      HEAP32[(($st$2222$1)>>2)]=$3175$1;
      var $ld$2223$0=(($t0)|0);
      var $3176$0=HEAP32[(($ld$2223$0)>>2)];
      var $ld$2224$1=(($t0+4)|0);
      var $3176$1=HEAP32[(($ld$2224$1)>>2)];
      var $3177=(($S+8)|0);
      var $ld$2225$0=(($3177)|0);
      var $3178$0=HEAP32[(($ld$2225$0)>>2)];
      var $ld$2226$1=(($3177+4)|0);
      var $3178$1=HEAP32[(($ld$2226$1)>>2)];
      var $3179$0 = _i64Add($3178$0,$3178$1,$3176$0,$3176$1); var $3179$1 = tempRet0;
      var $st$2227$0=(($3177)|0);
      HEAP32[(($st$2227$0)>>2)]=$3179$0;
      var $st$2228$1=(($3177+4)|0);
      HEAP32[(($st$2228$1)>>2)]=$3179$1;
      var $ld$2229$0=(($t0)|0);
      var $3180$0=HEAP32[(($ld$2229$0)>>2)];
      var $ld$2230$1=(($t0+4)|0);
      var $3180$1=HEAP32[(($ld$2230$1)>>2)];
      var $ld$2231$0=(($t1)|0);
      var $3181$0=HEAP32[(($ld$2231$0)>>2)];
      var $ld$2232$1=(($t1+4)|0);
      var $3181$1=HEAP32[(($ld$2232$1)>>2)];
      var $3182$0 = _i64Add($3180$0,$3180$1,$3181$0,$3181$1); var $3182$1 = tempRet0;
      var $3183=(($S+40)|0);
      var $st$2233$0=(($3183)|0);
      HEAP32[(($st$2233$0)>>2)]=$3182$0;
      var $st$2234$1=(($3183+4)|0);
      HEAP32[(($st$2234$1)>>2)]=$3182$1;
      var $3184=(($S+32)|0);
      var $ld$2235$0=(($3184)|0);
      var $3185$0=HEAP32[(($ld$2235$0)>>2)];
      var $ld$2236$1=(($3184+4)|0);
      var $3185$1=HEAP32[(($ld$2236$1)>>2)];
      var $3186=(($S+8)|0);
      var $ld$2237$0=(($3186)|0);
      var $3187$0=HEAP32[(($ld$2237$0)>>2)];
      var $ld$2238$1=(($3186+4)|0);
      var $3187$1=HEAP32[(($ld$2238$1)>>2)];
      var $3188$0=($3187$0 >>> 14) | ($3187$1 << 18);
      var $3188$1=($3187$1 >>> 14) | (0 << 18);
      var $3189=(($S+8)|0);
      var $ld$2239$0=(($3189)|0);
      var $3190$0=HEAP32[(($ld$2239$0)>>2)];
      var $ld$2240$1=(($3189+4)|0);
      var $3190$1=HEAP32[(($ld$2240$1)>>2)];
      var $3191$0=(0 << 18) | (0 >>> 14);
      var $3191$1=($3190$0 << 18) | (0 >>> 14);
      var $3192$0=$3188$0 | $3191$0;
      var $3192$1=$3188$1 | $3191$1;
      var $3193=(($S+8)|0);
      var $ld$2241$0=(($3193)|0);
      var $3194$0=HEAP32[(($ld$2241$0)>>2)];
      var $ld$2242$1=(($3193+4)|0);
      var $3194$1=HEAP32[(($ld$2242$1)>>2)];
      var $3195$0=($3194$0 >>> 18) | ($3194$1 << 14);
      var $3195$1=($3194$1 >>> 18) | (0 << 14);
      var $3196=(($S+8)|0);
      var $ld$2243$0=(($3196)|0);
      var $3197$0=HEAP32[(($ld$2243$0)>>2)];
      var $ld$2244$1=(($3196+4)|0);
      var $3197$1=HEAP32[(($ld$2244$1)>>2)];
      var $3198$0=(0 << 14) | (0 >>> 18);
      var $3198$1=($3197$0 << 14) | (0 >>> 18);
      var $3199$0=$3195$0 | $3198$0;
      var $3199$1=$3195$1 | $3198$1;
      var $3200$0=$3192$0 ^ $3199$0;
      var $3200$1=$3192$1 ^ $3199$1;
      var $3201=(($S+8)|0);
      var $ld$2245$0=(($3201)|0);
      var $3202$0=HEAP32[(($ld$2245$0)>>2)];
      var $ld$2246$1=(($3201+4)|0);
      var $3202$1=HEAP32[(($ld$2246$1)>>2)];
      var $3203$0=($3202$1 >>> 9) | (0 << 23);
      var $3203$1=(0 >>> 9) | (0 << 23);
      var $3204=(($S+8)|0);
      var $ld$2247$0=(($3204)|0);
      var $3205$0=HEAP32[(($ld$2247$0)>>2)];
      var $ld$2248$1=(($3204+4)|0);
      var $3205$1=HEAP32[(($ld$2248$1)>>2)];
      var $3206$0=($3205$0 << 23) | (0 >>> 9);
      var $3206$1=($3205$1 << 23) | ($3205$0 >>> 9);
      var $3207$0=$3203$0 | $3206$0;
      var $3207$1=$3203$1 | $3206$1;
      var $3208$0=$3200$0 ^ $3207$0;
      var $3208$1=$3200$1 ^ $3207$1;
      var $3209$0 = _i64Add($3185$0,$3185$1,$3208$0,$3208$1); var $3209$1 = tempRet0;
      var $3210=(($S+24)|0);
      var $ld$2249$0=(($3210)|0);
      var $3211$0=HEAP32[(($ld$2249$0)>>2)];
      var $ld$2250$1=(($3210+4)|0);
      var $3211$1=HEAP32[(($ld$2250$1)>>2)];
      var $3212=(($S+8)|0);
      var $ld$2251$0=(($3212)|0);
      var $3213$0=HEAP32[(($ld$2251$0)>>2)];
      var $ld$2252$1=(($3212+4)|0);
      var $3213$1=HEAP32[(($ld$2252$1)>>2)];
      var $3214=(($S+16)|0);
      var $ld$2253$0=(($3214)|0);
      var $3215$0=HEAP32[(($ld$2253$0)>>2)];
      var $ld$2254$1=(($3214+4)|0);
      var $3215$1=HEAP32[(($ld$2254$1)>>2)];
      var $3216=(($S+24)|0);
      var $ld$2255$0=(($3216)|0);
      var $3217$0=HEAP32[(($ld$2255$0)>>2)];
      var $ld$2256$1=(($3216+4)|0);
      var $3217$1=HEAP32[(($ld$2256$1)>>2)];
      var $3218$0=$3215$0 ^ $3217$0;
      var $3218$1=$3215$1 ^ $3217$1;
      var $3219$0=$3213$0 & $3218$0;
      var $3219$1=$3213$1 & $3218$1;
      var $3220$0=$3211$0 ^ $3219$0;
      var $3220$1=$3211$1 ^ $3219$1;
      var $3221$0 = _i64Add($3209$0,$3209$1,$3220$0,$3220$1); var $3221$1 = tempRet0;
      var $$etemp$2257$0=-1651133473;
      var $$etemp$2257$1=1396182291;
      var $3222$0 = _i64Add($3221$0,$3221$1,$$etemp$2257$0,$$etemp$2257$1); var $3222$1 = tempRet0;
      var $3223=(($W+280)|0);
      var $ld$2258$0=(($3223)|0);
      var $3224$0=HEAP32[(($ld$2258$0)>>2)];
      var $ld$2259$1=(($3223+4)|0);
      var $3224$1=HEAP32[(($ld$2259$1)>>2)];
      var $3225$0 = _i64Add($3222$0,$3222$1,$3224$0,$3224$1); var $3225$1 = tempRet0;
      var $st$2260$0=(($t0)|0);
      HEAP32[(($st$2260$0)>>2)]=$3225$0;
      var $st$2261$1=(($t0+4)|0);
      HEAP32[(($st$2261$1)>>2)]=$3225$1;
      var $3226=(($S+40)|0);
      var $ld$2262$0=(($3226)|0);
      var $3227$0=HEAP32[(($ld$2262$0)>>2)];
      var $ld$2263$1=(($3226+4)|0);
      var $3227$1=HEAP32[(($ld$2263$1)>>2)];
      var $3228$0=($3227$0 >>> 28) | ($3227$1 << 4);
      var $3228$1=($3227$1 >>> 28) | (0 << 4);
      var $3229=(($S+40)|0);
      var $ld$2264$0=(($3229)|0);
      var $3230$0=HEAP32[(($ld$2264$0)>>2)];
      var $ld$2265$1=(($3229+4)|0);
      var $3230$1=HEAP32[(($ld$2265$1)>>2)];
      var $3231$0=(0 << 4) | (0 >>> 28);
      var $3231$1=($3230$0 << 4) | (0 >>> 28);
      var $3232$0=$3228$0 | $3231$0;
      var $3232$1=$3228$1 | $3231$1;
      var $3233=(($S+40)|0);
      var $ld$2266$0=(($3233)|0);
      var $3234$0=HEAP32[(($ld$2266$0)>>2)];
      var $ld$2267$1=(($3233+4)|0);
      var $3234$1=HEAP32[(($ld$2267$1)>>2)];
      var $3235$0=($3234$1 >>> 2) | (0 << 30);
      var $3235$1=(0 >>> 2) | (0 << 30);
      var $3236=(($S+40)|0);
      var $ld$2268$0=(($3236)|0);
      var $3237$0=HEAP32[(($ld$2268$0)>>2)];
      var $ld$2269$1=(($3236+4)|0);
      var $3237$1=HEAP32[(($ld$2269$1)>>2)];
      var $3238$0=($3237$0 << 30) | (0 >>> 2);
      var $3238$1=($3237$1 << 30) | ($3237$0 >>> 2);
      var $3239$0=$3235$0 | $3238$0;
      var $3239$1=$3235$1 | $3238$1;
      var $3240$0=$3232$0 ^ $3239$0;
      var $3240$1=$3232$1 ^ $3239$1;
      var $3241=(($S+40)|0);
      var $ld$2270$0=(($3241)|0);
      var $3242$0=HEAP32[(($ld$2270$0)>>2)];
      var $ld$2271$1=(($3241+4)|0);
      var $3242$1=HEAP32[(($ld$2271$1)>>2)];
      var $3243$0=($3242$1 >>> 7) | (0 << 25);
      var $3243$1=(0 >>> 7) | (0 << 25);
      var $3244=(($S+40)|0);
      var $ld$2272$0=(($3244)|0);
      var $3245$0=HEAP32[(($ld$2272$0)>>2)];
      var $ld$2273$1=(($3244+4)|0);
      var $3245$1=HEAP32[(($ld$2273$1)>>2)];
      var $3246$0=($3245$0 << 25) | (0 >>> 7);
      var $3246$1=($3245$1 << 25) | ($3245$0 >>> 7);
      var $3247$0=$3243$0 | $3246$0;
      var $3247$1=$3243$1 | $3246$1;
      var $3248$0=$3240$0 ^ $3247$0;
      var $3248$1=$3240$1 ^ $3247$1;
      var $3249=(($S+40)|0);
      var $ld$2274$0=(($3249)|0);
      var $3250$0=HEAP32[(($ld$2274$0)>>2)];
      var $ld$2275$1=(($3249+4)|0);
      var $3250$1=HEAP32[(($ld$2275$1)>>2)];
      var $3251=(($S+48)|0);
      var $ld$2276$0=(($3251)|0);
      var $3252$0=HEAP32[(($ld$2276$0)>>2)];
      var $ld$2277$1=(($3251+4)|0);
      var $3252$1=HEAP32[(($ld$2277$1)>>2)];
      var $3253$0=$3250$0 | $3252$0;
      var $3253$1=$3250$1 | $3252$1;
      var $3254=(($S+56)|0);
      var $ld$2278$0=(($3254)|0);
      var $3255$0=HEAP32[(($ld$2278$0)>>2)];
      var $ld$2279$1=(($3254+4)|0);
      var $3255$1=HEAP32[(($ld$2279$1)>>2)];
      var $3256$0=$3253$0 & $3255$0;
      var $3256$1=$3253$1 & $3255$1;
      var $3257=(($S+40)|0);
      var $ld$2280$0=(($3257)|0);
      var $3258$0=HEAP32[(($ld$2280$0)>>2)];
      var $ld$2281$1=(($3257+4)|0);
      var $3258$1=HEAP32[(($ld$2281$1)>>2)];
      var $3259=(($S+48)|0);
      var $ld$2282$0=(($3259)|0);
      var $3260$0=HEAP32[(($ld$2282$0)>>2)];
      var $ld$2283$1=(($3259+4)|0);
      var $3260$1=HEAP32[(($ld$2283$1)>>2)];
      var $3261$0=$3258$0 & $3260$0;
      var $3261$1=$3258$1 & $3260$1;
      var $3262$0=$3256$0 | $3261$0;
      var $3262$1=$3256$1 | $3261$1;
      var $3263$0 = _i64Add($3248$0,$3248$1,$3262$0,$3262$1); var $3263$1 = tempRet0;
      var $st$2284$0=(($t1)|0);
      HEAP32[(($st$2284$0)>>2)]=$3263$0;
      var $st$2285$1=(($t1+4)|0);
      HEAP32[(($st$2285$1)>>2)]=$3263$1;
      var $ld$2286$0=(($t0)|0);
      var $3264$0=HEAP32[(($ld$2286$0)>>2)];
      var $ld$2287$1=(($t0+4)|0);
      var $3264$1=HEAP32[(($ld$2287$1)>>2)];
      var $3265=(($S)|0);
      var $ld$2288$0=(($3265)|0);
      var $3266$0=HEAP32[(($ld$2288$0)>>2)];
      var $ld$2289$1=(($3265+4)|0);
      var $3266$1=HEAP32[(($ld$2289$1)>>2)];
      var $3267$0 = _i64Add($3266$0,$3266$1,$3264$0,$3264$1); var $3267$1 = tempRet0;
      var $st$2290$0=(($3265)|0);
      HEAP32[(($st$2290$0)>>2)]=$3267$0;
      var $st$2291$1=(($3265+4)|0);
      HEAP32[(($st$2291$1)>>2)]=$3267$1;
      var $ld$2292$0=(($t0)|0);
      var $3268$0=HEAP32[(($ld$2292$0)>>2)];
      var $ld$2293$1=(($t0+4)|0);
      var $3268$1=HEAP32[(($ld$2293$1)>>2)];
      var $ld$2294$0=(($t1)|0);
      var $3269$0=HEAP32[(($ld$2294$0)>>2)];
      var $ld$2295$1=(($t1+4)|0);
      var $3269$1=HEAP32[(($ld$2295$1)>>2)];
      var $3270$0 = _i64Add($3268$0,$3268$1,$3269$0,$3269$1); var $3270$1 = tempRet0;
      var $3271=(($S+32)|0);
      var $st$2296$0=(($3271)|0);
      HEAP32[(($st$2296$0)>>2)]=$3270$0;
      var $st$2297$1=(($3271+4)|0);
      HEAP32[(($st$2297$1)>>2)]=$3270$1;
      var $3272=(($S+24)|0);
      var $ld$2298$0=(($3272)|0);
      var $3273$0=HEAP32[(($ld$2298$0)>>2)];
      var $ld$2299$1=(($3272+4)|0);
      var $3273$1=HEAP32[(($ld$2299$1)>>2)];
      var $3274=(($S)|0);
      var $ld$2300$0=(($3274)|0);
      var $3275$0=HEAP32[(($ld$2300$0)>>2)];
      var $ld$2301$1=(($3274+4)|0);
      var $3275$1=HEAP32[(($ld$2301$1)>>2)];
      var $3276$0=($3275$0 >>> 14) | ($3275$1 << 18);
      var $3276$1=($3275$1 >>> 14) | (0 << 18);
      var $3277=(($S)|0);
      var $ld$2302$0=(($3277)|0);
      var $3278$0=HEAP32[(($ld$2302$0)>>2)];
      var $ld$2303$1=(($3277+4)|0);
      var $3278$1=HEAP32[(($ld$2303$1)>>2)];
      var $3279$0=(0 << 18) | (0 >>> 14);
      var $3279$1=($3278$0 << 18) | (0 >>> 14);
      var $3280$0=$3276$0 | $3279$0;
      var $3280$1=$3276$1 | $3279$1;
      var $3281=(($S)|0);
      var $ld$2304$0=(($3281)|0);
      var $3282$0=HEAP32[(($ld$2304$0)>>2)];
      var $ld$2305$1=(($3281+4)|0);
      var $3282$1=HEAP32[(($ld$2305$1)>>2)];
      var $3283$0=($3282$0 >>> 18) | ($3282$1 << 14);
      var $3283$1=($3282$1 >>> 18) | (0 << 14);
      var $3284=(($S)|0);
      var $ld$2306$0=(($3284)|0);
      var $3285$0=HEAP32[(($ld$2306$0)>>2)];
      var $ld$2307$1=(($3284+4)|0);
      var $3285$1=HEAP32[(($ld$2307$1)>>2)];
      var $3286$0=(0 << 14) | (0 >>> 18);
      var $3286$1=($3285$0 << 14) | (0 >>> 18);
      var $3287$0=$3283$0 | $3286$0;
      var $3287$1=$3283$1 | $3286$1;
      var $3288$0=$3280$0 ^ $3287$0;
      var $3288$1=$3280$1 ^ $3287$1;
      var $3289=(($S)|0);
      var $ld$2308$0=(($3289)|0);
      var $3290$0=HEAP32[(($ld$2308$0)>>2)];
      var $ld$2309$1=(($3289+4)|0);
      var $3290$1=HEAP32[(($ld$2309$1)>>2)];
      var $3291$0=($3290$1 >>> 9) | (0 << 23);
      var $3291$1=(0 >>> 9) | (0 << 23);
      var $3292=(($S)|0);
      var $ld$2310$0=(($3292)|0);
      var $3293$0=HEAP32[(($ld$2310$0)>>2)];
      var $ld$2311$1=(($3292+4)|0);
      var $3293$1=HEAP32[(($ld$2311$1)>>2)];
      var $3294$0=($3293$0 << 23) | (0 >>> 9);
      var $3294$1=($3293$1 << 23) | ($3293$0 >>> 9);
      var $3295$0=$3291$0 | $3294$0;
      var $3295$1=$3291$1 | $3294$1;
      var $3296$0=$3288$0 ^ $3295$0;
      var $3296$1=$3288$1 ^ $3295$1;
      var $3297$0 = _i64Add($3273$0,$3273$1,$3296$0,$3296$1); var $3297$1 = tempRet0;
      var $3298=(($S+16)|0);
      var $ld$2312$0=(($3298)|0);
      var $3299$0=HEAP32[(($ld$2312$0)>>2)];
      var $ld$2313$1=(($3298+4)|0);
      var $3299$1=HEAP32[(($ld$2313$1)>>2)];
      var $3300=(($S)|0);
      var $ld$2314$0=(($3300)|0);
      var $3301$0=HEAP32[(($ld$2314$0)>>2)];
      var $ld$2315$1=(($3300+4)|0);
      var $3301$1=HEAP32[(($ld$2315$1)>>2)];
      var $3302=(($S+8)|0);
      var $ld$2316$0=(($3302)|0);
      var $3303$0=HEAP32[(($ld$2316$0)>>2)];
      var $ld$2317$1=(($3302+4)|0);
      var $3303$1=HEAP32[(($ld$2317$1)>>2)];
      var $3304=(($S+16)|0);
      var $ld$2318$0=(($3304)|0);
      var $3305$0=HEAP32[(($ld$2318$0)>>2)];
      var $ld$2319$1=(($3304+4)|0);
      var $3305$1=HEAP32[(($ld$2319$1)>>2)];
      var $3306$0=$3303$0 ^ $3305$0;
      var $3306$1=$3303$1 ^ $3305$1;
      var $3307$0=$3301$0 & $3306$0;
      var $3307$1=$3301$1 & $3306$1;
      var $3308$0=$3299$0 ^ $3307$0;
      var $3308$1=$3299$1 ^ $3307$1;
      var $3309$0 = _i64Add($3297$0,$3297$1,$3308$0,$3308$1); var $3309$1 = tempRet0;
      var $$etemp$2320$0=-1951439906;
      var $$etemp$2320$1=1695183700;
      var $3310$0 = _i64Add($3309$0,$3309$1,$$etemp$2320$0,$$etemp$2320$1); var $3310$1 = tempRet0;
      var $3311=(($W+288)|0);
      var $ld$2321$0=(($3311)|0);
      var $3312$0=HEAP32[(($ld$2321$0)>>2)];
      var $ld$2322$1=(($3311+4)|0);
      var $3312$1=HEAP32[(($ld$2322$1)>>2)];
      var $3313$0 = _i64Add($3310$0,$3310$1,$3312$0,$3312$1); var $3313$1 = tempRet0;
      var $st$2323$0=(($t0)|0);
      HEAP32[(($st$2323$0)>>2)]=$3313$0;
      var $st$2324$1=(($t0+4)|0);
      HEAP32[(($st$2324$1)>>2)]=$3313$1;
      var $3314=(($S+32)|0);
      var $ld$2325$0=(($3314)|0);
      var $3315$0=HEAP32[(($ld$2325$0)>>2)];
      var $ld$2326$1=(($3314+4)|0);
      var $3315$1=HEAP32[(($ld$2326$1)>>2)];
      var $3316$0=($3315$0 >>> 28) | ($3315$1 << 4);
      var $3316$1=($3315$1 >>> 28) | (0 << 4);
      var $3317=(($S+32)|0);
      var $ld$2327$0=(($3317)|0);
      var $3318$0=HEAP32[(($ld$2327$0)>>2)];
      var $ld$2328$1=(($3317+4)|0);
      var $3318$1=HEAP32[(($ld$2328$1)>>2)];
      var $3319$0=(0 << 4) | (0 >>> 28);
      var $3319$1=($3318$0 << 4) | (0 >>> 28);
      var $3320$0=$3316$0 | $3319$0;
      var $3320$1=$3316$1 | $3319$1;
      var $3321=(($S+32)|0);
      var $ld$2329$0=(($3321)|0);
      var $3322$0=HEAP32[(($ld$2329$0)>>2)];
      var $ld$2330$1=(($3321+4)|0);
      var $3322$1=HEAP32[(($ld$2330$1)>>2)];
      var $3323$0=($3322$1 >>> 2) | (0 << 30);
      var $3323$1=(0 >>> 2) | (0 << 30);
      var $3324=(($S+32)|0);
      var $ld$2331$0=(($3324)|0);
      var $3325$0=HEAP32[(($ld$2331$0)>>2)];
      var $ld$2332$1=(($3324+4)|0);
      var $3325$1=HEAP32[(($ld$2332$1)>>2)];
      var $3326$0=($3325$0 << 30) | (0 >>> 2);
      var $3326$1=($3325$1 << 30) | ($3325$0 >>> 2);
      var $3327$0=$3323$0 | $3326$0;
      var $3327$1=$3323$1 | $3326$1;
      var $3328$0=$3320$0 ^ $3327$0;
      var $3328$1=$3320$1 ^ $3327$1;
      var $3329=(($S+32)|0);
      var $ld$2333$0=(($3329)|0);
      var $3330$0=HEAP32[(($ld$2333$0)>>2)];
      var $ld$2334$1=(($3329+4)|0);
      var $3330$1=HEAP32[(($ld$2334$1)>>2)];
      var $3331$0=($3330$1 >>> 7) | (0 << 25);
      var $3331$1=(0 >>> 7) | (0 << 25);
      var $3332=(($S+32)|0);
      var $ld$2335$0=(($3332)|0);
      var $3333$0=HEAP32[(($ld$2335$0)>>2)];
      var $ld$2336$1=(($3332+4)|0);
      var $3333$1=HEAP32[(($ld$2336$1)>>2)];
      var $3334$0=($3333$0 << 25) | (0 >>> 7);
      var $3334$1=($3333$1 << 25) | ($3333$0 >>> 7);
      var $3335$0=$3331$0 | $3334$0;
      var $3335$1=$3331$1 | $3334$1;
      var $3336$0=$3328$0 ^ $3335$0;
      var $3336$1=$3328$1 ^ $3335$1;
      var $3337=(($S+32)|0);
      var $ld$2337$0=(($3337)|0);
      var $3338$0=HEAP32[(($ld$2337$0)>>2)];
      var $ld$2338$1=(($3337+4)|0);
      var $3338$1=HEAP32[(($ld$2338$1)>>2)];
      var $3339=(($S+40)|0);
      var $ld$2339$0=(($3339)|0);
      var $3340$0=HEAP32[(($ld$2339$0)>>2)];
      var $ld$2340$1=(($3339+4)|0);
      var $3340$1=HEAP32[(($ld$2340$1)>>2)];
      var $3341$0=$3338$0 | $3340$0;
      var $3341$1=$3338$1 | $3340$1;
      var $3342=(($S+48)|0);
      var $ld$2341$0=(($3342)|0);
      var $3343$0=HEAP32[(($ld$2341$0)>>2)];
      var $ld$2342$1=(($3342+4)|0);
      var $3343$1=HEAP32[(($ld$2342$1)>>2)];
      var $3344$0=$3341$0 & $3343$0;
      var $3344$1=$3341$1 & $3343$1;
      var $3345=(($S+32)|0);
      var $ld$2343$0=(($3345)|0);
      var $3346$0=HEAP32[(($ld$2343$0)>>2)];
      var $ld$2344$1=(($3345+4)|0);
      var $3346$1=HEAP32[(($ld$2344$1)>>2)];
      var $3347=(($S+40)|0);
      var $ld$2345$0=(($3347)|0);
      var $3348$0=HEAP32[(($ld$2345$0)>>2)];
      var $ld$2346$1=(($3347+4)|0);
      var $3348$1=HEAP32[(($ld$2346$1)>>2)];
      var $3349$0=$3346$0 & $3348$0;
      var $3349$1=$3346$1 & $3348$1;
      var $3350$0=$3344$0 | $3349$0;
      var $3350$1=$3344$1 | $3349$1;
      var $3351$0 = _i64Add($3336$0,$3336$1,$3350$0,$3350$1); var $3351$1 = tempRet0;
      var $st$2347$0=(($t1)|0);
      HEAP32[(($st$2347$0)>>2)]=$3351$0;
      var $st$2348$1=(($t1+4)|0);
      HEAP32[(($st$2348$1)>>2)]=$3351$1;
      var $ld$2349$0=(($t0)|0);
      var $3352$0=HEAP32[(($ld$2349$0)>>2)];
      var $ld$2350$1=(($t0+4)|0);
      var $3352$1=HEAP32[(($ld$2350$1)>>2)];
      var $3353=(($S+56)|0);
      var $ld$2351$0=(($3353)|0);
      var $3354$0=HEAP32[(($ld$2351$0)>>2)];
      var $ld$2352$1=(($3353+4)|0);
      var $3354$1=HEAP32[(($ld$2352$1)>>2)];
      var $3355$0 = _i64Add($3354$0,$3354$1,$3352$0,$3352$1); var $3355$1 = tempRet0;
      var $st$2353$0=(($3353)|0);
      HEAP32[(($st$2353$0)>>2)]=$3355$0;
      var $st$2354$1=(($3353+4)|0);
      HEAP32[(($st$2354$1)>>2)]=$3355$1;
      var $ld$2355$0=(($t0)|0);
      var $3356$0=HEAP32[(($ld$2355$0)>>2)];
      var $ld$2356$1=(($t0+4)|0);
      var $3356$1=HEAP32[(($ld$2356$1)>>2)];
      var $ld$2357$0=(($t1)|0);
      var $3357$0=HEAP32[(($ld$2357$0)>>2)];
      var $ld$2358$1=(($t1+4)|0);
      var $3357$1=HEAP32[(($ld$2358$1)>>2)];
      var $3358$0 = _i64Add($3356$0,$3356$1,$3357$0,$3357$1); var $3358$1 = tempRet0;
      var $3359=(($S+24)|0);
      var $st$2359$0=(($3359)|0);
      HEAP32[(($st$2359$0)>>2)]=$3358$0;
      var $st$2360$1=(($3359+4)|0);
      HEAP32[(($st$2360$1)>>2)]=$3358$1;
      var $3360=(($S+16)|0);
      var $ld$2361$0=(($3360)|0);
      var $3361$0=HEAP32[(($ld$2361$0)>>2)];
      var $ld$2362$1=(($3360+4)|0);
      var $3361$1=HEAP32[(($ld$2362$1)>>2)];
      var $3362=(($S+56)|0);
      var $ld$2363$0=(($3362)|0);
      var $3363$0=HEAP32[(($ld$2363$0)>>2)];
      var $ld$2364$1=(($3362+4)|0);
      var $3363$1=HEAP32[(($ld$2364$1)>>2)];
      var $3364$0=($3363$0 >>> 14) | ($3363$1 << 18);
      var $3364$1=($3363$1 >>> 14) | (0 << 18);
      var $3365=(($S+56)|0);
      var $ld$2365$0=(($3365)|0);
      var $3366$0=HEAP32[(($ld$2365$0)>>2)];
      var $ld$2366$1=(($3365+4)|0);
      var $3366$1=HEAP32[(($ld$2366$1)>>2)];
      var $3367$0=(0 << 18) | (0 >>> 14);
      var $3367$1=($3366$0 << 18) | (0 >>> 14);
      var $3368$0=$3364$0 | $3367$0;
      var $3368$1=$3364$1 | $3367$1;
      var $3369=(($S+56)|0);
      var $ld$2367$0=(($3369)|0);
      var $3370$0=HEAP32[(($ld$2367$0)>>2)];
      var $ld$2368$1=(($3369+4)|0);
      var $3370$1=HEAP32[(($ld$2368$1)>>2)];
      var $3371$0=($3370$0 >>> 18) | ($3370$1 << 14);
      var $3371$1=($3370$1 >>> 18) | (0 << 14);
      var $3372=(($S+56)|0);
      var $ld$2369$0=(($3372)|0);
      var $3373$0=HEAP32[(($ld$2369$0)>>2)];
      var $ld$2370$1=(($3372+4)|0);
      var $3373$1=HEAP32[(($ld$2370$1)>>2)];
      var $3374$0=(0 << 14) | (0 >>> 18);
      var $3374$1=($3373$0 << 14) | (0 >>> 18);
      var $3375$0=$3371$0 | $3374$0;
      var $3375$1=$3371$1 | $3374$1;
      var $3376$0=$3368$0 ^ $3375$0;
      var $3376$1=$3368$1 ^ $3375$1;
      var $3377=(($S+56)|0);
      var $ld$2371$0=(($3377)|0);
      var $3378$0=HEAP32[(($ld$2371$0)>>2)];
      var $ld$2372$1=(($3377+4)|0);
      var $3378$1=HEAP32[(($ld$2372$1)>>2)];
      var $3379$0=($3378$1 >>> 9) | (0 << 23);
      var $3379$1=(0 >>> 9) | (0 << 23);
      var $3380=(($S+56)|0);
      var $ld$2373$0=(($3380)|0);
      var $3381$0=HEAP32[(($ld$2373$0)>>2)];
      var $ld$2374$1=(($3380+4)|0);
      var $3381$1=HEAP32[(($ld$2374$1)>>2)];
      var $3382$0=($3381$0 << 23) | (0 >>> 9);
      var $3382$1=($3381$1 << 23) | ($3381$0 >>> 9);
      var $3383$0=$3379$0 | $3382$0;
      var $3383$1=$3379$1 | $3382$1;
      var $3384$0=$3376$0 ^ $3383$0;
      var $3384$1=$3376$1 ^ $3383$1;
      var $3385$0 = _i64Add($3361$0,$3361$1,$3384$0,$3384$1); var $3385$1 = tempRet0;
      var $3386=(($S+8)|0);
      var $ld$2375$0=(($3386)|0);
      var $3387$0=HEAP32[(($ld$2375$0)>>2)];
      var $ld$2376$1=(($3386+4)|0);
      var $3387$1=HEAP32[(($ld$2376$1)>>2)];
      var $3388=(($S+56)|0);
      var $ld$2377$0=(($3388)|0);
      var $3389$0=HEAP32[(($ld$2377$0)>>2)];
      var $ld$2378$1=(($3388+4)|0);
      var $3389$1=HEAP32[(($ld$2378$1)>>2)];
      var $3390=(($S)|0);
      var $ld$2379$0=(($3390)|0);
      var $3391$0=HEAP32[(($ld$2379$0)>>2)];
      var $ld$2380$1=(($3390+4)|0);
      var $3391$1=HEAP32[(($ld$2380$1)>>2)];
      var $3392=(($S+8)|0);
      var $ld$2381$0=(($3392)|0);
      var $3393$0=HEAP32[(($ld$2381$0)>>2)];
      var $ld$2382$1=(($3392+4)|0);
      var $3393$1=HEAP32[(($ld$2382$1)>>2)];
      var $3394$0=$3391$0 ^ $3393$0;
      var $3394$1=$3391$1 ^ $3393$1;
      var $3395$0=$3389$0 & $3394$0;
      var $3395$1=$3389$1 & $3394$1;
      var $3396$0=$3387$0 ^ $3395$0;
      var $3396$1=$3387$1 ^ $3395$1;
      var $3397$0 = _i64Add($3385$0,$3385$1,$3396$0,$3396$1); var $3397$1 = tempRet0;
      var $$etemp$2383$0=1014477480;
      var $$etemp$2383$1=1986661051;
      var $3398$0 = _i64Add($3397$0,$3397$1,$$etemp$2383$0,$$etemp$2383$1); var $3398$1 = tempRet0;
      var $3399=(($W+296)|0);
      var $ld$2384$0=(($3399)|0);
      var $3400$0=HEAP32[(($ld$2384$0)>>2)];
      var $ld$2385$1=(($3399+4)|0);
      var $3400$1=HEAP32[(($ld$2385$1)>>2)];
      var $3401$0 = _i64Add($3398$0,$3398$1,$3400$0,$3400$1); var $3401$1 = tempRet0;
      var $st$2386$0=(($t0)|0);
      HEAP32[(($st$2386$0)>>2)]=$3401$0;
      var $st$2387$1=(($t0+4)|0);
      HEAP32[(($st$2387$1)>>2)]=$3401$1;
      var $3402=(($S+24)|0);
      var $ld$2388$0=(($3402)|0);
      var $3403$0=HEAP32[(($ld$2388$0)>>2)];
      var $ld$2389$1=(($3402+4)|0);
      var $3403$1=HEAP32[(($ld$2389$1)>>2)];
      var $3404$0=($3403$0 >>> 28) | ($3403$1 << 4);
      var $3404$1=($3403$1 >>> 28) | (0 << 4);
      var $3405=(($S+24)|0);
      var $ld$2390$0=(($3405)|0);
      var $3406$0=HEAP32[(($ld$2390$0)>>2)];
      var $ld$2391$1=(($3405+4)|0);
      var $3406$1=HEAP32[(($ld$2391$1)>>2)];
      var $3407$0=(0 << 4) | (0 >>> 28);
      var $3407$1=($3406$0 << 4) | (0 >>> 28);
      var $3408$0=$3404$0 | $3407$0;
      var $3408$1=$3404$1 | $3407$1;
      var $3409=(($S+24)|0);
      var $ld$2392$0=(($3409)|0);
      var $3410$0=HEAP32[(($ld$2392$0)>>2)];
      var $ld$2393$1=(($3409+4)|0);
      var $3410$1=HEAP32[(($ld$2393$1)>>2)];
      var $3411$0=($3410$1 >>> 2) | (0 << 30);
      var $3411$1=(0 >>> 2) | (0 << 30);
      var $3412=(($S+24)|0);
      var $ld$2394$0=(($3412)|0);
      var $3413$0=HEAP32[(($ld$2394$0)>>2)];
      var $ld$2395$1=(($3412+4)|0);
      var $3413$1=HEAP32[(($ld$2395$1)>>2)];
      var $3414$0=($3413$0 << 30) | (0 >>> 2);
      var $3414$1=($3413$1 << 30) | ($3413$0 >>> 2);
      var $3415$0=$3411$0 | $3414$0;
      var $3415$1=$3411$1 | $3414$1;
      var $3416$0=$3408$0 ^ $3415$0;
      var $3416$1=$3408$1 ^ $3415$1;
      var $3417=(($S+24)|0);
      var $ld$2396$0=(($3417)|0);
      var $3418$0=HEAP32[(($ld$2396$0)>>2)];
      var $ld$2397$1=(($3417+4)|0);
      var $3418$1=HEAP32[(($ld$2397$1)>>2)];
      var $3419$0=($3418$1 >>> 7) | (0 << 25);
      var $3419$1=(0 >>> 7) | (0 << 25);
      var $3420=(($S+24)|0);
      var $ld$2398$0=(($3420)|0);
      var $3421$0=HEAP32[(($ld$2398$0)>>2)];
      var $ld$2399$1=(($3420+4)|0);
      var $3421$1=HEAP32[(($ld$2399$1)>>2)];
      var $3422$0=($3421$0 << 25) | (0 >>> 7);
      var $3422$1=($3421$1 << 25) | ($3421$0 >>> 7);
      var $3423$0=$3419$0 | $3422$0;
      var $3423$1=$3419$1 | $3422$1;
      var $3424$0=$3416$0 ^ $3423$0;
      var $3424$1=$3416$1 ^ $3423$1;
      var $3425=(($S+24)|0);
      var $ld$2400$0=(($3425)|0);
      var $3426$0=HEAP32[(($ld$2400$0)>>2)];
      var $ld$2401$1=(($3425+4)|0);
      var $3426$1=HEAP32[(($ld$2401$1)>>2)];
      var $3427=(($S+32)|0);
      var $ld$2402$0=(($3427)|0);
      var $3428$0=HEAP32[(($ld$2402$0)>>2)];
      var $ld$2403$1=(($3427+4)|0);
      var $3428$1=HEAP32[(($ld$2403$1)>>2)];
      var $3429$0=$3426$0 | $3428$0;
      var $3429$1=$3426$1 | $3428$1;
      var $3430=(($S+40)|0);
      var $ld$2404$0=(($3430)|0);
      var $3431$0=HEAP32[(($ld$2404$0)>>2)];
      var $ld$2405$1=(($3430+4)|0);
      var $3431$1=HEAP32[(($ld$2405$1)>>2)];
      var $3432$0=$3429$0 & $3431$0;
      var $3432$1=$3429$1 & $3431$1;
      var $3433=(($S+24)|0);
      var $ld$2406$0=(($3433)|0);
      var $3434$0=HEAP32[(($ld$2406$0)>>2)];
      var $ld$2407$1=(($3433+4)|0);
      var $3434$1=HEAP32[(($ld$2407$1)>>2)];
      var $3435=(($S+32)|0);
      var $ld$2408$0=(($3435)|0);
      var $3436$0=HEAP32[(($ld$2408$0)>>2)];
      var $ld$2409$1=(($3435+4)|0);
      var $3436$1=HEAP32[(($ld$2409$1)>>2)];
      var $3437$0=$3434$0 & $3436$0;
      var $3437$1=$3434$1 & $3436$1;
      var $3438$0=$3432$0 | $3437$0;
      var $3438$1=$3432$1 | $3437$1;
      var $3439$0 = _i64Add($3424$0,$3424$1,$3438$0,$3438$1); var $3439$1 = tempRet0;
      var $st$2410$0=(($t1)|0);
      HEAP32[(($st$2410$0)>>2)]=$3439$0;
      var $st$2411$1=(($t1+4)|0);
      HEAP32[(($st$2411$1)>>2)]=$3439$1;
      var $ld$2412$0=(($t0)|0);
      var $3440$0=HEAP32[(($ld$2412$0)>>2)];
      var $ld$2413$1=(($t0+4)|0);
      var $3440$1=HEAP32[(($ld$2413$1)>>2)];
      var $3441=(($S+48)|0);
      var $ld$2414$0=(($3441)|0);
      var $3442$0=HEAP32[(($ld$2414$0)>>2)];
      var $ld$2415$1=(($3441+4)|0);
      var $3442$1=HEAP32[(($ld$2415$1)>>2)];
      var $3443$0 = _i64Add($3442$0,$3442$1,$3440$0,$3440$1); var $3443$1 = tempRet0;
      var $st$2416$0=(($3441)|0);
      HEAP32[(($st$2416$0)>>2)]=$3443$0;
      var $st$2417$1=(($3441+4)|0);
      HEAP32[(($st$2417$1)>>2)]=$3443$1;
      var $ld$2418$0=(($t0)|0);
      var $3444$0=HEAP32[(($ld$2418$0)>>2)];
      var $ld$2419$1=(($t0+4)|0);
      var $3444$1=HEAP32[(($ld$2419$1)>>2)];
      var $ld$2420$0=(($t1)|0);
      var $3445$0=HEAP32[(($ld$2420$0)>>2)];
      var $ld$2421$1=(($t1+4)|0);
      var $3445$1=HEAP32[(($ld$2421$1)>>2)];
      var $3446$0 = _i64Add($3444$0,$3444$1,$3445$0,$3445$1); var $3446$1 = tempRet0;
      var $3447=(($S+16)|0);
      var $st$2422$0=(($3447)|0);
      HEAP32[(($st$2422$0)>>2)]=$3446$0;
      var $st$2423$1=(($3447+4)|0);
      HEAP32[(($st$2423$1)>>2)]=$3446$1;
      var $3448=(($S+8)|0);
      var $ld$2424$0=(($3448)|0);
      var $3449$0=HEAP32[(($ld$2424$0)>>2)];
      var $ld$2425$1=(($3448+4)|0);
      var $3449$1=HEAP32[(($ld$2425$1)>>2)];
      var $3450=(($S+48)|0);
      var $ld$2426$0=(($3450)|0);
      var $3451$0=HEAP32[(($ld$2426$0)>>2)];
      var $ld$2427$1=(($3450+4)|0);
      var $3451$1=HEAP32[(($ld$2427$1)>>2)];
      var $3452$0=($3451$0 >>> 14) | ($3451$1 << 18);
      var $3452$1=($3451$1 >>> 14) | (0 << 18);
      var $3453=(($S+48)|0);
      var $ld$2428$0=(($3453)|0);
      var $3454$0=HEAP32[(($ld$2428$0)>>2)];
      var $ld$2429$1=(($3453+4)|0);
      var $3454$1=HEAP32[(($ld$2429$1)>>2)];
      var $3455$0=(0 << 18) | (0 >>> 14);
      var $3455$1=($3454$0 << 18) | (0 >>> 14);
      var $3456$0=$3452$0 | $3455$0;
      var $3456$1=$3452$1 | $3455$1;
      var $3457=(($S+48)|0);
      var $ld$2430$0=(($3457)|0);
      var $3458$0=HEAP32[(($ld$2430$0)>>2)];
      var $ld$2431$1=(($3457+4)|0);
      var $3458$1=HEAP32[(($ld$2431$1)>>2)];
      var $3459$0=($3458$0 >>> 18) | ($3458$1 << 14);
      var $3459$1=($3458$1 >>> 18) | (0 << 14);
      var $3460=(($S+48)|0);
      var $ld$2432$0=(($3460)|0);
      var $3461$0=HEAP32[(($ld$2432$0)>>2)];
      var $ld$2433$1=(($3460+4)|0);
      var $3461$1=HEAP32[(($ld$2433$1)>>2)];
      var $3462$0=(0 << 14) | (0 >>> 18);
      var $3462$1=($3461$0 << 14) | (0 >>> 18);
      var $3463$0=$3459$0 | $3462$0;
      var $3463$1=$3459$1 | $3462$1;
      var $3464$0=$3456$0 ^ $3463$0;
      var $3464$1=$3456$1 ^ $3463$1;
      var $3465=(($S+48)|0);
      var $ld$2434$0=(($3465)|0);
      var $3466$0=HEAP32[(($ld$2434$0)>>2)];
      var $ld$2435$1=(($3465+4)|0);
      var $3466$1=HEAP32[(($ld$2435$1)>>2)];
      var $3467$0=($3466$1 >>> 9) | (0 << 23);
      var $3467$1=(0 >>> 9) | (0 << 23);
      var $3468=(($S+48)|0);
      var $ld$2436$0=(($3468)|0);
      var $3469$0=HEAP32[(($ld$2436$0)>>2)];
      var $ld$2437$1=(($3468+4)|0);
      var $3469$1=HEAP32[(($ld$2437$1)>>2)];
      var $3470$0=($3469$0 << 23) | (0 >>> 9);
      var $3470$1=($3469$1 << 23) | ($3469$0 >>> 9);
      var $3471$0=$3467$0 | $3470$0;
      var $3471$1=$3467$1 | $3470$1;
      var $3472$0=$3464$0 ^ $3471$0;
      var $3472$1=$3464$1 ^ $3471$1;
      var $3473$0 = _i64Add($3449$0,$3449$1,$3472$0,$3472$1); var $3473$1 = tempRet0;
      var $3474=(($S)|0);
      var $ld$2438$0=(($3474)|0);
      var $3475$0=HEAP32[(($ld$2438$0)>>2)];
      var $ld$2439$1=(($3474+4)|0);
      var $3475$1=HEAP32[(($ld$2439$1)>>2)];
      var $3476=(($S+48)|0);
      var $ld$2440$0=(($3476)|0);
      var $3477$0=HEAP32[(($ld$2440$0)>>2)];
      var $ld$2441$1=(($3476+4)|0);
      var $3477$1=HEAP32[(($ld$2441$1)>>2)];
      var $3478=(($S+56)|0);
      var $ld$2442$0=(($3478)|0);
      var $3479$0=HEAP32[(($ld$2442$0)>>2)];
      var $ld$2443$1=(($3478+4)|0);
      var $3479$1=HEAP32[(($ld$2443$1)>>2)];
      var $3480=(($S)|0);
      var $ld$2444$0=(($3480)|0);
      var $3481$0=HEAP32[(($ld$2444$0)>>2)];
      var $ld$2445$1=(($3480+4)|0);
      var $3481$1=HEAP32[(($ld$2445$1)>>2)];
      var $3482$0=$3479$0 ^ $3481$0;
      var $3482$1=$3479$1 ^ $3481$1;
      var $3483$0=$3477$0 & $3482$0;
      var $3483$1=$3477$1 & $3482$1;
      var $3484$0=$3475$0 ^ $3483$0;
      var $3484$1=$3475$1 ^ $3483$1;
      var $3485$0 = _i64Add($3473$0,$3473$1,$3484$0,$3484$1); var $3485$1 = tempRet0;
      var $$etemp$2446$0=1206759142;
      var $$etemp$2446$1=-2117940946;
      var $3486$0 = _i64Add($3485$0,$3485$1,$$etemp$2446$0,$$etemp$2446$1); var $3486$1 = tempRet0;
      var $3487=(($W+304)|0);
      var $ld$2447$0=(($3487)|0);
      var $3488$0=HEAP32[(($ld$2447$0)>>2)];
      var $ld$2448$1=(($3487+4)|0);
      var $3488$1=HEAP32[(($ld$2448$1)>>2)];
      var $3489$0 = _i64Add($3486$0,$3486$1,$3488$0,$3488$1); var $3489$1 = tempRet0;
      var $st$2449$0=(($t0)|0);
      HEAP32[(($st$2449$0)>>2)]=$3489$0;
      var $st$2450$1=(($t0+4)|0);
      HEAP32[(($st$2450$1)>>2)]=$3489$1;
      var $3490=(($S+16)|0);
      var $ld$2451$0=(($3490)|0);
      var $3491$0=HEAP32[(($ld$2451$0)>>2)];
      var $ld$2452$1=(($3490+4)|0);
      var $3491$1=HEAP32[(($ld$2452$1)>>2)];
      var $3492$0=($3491$0 >>> 28) | ($3491$1 << 4);
      var $3492$1=($3491$1 >>> 28) | (0 << 4);
      var $3493=(($S+16)|0);
      var $ld$2453$0=(($3493)|0);
      var $3494$0=HEAP32[(($ld$2453$0)>>2)];
      var $ld$2454$1=(($3493+4)|0);
      var $3494$1=HEAP32[(($ld$2454$1)>>2)];
      var $3495$0=(0 << 4) | (0 >>> 28);
      var $3495$1=($3494$0 << 4) | (0 >>> 28);
      var $3496$0=$3492$0 | $3495$0;
      var $3496$1=$3492$1 | $3495$1;
      var $3497=(($S+16)|0);
      var $ld$2455$0=(($3497)|0);
      var $3498$0=HEAP32[(($ld$2455$0)>>2)];
      var $ld$2456$1=(($3497+4)|0);
      var $3498$1=HEAP32[(($ld$2456$1)>>2)];
      var $3499$0=($3498$1 >>> 2) | (0 << 30);
      var $3499$1=(0 >>> 2) | (0 << 30);
      var $3500=(($S+16)|0);
      var $ld$2457$0=(($3500)|0);
      var $3501$0=HEAP32[(($ld$2457$0)>>2)];
      var $ld$2458$1=(($3500+4)|0);
      var $3501$1=HEAP32[(($ld$2458$1)>>2)];
      var $3502$0=($3501$0 << 30) | (0 >>> 2);
      var $3502$1=($3501$1 << 30) | ($3501$0 >>> 2);
      var $3503$0=$3499$0 | $3502$0;
      var $3503$1=$3499$1 | $3502$1;
      var $3504$0=$3496$0 ^ $3503$0;
      var $3504$1=$3496$1 ^ $3503$1;
      var $3505=(($S+16)|0);
      var $ld$2459$0=(($3505)|0);
      var $3506$0=HEAP32[(($ld$2459$0)>>2)];
      var $ld$2460$1=(($3505+4)|0);
      var $3506$1=HEAP32[(($ld$2460$1)>>2)];
      var $3507$0=($3506$1 >>> 7) | (0 << 25);
      var $3507$1=(0 >>> 7) | (0 << 25);
      var $3508=(($S+16)|0);
      var $ld$2461$0=(($3508)|0);
      var $3509$0=HEAP32[(($ld$2461$0)>>2)];
      var $ld$2462$1=(($3508+4)|0);
      var $3509$1=HEAP32[(($ld$2462$1)>>2)];
      var $3510$0=($3509$0 << 25) | (0 >>> 7);
      var $3510$1=($3509$1 << 25) | ($3509$0 >>> 7);
      var $3511$0=$3507$0 | $3510$0;
      var $3511$1=$3507$1 | $3510$1;
      var $3512$0=$3504$0 ^ $3511$0;
      var $3512$1=$3504$1 ^ $3511$1;
      var $3513=(($S+16)|0);
      var $ld$2463$0=(($3513)|0);
      var $3514$0=HEAP32[(($ld$2463$0)>>2)];
      var $ld$2464$1=(($3513+4)|0);
      var $3514$1=HEAP32[(($ld$2464$1)>>2)];
      var $3515=(($S+24)|0);
      var $ld$2465$0=(($3515)|0);
      var $3516$0=HEAP32[(($ld$2465$0)>>2)];
      var $ld$2466$1=(($3515+4)|0);
      var $3516$1=HEAP32[(($ld$2466$1)>>2)];
      var $3517$0=$3514$0 | $3516$0;
      var $3517$1=$3514$1 | $3516$1;
      var $3518=(($S+32)|0);
      var $ld$2467$0=(($3518)|0);
      var $3519$0=HEAP32[(($ld$2467$0)>>2)];
      var $ld$2468$1=(($3518+4)|0);
      var $3519$1=HEAP32[(($ld$2468$1)>>2)];
      var $3520$0=$3517$0 & $3519$0;
      var $3520$1=$3517$1 & $3519$1;
      var $3521=(($S+16)|0);
      var $ld$2469$0=(($3521)|0);
      var $3522$0=HEAP32[(($ld$2469$0)>>2)];
      var $ld$2470$1=(($3521+4)|0);
      var $3522$1=HEAP32[(($ld$2470$1)>>2)];
      var $3523=(($S+24)|0);
      var $ld$2471$0=(($3523)|0);
      var $3524$0=HEAP32[(($ld$2471$0)>>2)];
      var $ld$2472$1=(($3523+4)|0);
      var $3524$1=HEAP32[(($ld$2472$1)>>2)];
      var $3525$0=$3522$0 & $3524$0;
      var $3525$1=$3522$1 & $3524$1;
      var $3526$0=$3520$0 | $3525$0;
      var $3526$1=$3520$1 | $3525$1;
      var $3527$0 = _i64Add($3512$0,$3512$1,$3526$0,$3526$1); var $3527$1 = tempRet0;
      var $st$2473$0=(($t1)|0);
      HEAP32[(($st$2473$0)>>2)]=$3527$0;
      var $st$2474$1=(($t1+4)|0);
      HEAP32[(($st$2474$1)>>2)]=$3527$1;
      var $ld$2475$0=(($t0)|0);
      var $3528$0=HEAP32[(($ld$2475$0)>>2)];
      var $ld$2476$1=(($t0+4)|0);
      var $3528$1=HEAP32[(($ld$2476$1)>>2)];
      var $3529=(($S+40)|0);
      var $ld$2477$0=(($3529)|0);
      var $3530$0=HEAP32[(($ld$2477$0)>>2)];
      var $ld$2478$1=(($3529+4)|0);
      var $3530$1=HEAP32[(($ld$2478$1)>>2)];
      var $3531$0 = _i64Add($3530$0,$3530$1,$3528$0,$3528$1); var $3531$1 = tempRet0;
      var $st$2479$0=(($3529)|0);
      HEAP32[(($st$2479$0)>>2)]=$3531$0;
      var $st$2480$1=(($3529+4)|0);
      HEAP32[(($st$2480$1)>>2)]=$3531$1;
      var $ld$2481$0=(($t0)|0);
      var $3532$0=HEAP32[(($ld$2481$0)>>2)];
      var $ld$2482$1=(($t0+4)|0);
      var $3532$1=HEAP32[(($ld$2482$1)>>2)];
      var $ld$2483$0=(($t1)|0);
      var $3533$0=HEAP32[(($ld$2483$0)>>2)];
      var $ld$2484$1=(($t1+4)|0);
      var $3533$1=HEAP32[(($ld$2484$1)>>2)];
      var $3534$0 = _i64Add($3532$0,$3532$1,$3533$0,$3533$1); var $3534$1 = tempRet0;
      var $3535=(($S+8)|0);
      var $st$2485$0=(($3535)|0);
      HEAP32[(($st$2485$0)>>2)]=$3534$0;
      var $st$2486$1=(($3535+4)|0);
      HEAP32[(($st$2486$1)>>2)]=$3534$1;
      var $3536=(($S)|0);
      var $ld$2487$0=(($3536)|0);
      var $3537$0=HEAP32[(($ld$2487$0)>>2)];
      var $ld$2488$1=(($3536+4)|0);
      var $3537$1=HEAP32[(($ld$2488$1)>>2)];
      var $3538=(($S+40)|0);
      var $ld$2489$0=(($3538)|0);
      var $3539$0=HEAP32[(($ld$2489$0)>>2)];
      var $ld$2490$1=(($3538+4)|0);
      var $3539$1=HEAP32[(($ld$2490$1)>>2)];
      var $3540$0=($3539$0 >>> 14) | ($3539$1 << 18);
      var $3540$1=($3539$1 >>> 14) | (0 << 18);
      var $3541=(($S+40)|0);
      var $ld$2491$0=(($3541)|0);
      var $3542$0=HEAP32[(($ld$2491$0)>>2)];
      var $ld$2492$1=(($3541+4)|0);
      var $3542$1=HEAP32[(($ld$2492$1)>>2)];
      var $3543$0=(0 << 18) | (0 >>> 14);
      var $3543$1=($3542$0 << 18) | (0 >>> 14);
      var $3544$0=$3540$0 | $3543$0;
      var $3544$1=$3540$1 | $3543$1;
      var $3545=(($S+40)|0);
      var $ld$2493$0=(($3545)|0);
      var $3546$0=HEAP32[(($ld$2493$0)>>2)];
      var $ld$2494$1=(($3545+4)|0);
      var $3546$1=HEAP32[(($ld$2494$1)>>2)];
      var $3547$0=($3546$0 >>> 18) | ($3546$1 << 14);
      var $3547$1=($3546$1 >>> 18) | (0 << 14);
      var $3548=(($S+40)|0);
      var $ld$2495$0=(($3548)|0);
      var $3549$0=HEAP32[(($ld$2495$0)>>2)];
      var $ld$2496$1=(($3548+4)|0);
      var $3549$1=HEAP32[(($ld$2496$1)>>2)];
      var $3550$0=(0 << 14) | (0 >>> 18);
      var $3550$1=($3549$0 << 14) | (0 >>> 18);
      var $3551$0=$3547$0 | $3550$0;
      var $3551$1=$3547$1 | $3550$1;
      var $3552$0=$3544$0 ^ $3551$0;
      var $3552$1=$3544$1 ^ $3551$1;
      var $3553=(($S+40)|0);
      var $ld$2497$0=(($3553)|0);
      var $3554$0=HEAP32[(($ld$2497$0)>>2)];
      var $ld$2498$1=(($3553+4)|0);
      var $3554$1=HEAP32[(($ld$2498$1)>>2)];
      var $3555$0=($3554$1 >>> 9) | (0 << 23);
      var $3555$1=(0 >>> 9) | (0 << 23);
      var $3556=(($S+40)|0);
      var $ld$2499$0=(($3556)|0);
      var $3557$0=HEAP32[(($ld$2499$0)>>2)];
      var $ld$2500$1=(($3556+4)|0);
      var $3557$1=HEAP32[(($ld$2500$1)>>2)];
      var $3558$0=($3557$0 << 23) | (0 >>> 9);
      var $3558$1=($3557$1 << 23) | ($3557$0 >>> 9);
      var $3559$0=$3555$0 | $3558$0;
      var $3559$1=$3555$1 | $3558$1;
      var $3560$0=$3552$0 ^ $3559$0;
      var $3560$1=$3552$1 ^ $3559$1;
      var $3561$0 = _i64Add($3537$0,$3537$1,$3560$0,$3560$1); var $3561$1 = tempRet0;
      var $3562=(($S+56)|0);
      var $ld$2501$0=(($3562)|0);
      var $3563$0=HEAP32[(($ld$2501$0)>>2)];
      var $ld$2502$1=(($3562+4)|0);
      var $3563$1=HEAP32[(($ld$2502$1)>>2)];
      var $3564=(($S+40)|0);
      var $ld$2503$0=(($3564)|0);
      var $3565$0=HEAP32[(($ld$2503$0)>>2)];
      var $ld$2504$1=(($3564+4)|0);
      var $3565$1=HEAP32[(($ld$2504$1)>>2)];
      var $3566=(($S+48)|0);
      var $ld$2505$0=(($3566)|0);
      var $3567$0=HEAP32[(($ld$2505$0)>>2)];
      var $ld$2506$1=(($3566+4)|0);
      var $3567$1=HEAP32[(($ld$2506$1)>>2)];
      var $3568=(($S+56)|0);
      var $ld$2507$0=(($3568)|0);
      var $3569$0=HEAP32[(($ld$2507$0)>>2)];
      var $ld$2508$1=(($3568+4)|0);
      var $3569$1=HEAP32[(($ld$2508$1)>>2)];
      var $3570$0=$3567$0 ^ $3569$0;
      var $3570$1=$3567$1 ^ $3569$1;
      var $3571$0=$3565$0 & $3570$0;
      var $3571$1=$3565$1 & $3570$1;
      var $3572$0=$3563$0 ^ $3571$0;
      var $3572$1=$3563$1 ^ $3571$1;
      var $3573$0 = _i64Add($3561$0,$3561$1,$3572$0,$3572$1); var $3573$1 = tempRet0;
      var $$etemp$2509$0=344077627;
      var $$etemp$2509$1=-1838011259;
      var $3574$0 = _i64Add($3573$0,$3573$1,$$etemp$2509$0,$$etemp$2509$1); var $3574$1 = tempRet0;
      var $3575=(($W+312)|0);
      var $ld$2510$0=(($3575)|0);
      var $3576$0=HEAP32[(($ld$2510$0)>>2)];
      var $ld$2511$1=(($3575+4)|0);
      var $3576$1=HEAP32[(($ld$2511$1)>>2)];
      var $3577$0 = _i64Add($3574$0,$3574$1,$3576$0,$3576$1); var $3577$1 = tempRet0;
      var $st$2512$0=(($t0)|0);
      HEAP32[(($st$2512$0)>>2)]=$3577$0;
      var $st$2513$1=(($t0+4)|0);
      HEAP32[(($st$2513$1)>>2)]=$3577$1;
      var $3578=(($S+8)|0);
      var $ld$2514$0=(($3578)|0);
      var $3579$0=HEAP32[(($ld$2514$0)>>2)];
      var $ld$2515$1=(($3578+4)|0);
      var $3579$1=HEAP32[(($ld$2515$1)>>2)];
      var $3580$0=($3579$0 >>> 28) | ($3579$1 << 4);
      var $3580$1=($3579$1 >>> 28) | (0 << 4);
      var $3581=(($S+8)|0);
      var $ld$2516$0=(($3581)|0);
      var $3582$0=HEAP32[(($ld$2516$0)>>2)];
      var $ld$2517$1=(($3581+4)|0);
      var $3582$1=HEAP32[(($ld$2517$1)>>2)];
      var $3583$0=(0 << 4) | (0 >>> 28);
      var $3583$1=($3582$0 << 4) | (0 >>> 28);
      var $3584$0=$3580$0 | $3583$0;
      var $3584$1=$3580$1 | $3583$1;
      var $3585=(($S+8)|0);
      var $ld$2518$0=(($3585)|0);
      var $3586$0=HEAP32[(($ld$2518$0)>>2)];
      var $ld$2519$1=(($3585+4)|0);
      var $3586$1=HEAP32[(($ld$2519$1)>>2)];
      var $3587$0=($3586$1 >>> 2) | (0 << 30);
      var $3587$1=(0 >>> 2) | (0 << 30);
      var $3588=(($S+8)|0);
      var $ld$2520$0=(($3588)|0);
      var $3589$0=HEAP32[(($ld$2520$0)>>2)];
      var $ld$2521$1=(($3588+4)|0);
      var $3589$1=HEAP32[(($ld$2521$1)>>2)];
      var $3590$0=($3589$0 << 30) | (0 >>> 2);
      var $3590$1=($3589$1 << 30) | ($3589$0 >>> 2);
      var $3591$0=$3587$0 | $3590$0;
      var $3591$1=$3587$1 | $3590$1;
      var $3592$0=$3584$0 ^ $3591$0;
      var $3592$1=$3584$1 ^ $3591$1;
      var $3593=(($S+8)|0);
      var $ld$2522$0=(($3593)|0);
      var $3594$0=HEAP32[(($ld$2522$0)>>2)];
      var $ld$2523$1=(($3593+4)|0);
      var $3594$1=HEAP32[(($ld$2523$1)>>2)];
      var $3595$0=($3594$1 >>> 7) | (0 << 25);
      var $3595$1=(0 >>> 7) | (0 << 25);
      var $3596=(($S+8)|0);
      var $ld$2524$0=(($3596)|0);
      var $3597$0=HEAP32[(($ld$2524$0)>>2)];
      var $ld$2525$1=(($3596+4)|0);
      var $3597$1=HEAP32[(($ld$2525$1)>>2)];
      var $3598$0=($3597$0 << 25) | (0 >>> 7);
      var $3598$1=($3597$1 << 25) | ($3597$0 >>> 7);
      var $3599$0=$3595$0 | $3598$0;
      var $3599$1=$3595$1 | $3598$1;
      var $3600$0=$3592$0 ^ $3599$0;
      var $3600$1=$3592$1 ^ $3599$1;
      var $3601=(($S+8)|0);
      var $ld$2526$0=(($3601)|0);
      var $3602$0=HEAP32[(($ld$2526$0)>>2)];
      var $ld$2527$1=(($3601+4)|0);
      var $3602$1=HEAP32[(($ld$2527$1)>>2)];
      var $3603=(($S+16)|0);
      var $ld$2528$0=(($3603)|0);
      var $3604$0=HEAP32[(($ld$2528$0)>>2)];
      var $ld$2529$1=(($3603+4)|0);
      var $3604$1=HEAP32[(($ld$2529$1)>>2)];
      var $3605$0=$3602$0 | $3604$0;
      var $3605$1=$3602$1 | $3604$1;
      var $3606=(($S+24)|0);
      var $ld$2530$0=(($3606)|0);
      var $3607$0=HEAP32[(($ld$2530$0)>>2)];
      var $ld$2531$1=(($3606+4)|0);
      var $3607$1=HEAP32[(($ld$2531$1)>>2)];
      var $3608$0=$3605$0 & $3607$0;
      var $3608$1=$3605$1 & $3607$1;
      var $3609=(($S+8)|0);
      var $ld$2532$0=(($3609)|0);
      var $3610$0=HEAP32[(($ld$2532$0)>>2)];
      var $ld$2533$1=(($3609+4)|0);
      var $3610$1=HEAP32[(($ld$2533$1)>>2)];
      var $3611=(($S+16)|0);
      var $ld$2534$0=(($3611)|0);
      var $3612$0=HEAP32[(($ld$2534$0)>>2)];
      var $ld$2535$1=(($3611+4)|0);
      var $3612$1=HEAP32[(($ld$2535$1)>>2)];
      var $3613$0=$3610$0 & $3612$0;
      var $3613$1=$3610$1 & $3612$1;
      var $3614$0=$3608$0 | $3613$0;
      var $3614$1=$3608$1 | $3613$1;
      var $3615$0 = _i64Add($3600$0,$3600$1,$3614$0,$3614$1); var $3615$1 = tempRet0;
      var $st$2536$0=(($t1)|0);
      HEAP32[(($st$2536$0)>>2)]=$3615$0;
      var $st$2537$1=(($t1+4)|0);
      HEAP32[(($st$2537$1)>>2)]=$3615$1;
      var $ld$2538$0=(($t0)|0);
      var $3616$0=HEAP32[(($ld$2538$0)>>2)];
      var $ld$2539$1=(($t0+4)|0);
      var $3616$1=HEAP32[(($ld$2539$1)>>2)];
      var $3617=(($S+32)|0);
      var $ld$2540$0=(($3617)|0);
      var $3618$0=HEAP32[(($ld$2540$0)>>2)];
      var $ld$2541$1=(($3617+4)|0);
      var $3618$1=HEAP32[(($ld$2541$1)>>2)];
      var $3619$0 = _i64Add($3618$0,$3618$1,$3616$0,$3616$1); var $3619$1 = tempRet0;
      var $st$2542$0=(($3617)|0);
      HEAP32[(($st$2542$0)>>2)]=$3619$0;
      var $st$2543$1=(($3617+4)|0);
      HEAP32[(($st$2543$1)>>2)]=$3619$1;
      var $ld$2544$0=(($t0)|0);
      var $3620$0=HEAP32[(($ld$2544$0)>>2)];
      var $ld$2545$1=(($t0+4)|0);
      var $3620$1=HEAP32[(($ld$2545$1)>>2)];
      var $ld$2546$0=(($t1)|0);
      var $3621$0=HEAP32[(($ld$2546$0)>>2)];
      var $ld$2547$1=(($t1+4)|0);
      var $3621$1=HEAP32[(($ld$2547$1)>>2)];
      var $3622$0 = _i64Add($3620$0,$3620$1,$3621$0,$3621$1); var $3622$1 = tempRet0;
      var $3623=(($S)|0);
      var $st$2548$0=(($3623)|0);
      HEAP32[(($st$2548$0)>>2)]=$3622$0;
      var $st$2549$1=(($3623+4)|0);
      HEAP32[(($st$2549$1)>>2)]=$3622$1;
      var $3624=(($S+56)|0);
      var $ld$2550$0=(($3624)|0);
      var $3625$0=HEAP32[(($ld$2550$0)>>2)];
      var $ld$2551$1=(($3624+4)|0);
      var $3625$1=HEAP32[(($ld$2551$1)>>2)];
      var $3626=(($S+32)|0);
      var $ld$2552$0=(($3626)|0);
      var $3627$0=HEAP32[(($ld$2552$0)>>2)];
      var $ld$2553$1=(($3626+4)|0);
      var $3627$1=HEAP32[(($ld$2553$1)>>2)];
      var $3628$0=($3627$0 >>> 14) | ($3627$1 << 18);
      var $3628$1=($3627$1 >>> 14) | (0 << 18);
      var $3629=(($S+32)|0);
      var $ld$2554$0=(($3629)|0);
      var $3630$0=HEAP32[(($ld$2554$0)>>2)];
      var $ld$2555$1=(($3629+4)|0);
      var $3630$1=HEAP32[(($ld$2555$1)>>2)];
      var $3631$0=(0 << 18) | (0 >>> 14);
      var $3631$1=($3630$0 << 18) | (0 >>> 14);
      var $3632$0=$3628$0 | $3631$0;
      var $3632$1=$3628$1 | $3631$1;
      var $3633=(($S+32)|0);
      var $ld$2556$0=(($3633)|0);
      var $3634$0=HEAP32[(($ld$2556$0)>>2)];
      var $ld$2557$1=(($3633+4)|0);
      var $3634$1=HEAP32[(($ld$2557$1)>>2)];
      var $3635$0=($3634$0 >>> 18) | ($3634$1 << 14);
      var $3635$1=($3634$1 >>> 18) | (0 << 14);
      var $3636=(($S+32)|0);
      var $ld$2558$0=(($3636)|0);
      var $3637$0=HEAP32[(($ld$2558$0)>>2)];
      var $ld$2559$1=(($3636+4)|0);
      var $3637$1=HEAP32[(($ld$2559$1)>>2)];
      var $3638$0=(0 << 14) | (0 >>> 18);
      var $3638$1=($3637$0 << 14) | (0 >>> 18);
      var $3639$0=$3635$0 | $3638$0;
      var $3639$1=$3635$1 | $3638$1;
      var $3640$0=$3632$0 ^ $3639$0;
      var $3640$1=$3632$1 ^ $3639$1;
      var $3641=(($S+32)|0);
      var $ld$2560$0=(($3641)|0);
      var $3642$0=HEAP32[(($ld$2560$0)>>2)];
      var $ld$2561$1=(($3641+4)|0);
      var $3642$1=HEAP32[(($ld$2561$1)>>2)];
      var $3643$0=($3642$1 >>> 9) | (0 << 23);
      var $3643$1=(0 >>> 9) | (0 << 23);
      var $3644=(($S+32)|0);
      var $ld$2562$0=(($3644)|0);
      var $3645$0=HEAP32[(($ld$2562$0)>>2)];
      var $ld$2563$1=(($3644+4)|0);
      var $3645$1=HEAP32[(($ld$2563$1)>>2)];
      var $3646$0=($3645$0 << 23) | (0 >>> 9);
      var $3646$1=($3645$1 << 23) | ($3645$0 >>> 9);
      var $3647$0=$3643$0 | $3646$0;
      var $3647$1=$3643$1 | $3646$1;
      var $3648$0=$3640$0 ^ $3647$0;
      var $3648$1=$3640$1 ^ $3647$1;
      var $3649$0 = _i64Add($3625$0,$3625$1,$3648$0,$3648$1); var $3649$1 = tempRet0;
      var $3650=(($S+48)|0);
      var $ld$2564$0=(($3650)|0);
      var $3651$0=HEAP32[(($ld$2564$0)>>2)];
      var $ld$2565$1=(($3650+4)|0);
      var $3651$1=HEAP32[(($ld$2565$1)>>2)];
      var $3652=(($S+32)|0);
      var $ld$2566$0=(($3652)|0);
      var $3653$0=HEAP32[(($ld$2566$0)>>2)];
      var $ld$2567$1=(($3652+4)|0);
      var $3653$1=HEAP32[(($ld$2567$1)>>2)];
      var $3654=(($S+40)|0);
      var $ld$2568$0=(($3654)|0);
      var $3655$0=HEAP32[(($ld$2568$0)>>2)];
      var $ld$2569$1=(($3654+4)|0);
      var $3655$1=HEAP32[(($ld$2569$1)>>2)];
      var $3656=(($S+48)|0);
      var $ld$2570$0=(($3656)|0);
      var $3657$0=HEAP32[(($ld$2570$0)>>2)];
      var $ld$2571$1=(($3656+4)|0);
      var $3657$1=HEAP32[(($ld$2571$1)>>2)];
      var $3658$0=$3655$0 ^ $3657$0;
      var $3658$1=$3655$1 ^ $3657$1;
      var $3659$0=$3653$0 & $3658$0;
      var $3659$1=$3653$1 & $3658$1;
      var $3660$0=$3651$0 ^ $3659$0;
      var $3660$1=$3651$1 ^ $3659$1;
      var $3661$0 = _i64Add($3649$0,$3649$1,$3660$0,$3660$1); var $3661$1 = tempRet0;
      var $$etemp$2572$0=1290863460;
      var $$etemp$2572$1=-1564481375;
      var $3662$0 = _i64Add($3661$0,$3661$1,$$etemp$2572$0,$$etemp$2572$1); var $3662$1 = tempRet0;
      var $3663=(($W+320)|0);
      var $ld$2573$0=(($3663)|0);
      var $3664$0=HEAP32[(($ld$2573$0)>>2)];
      var $ld$2574$1=(($3663+4)|0);
      var $3664$1=HEAP32[(($ld$2574$1)>>2)];
      var $3665$0 = _i64Add($3662$0,$3662$1,$3664$0,$3664$1); var $3665$1 = tempRet0;
      var $st$2575$0=(($t0)|0);
      HEAP32[(($st$2575$0)>>2)]=$3665$0;
      var $st$2576$1=(($t0+4)|0);
      HEAP32[(($st$2576$1)>>2)]=$3665$1;
      var $3666=(($S)|0);
      var $ld$2577$0=(($3666)|0);
      var $3667$0=HEAP32[(($ld$2577$0)>>2)];
      var $ld$2578$1=(($3666+4)|0);
      var $3667$1=HEAP32[(($ld$2578$1)>>2)];
      var $3668$0=($3667$0 >>> 28) | ($3667$1 << 4);
      var $3668$1=($3667$1 >>> 28) | (0 << 4);
      var $3669=(($S)|0);
      var $ld$2579$0=(($3669)|0);
      var $3670$0=HEAP32[(($ld$2579$0)>>2)];
      var $ld$2580$1=(($3669+4)|0);
      var $3670$1=HEAP32[(($ld$2580$1)>>2)];
      var $3671$0=(0 << 4) | (0 >>> 28);
      var $3671$1=($3670$0 << 4) | (0 >>> 28);
      var $3672$0=$3668$0 | $3671$0;
      var $3672$1=$3668$1 | $3671$1;
      var $3673=(($S)|0);
      var $ld$2581$0=(($3673)|0);
      var $3674$0=HEAP32[(($ld$2581$0)>>2)];
      var $ld$2582$1=(($3673+4)|0);
      var $3674$1=HEAP32[(($ld$2582$1)>>2)];
      var $3675$0=($3674$1 >>> 2) | (0 << 30);
      var $3675$1=(0 >>> 2) | (0 << 30);
      var $3676=(($S)|0);
      var $ld$2583$0=(($3676)|0);
      var $3677$0=HEAP32[(($ld$2583$0)>>2)];
      var $ld$2584$1=(($3676+4)|0);
      var $3677$1=HEAP32[(($ld$2584$1)>>2)];
      var $3678$0=($3677$0 << 30) | (0 >>> 2);
      var $3678$1=($3677$1 << 30) | ($3677$0 >>> 2);
      var $3679$0=$3675$0 | $3678$0;
      var $3679$1=$3675$1 | $3678$1;
      var $3680$0=$3672$0 ^ $3679$0;
      var $3680$1=$3672$1 ^ $3679$1;
      var $3681=(($S)|0);
      var $ld$2585$0=(($3681)|0);
      var $3682$0=HEAP32[(($ld$2585$0)>>2)];
      var $ld$2586$1=(($3681+4)|0);
      var $3682$1=HEAP32[(($ld$2586$1)>>2)];
      var $3683$0=($3682$1 >>> 7) | (0 << 25);
      var $3683$1=(0 >>> 7) | (0 << 25);
      var $3684=(($S)|0);
      var $ld$2587$0=(($3684)|0);
      var $3685$0=HEAP32[(($ld$2587$0)>>2)];
      var $ld$2588$1=(($3684+4)|0);
      var $3685$1=HEAP32[(($ld$2588$1)>>2)];
      var $3686$0=($3685$0 << 25) | (0 >>> 7);
      var $3686$1=($3685$1 << 25) | ($3685$0 >>> 7);
      var $3687$0=$3683$0 | $3686$0;
      var $3687$1=$3683$1 | $3686$1;
      var $3688$0=$3680$0 ^ $3687$0;
      var $3688$1=$3680$1 ^ $3687$1;
      var $3689=(($S)|0);
      var $ld$2589$0=(($3689)|0);
      var $3690$0=HEAP32[(($ld$2589$0)>>2)];
      var $ld$2590$1=(($3689+4)|0);
      var $3690$1=HEAP32[(($ld$2590$1)>>2)];
      var $3691=(($S+8)|0);
      var $ld$2591$0=(($3691)|0);
      var $3692$0=HEAP32[(($ld$2591$0)>>2)];
      var $ld$2592$1=(($3691+4)|0);
      var $3692$1=HEAP32[(($ld$2592$1)>>2)];
      var $3693$0=$3690$0 | $3692$0;
      var $3693$1=$3690$1 | $3692$1;
      var $3694=(($S+16)|0);
      var $ld$2593$0=(($3694)|0);
      var $3695$0=HEAP32[(($ld$2593$0)>>2)];
      var $ld$2594$1=(($3694+4)|0);
      var $3695$1=HEAP32[(($ld$2594$1)>>2)];
      var $3696$0=$3693$0 & $3695$0;
      var $3696$1=$3693$1 & $3695$1;
      var $3697=(($S)|0);
      var $ld$2595$0=(($3697)|0);
      var $3698$0=HEAP32[(($ld$2595$0)>>2)];
      var $ld$2596$1=(($3697+4)|0);
      var $3698$1=HEAP32[(($ld$2596$1)>>2)];
      var $3699=(($S+8)|0);
      var $ld$2597$0=(($3699)|0);
      var $3700$0=HEAP32[(($ld$2597$0)>>2)];
      var $ld$2598$1=(($3699+4)|0);
      var $3700$1=HEAP32[(($ld$2598$1)>>2)];
      var $3701$0=$3698$0 & $3700$0;
      var $3701$1=$3698$1 & $3700$1;
      var $3702$0=$3696$0 | $3701$0;
      var $3702$1=$3696$1 | $3701$1;
      var $3703$0 = _i64Add($3688$0,$3688$1,$3702$0,$3702$1); var $3703$1 = tempRet0;
      var $st$2599$0=(($t1)|0);
      HEAP32[(($st$2599$0)>>2)]=$3703$0;
      var $st$2600$1=(($t1+4)|0);
      HEAP32[(($st$2600$1)>>2)]=$3703$1;
      var $ld$2601$0=(($t0)|0);
      var $3704$0=HEAP32[(($ld$2601$0)>>2)];
      var $ld$2602$1=(($t0+4)|0);
      var $3704$1=HEAP32[(($ld$2602$1)>>2)];
      var $3705=(($S+24)|0);
      var $ld$2603$0=(($3705)|0);
      var $3706$0=HEAP32[(($ld$2603$0)>>2)];
      var $ld$2604$1=(($3705+4)|0);
      var $3706$1=HEAP32[(($ld$2604$1)>>2)];
      var $3707$0 = _i64Add($3706$0,$3706$1,$3704$0,$3704$1); var $3707$1 = tempRet0;
      var $st$2605$0=(($3705)|0);
      HEAP32[(($st$2605$0)>>2)]=$3707$0;
      var $st$2606$1=(($3705+4)|0);
      HEAP32[(($st$2606$1)>>2)]=$3707$1;
      var $ld$2607$0=(($t0)|0);
      var $3708$0=HEAP32[(($ld$2607$0)>>2)];
      var $ld$2608$1=(($t0+4)|0);
      var $3708$1=HEAP32[(($ld$2608$1)>>2)];
      var $ld$2609$0=(($t1)|0);
      var $3709$0=HEAP32[(($ld$2609$0)>>2)];
      var $ld$2610$1=(($t1+4)|0);
      var $3709$1=HEAP32[(($ld$2610$1)>>2)];
      var $3710$0 = _i64Add($3708$0,$3708$1,$3709$0,$3709$1); var $3710$1 = tempRet0;
      var $3711=(($S+56)|0);
      var $st$2611$0=(($3711)|0);
      HEAP32[(($st$2611$0)>>2)]=$3710$0;
      var $st$2612$1=(($3711+4)|0);
      HEAP32[(($st$2612$1)>>2)]=$3710$1;
      var $3712=(($S+48)|0);
      var $ld$2613$0=(($3712)|0);
      var $3713$0=HEAP32[(($ld$2613$0)>>2)];
      var $ld$2614$1=(($3712+4)|0);
      var $3713$1=HEAP32[(($ld$2614$1)>>2)];
      var $3714=(($S+24)|0);
      var $ld$2615$0=(($3714)|0);
      var $3715$0=HEAP32[(($ld$2615$0)>>2)];
      var $ld$2616$1=(($3714+4)|0);
      var $3715$1=HEAP32[(($ld$2616$1)>>2)];
      var $3716$0=($3715$0 >>> 14) | ($3715$1 << 18);
      var $3716$1=($3715$1 >>> 14) | (0 << 18);
      var $3717=(($S+24)|0);
      var $ld$2617$0=(($3717)|0);
      var $3718$0=HEAP32[(($ld$2617$0)>>2)];
      var $ld$2618$1=(($3717+4)|0);
      var $3718$1=HEAP32[(($ld$2618$1)>>2)];
      var $3719$0=(0 << 18) | (0 >>> 14);
      var $3719$1=($3718$0 << 18) | (0 >>> 14);
      var $3720$0=$3716$0 | $3719$0;
      var $3720$1=$3716$1 | $3719$1;
      var $3721=(($S+24)|0);
      var $ld$2619$0=(($3721)|0);
      var $3722$0=HEAP32[(($ld$2619$0)>>2)];
      var $ld$2620$1=(($3721+4)|0);
      var $3722$1=HEAP32[(($ld$2620$1)>>2)];
      var $3723$0=($3722$0 >>> 18) | ($3722$1 << 14);
      var $3723$1=($3722$1 >>> 18) | (0 << 14);
      var $3724=(($S+24)|0);
      var $ld$2621$0=(($3724)|0);
      var $3725$0=HEAP32[(($ld$2621$0)>>2)];
      var $ld$2622$1=(($3724+4)|0);
      var $3725$1=HEAP32[(($ld$2622$1)>>2)];
      var $3726$0=(0 << 14) | (0 >>> 18);
      var $3726$1=($3725$0 << 14) | (0 >>> 18);
      var $3727$0=$3723$0 | $3726$0;
      var $3727$1=$3723$1 | $3726$1;
      var $3728$0=$3720$0 ^ $3727$0;
      var $3728$1=$3720$1 ^ $3727$1;
      var $3729=(($S+24)|0);
      var $ld$2623$0=(($3729)|0);
      var $3730$0=HEAP32[(($ld$2623$0)>>2)];
      var $ld$2624$1=(($3729+4)|0);
      var $3730$1=HEAP32[(($ld$2624$1)>>2)];
      var $3731$0=($3730$1 >>> 9) | (0 << 23);
      var $3731$1=(0 >>> 9) | (0 << 23);
      var $3732=(($S+24)|0);
      var $ld$2625$0=(($3732)|0);
      var $3733$0=HEAP32[(($ld$2625$0)>>2)];
      var $ld$2626$1=(($3732+4)|0);
      var $3733$1=HEAP32[(($ld$2626$1)>>2)];
      var $3734$0=($3733$0 << 23) | (0 >>> 9);
      var $3734$1=($3733$1 << 23) | ($3733$0 >>> 9);
      var $3735$0=$3731$0 | $3734$0;
      var $3735$1=$3731$1 | $3734$1;
      var $3736$0=$3728$0 ^ $3735$0;
      var $3736$1=$3728$1 ^ $3735$1;
      var $3737$0 = _i64Add($3713$0,$3713$1,$3736$0,$3736$1); var $3737$1 = tempRet0;
      var $3738=(($S+40)|0);
      var $ld$2627$0=(($3738)|0);
      var $3739$0=HEAP32[(($ld$2627$0)>>2)];
      var $ld$2628$1=(($3738+4)|0);
      var $3739$1=HEAP32[(($ld$2628$1)>>2)];
      var $3740=(($S+24)|0);
      var $ld$2629$0=(($3740)|0);
      var $3741$0=HEAP32[(($ld$2629$0)>>2)];
      var $ld$2630$1=(($3740+4)|0);
      var $3741$1=HEAP32[(($ld$2630$1)>>2)];
      var $3742=(($S+32)|0);
      var $ld$2631$0=(($3742)|0);
      var $3743$0=HEAP32[(($ld$2631$0)>>2)];
      var $ld$2632$1=(($3742+4)|0);
      var $3743$1=HEAP32[(($ld$2632$1)>>2)];
      var $3744=(($S+40)|0);
      var $ld$2633$0=(($3744)|0);
      var $3745$0=HEAP32[(($ld$2633$0)>>2)];
      var $ld$2634$1=(($3744+4)|0);
      var $3745$1=HEAP32[(($ld$2634$1)>>2)];
      var $3746$0=$3743$0 ^ $3745$0;
      var $3746$1=$3743$1 ^ $3745$1;
      var $3747$0=$3741$0 & $3746$0;
      var $3747$1=$3741$1 & $3746$1;
      var $3748$0=$3739$0 ^ $3747$0;
      var $3748$1=$3739$1 ^ $3747$1;
      var $3749$0 = _i64Add($3737$0,$3737$1,$3748$0,$3748$1); var $3749$1 = tempRet0;
      var $$etemp$2635$0=-1136513023;
      var $$etemp$2635$1=-1474664885;
      var $3750$0 = _i64Add($3749$0,$3749$1,$$etemp$2635$0,$$etemp$2635$1); var $3750$1 = tempRet0;
      var $3751=(($W+328)|0);
      var $ld$2636$0=(($3751)|0);
      var $3752$0=HEAP32[(($ld$2636$0)>>2)];
      var $ld$2637$1=(($3751+4)|0);
      var $3752$1=HEAP32[(($ld$2637$1)>>2)];
      var $3753$0 = _i64Add($3750$0,$3750$1,$3752$0,$3752$1); var $3753$1 = tempRet0;
      var $st$2638$0=(($t0)|0);
      HEAP32[(($st$2638$0)>>2)]=$3753$0;
      var $st$2639$1=(($t0+4)|0);
      HEAP32[(($st$2639$1)>>2)]=$3753$1;
      var $3754=(($S+56)|0);
      var $ld$2640$0=(($3754)|0);
      var $3755$0=HEAP32[(($ld$2640$0)>>2)];
      var $ld$2641$1=(($3754+4)|0);
      var $3755$1=HEAP32[(($ld$2641$1)>>2)];
      var $3756$0=($3755$0 >>> 28) | ($3755$1 << 4);
      var $3756$1=($3755$1 >>> 28) | (0 << 4);
      var $3757=(($S+56)|0);
      var $ld$2642$0=(($3757)|0);
      var $3758$0=HEAP32[(($ld$2642$0)>>2)];
      var $ld$2643$1=(($3757+4)|0);
      var $3758$1=HEAP32[(($ld$2643$1)>>2)];
      var $3759$0=(0 << 4) | (0 >>> 28);
      var $3759$1=($3758$0 << 4) | (0 >>> 28);
      var $3760$0=$3756$0 | $3759$0;
      var $3760$1=$3756$1 | $3759$1;
      var $3761=(($S+56)|0);
      var $ld$2644$0=(($3761)|0);
      var $3762$0=HEAP32[(($ld$2644$0)>>2)];
      var $ld$2645$1=(($3761+4)|0);
      var $3762$1=HEAP32[(($ld$2645$1)>>2)];
      var $3763$0=($3762$1 >>> 2) | (0 << 30);
      var $3763$1=(0 >>> 2) | (0 << 30);
      var $3764=(($S+56)|0);
      var $ld$2646$0=(($3764)|0);
      var $3765$0=HEAP32[(($ld$2646$0)>>2)];
      var $ld$2647$1=(($3764+4)|0);
      var $3765$1=HEAP32[(($ld$2647$1)>>2)];
      var $3766$0=($3765$0 << 30) | (0 >>> 2);
      var $3766$1=($3765$1 << 30) | ($3765$0 >>> 2);
      var $3767$0=$3763$0 | $3766$0;
      var $3767$1=$3763$1 | $3766$1;
      var $3768$0=$3760$0 ^ $3767$0;
      var $3768$1=$3760$1 ^ $3767$1;
      var $3769=(($S+56)|0);
      var $ld$2648$0=(($3769)|0);
      var $3770$0=HEAP32[(($ld$2648$0)>>2)];
      var $ld$2649$1=(($3769+4)|0);
      var $3770$1=HEAP32[(($ld$2649$1)>>2)];
      var $3771$0=($3770$1 >>> 7) | (0 << 25);
      var $3771$1=(0 >>> 7) | (0 << 25);
      var $3772=(($S+56)|0);
      var $ld$2650$0=(($3772)|0);
      var $3773$0=HEAP32[(($ld$2650$0)>>2)];
      var $ld$2651$1=(($3772+4)|0);
      var $3773$1=HEAP32[(($ld$2651$1)>>2)];
      var $3774$0=($3773$0 << 25) | (0 >>> 7);
      var $3774$1=($3773$1 << 25) | ($3773$0 >>> 7);
      var $3775$0=$3771$0 | $3774$0;
      var $3775$1=$3771$1 | $3774$1;
      var $3776$0=$3768$0 ^ $3775$0;
      var $3776$1=$3768$1 ^ $3775$1;
      var $3777=(($S+56)|0);
      var $ld$2652$0=(($3777)|0);
      var $3778$0=HEAP32[(($ld$2652$0)>>2)];
      var $ld$2653$1=(($3777+4)|0);
      var $3778$1=HEAP32[(($ld$2653$1)>>2)];
      var $3779=(($S)|0);
      var $ld$2654$0=(($3779)|0);
      var $3780$0=HEAP32[(($ld$2654$0)>>2)];
      var $ld$2655$1=(($3779+4)|0);
      var $3780$1=HEAP32[(($ld$2655$1)>>2)];
      var $3781$0=$3778$0 | $3780$0;
      var $3781$1=$3778$1 | $3780$1;
      var $3782=(($S+8)|0);
      var $ld$2656$0=(($3782)|0);
      var $3783$0=HEAP32[(($ld$2656$0)>>2)];
      var $ld$2657$1=(($3782+4)|0);
      var $3783$1=HEAP32[(($ld$2657$1)>>2)];
      var $3784$0=$3781$0 & $3783$0;
      var $3784$1=$3781$1 & $3783$1;
      var $3785=(($S+56)|0);
      var $ld$2658$0=(($3785)|0);
      var $3786$0=HEAP32[(($ld$2658$0)>>2)];
      var $ld$2659$1=(($3785+4)|0);
      var $3786$1=HEAP32[(($ld$2659$1)>>2)];
      var $3787=(($S)|0);
      var $ld$2660$0=(($3787)|0);
      var $3788$0=HEAP32[(($ld$2660$0)>>2)];
      var $ld$2661$1=(($3787+4)|0);
      var $3788$1=HEAP32[(($ld$2661$1)>>2)];
      var $3789$0=$3786$0 & $3788$0;
      var $3789$1=$3786$1 & $3788$1;
      var $3790$0=$3784$0 | $3789$0;
      var $3790$1=$3784$1 | $3789$1;
      var $3791$0 = _i64Add($3776$0,$3776$1,$3790$0,$3790$1); var $3791$1 = tempRet0;
      var $st$2662$0=(($t1)|0);
      HEAP32[(($st$2662$0)>>2)]=$3791$0;
      var $st$2663$1=(($t1+4)|0);
      HEAP32[(($st$2663$1)>>2)]=$3791$1;
      var $ld$2664$0=(($t0)|0);
      var $3792$0=HEAP32[(($ld$2664$0)>>2)];
      var $ld$2665$1=(($t0+4)|0);
      var $3792$1=HEAP32[(($ld$2665$1)>>2)];
      var $3793=(($S+16)|0);
      var $ld$2666$0=(($3793)|0);
      var $3794$0=HEAP32[(($ld$2666$0)>>2)];
      var $ld$2667$1=(($3793+4)|0);
      var $3794$1=HEAP32[(($ld$2667$1)>>2)];
      var $3795$0 = _i64Add($3794$0,$3794$1,$3792$0,$3792$1); var $3795$1 = tempRet0;
      var $st$2668$0=(($3793)|0);
      HEAP32[(($st$2668$0)>>2)]=$3795$0;
      var $st$2669$1=(($3793+4)|0);
      HEAP32[(($st$2669$1)>>2)]=$3795$1;
      var $ld$2670$0=(($t0)|0);
      var $3796$0=HEAP32[(($ld$2670$0)>>2)];
      var $ld$2671$1=(($t0+4)|0);
      var $3796$1=HEAP32[(($ld$2671$1)>>2)];
      var $ld$2672$0=(($t1)|0);
      var $3797$0=HEAP32[(($ld$2672$0)>>2)];
      var $ld$2673$1=(($t1+4)|0);
      var $3797$1=HEAP32[(($ld$2673$1)>>2)];
      var $3798$0 = _i64Add($3796$0,$3796$1,$3797$0,$3797$1); var $3798$1 = tempRet0;
      var $3799=(($S+48)|0);
      var $st$2674$0=(($3799)|0);
      HEAP32[(($st$2674$0)>>2)]=$3798$0;
      var $st$2675$1=(($3799+4)|0);
      HEAP32[(($st$2675$1)>>2)]=$3798$1;
      var $3800=(($S+40)|0);
      var $ld$2676$0=(($3800)|0);
      var $3801$0=HEAP32[(($ld$2676$0)>>2)];
      var $ld$2677$1=(($3800+4)|0);
      var $3801$1=HEAP32[(($ld$2677$1)>>2)];
      var $3802=(($S+16)|0);
      var $ld$2678$0=(($3802)|0);
      var $3803$0=HEAP32[(($ld$2678$0)>>2)];
      var $ld$2679$1=(($3802+4)|0);
      var $3803$1=HEAP32[(($ld$2679$1)>>2)];
      var $3804$0=($3803$0 >>> 14) | ($3803$1 << 18);
      var $3804$1=($3803$1 >>> 14) | (0 << 18);
      var $3805=(($S+16)|0);
      var $ld$2680$0=(($3805)|0);
      var $3806$0=HEAP32[(($ld$2680$0)>>2)];
      var $ld$2681$1=(($3805+4)|0);
      var $3806$1=HEAP32[(($ld$2681$1)>>2)];
      var $3807$0=(0 << 18) | (0 >>> 14);
      var $3807$1=($3806$0 << 18) | (0 >>> 14);
      var $3808$0=$3804$0 | $3807$0;
      var $3808$1=$3804$1 | $3807$1;
      var $3809=(($S+16)|0);
      var $ld$2682$0=(($3809)|0);
      var $3810$0=HEAP32[(($ld$2682$0)>>2)];
      var $ld$2683$1=(($3809+4)|0);
      var $3810$1=HEAP32[(($ld$2683$1)>>2)];
      var $3811$0=($3810$0 >>> 18) | ($3810$1 << 14);
      var $3811$1=($3810$1 >>> 18) | (0 << 14);
      var $3812=(($S+16)|0);
      var $ld$2684$0=(($3812)|0);
      var $3813$0=HEAP32[(($ld$2684$0)>>2)];
      var $ld$2685$1=(($3812+4)|0);
      var $3813$1=HEAP32[(($ld$2685$1)>>2)];
      var $3814$0=(0 << 14) | (0 >>> 18);
      var $3814$1=($3813$0 << 14) | (0 >>> 18);
      var $3815$0=$3811$0 | $3814$0;
      var $3815$1=$3811$1 | $3814$1;
      var $3816$0=$3808$0 ^ $3815$0;
      var $3816$1=$3808$1 ^ $3815$1;
      var $3817=(($S+16)|0);
      var $ld$2686$0=(($3817)|0);
      var $3818$0=HEAP32[(($ld$2686$0)>>2)];
      var $ld$2687$1=(($3817+4)|0);
      var $3818$1=HEAP32[(($ld$2687$1)>>2)];
      var $3819$0=($3818$1 >>> 9) | (0 << 23);
      var $3819$1=(0 >>> 9) | (0 << 23);
      var $3820=(($S+16)|0);
      var $ld$2688$0=(($3820)|0);
      var $3821$0=HEAP32[(($ld$2688$0)>>2)];
      var $ld$2689$1=(($3820+4)|0);
      var $3821$1=HEAP32[(($ld$2689$1)>>2)];
      var $3822$0=($3821$0 << 23) | (0 >>> 9);
      var $3822$1=($3821$1 << 23) | ($3821$0 >>> 9);
      var $3823$0=$3819$0 | $3822$0;
      var $3823$1=$3819$1 | $3822$1;
      var $3824$0=$3816$0 ^ $3823$0;
      var $3824$1=$3816$1 ^ $3823$1;
      var $3825$0 = _i64Add($3801$0,$3801$1,$3824$0,$3824$1); var $3825$1 = tempRet0;
      var $3826=(($S+32)|0);
      var $ld$2690$0=(($3826)|0);
      var $3827$0=HEAP32[(($ld$2690$0)>>2)];
      var $ld$2691$1=(($3826+4)|0);
      var $3827$1=HEAP32[(($ld$2691$1)>>2)];
      var $3828=(($S+16)|0);
      var $ld$2692$0=(($3828)|0);
      var $3829$0=HEAP32[(($ld$2692$0)>>2)];
      var $ld$2693$1=(($3828+4)|0);
      var $3829$1=HEAP32[(($ld$2693$1)>>2)];
      var $3830=(($S+24)|0);
      var $ld$2694$0=(($3830)|0);
      var $3831$0=HEAP32[(($ld$2694$0)>>2)];
      var $ld$2695$1=(($3830+4)|0);
      var $3831$1=HEAP32[(($ld$2695$1)>>2)];
      var $3832=(($S+32)|0);
      var $ld$2696$0=(($3832)|0);
      var $3833$0=HEAP32[(($ld$2696$0)>>2)];
      var $ld$2697$1=(($3832+4)|0);
      var $3833$1=HEAP32[(($ld$2697$1)>>2)];
      var $3834$0=$3831$0 ^ $3833$0;
      var $3834$1=$3831$1 ^ $3833$1;
      var $3835$0=$3829$0 & $3834$0;
      var $3835$1=$3829$1 & $3834$1;
      var $3836$0=$3827$0 ^ $3835$0;
      var $3836$1=$3827$1 ^ $3835$1;
      var $3837$0 = _i64Add($3825$0,$3825$1,$3836$0,$3836$1); var $3837$1 = tempRet0;
      var $$etemp$2698$0=-789014639;
      var $$etemp$2698$1=-1035236496;
      var $3838$0 = _i64Add($3837$0,$3837$1,$$etemp$2698$0,$$etemp$2698$1); var $3838$1 = tempRet0;
      var $3839=(($W+336)|0);
      var $ld$2699$0=(($3839)|0);
      var $3840$0=HEAP32[(($ld$2699$0)>>2)];
      var $ld$2700$1=(($3839+4)|0);
      var $3840$1=HEAP32[(($ld$2700$1)>>2)];
      var $3841$0 = _i64Add($3838$0,$3838$1,$3840$0,$3840$1); var $3841$1 = tempRet0;
      var $st$2701$0=(($t0)|0);
      HEAP32[(($st$2701$0)>>2)]=$3841$0;
      var $st$2702$1=(($t0+4)|0);
      HEAP32[(($st$2702$1)>>2)]=$3841$1;
      var $3842=(($S+48)|0);
      var $ld$2703$0=(($3842)|0);
      var $3843$0=HEAP32[(($ld$2703$0)>>2)];
      var $ld$2704$1=(($3842+4)|0);
      var $3843$1=HEAP32[(($ld$2704$1)>>2)];
      var $3844$0=($3843$0 >>> 28) | ($3843$1 << 4);
      var $3844$1=($3843$1 >>> 28) | (0 << 4);
      var $3845=(($S+48)|0);
      var $ld$2705$0=(($3845)|0);
      var $3846$0=HEAP32[(($ld$2705$0)>>2)];
      var $ld$2706$1=(($3845+4)|0);
      var $3846$1=HEAP32[(($ld$2706$1)>>2)];
      var $3847$0=(0 << 4) | (0 >>> 28);
      var $3847$1=($3846$0 << 4) | (0 >>> 28);
      var $3848$0=$3844$0 | $3847$0;
      var $3848$1=$3844$1 | $3847$1;
      var $3849=(($S+48)|0);
      var $ld$2707$0=(($3849)|0);
      var $3850$0=HEAP32[(($ld$2707$0)>>2)];
      var $ld$2708$1=(($3849+4)|0);
      var $3850$1=HEAP32[(($ld$2708$1)>>2)];
      var $3851$0=($3850$1 >>> 2) | (0 << 30);
      var $3851$1=(0 >>> 2) | (0 << 30);
      var $3852=(($S+48)|0);
      var $ld$2709$0=(($3852)|0);
      var $3853$0=HEAP32[(($ld$2709$0)>>2)];
      var $ld$2710$1=(($3852+4)|0);
      var $3853$1=HEAP32[(($ld$2710$1)>>2)];
      var $3854$0=($3853$0 << 30) | (0 >>> 2);
      var $3854$1=($3853$1 << 30) | ($3853$0 >>> 2);
      var $3855$0=$3851$0 | $3854$0;
      var $3855$1=$3851$1 | $3854$1;
      var $3856$0=$3848$0 ^ $3855$0;
      var $3856$1=$3848$1 ^ $3855$1;
      var $3857=(($S+48)|0);
      var $ld$2711$0=(($3857)|0);
      var $3858$0=HEAP32[(($ld$2711$0)>>2)];
      var $ld$2712$1=(($3857+4)|0);
      var $3858$1=HEAP32[(($ld$2712$1)>>2)];
      var $3859$0=($3858$1 >>> 7) | (0 << 25);
      var $3859$1=(0 >>> 7) | (0 << 25);
      var $3860=(($S+48)|0);
      var $ld$2713$0=(($3860)|0);
      var $3861$0=HEAP32[(($ld$2713$0)>>2)];
      var $ld$2714$1=(($3860+4)|0);
      var $3861$1=HEAP32[(($ld$2714$1)>>2)];
      var $3862$0=($3861$0 << 25) | (0 >>> 7);
      var $3862$1=($3861$1 << 25) | ($3861$0 >>> 7);
      var $3863$0=$3859$0 | $3862$0;
      var $3863$1=$3859$1 | $3862$1;
      var $3864$0=$3856$0 ^ $3863$0;
      var $3864$1=$3856$1 ^ $3863$1;
      var $3865=(($S+48)|0);
      var $ld$2715$0=(($3865)|0);
      var $3866$0=HEAP32[(($ld$2715$0)>>2)];
      var $ld$2716$1=(($3865+4)|0);
      var $3866$1=HEAP32[(($ld$2716$1)>>2)];
      var $3867=(($S+56)|0);
      var $ld$2717$0=(($3867)|0);
      var $3868$0=HEAP32[(($ld$2717$0)>>2)];
      var $ld$2718$1=(($3867+4)|0);
      var $3868$1=HEAP32[(($ld$2718$1)>>2)];
      var $3869$0=$3866$0 | $3868$0;
      var $3869$1=$3866$1 | $3868$1;
      var $3870=(($S)|0);
      var $ld$2719$0=(($3870)|0);
      var $3871$0=HEAP32[(($ld$2719$0)>>2)];
      var $ld$2720$1=(($3870+4)|0);
      var $3871$1=HEAP32[(($ld$2720$1)>>2)];
      var $3872$0=$3869$0 & $3871$0;
      var $3872$1=$3869$1 & $3871$1;
      var $3873=(($S+48)|0);
      var $ld$2721$0=(($3873)|0);
      var $3874$0=HEAP32[(($ld$2721$0)>>2)];
      var $ld$2722$1=(($3873+4)|0);
      var $3874$1=HEAP32[(($ld$2722$1)>>2)];
      var $3875=(($S+56)|0);
      var $ld$2723$0=(($3875)|0);
      var $3876$0=HEAP32[(($ld$2723$0)>>2)];
      var $ld$2724$1=(($3875+4)|0);
      var $3876$1=HEAP32[(($ld$2724$1)>>2)];
      var $3877$0=$3874$0 & $3876$0;
      var $3877$1=$3874$1 & $3876$1;
      var $3878$0=$3872$0 | $3877$0;
      var $3878$1=$3872$1 | $3877$1;
      var $3879$0 = _i64Add($3864$0,$3864$1,$3878$0,$3878$1); var $3879$1 = tempRet0;
      var $st$2725$0=(($t1)|0);
      HEAP32[(($st$2725$0)>>2)]=$3879$0;
      var $st$2726$1=(($t1+4)|0);
      HEAP32[(($st$2726$1)>>2)]=$3879$1;
      var $ld$2727$0=(($t0)|0);
      var $3880$0=HEAP32[(($ld$2727$0)>>2)];
      var $ld$2728$1=(($t0+4)|0);
      var $3880$1=HEAP32[(($ld$2728$1)>>2)];
      var $3881=(($S+8)|0);
      var $ld$2729$0=(($3881)|0);
      var $3882$0=HEAP32[(($ld$2729$0)>>2)];
      var $ld$2730$1=(($3881+4)|0);
      var $3882$1=HEAP32[(($ld$2730$1)>>2)];
      var $3883$0 = _i64Add($3882$0,$3882$1,$3880$0,$3880$1); var $3883$1 = tempRet0;
      var $st$2731$0=(($3881)|0);
      HEAP32[(($st$2731$0)>>2)]=$3883$0;
      var $st$2732$1=(($3881+4)|0);
      HEAP32[(($st$2732$1)>>2)]=$3883$1;
      var $ld$2733$0=(($t0)|0);
      var $3884$0=HEAP32[(($ld$2733$0)>>2)];
      var $ld$2734$1=(($t0+4)|0);
      var $3884$1=HEAP32[(($ld$2734$1)>>2)];
      var $ld$2735$0=(($t1)|0);
      var $3885$0=HEAP32[(($ld$2735$0)>>2)];
      var $ld$2736$1=(($t1+4)|0);
      var $3885$1=HEAP32[(($ld$2736$1)>>2)];
      var $3886$0 = _i64Add($3884$0,$3884$1,$3885$0,$3885$1); var $3886$1 = tempRet0;
      var $3887=(($S+40)|0);
      var $st$2737$0=(($3887)|0);
      HEAP32[(($st$2737$0)>>2)]=$3886$0;
      var $st$2738$1=(($3887+4)|0);
      HEAP32[(($st$2738$1)>>2)]=$3886$1;
      var $3888=(($S+32)|0);
      var $ld$2739$0=(($3888)|0);
      var $3889$0=HEAP32[(($ld$2739$0)>>2)];
      var $ld$2740$1=(($3888+4)|0);
      var $3889$1=HEAP32[(($ld$2740$1)>>2)];
      var $3890=(($S+8)|0);
      var $ld$2741$0=(($3890)|0);
      var $3891$0=HEAP32[(($ld$2741$0)>>2)];
      var $ld$2742$1=(($3890+4)|0);
      var $3891$1=HEAP32[(($ld$2742$1)>>2)];
      var $3892$0=($3891$0 >>> 14) | ($3891$1 << 18);
      var $3892$1=($3891$1 >>> 14) | (0 << 18);
      var $3893=(($S+8)|0);
      var $ld$2743$0=(($3893)|0);
      var $3894$0=HEAP32[(($ld$2743$0)>>2)];
      var $ld$2744$1=(($3893+4)|0);
      var $3894$1=HEAP32[(($ld$2744$1)>>2)];
      var $3895$0=(0 << 18) | (0 >>> 14);
      var $3895$1=($3894$0 << 18) | (0 >>> 14);
      var $3896$0=$3892$0 | $3895$0;
      var $3896$1=$3892$1 | $3895$1;
      var $3897=(($S+8)|0);
      var $ld$2745$0=(($3897)|0);
      var $3898$0=HEAP32[(($ld$2745$0)>>2)];
      var $ld$2746$1=(($3897+4)|0);
      var $3898$1=HEAP32[(($ld$2746$1)>>2)];
      var $3899$0=($3898$0 >>> 18) | ($3898$1 << 14);
      var $3899$1=($3898$1 >>> 18) | (0 << 14);
      var $3900=(($S+8)|0);
      var $ld$2747$0=(($3900)|0);
      var $3901$0=HEAP32[(($ld$2747$0)>>2)];
      var $ld$2748$1=(($3900+4)|0);
      var $3901$1=HEAP32[(($ld$2748$1)>>2)];
      var $3902$0=(0 << 14) | (0 >>> 18);
      var $3902$1=($3901$0 << 14) | (0 >>> 18);
      var $3903$0=$3899$0 | $3902$0;
      var $3903$1=$3899$1 | $3902$1;
      var $3904$0=$3896$0 ^ $3903$0;
      var $3904$1=$3896$1 ^ $3903$1;
      var $3905=(($S+8)|0);
      var $ld$2749$0=(($3905)|0);
      var $3906$0=HEAP32[(($ld$2749$0)>>2)];
      var $ld$2750$1=(($3905+4)|0);
      var $3906$1=HEAP32[(($ld$2750$1)>>2)];
      var $3907$0=($3906$1 >>> 9) | (0 << 23);
      var $3907$1=(0 >>> 9) | (0 << 23);
      var $3908=(($S+8)|0);
      var $ld$2751$0=(($3908)|0);
      var $3909$0=HEAP32[(($ld$2751$0)>>2)];
      var $ld$2752$1=(($3908+4)|0);
      var $3909$1=HEAP32[(($ld$2752$1)>>2)];
      var $3910$0=($3909$0 << 23) | (0 >>> 9);
      var $3910$1=($3909$1 << 23) | ($3909$0 >>> 9);
      var $3911$0=$3907$0 | $3910$0;
      var $3911$1=$3907$1 | $3910$1;
      var $3912$0=$3904$0 ^ $3911$0;
      var $3912$1=$3904$1 ^ $3911$1;
      var $3913$0 = _i64Add($3889$0,$3889$1,$3912$0,$3912$1); var $3913$1 = tempRet0;
      var $3914=(($S+24)|0);
      var $ld$2753$0=(($3914)|0);
      var $3915$0=HEAP32[(($ld$2753$0)>>2)];
      var $ld$2754$1=(($3914+4)|0);
      var $3915$1=HEAP32[(($ld$2754$1)>>2)];
      var $3916=(($S+8)|0);
      var $ld$2755$0=(($3916)|0);
      var $3917$0=HEAP32[(($ld$2755$0)>>2)];
      var $ld$2756$1=(($3916+4)|0);
      var $3917$1=HEAP32[(($ld$2756$1)>>2)];
      var $3918=(($S+16)|0);
      var $ld$2757$0=(($3918)|0);
      var $3919$0=HEAP32[(($ld$2757$0)>>2)];
      var $ld$2758$1=(($3918+4)|0);
      var $3919$1=HEAP32[(($ld$2758$1)>>2)];
      var $3920=(($S+24)|0);
      var $ld$2759$0=(($3920)|0);
      var $3921$0=HEAP32[(($ld$2759$0)>>2)];
      var $ld$2760$1=(($3920+4)|0);
      var $3921$1=HEAP32[(($ld$2760$1)>>2)];
      var $3922$0=$3919$0 ^ $3921$0;
      var $3922$1=$3919$1 ^ $3921$1;
      var $3923$0=$3917$0 & $3922$0;
      var $3923$1=$3917$1 & $3922$1;
      var $3924$0=$3915$0 ^ $3923$0;
      var $3924$1=$3915$1 ^ $3923$1;
      var $3925$0 = _i64Add($3913$0,$3913$1,$3924$0,$3924$1); var $3925$1 = tempRet0;
      var $$etemp$2761$0=106217008;
      var $$etemp$2761$1=-949202525;
      var $3926$0 = _i64Add($3925$0,$3925$1,$$etemp$2761$0,$$etemp$2761$1); var $3926$1 = tempRet0;
      var $3927=(($W+344)|0);
      var $ld$2762$0=(($3927)|0);
      var $3928$0=HEAP32[(($ld$2762$0)>>2)];
      var $ld$2763$1=(($3927+4)|0);
      var $3928$1=HEAP32[(($ld$2763$1)>>2)];
      var $3929$0 = _i64Add($3926$0,$3926$1,$3928$0,$3928$1); var $3929$1 = tempRet0;
      var $st$2764$0=(($t0)|0);
      HEAP32[(($st$2764$0)>>2)]=$3929$0;
      var $st$2765$1=(($t0+4)|0);
      HEAP32[(($st$2765$1)>>2)]=$3929$1;
      var $3930=(($S+40)|0);
      var $ld$2766$0=(($3930)|0);
      var $3931$0=HEAP32[(($ld$2766$0)>>2)];
      var $ld$2767$1=(($3930+4)|0);
      var $3931$1=HEAP32[(($ld$2767$1)>>2)];
      var $3932$0=($3931$0 >>> 28) | ($3931$1 << 4);
      var $3932$1=($3931$1 >>> 28) | (0 << 4);
      var $3933=(($S+40)|0);
      var $ld$2768$0=(($3933)|0);
      var $3934$0=HEAP32[(($ld$2768$0)>>2)];
      var $ld$2769$1=(($3933+4)|0);
      var $3934$1=HEAP32[(($ld$2769$1)>>2)];
      var $3935$0=(0 << 4) | (0 >>> 28);
      var $3935$1=($3934$0 << 4) | (0 >>> 28);
      var $3936$0=$3932$0 | $3935$0;
      var $3936$1=$3932$1 | $3935$1;
      var $3937=(($S+40)|0);
      var $ld$2770$0=(($3937)|0);
      var $3938$0=HEAP32[(($ld$2770$0)>>2)];
      var $ld$2771$1=(($3937+4)|0);
      var $3938$1=HEAP32[(($ld$2771$1)>>2)];
      var $3939$0=($3938$1 >>> 2) | (0 << 30);
      var $3939$1=(0 >>> 2) | (0 << 30);
      var $3940=(($S+40)|0);
      var $ld$2772$0=(($3940)|0);
      var $3941$0=HEAP32[(($ld$2772$0)>>2)];
      var $ld$2773$1=(($3940+4)|0);
      var $3941$1=HEAP32[(($ld$2773$1)>>2)];
      var $3942$0=($3941$0 << 30) | (0 >>> 2);
      var $3942$1=($3941$1 << 30) | ($3941$0 >>> 2);
      var $3943$0=$3939$0 | $3942$0;
      var $3943$1=$3939$1 | $3942$1;
      var $3944$0=$3936$0 ^ $3943$0;
      var $3944$1=$3936$1 ^ $3943$1;
      var $3945=(($S+40)|0);
      var $ld$2774$0=(($3945)|0);
      var $3946$0=HEAP32[(($ld$2774$0)>>2)];
      var $ld$2775$1=(($3945+4)|0);
      var $3946$1=HEAP32[(($ld$2775$1)>>2)];
      var $3947$0=($3946$1 >>> 7) | (0 << 25);
      var $3947$1=(0 >>> 7) | (0 << 25);
      var $3948=(($S+40)|0);
      var $ld$2776$0=(($3948)|0);
      var $3949$0=HEAP32[(($ld$2776$0)>>2)];
      var $ld$2777$1=(($3948+4)|0);
      var $3949$1=HEAP32[(($ld$2777$1)>>2)];
      var $3950$0=($3949$0 << 25) | (0 >>> 7);
      var $3950$1=($3949$1 << 25) | ($3949$0 >>> 7);
      var $3951$0=$3947$0 | $3950$0;
      var $3951$1=$3947$1 | $3950$1;
      var $3952$0=$3944$0 ^ $3951$0;
      var $3952$1=$3944$1 ^ $3951$1;
      var $3953=(($S+40)|0);
      var $ld$2778$0=(($3953)|0);
      var $3954$0=HEAP32[(($ld$2778$0)>>2)];
      var $ld$2779$1=(($3953+4)|0);
      var $3954$1=HEAP32[(($ld$2779$1)>>2)];
      var $3955=(($S+48)|0);
      var $ld$2780$0=(($3955)|0);
      var $3956$0=HEAP32[(($ld$2780$0)>>2)];
      var $ld$2781$1=(($3955+4)|0);
      var $3956$1=HEAP32[(($ld$2781$1)>>2)];
      var $3957$0=$3954$0 | $3956$0;
      var $3957$1=$3954$1 | $3956$1;
      var $3958=(($S+56)|0);
      var $ld$2782$0=(($3958)|0);
      var $3959$0=HEAP32[(($ld$2782$0)>>2)];
      var $ld$2783$1=(($3958+4)|0);
      var $3959$1=HEAP32[(($ld$2783$1)>>2)];
      var $3960$0=$3957$0 & $3959$0;
      var $3960$1=$3957$1 & $3959$1;
      var $3961=(($S+40)|0);
      var $ld$2784$0=(($3961)|0);
      var $3962$0=HEAP32[(($ld$2784$0)>>2)];
      var $ld$2785$1=(($3961+4)|0);
      var $3962$1=HEAP32[(($ld$2785$1)>>2)];
      var $3963=(($S+48)|0);
      var $ld$2786$0=(($3963)|0);
      var $3964$0=HEAP32[(($ld$2786$0)>>2)];
      var $ld$2787$1=(($3963+4)|0);
      var $3964$1=HEAP32[(($ld$2787$1)>>2)];
      var $3965$0=$3962$0 & $3964$0;
      var $3965$1=$3962$1 & $3964$1;
      var $3966$0=$3960$0 | $3965$0;
      var $3966$1=$3960$1 | $3965$1;
      var $3967$0 = _i64Add($3952$0,$3952$1,$3966$0,$3966$1); var $3967$1 = tempRet0;
      var $st$2788$0=(($t1)|0);
      HEAP32[(($st$2788$0)>>2)]=$3967$0;
      var $st$2789$1=(($t1+4)|0);
      HEAP32[(($st$2789$1)>>2)]=$3967$1;
      var $ld$2790$0=(($t0)|0);
      var $3968$0=HEAP32[(($ld$2790$0)>>2)];
      var $ld$2791$1=(($t0+4)|0);
      var $3968$1=HEAP32[(($ld$2791$1)>>2)];
      var $3969=(($S)|0);
      var $ld$2792$0=(($3969)|0);
      var $3970$0=HEAP32[(($ld$2792$0)>>2)];
      var $ld$2793$1=(($3969+4)|0);
      var $3970$1=HEAP32[(($ld$2793$1)>>2)];
      var $3971$0 = _i64Add($3970$0,$3970$1,$3968$0,$3968$1); var $3971$1 = tempRet0;
      var $st$2794$0=(($3969)|0);
      HEAP32[(($st$2794$0)>>2)]=$3971$0;
      var $st$2795$1=(($3969+4)|0);
      HEAP32[(($st$2795$1)>>2)]=$3971$1;
      var $ld$2796$0=(($t0)|0);
      var $3972$0=HEAP32[(($ld$2796$0)>>2)];
      var $ld$2797$1=(($t0+4)|0);
      var $3972$1=HEAP32[(($ld$2797$1)>>2)];
      var $ld$2798$0=(($t1)|0);
      var $3973$0=HEAP32[(($ld$2798$0)>>2)];
      var $ld$2799$1=(($t1+4)|0);
      var $3973$1=HEAP32[(($ld$2799$1)>>2)];
      var $3974$0 = _i64Add($3972$0,$3972$1,$3973$0,$3973$1); var $3974$1 = tempRet0;
      var $3975=(($S+32)|0);
      var $st$2800$0=(($3975)|0);
      HEAP32[(($st$2800$0)>>2)]=$3974$0;
      var $st$2801$1=(($3975+4)|0);
      HEAP32[(($st$2801$1)>>2)]=$3974$1;
      var $3976=(($S+24)|0);
      var $ld$2802$0=(($3976)|0);
      var $3977$0=HEAP32[(($ld$2802$0)>>2)];
      var $ld$2803$1=(($3976+4)|0);
      var $3977$1=HEAP32[(($ld$2803$1)>>2)];
      var $3978=(($S)|0);
      var $ld$2804$0=(($3978)|0);
      var $3979$0=HEAP32[(($ld$2804$0)>>2)];
      var $ld$2805$1=(($3978+4)|0);
      var $3979$1=HEAP32[(($ld$2805$1)>>2)];
      var $3980$0=($3979$0 >>> 14) | ($3979$1 << 18);
      var $3980$1=($3979$1 >>> 14) | (0 << 18);
      var $3981=(($S)|0);
      var $ld$2806$0=(($3981)|0);
      var $3982$0=HEAP32[(($ld$2806$0)>>2)];
      var $ld$2807$1=(($3981+4)|0);
      var $3982$1=HEAP32[(($ld$2807$1)>>2)];
      var $3983$0=(0 << 18) | (0 >>> 14);
      var $3983$1=($3982$0 << 18) | (0 >>> 14);
      var $3984$0=$3980$0 | $3983$0;
      var $3984$1=$3980$1 | $3983$1;
      var $3985=(($S)|0);
      var $ld$2808$0=(($3985)|0);
      var $3986$0=HEAP32[(($ld$2808$0)>>2)];
      var $ld$2809$1=(($3985+4)|0);
      var $3986$1=HEAP32[(($ld$2809$1)>>2)];
      var $3987$0=($3986$0 >>> 18) | ($3986$1 << 14);
      var $3987$1=($3986$1 >>> 18) | (0 << 14);
      var $3988=(($S)|0);
      var $ld$2810$0=(($3988)|0);
      var $3989$0=HEAP32[(($ld$2810$0)>>2)];
      var $ld$2811$1=(($3988+4)|0);
      var $3989$1=HEAP32[(($ld$2811$1)>>2)];
      var $3990$0=(0 << 14) | (0 >>> 18);
      var $3990$1=($3989$0 << 14) | (0 >>> 18);
      var $3991$0=$3987$0 | $3990$0;
      var $3991$1=$3987$1 | $3990$1;
      var $3992$0=$3984$0 ^ $3991$0;
      var $3992$1=$3984$1 ^ $3991$1;
      var $3993=(($S)|0);
      var $ld$2812$0=(($3993)|0);
      var $3994$0=HEAP32[(($ld$2812$0)>>2)];
      var $ld$2813$1=(($3993+4)|0);
      var $3994$1=HEAP32[(($ld$2813$1)>>2)];
      var $3995$0=($3994$1 >>> 9) | (0 << 23);
      var $3995$1=(0 >>> 9) | (0 << 23);
      var $3996=(($S)|0);
      var $ld$2814$0=(($3996)|0);
      var $3997$0=HEAP32[(($ld$2814$0)>>2)];
      var $ld$2815$1=(($3996+4)|0);
      var $3997$1=HEAP32[(($ld$2815$1)>>2)];
      var $3998$0=($3997$0 << 23) | (0 >>> 9);
      var $3998$1=($3997$1 << 23) | ($3997$0 >>> 9);
      var $3999$0=$3995$0 | $3998$0;
      var $3999$1=$3995$1 | $3998$1;
      var $4000$0=$3992$0 ^ $3999$0;
      var $4000$1=$3992$1 ^ $3999$1;
      var $4001$0 = _i64Add($3977$0,$3977$1,$4000$0,$4000$1); var $4001$1 = tempRet0;
      var $4002=(($S+16)|0);
      var $ld$2816$0=(($4002)|0);
      var $4003$0=HEAP32[(($ld$2816$0)>>2)];
      var $ld$2817$1=(($4002+4)|0);
      var $4003$1=HEAP32[(($ld$2817$1)>>2)];
      var $4004=(($S)|0);
      var $ld$2818$0=(($4004)|0);
      var $4005$0=HEAP32[(($ld$2818$0)>>2)];
      var $ld$2819$1=(($4004+4)|0);
      var $4005$1=HEAP32[(($ld$2819$1)>>2)];
      var $4006=(($S+8)|0);
      var $ld$2820$0=(($4006)|0);
      var $4007$0=HEAP32[(($ld$2820$0)>>2)];
      var $ld$2821$1=(($4006+4)|0);
      var $4007$1=HEAP32[(($ld$2821$1)>>2)];
      var $4008=(($S+16)|0);
      var $ld$2822$0=(($4008)|0);
      var $4009$0=HEAP32[(($ld$2822$0)>>2)];
      var $ld$2823$1=(($4008+4)|0);
      var $4009$1=HEAP32[(($ld$2823$1)>>2)];
      var $4010$0=$4007$0 ^ $4009$0;
      var $4010$1=$4007$1 ^ $4009$1;
      var $4011$0=$4005$0 & $4010$0;
      var $4011$1=$4005$1 & $4010$1;
      var $4012$0=$4003$0 ^ $4011$0;
      var $4012$1=$4003$1 ^ $4011$1;
      var $4013$0 = _i64Add($4001$0,$4001$1,$4012$0,$4012$1); var $4013$1 = tempRet0;
      var $$etemp$2824$0=-688958952;
      var $$etemp$2824$1=-778901479;
      var $4014$0 = _i64Add($4013$0,$4013$1,$$etemp$2824$0,$$etemp$2824$1); var $4014$1 = tempRet0;
      var $4015=(($W+352)|0);
      var $ld$2825$0=(($4015)|0);
      var $4016$0=HEAP32[(($ld$2825$0)>>2)];
      var $ld$2826$1=(($4015+4)|0);
      var $4016$1=HEAP32[(($ld$2826$1)>>2)];
      var $4017$0 = _i64Add($4014$0,$4014$1,$4016$0,$4016$1); var $4017$1 = tempRet0;
      var $st$2827$0=(($t0)|0);
      HEAP32[(($st$2827$0)>>2)]=$4017$0;
      var $st$2828$1=(($t0+4)|0);
      HEAP32[(($st$2828$1)>>2)]=$4017$1;
      var $4018=(($S+32)|0);
      var $ld$2829$0=(($4018)|0);
      var $4019$0=HEAP32[(($ld$2829$0)>>2)];
      var $ld$2830$1=(($4018+4)|0);
      var $4019$1=HEAP32[(($ld$2830$1)>>2)];
      var $4020$0=($4019$0 >>> 28) | ($4019$1 << 4);
      var $4020$1=($4019$1 >>> 28) | (0 << 4);
      var $4021=(($S+32)|0);
      var $ld$2831$0=(($4021)|0);
      var $4022$0=HEAP32[(($ld$2831$0)>>2)];
      var $ld$2832$1=(($4021+4)|0);
      var $4022$1=HEAP32[(($ld$2832$1)>>2)];
      var $4023$0=(0 << 4) | (0 >>> 28);
      var $4023$1=($4022$0 << 4) | (0 >>> 28);
      var $4024$0=$4020$0 | $4023$0;
      var $4024$1=$4020$1 | $4023$1;
      var $4025=(($S+32)|0);
      var $ld$2833$0=(($4025)|0);
      var $4026$0=HEAP32[(($ld$2833$0)>>2)];
      var $ld$2834$1=(($4025+4)|0);
      var $4026$1=HEAP32[(($ld$2834$1)>>2)];
      var $4027$0=($4026$1 >>> 2) | (0 << 30);
      var $4027$1=(0 >>> 2) | (0 << 30);
      var $4028=(($S+32)|0);
      var $ld$2835$0=(($4028)|0);
      var $4029$0=HEAP32[(($ld$2835$0)>>2)];
      var $ld$2836$1=(($4028+4)|0);
      var $4029$1=HEAP32[(($ld$2836$1)>>2)];
      var $4030$0=($4029$0 << 30) | (0 >>> 2);
      var $4030$1=($4029$1 << 30) | ($4029$0 >>> 2);
      var $4031$0=$4027$0 | $4030$0;
      var $4031$1=$4027$1 | $4030$1;
      var $4032$0=$4024$0 ^ $4031$0;
      var $4032$1=$4024$1 ^ $4031$1;
      var $4033=(($S+32)|0);
      var $ld$2837$0=(($4033)|0);
      var $4034$0=HEAP32[(($ld$2837$0)>>2)];
      var $ld$2838$1=(($4033+4)|0);
      var $4034$1=HEAP32[(($ld$2838$1)>>2)];
      var $4035$0=($4034$1 >>> 7) | (0 << 25);
      var $4035$1=(0 >>> 7) | (0 << 25);
      var $4036=(($S+32)|0);
      var $ld$2839$0=(($4036)|0);
      var $4037$0=HEAP32[(($ld$2839$0)>>2)];
      var $ld$2840$1=(($4036+4)|0);
      var $4037$1=HEAP32[(($ld$2840$1)>>2)];
      var $4038$0=($4037$0 << 25) | (0 >>> 7);
      var $4038$1=($4037$1 << 25) | ($4037$0 >>> 7);
      var $4039$0=$4035$0 | $4038$0;
      var $4039$1=$4035$1 | $4038$1;
      var $4040$0=$4032$0 ^ $4039$0;
      var $4040$1=$4032$1 ^ $4039$1;
      var $4041=(($S+32)|0);
      var $ld$2841$0=(($4041)|0);
      var $4042$0=HEAP32[(($ld$2841$0)>>2)];
      var $ld$2842$1=(($4041+4)|0);
      var $4042$1=HEAP32[(($ld$2842$1)>>2)];
      var $4043=(($S+40)|0);
      var $ld$2843$0=(($4043)|0);
      var $4044$0=HEAP32[(($ld$2843$0)>>2)];
      var $ld$2844$1=(($4043+4)|0);
      var $4044$1=HEAP32[(($ld$2844$1)>>2)];
      var $4045$0=$4042$0 | $4044$0;
      var $4045$1=$4042$1 | $4044$1;
      var $4046=(($S+48)|0);
      var $ld$2845$0=(($4046)|0);
      var $4047$0=HEAP32[(($ld$2845$0)>>2)];
      var $ld$2846$1=(($4046+4)|0);
      var $4047$1=HEAP32[(($ld$2846$1)>>2)];
      var $4048$0=$4045$0 & $4047$0;
      var $4048$1=$4045$1 & $4047$1;
      var $4049=(($S+32)|0);
      var $ld$2847$0=(($4049)|0);
      var $4050$0=HEAP32[(($ld$2847$0)>>2)];
      var $ld$2848$1=(($4049+4)|0);
      var $4050$1=HEAP32[(($ld$2848$1)>>2)];
      var $4051=(($S+40)|0);
      var $ld$2849$0=(($4051)|0);
      var $4052$0=HEAP32[(($ld$2849$0)>>2)];
      var $ld$2850$1=(($4051+4)|0);
      var $4052$1=HEAP32[(($ld$2850$1)>>2)];
      var $4053$0=$4050$0 & $4052$0;
      var $4053$1=$4050$1 & $4052$1;
      var $4054$0=$4048$0 | $4053$0;
      var $4054$1=$4048$1 | $4053$1;
      var $4055$0 = _i64Add($4040$0,$4040$1,$4054$0,$4054$1); var $4055$1 = tempRet0;
      var $st$2851$0=(($t1)|0);
      HEAP32[(($st$2851$0)>>2)]=$4055$0;
      var $st$2852$1=(($t1+4)|0);
      HEAP32[(($st$2852$1)>>2)]=$4055$1;
      var $ld$2853$0=(($t0)|0);
      var $4056$0=HEAP32[(($ld$2853$0)>>2)];
      var $ld$2854$1=(($t0+4)|0);
      var $4056$1=HEAP32[(($ld$2854$1)>>2)];
      var $4057=(($S+56)|0);
      var $ld$2855$0=(($4057)|0);
      var $4058$0=HEAP32[(($ld$2855$0)>>2)];
      var $ld$2856$1=(($4057+4)|0);
      var $4058$1=HEAP32[(($ld$2856$1)>>2)];
      var $4059$0 = _i64Add($4058$0,$4058$1,$4056$0,$4056$1); var $4059$1 = tempRet0;
      var $st$2857$0=(($4057)|0);
      HEAP32[(($st$2857$0)>>2)]=$4059$0;
      var $st$2858$1=(($4057+4)|0);
      HEAP32[(($st$2858$1)>>2)]=$4059$1;
      var $ld$2859$0=(($t0)|0);
      var $4060$0=HEAP32[(($ld$2859$0)>>2)];
      var $ld$2860$1=(($t0+4)|0);
      var $4060$1=HEAP32[(($ld$2860$1)>>2)];
      var $ld$2861$0=(($t1)|0);
      var $4061$0=HEAP32[(($ld$2861$0)>>2)];
      var $ld$2862$1=(($t1+4)|0);
      var $4061$1=HEAP32[(($ld$2862$1)>>2)];
      var $4062$0 = _i64Add($4060$0,$4060$1,$4061$0,$4061$1); var $4062$1 = tempRet0;
      var $4063=(($S+24)|0);
      var $st$2863$0=(($4063)|0);
      HEAP32[(($st$2863$0)>>2)]=$4062$0;
      var $st$2864$1=(($4063+4)|0);
      HEAP32[(($st$2864$1)>>2)]=$4062$1;
      var $4064=(($S+16)|0);
      var $ld$2865$0=(($4064)|0);
      var $4065$0=HEAP32[(($ld$2865$0)>>2)];
      var $ld$2866$1=(($4064+4)|0);
      var $4065$1=HEAP32[(($ld$2866$1)>>2)];
      var $4066=(($S+56)|0);
      var $ld$2867$0=(($4066)|0);
      var $4067$0=HEAP32[(($ld$2867$0)>>2)];
      var $ld$2868$1=(($4066+4)|0);
      var $4067$1=HEAP32[(($ld$2868$1)>>2)];
      var $4068$0=($4067$0 >>> 14) | ($4067$1 << 18);
      var $4068$1=($4067$1 >>> 14) | (0 << 18);
      var $4069=(($S+56)|0);
      var $ld$2869$0=(($4069)|0);
      var $4070$0=HEAP32[(($ld$2869$0)>>2)];
      var $ld$2870$1=(($4069+4)|0);
      var $4070$1=HEAP32[(($ld$2870$1)>>2)];
      var $4071$0=(0 << 18) | (0 >>> 14);
      var $4071$1=($4070$0 << 18) | (0 >>> 14);
      var $4072$0=$4068$0 | $4071$0;
      var $4072$1=$4068$1 | $4071$1;
      var $4073=(($S+56)|0);
      var $ld$2871$0=(($4073)|0);
      var $4074$0=HEAP32[(($ld$2871$0)>>2)];
      var $ld$2872$1=(($4073+4)|0);
      var $4074$1=HEAP32[(($ld$2872$1)>>2)];
      var $4075$0=($4074$0 >>> 18) | ($4074$1 << 14);
      var $4075$1=($4074$1 >>> 18) | (0 << 14);
      var $4076=(($S+56)|0);
      var $ld$2873$0=(($4076)|0);
      var $4077$0=HEAP32[(($ld$2873$0)>>2)];
      var $ld$2874$1=(($4076+4)|0);
      var $4077$1=HEAP32[(($ld$2874$1)>>2)];
      var $4078$0=(0 << 14) | (0 >>> 18);
      var $4078$1=($4077$0 << 14) | (0 >>> 18);
      var $4079$0=$4075$0 | $4078$0;
      var $4079$1=$4075$1 | $4078$1;
      var $4080$0=$4072$0 ^ $4079$0;
      var $4080$1=$4072$1 ^ $4079$1;
      var $4081=(($S+56)|0);
      var $ld$2875$0=(($4081)|0);
      var $4082$0=HEAP32[(($ld$2875$0)>>2)];
      var $ld$2876$1=(($4081+4)|0);
      var $4082$1=HEAP32[(($ld$2876$1)>>2)];
      var $4083$0=($4082$1 >>> 9) | (0 << 23);
      var $4083$1=(0 >>> 9) | (0 << 23);
      var $4084=(($S+56)|0);
      var $ld$2877$0=(($4084)|0);
      var $4085$0=HEAP32[(($ld$2877$0)>>2)];
      var $ld$2878$1=(($4084+4)|0);
      var $4085$1=HEAP32[(($ld$2878$1)>>2)];
      var $4086$0=($4085$0 << 23) | (0 >>> 9);
      var $4086$1=($4085$1 << 23) | ($4085$0 >>> 9);
      var $4087$0=$4083$0 | $4086$0;
      var $4087$1=$4083$1 | $4086$1;
      var $4088$0=$4080$0 ^ $4087$0;
      var $4088$1=$4080$1 ^ $4087$1;
      var $4089$0 = _i64Add($4065$0,$4065$1,$4088$0,$4088$1); var $4089$1 = tempRet0;
      var $4090=(($S+8)|0);
      var $ld$2879$0=(($4090)|0);
      var $4091$0=HEAP32[(($ld$2879$0)>>2)];
      var $ld$2880$1=(($4090+4)|0);
      var $4091$1=HEAP32[(($ld$2880$1)>>2)];
      var $4092=(($S+56)|0);
      var $ld$2881$0=(($4092)|0);
      var $4093$0=HEAP32[(($ld$2881$0)>>2)];
      var $ld$2882$1=(($4092+4)|0);
      var $4093$1=HEAP32[(($ld$2882$1)>>2)];
      var $4094=(($S)|0);
      var $ld$2883$0=(($4094)|0);
      var $4095$0=HEAP32[(($ld$2883$0)>>2)];
      var $ld$2884$1=(($4094+4)|0);
      var $4095$1=HEAP32[(($ld$2884$1)>>2)];
      var $4096=(($S+8)|0);
      var $ld$2885$0=(($4096)|0);
      var $4097$0=HEAP32[(($ld$2885$0)>>2)];
      var $ld$2886$1=(($4096+4)|0);
      var $4097$1=HEAP32[(($ld$2886$1)>>2)];
      var $4098$0=$4095$0 ^ $4097$0;
      var $4098$1=$4095$1 ^ $4097$1;
      var $4099$0=$4093$0 & $4098$0;
      var $4099$1=$4093$1 & $4098$1;
      var $4100$0=$4091$0 ^ $4099$0;
      var $4100$1=$4091$1 ^ $4099$1;
      var $4101$0 = _i64Add($4089$0,$4089$1,$4100$0,$4100$1); var $4101$1 = tempRet0;
      var $$etemp$2887$0=1432725776;
      var $$etemp$2887$1=-694614492;
      var $4102$0 = _i64Add($4101$0,$4101$1,$$etemp$2887$0,$$etemp$2887$1); var $4102$1 = tempRet0;
      var $4103=(($W+360)|0);
      var $ld$2888$0=(($4103)|0);
      var $4104$0=HEAP32[(($ld$2888$0)>>2)];
      var $ld$2889$1=(($4103+4)|0);
      var $4104$1=HEAP32[(($ld$2889$1)>>2)];
      var $4105$0 = _i64Add($4102$0,$4102$1,$4104$0,$4104$1); var $4105$1 = tempRet0;
      var $st$2890$0=(($t0)|0);
      HEAP32[(($st$2890$0)>>2)]=$4105$0;
      var $st$2891$1=(($t0+4)|0);
      HEAP32[(($st$2891$1)>>2)]=$4105$1;
      var $4106=(($S+24)|0);
      var $ld$2892$0=(($4106)|0);
      var $4107$0=HEAP32[(($ld$2892$0)>>2)];
      var $ld$2893$1=(($4106+4)|0);
      var $4107$1=HEAP32[(($ld$2893$1)>>2)];
      var $4108$0=($4107$0 >>> 28) | ($4107$1 << 4);
      var $4108$1=($4107$1 >>> 28) | (0 << 4);
      var $4109=(($S+24)|0);
      var $ld$2894$0=(($4109)|0);
      var $4110$0=HEAP32[(($ld$2894$0)>>2)];
      var $ld$2895$1=(($4109+4)|0);
      var $4110$1=HEAP32[(($ld$2895$1)>>2)];
      var $4111$0=(0 << 4) | (0 >>> 28);
      var $4111$1=($4110$0 << 4) | (0 >>> 28);
      var $4112$0=$4108$0 | $4111$0;
      var $4112$1=$4108$1 | $4111$1;
      var $4113=(($S+24)|0);
      var $ld$2896$0=(($4113)|0);
      var $4114$0=HEAP32[(($ld$2896$0)>>2)];
      var $ld$2897$1=(($4113+4)|0);
      var $4114$1=HEAP32[(($ld$2897$1)>>2)];
      var $4115$0=($4114$1 >>> 2) | (0 << 30);
      var $4115$1=(0 >>> 2) | (0 << 30);
      var $4116=(($S+24)|0);
      var $ld$2898$0=(($4116)|0);
      var $4117$0=HEAP32[(($ld$2898$0)>>2)];
      var $ld$2899$1=(($4116+4)|0);
      var $4117$1=HEAP32[(($ld$2899$1)>>2)];
      var $4118$0=($4117$0 << 30) | (0 >>> 2);
      var $4118$1=($4117$1 << 30) | ($4117$0 >>> 2);
      var $4119$0=$4115$0 | $4118$0;
      var $4119$1=$4115$1 | $4118$1;
      var $4120$0=$4112$0 ^ $4119$0;
      var $4120$1=$4112$1 ^ $4119$1;
      var $4121=(($S+24)|0);
      var $ld$2900$0=(($4121)|0);
      var $4122$0=HEAP32[(($ld$2900$0)>>2)];
      var $ld$2901$1=(($4121+4)|0);
      var $4122$1=HEAP32[(($ld$2901$1)>>2)];
      var $4123$0=($4122$1 >>> 7) | (0 << 25);
      var $4123$1=(0 >>> 7) | (0 << 25);
      var $4124=(($S+24)|0);
      var $ld$2902$0=(($4124)|0);
      var $4125$0=HEAP32[(($ld$2902$0)>>2)];
      var $ld$2903$1=(($4124+4)|0);
      var $4125$1=HEAP32[(($ld$2903$1)>>2)];
      var $4126$0=($4125$0 << 25) | (0 >>> 7);
      var $4126$1=($4125$1 << 25) | ($4125$0 >>> 7);
      var $4127$0=$4123$0 | $4126$0;
      var $4127$1=$4123$1 | $4126$1;
      var $4128$0=$4120$0 ^ $4127$0;
      var $4128$1=$4120$1 ^ $4127$1;
      var $4129=(($S+24)|0);
      var $ld$2904$0=(($4129)|0);
      var $4130$0=HEAP32[(($ld$2904$0)>>2)];
      var $ld$2905$1=(($4129+4)|0);
      var $4130$1=HEAP32[(($ld$2905$1)>>2)];
      var $4131=(($S+32)|0);
      var $ld$2906$0=(($4131)|0);
      var $4132$0=HEAP32[(($ld$2906$0)>>2)];
      var $ld$2907$1=(($4131+4)|0);
      var $4132$1=HEAP32[(($ld$2907$1)>>2)];
      var $4133$0=$4130$0 | $4132$0;
      var $4133$1=$4130$1 | $4132$1;
      var $4134=(($S+40)|0);
      var $ld$2908$0=(($4134)|0);
      var $4135$0=HEAP32[(($ld$2908$0)>>2)];
      var $ld$2909$1=(($4134+4)|0);
      var $4135$1=HEAP32[(($ld$2909$1)>>2)];
      var $4136$0=$4133$0 & $4135$0;
      var $4136$1=$4133$1 & $4135$1;
      var $4137=(($S+24)|0);
      var $ld$2910$0=(($4137)|0);
      var $4138$0=HEAP32[(($ld$2910$0)>>2)];
      var $ld$2911$1=(($4137+4)|0);
      var $4138$1=HEAP32[(($ld$2911$1)>>2)];
      var $4139=(($S+32)|0);
      var $ld$2912$0=(($4139)|0);
      var $4140$0=HEAP32[(($ld$2912$0)>>2)];
      var $ld$2913$1=(($4139+4)|0);
      var $4140$1=HEAP32[(($ld$2913$1)>>2)];
      var $4141$0=$4138$0 & $4140$0;
      var $4141$1=$4138$1 & $4140$1;
      var $4142$0=$4136$0 | $4141$0;
      var $4142$1=$4136$1 | $4141$1;
      var $4143$0 = _i64Add($4128$0,$4128$1,$4142$0,$4142$1); var $4143$1 = tempRet0;
      var $st$2914$0=(($t1)|0);
      HEAP32[(($st$2914$0)>>2)]=$4143$0;
      var $st$2915$1=(($t1+4)|0);
      HEAP32[(($st$2915$1)>>2)]=$4143$1;
      var $ld$2916$0=(($t0)|0);
      var $4144$0=HEAP32[(($ld$2916$0)>>2)];
      var $ld$2917$1=(($t0+4)|0);
      var $4144$1=HEAP32[(($ld$2917$1)>>2)];
      var $4145=(($S+48)|0);
      var $ld$2918$0=(($4145)|0);
      var $4146$0=HEAP32[(($ld$2918$0)>>2)];
      var $ld$2919$1=(($4145+4)|0);
      var $4146$1=HEAP32[(($ld$2919$1)>>2)];
      var $4147$0 = _i64Add($4146$0,$4146$1,$4144$0,$4144$1); var $4147$1 = tempRet0;
      var $st$2920$0=(($4145)|0);
      HEAP32[(($st$2920$0)>>2)]=$4147$0;
      var $st$2921$1=(($4145+4)|0);
      HEAP32[(($st$2921$1)>>2)]=$4147$1;
      var $ld$2922$0=(($t0)|0);
      var $4148$0=HEAP32[(($ld$2922$0)>>2)];
      var $ld$2923$1=(($t0+4)|0);
      var $4148$1=HEAP32[(($ld$2923$1)>>2)];
      var $ld$2924$0=(($t1)|0);
      var $4149$0=HEAP32[(($ld$2924$0)>>2)];
      var $ld$2925$1=(($t1+4)|0);
      var $4149$1=HEAP32[(($ld$2925$1)>>2)];
      var $4150$0 = _i64Add($4148$0,$4148$1,$4149$0,$4149$1); var $4150$1 = tempRet0;
      var $4151=(($S+16)|0);
      var $st$2926$0=(($4151)|0);
      HEAP32[(($st$2926$0)>>2)]=$4150$0;
      var $st$2927$1=(($4151+4)|0);
      HEAP32[(($st$2927$1)>>2)]=$4150$1;
      var $4152=(($S+8)|0);
      var $ld$2928$0=(($4152)|0);
      var $4153$0=HEAP32[(($ld$2928$0)>>2)];
      var $ld$2929$1=(($4152+4)|0);
      var $4153$1=HEAP32[(($ld$2929$1)>>2)];
      var $4154=(($S+48)|0);
      var $ld$2930$0=(($4154)|0);
      var $4155$0=HEAP32[(($ld$2930$0)>>2)];
      var $ld$2931$1=(($4154+4)|0);
      var $4155$1=HEAP32[(($ld$2931$1)>>2)];
      var $4156$0=($4155$0 >>> 14) | ($4155$1 << 18);
      var $4156$1=($4155$1 >>> 14) | (0 << 18);
      var $4157=(($S+48)|0);
      var $ld$2932$0=(($4157)|0);
      var $4158$0=HEAP32[(($ld$2932$0)>>2)];
      var $ld$2933$1=(($4157+4)|0);
      var $4158$1=HEAP32[(($ld$2933$1)>>2)];
      var $4159$0=(0 << 18) | (0 >>> 14);
      var $4159$1=($4158$0 << 18) | (0 >>> 14);
      var $4160$0=$4156$0 | $4159$0;
      var $4160$1=$4156$1 | $4159$1;
      var $4161=(($S+48)|0);
      var $ld$2934$0=(($4161)|0);
      var $4162$0=HEAP32[(($ld$2934$0)>>2)];
      var $ld$2935$1=(($4161+4)|0);
      var $4162$1=HEAP32[(($ld$2935$1)>>2)];
      var $4163$0=($4162$0 >>> 18) | ($4162$1 << 14);
      var $4163$1=($4162$1 >>> 18) | (0 << 14);
      var $4164=(($S+48)|0);
      var $ld$2936$0=(($4164)|0);
      var $4165$0=HEAP32[(($ld$2936$0)>>2)];
      var $ld$2937$1=(($4164+4)|0);
      var $4165$1=HEAP32[(($ld$2937$1)>>2)];
      var $4166$0=(0 << 14) | (0 >>> 18);
      var $4166$1=($4165$0 << 14) | (0 >>> 18);
      var $4167$0=$4163$0 | $4166$0;
      var $4167$1=$4163$1 | $4166$1;
      var $4168$0=$4160$0 ^ $4167$0;
      var $4168$1=$4160$1 ^ $4167$1;
      var $4169=(($S+48)|0);
      var $ld$2938$0=(($4169)|0);
      var $4170$0=HEAP32[(($ld$2938$0)>>2)];
      var $ld$2939$1=(($4169+4)|0);
      var $4170$1=HEAP32[(($ld$2939$1)>>2)];
      var $4171$0=($4170$1 >>> 9) | (0 << 23);
      var $4171$1=(0 >>> 9) | (0 << 23);
      var $4172=(($S+48)|0);
      var $ld$2940$0=(($4172)|0);
      var $4173$0=HEAP32[(($ld$2940$0)>>2)];
      var $ld$2941$1=(($4172+4)|0);
      var $4173$1=HEAP32[(($ld$2941$1)>>2)];
      var $4174$0=($4173$0 << 23) | (0 >>> 9);
      var $4174$1=($4173$1 << 23) | ($4173$0 >>> 9);
      var $4175$0=$4171$0 | $4174$0;
      var $4175$1=$4171$1 | $4174$1;
      var $4176$0=$4168$0 ^ $4175$0;
      var $4176$1=$4168$1 ^ $4175$1;
      var $4177$0 = _i64Add($4153$0,$4153$1,$4176$0,$4176$1); var $4177$1 = tempRet0;
      var $4178=(($S)|0);
      var $ld$2942$0=(($4178)|0);
      var $4179$0=HEAP32[(($ld$2942$0)>>2)];
      var $ld$2943$1=(($4178+4)|0);
      var $4179$1=HEAP32[(($ld$2943$1)>>2)];
      var $4180=(($S+48)|0);
      var $ld$2944$0=(($4180)|0);
      var $4181$0=HEAP32[(($ld$2944$0)>>2)];
      var $ld$2945$1=(($4180+4)|0);
      var $4181$1=HEAP32[(($ld$2945$1)>>2)];
      var $4182=(($S+56)|0);
      var $ld$2946$0=(($4182)|0);
      var $4183$0=HEAP32[(($ld$2946$0)>>2)];
      var $ld$2947$1=(($4182+4)|0);
      var $4183$1=HEAP32[(($ld$2947$1)>>2)];
      var $4184=(($S)|0);
      var $ld$2948$0=(($4184)|0);
      var $4185$0=HEAP32[(($ld$2948$0)>>2)];
      var $ld$2949$1=(($4184+4)|0);
      var $4185$1=HEAP32[(($ld$2949$1)>>2)];
      var $4186$0=$4183$0 ^ $4185$0;
      var $4186$1=$4183$1 ^ $4185$1;
      var $4187$0=$4181$0 & $4186$0;
      var $4187$1=$4181$1 & $4186$1;
      var $4188$0=$4179$0 ^ $4187$0;
      var $4188$1=$4179$1 ^ $4187$1;
      var $4189$0 = _i64Add($4177$0,$4177$1,$4188$0,$4188$1); var $4189$1 = tempRet0;
      var $$etemp$2950$0=1467031594;
      var $$etemp$2950$1=-200395387;
      var $4190$0 = _i64Add($4189$0,$4189$1,$$etemp$2950$0,$$etemp$2950$1); var $4190$1 = tempRet0;
      var $4191=(($W+368)|0);
      var $ld$2951$0=(($4191)|0);
      var $4192$0=HEAP32[(($ld$2951$0)>>2)];
      var $ld$2952$1=(($4191+4)|0);
      var $4192$1=HEAP32[(($ld$2952$1)>>2)];
      var $4193$0 = _i64Add($4190$0,$4190$1,$4192$0,$4192$1); var $4193$1 = tempRet0;
      var $st$2953$0=(($t0)|0);
      HEAP32[(($st$2953$0)>>2)]=$4193$0;
      var $st$2954$1=(($t0+4)|0);
      HEAP32[(($st$2954$1)>>2)]=$4193$1;
      var $4194=(($S+16)|0);
      var $ld$2955$0=(($4194)|0);
      var $4195$0=HEAP32[(($ld$2955$0)>>2)];
      var $ld$2956$1=(($4194+4)|0);
      var $4195$1=HEAP32[(($ld$2956$1)>>2)];
      var $4196$0=($4195$0 >>> 28) | ($4195$1 << 4);
      var $4196$1=($4195$1 >>> 28) | (0 << 4);
      var $4197=(($S+16)|0);
      var $ld$2957$0=(($4197)|0);
      var $4198$0=HEAP32[(($ld$2957$0)>>2)];
      var $ld$2958$1=(($4197+4)|0);
      var $4198$1=HEAP32[(($ld$2958$1)>>2)];
      var $4199$0=(0 << 4) | (0 >>> 28);
      var $4199$1=($4198$0 << 4) | (0 >>> 28);
      var $4200$0=$4196$0 | $4199$0;
      var $4200$1=$4196$1 | $4199$1;
      var $4201=(($S+16)|0);
      var $ld$2959$0=(($4201)|0);
      var $4202$0=HEAP32[(($ld$2959$0)>>2)];
      var $ld$2960$1=(($4201+4)|0);
      var $4202$1=HEAP32[(($ld$2960$1)>>2)];
      var $4203$0=($4202$1 >>> 2) | (0 << 30);
      var $4203$1=(0 >>> 2) | (0 << 30);
      var $4204=(($S+16)|0);
      var $ld$2961$0=(($4204)|0);
      var $4205$0=HEAP32[(($ld$2961$0)>>2)];
      var $ld$2962$1=(($4204+4)|0);
      var $4205$1=HEAP32[(($ld$2962$1)>>2)];
      var $4206$0=($4205$0 << 30) | (0 >>> 2);
      var $4206$1=($4205$1 << 30) | ($4205$0 >>> 2);
      var $4207$0=$4203$0 | $4206$0;
      var $4207$1=$4203$1 | $4206$1;
      var $4208$0=$4200$0 ^ $4207$0;
      var $4208$1=$4200$1 ^ $4207$1;
      var $4209=(($S+16)|0);
      var $ld$2963$0=(($4209)|0);
      var $4210$0=HEAP32[(($ld$2963$0)>>2)];
      var $ld$2964$1=(($4209+4)|0);
      var $4210$1=HEAP32[(($ld$2964$1)>>2)];
      var $4211$0=($4210$1 >>> 7) | (0 << 25);
      var $4211$1=(0 >>> 7) | (0 << 25);
      var $4212=(($S+16)|0);
      var $ld$2965$0=(($4212)|0);
      var $4213$0=HEAP32[(($ld$2965$0)>>2)];
      var $ld$2966$1=(($4212+4)|0);
      var $4213$1=HEAP32[(($ld$2966$1)>>2)];
      var $4214$0=($4213$0 << 25) | (0 >>> 7);
      var $4214$1=($4213$1 << 25) | ($4213$0 >>> 7);
      var $4215$0=$4211$0 | $4214$0;
      var $4215$1=$4211$1 | $4214$1;
      var $4216$0=$4208$0 ^ $4215$0;
      var $4216$1=$4208$1 ^ $4215$1;
      var $4217=(($S+16)|0);
      var $ld$2967$0=(($4217)|0);
      var $4218$0=HEAP32[(($ld$2967$0)>>2)];
      var $ld$2968$1=(($4217+4)|0);
      var $4218$1=HEAP32[(($ld$2968$1)>>2)];
      var $4219=(($S+24)|0);
      var $ld$2969$0=(($4219)|0);
      var $4220$0=HEAP32[(($ld$2969$0)>>2)];
      var $ld$2970$1=(($4219+4)|0);
      var $4220$1=HEAP32[(($ld$2970$1)>>2)];
      var $4221$0=$4218$0 | $4220$0;
      var $4221$1=$4218$1 | $4220$1;
      var $4222=(($S+32)|0);
      var $ld$2971$0=(($4222)|0);
      var $4223$0=HEAP32[(($ld$2971$0)>>2)];
      var $ld$2972$1=(($4222+4)|0);
      var $4223$1=HEAP32[(($ld$2972$1)>>2)];
      var $4224$0=$4221$0 & $4223$0;
      var $4224$1=$4221$1 & $4223$1;
      var $4225=(($S+16)|0);
      var $ld$2973$0=(($4225)|0);
      var $4226$0=HEAP32[(($ld$2973$0)>>2)];
      var $ld$2974$1=(($4225+4)|0);
      var $4226$1=HEAP32[(($ld$2974$1)>>2)];
      var $4227=(($S+24)|0);
      var $ld$2975$0=(($4227)|0);
      var $4228$0=HEAP32[(($ld$2975$0)>>2)];
      var $ld$2976$1=(($4227+4)|0);
      var $4228$1=HEAP32[(($ld$2976$1)>>2)];
      var $4229$0=$4226$0 & $4228$0;
      var $4229$1=$4226$1 & $4228$1;
      var $4230$0=$4224$0 | $4229$0;
      var $4230$1=$4224$1 | $4229$1;
      var $4231$0 = _i64Add($4216$0,$4216$1,$4230$0,$4230$1); var $4231$1 = tempRet0;
      var $st$2977$0=(($t1)|0);
      HEAP32[(($st$2977$0)>>2)]=$4231$0;
      var $st$2978$1=(($t1+4)|0);
      HEAP32[(($st$2978$1)>>2)]=$4231$1;
      var $ld$2979$0=(($t0)|0);
      var $4232$0=HEAP32[(($ld$2979$0)>>2)];
      var $ld$2980$1=(($t0+4)|0);
      var $4232$1=HEAP32[(($ld$2980$1)>>2)];
      var $4233=(($S+40)|0);
      var $ld$2981$0=(($4233)|0);
      var $4234$0=HEAP32[(($ld$2981$0)>>2)];
      var $ld$2982$1=(($4233+4)|0);
      var $4234$1=HEAP32[(($ld$2982$1)>>2)];
      var $4235$0 = _i64Add($4234$0,$4234$1,$4232$0,$4232$1); var $4235$1 = tempRet0;
      var $st$2983$0=(($4233)|0);
      HEAP32[(($st$2983$0)>>2)]=$4235$0;
      var $st$2984$1=(($4233+4)|0);
      HEAP32[(($st$2984$1)>>2)]=$4235$1;
      var $ld$2985$0=(($t0)|0);
      var $4236$0=HEAP32[(($ld$2985$0)>>2)];
      var $ld$2986$1=(($t0+4)|0);
      var $4236$1=HEAP32[(($ld$2986$1)>>2)];
      var $ld$2987$0=(($t1)|0);
      var $4237$0=HEAP32[(($ld$2987$0)>>2)];
      var $ld$2988$1=(($t1+4)|0);
      var $4237$1=HEAP32[(($ld$2988$1)>>2)];
      var $4238$0 = _i64Add($4236$0,$4236$1,$4237$0,$4237$1); var $4238$1 = tempRet0;
      var $4239=(($S+8)|0);
      var $st$2989$0=(($4239)|0);
      HEAP32[(($st$2989$0)>>2)]=$4238$0;
      var $st$2990$1=(($4239+4)|0);
      HEAP32[(($st$2990$1)>>2)]=$4238$1;
      var $4240=(($S)|0);
      var $ld$2991$0=(($4240)|0);
      var $4241$0=HEAP32[(($ld$2991$0)>>2)];
      var $ld$2992$1=(($4240+4)|0);
      var $4241$1=HEAP32[(($ld$2992$1)>>2)];
      var $4242=(($S+40)|0);
      var $ld$2993$0=(($4242)|0);
      var $4243$0=HEAP32[(($ld$2993$0)>>2)];
      var $ld$2994$1=(($4242+4)|0);
      var $4243$1=HEAP32[(($ld$2994$1)>>2)];
      var $4244$0=($4243$0 >>> 14) | ($4243$1 << 18);
      var $4244$1=($4243$1 >>> 14) | (0 << 18);
      var $4245=(($S+40)|0);
      var $ld$2995$0=(($4245)|0);
      var $4246$0=HEAP32[(($ld$2995$0)>>2)];
      var $ld$2996$1=(($4245+4)|0);
      var $4246$1=HEAP32[(($ld$2996$1)>>2)];
      var $4247$0=(0 << 18) | (0 >>> 14);
      var $4247$1=($4246$0 << 18) | (0 >>> 14);
      var $4248$0=$4244$0 | $4247$0;
      var $4248$1=$4244$1 | $4247$1;
      var $4249=(($S+40)|0);
      var $ld$2997$0=(($4249)|0);
      var $4250$0=HEAP32[(($ld$2997$0)>>2)];
      var $ld$2998$1=(($4249+4)|0);
      var $4250$1=HEAP32[(($ld$2998$1)>>2)];
      var $4251$0=($4250$0 >>> 18) | ($4250$1 << 14);
      var $4251$1=($4250$1 >>> 18) | (0 << 14);
      var $4252=(($S+40)|0);
      var $ld$2999$0=(($4252)|0);
      var $4253$0=HEAP32[(($ld$2999$0)>>2)];
      var $ld$3000$1=(($4252+4)|0);
      var $4253$1=HEAP32[(($ld$3000$1)>>2)];
      var $4254$0=(0 << 14) | (0 >>> 18);
      var $4254$1=($4253$0 << 14) | (0 >>> 18);
      var $4255$0=$4251$0 | $4254$0;
      var $4255$1=$4251$1 | $4254$1;
      var $4256$0=$4248$0 ^ $4255$0;
      var $4256$1=$4248$1 ^ $4255$1;
      var $4257=(($S+40)|0);
      var $ld$3001$0=(($4257)|0);
      var $4258$0=HEAP32[(($ld$3001$0)>>2)];
      var $ld$3002$1=(($4257+4)|0);
      var $4258$1=HEAP32[(($ld$3002$1)>>2)];
      var $4259$0=($4258$1 >>> 9) | (0 << 23);
      var $4259$1=(0 >>> 9) | (0 << 23);
      var $4260=(($S+40)|0);
      var $ld$3003$0=(($4260)|0);
      var $4261$0=HEAP32[(($ld$3003$0)>>2)];
      var $ld$3004$1=(($4260+4)|0);
      var $4261$1=HEAP32[(($ld$3004$1)>>2)];
      var $4262$0=($4261$0 << 23) | (0 >>> 9);
      var $4262$1=($4261$1 << 23) | ($4261$0 >>> 9);
      var $4263$0=$4259$0 | $4262$0;
      var $4263$1=$4259$1 | $4262$1;
      var $4264$0=$4256$0 ^ $4263$0;
      var $4264$1=$4256$1 ^ $4263$1;
      var $4265$0 = _i64Add($4241$0,$4241$1,$4264$0,$4264$1); var $4265$1 = tempRet0;
      var $4266=(($S+56)|0);
      var $ld$3005$0=(($4266)|0);
      var $4267$0=HEAP32[(($ld$3005$0)>>2)];
      var $ld$3006$1=(($4266+4)|0);
      var $4267$1=HEAP32[(($ld$3006$1)>>2)];
      var $4268=(($S+40)|0);
      var $ld$3007$0=(($4268)|0);
      var $4269$0=HEAP32[(($ld$3007$0)>>2)];
      var $ld$3008$1=(($4268+4)|0);
      var $4269$1=HEAP32[(($ld$3008$1)>>2)];
      var $4270=(($S+48)|0);
      var $ld$3009$0=(($4270)|0);
      var $4271$0=HEAP32[(($ld$3009$0)>>2)];
      var $ld$3010$1=(($4270+4)|0);
      var $4271$1=HEAP32[(($ld$3010$1)>>2)];
      var $4272=(($S+56)|0);
      var $ld$3011$0=(($4272)|0);
      var $4273$0=HEAP32[(($ld$3011$0)>>2)];
      var $ld$3012$1=(($4272+4)|0);
      var $4273$1=HEAP32[(($ld$3012$1)>>2)];
      var $4274$0=$4271$0 ^ $4273$0;
      var $4274$1=$4271$1 ^ $4273$1;
      var $4275$0=$4269$0 & $4274$0;
      var $4275$1=$4269$1 & $4274$1;
      var $4276$0=$4267$0 ^ $4275$0;
      var $4276$1=$4267$1 ^ $4275$1;
      var $4277$0 = _i64Add($4265$0,$4265$1,$4276$0,$4276$1); var $4277$1 = tempRet0;
      var $$etemp$3013$0=851169720;
      var $$etemp$3013$1=275423344;
      var $4278$0 = _i64Add($4277$0,$4277$1,$$etemp$3013$0,$$etemp$3013$1); var $4278$1 = tempRet0;
      var $4279=(($W+376)|0);
      var $ld$3014$0=(($4279)|0);
      var $4280$0=HEAP32[(($ld$3014$0)>>2)];
      var $ld$3015$1=(($4279+4)|0);
      var $4280$1=HEAP32[(($ld$3015$1)>>2)];
      var $4281$0 = _i64Add($4278$0,$4278$1,$4280$0,$4280$1); var $4281$1 = tempRet0;
      var $st$3016$0=(($t0)|0);
      HEAP32[(($st$3016$0)>>2)]=$4281$0;
      var $st$3017$1=(($t0+4)|0);
      HEAP32[(($st$3017$1)>>2)]=$4281$1;
      var $4282=(($S+8)|0);
      var $ld$3018$0=(($4282)|0);
      var $4283$0=HEAP32[(($ld$3018$0)>>2)];
      var $ld$3019$1=(($4282+4)|0);
      var $4283$1=HEAP32[(($ld$3019$1)>>2)];
      var $4284$0=($4283$0 >>> 28) | ($4283$1 << 4);
      var $4284$1=($4283$1 >>> 28) | (0 << 4);
      var $4285=(($S+8)|0);
      var $ld$3020$0=(($4285)|0);
      var $4286$0=HEAP32[(($ld$3020$0)>>2)];
      var $ld$3021$1=(($4285+4)|0);
      var $4286$1=HEAP32[(($ld$3021$1)>>2)];
      var $4287$0=(0 << 4) | (0 >>> 28);
      var $4287$1=($4286$0 << 4) | (0 >>> 28);
      var $4288$0=$4284$0 | $4287$0;
      var $4288$1=$4284$1 | $4287$1;
      var $4289=(($S+8)|0);
      var $ld$3022$0=(($4289)|0);
      var $4290$0=HEAP32[(($ld$3022$0)>>2)];
      var $ld$3023$1=(($4289+4)|0);
      var $4290$1=HEAP32[(($ld$3023$1)>>2)];
      var $4291$0=($4290$1 >>> 2) | (0 << 30);
      var $4291$1=(0 >>> 2) | (0 << 30);
      var $4292=(($S+8)|0);
      var $ld$3024$0=(($4292)|0);
      var $4293$0=HEAP32[(($ld$3024$0)>>2)];
      var $ld$3025$1=(($4292+4)|0);
      var $4293$1=HEAP32[(($ld$3025$1)>>2)];
      var $4294$0=($4293$0 << 30) | (0 >>> 2);
      var $4294$1=($4293$1 << 30) | ($4293$0 >>> 2);
      var $4295$0=$4291$0 | $4294$0;
      var $4295$1=$4291$1 | $4294$1;
      var $4296$0=$4288$0 ^ $4295$0;
      var $4296$1=$4288$1 ^ $4295$1;
      var $4297=(($S+8)|0);
      var $ld$3026$0=(($4297)|0);
      var $4298$0=HEAP32[(($ld$3026$0)>>2)];
      var $ld$3027$1=(($4297+4)|0);
      var $4298$1=HEAP32[(($ld$3027$1)>>2)];
      var $4299$0=($4298$1 >>> 7) | (0 << 25);
      var $4299$1=(0 >>> 7) | (0 << 25);
      var $4300=(($S+8)|0);
      var $ld$3028$0=(($4300)|0);
      var $4301$0=HEAP32[(($ld$3028$0)>>2)];
      var $ld$3029$1=(($4300+4)|0);
      var $4301$1=HEAP32[(($ld$3029$1)>>2)];
      var $4302$0=($4301$0 << 25) | (0 >>> 7);
      var $4302$1=($4301$1 << 25) | ($4301$0 >>> 7);
      var $4303$0=$4299$0 | $4302$0;
      var $4303$1=$4299$1 | $4302$1;
      var $4304$0=$4296$0 ^ $4303$0;
      var $4304$1=$4296$1 ^ $4303$1;
      var $4305=(($S+8)|0);
      var $ld$3030$0=(($4305)|0);
      var $4306$0=HEAP32[(($ld$3030$0)>>2)];
      var $ld$3031$1=(($4305+4)|0);
      var $4306$1=HEAP32[(($ld$3031$1)>>2)];
      var $4307=(($S+16)|0);
      var $ld$3032$0=(($4307)|0);
      var $4308$0=HEAP32[(($ld$3032$0)>>2)];
      var $ld$3033$1=(($4307+4)|0);
      var $4308$1=HEAP32[(($ld$3033$1)>>2)];
      var $4309$0=$4306$0 | $4308$0;
      var $4309$1=$4306$1 | $4308$1;
      var $4310=(($S+24)|0);
      var $ld$3034$0=(($4310)|0);
      var $4311$0=HEAP32[(($ld$3034$0)>>2)];
      var $ld$3035$1=(($4310+4)|0);
      var $4311$1=HEAP32[(($ld$3035$1)>>2)];
      var $4312$0=$4309$0 & $4311$0;
      var $4312$1=$4309$1 & $4311$1;
      var $4313=(($S+8)|0);
      var $ld$3036$0=(($4313)|0);
      var $4314$0=HEAP32[(($ld$3036$0)>>2)];
      var $ld$3037$1=(($4313+4)|0);
      var $4314$1=HEAP32[(($ld$3037$1)>>2)];
      var $4315=(($S+16)|0);
      var $ld$3038$0=(($4315)|0);
      var $4316$0=HEAP32[(($ld$3038$0)>>2)];
      var $ld$3039$1=(($4315+4)|0);
      var $4316$1=HEAP32[(($ld$3039$1)>>2)];
      var $4317$0=$4314$0 & $4316$0;
      var $4317$1=$4314$1 & $4316$1;
      var $4318$0=$4312$0 | $4317$0;
      var $4318$1=$4312$1 | $4317$1;
      var $4319$0 = _i64Add($4304$0,$4304$1,$4318$0,$4318$1); var $4319$1 = tempRet0;
      var $st$3040$0=(($t1)|0);
      HEAP32[(($st$3040$0)>>2)]=$4319$0;
      var $st$3041$1=(($t1+4)|0);
      HEAP32[(($st$3041$1)>>2)]=$4319$1;
      var $ld$3042$0=(($t0)|0);
      var $4320$0=HEAP32[(($ld$3042$0)>>2)];
      var $ld$3043$1=(($t0+4)|0);
      var $4320$1=HEAP32[(($ld$3043$1)>>2)];
      var $4321=(($S+32)|0);
      var $ld$3044$0=(($4321)|0);
      var $4322$0=HEAP32[(($ld$3044$0)>>2)];
      var $ld$3045$1=(($4321+4)|0);
      var $4322$1=HEAP32[(($ld$3045$1)>>2)];
      var $4323$0 = _i64Add($4322$0,$4322$1,$4320$0,$4320$1); var $4323$1 = tempRet0;
      var $st$3046$0=(($4321)|0);
      HEAP32[(($st$3046$0)>>2)]=$4323$0;
      var $st$3047$1=(($4321+4)|0);
      HEAP32[(($st$3047$1)>>2)]=$4323$1;
      var $ld$3048$0=(($t0)|0);
      var $4324$0=HEAP32[(($ld$3048$0)>>2)];
      var $ld$3049$1=(($t0+4)|0);
      var $4324$1=HEAP32[(($ld$3049$1)>>2)];
      var $ld$3050$0=(($t1)|0);
      var $4325$0=HEAP32[(($ld$3050$0)>>2)];
      var $ld$3051$1=(($t1+4)|0);
      var $4325$1=HEAP32[(($ld$3051$1)>>2)];
      var $4326$0 = _i64Add($4324$0,$4324$1,$4325$0,$4325$1); var $4326$1 = tempRet0;
      var $4327=(($S)|0);
      var $st$3052$0=(($4327)|0);
      HEAP32[(($st$3052$0)>>2)]=$4326$0;
      var $st$3053$1=(($4327+4)|0);
      HEAP32[(($st$3053$1)>>2)]=$4326$1;
      var $4328=(($S+56)|0);
      var $ld$3054$0=(($4328)|0);
      var $4329$0=HEAP32[(($ld$3054$0)>>2)];
      var $ld$3055$1=(($4328+4)|0);
      var $4329$1=HEAP32[(($ld$3055$1)>>2)];
      var $4330=(($S+32)|0);
      var $ld$3056$0=(($4330)|0);
      var $4331$0=HEAP32[(($ld$3056$0)>>2)];
      var $ld$3057$1=(($4330+4)|0);
      var $4331$1=HEAP32[(($ld$3057$1)>>2)];
      var $4332$0=($4331$0 >>> 14) | ($4331$1 << 18);
      var $4332$1=($4331$1 >>> 14) | (0 << 18);
      var $4333=(($S+32)|0);
      var $ld$3058$0=(($4333)|0);
      var $4334$0=HEAP32[(($ld$3058$0)>>2)];
      var $ld$3059$1=(($4333+4)|0);
      var $4334$1=HEAP32[(($ld$3059$1)>>2)];
      var $4335$0=(0 << 18) | (0 >>> 14);
      var $4335$1=($4334$0 << 18) | (0 >>> 14);
      var $4336$0=$4332$0 | $4335$0;
      var $4336$1=$4332$1 | $4335$1;
      var $4337=(($S+32)|0);
      var $ld$3060$0=(($4337)|0);
      var $4338$0=HEAP32[(($ld$3060$0)>>2)];
      var $ld$3061$1=(($4337+4)|0);
      var $4338$1=HEAP32[(($ld$3061$1)>>2)];
      var $4339$0=($4338$0 >>> 18) | ($4338$1 << 14);
      var $4339$1=($4338$1 >>> 18) | (0 << 14);
      var $4340=(($S+32)|0);
      var $ld$3062$0=(($4340)|0);
      var $4341$0=HEAP32[(($ld$3062$0)>>2)];
      var $ld$3063$1=(($4340+4)|0);
      var $4341$1=HEAP32[(($ld$3063$1)>>2)];
      var $4342$0=(0 << 14) | (0 >>> 18);
      var $4342$1=($4341$0 << 14) | (0 >>> 18);
      var $4343$0=$4339$0 | $4342$0;
      var $4343$1=$4339$1 | $4342$1;
      var $4344$0=$4336$0 ^ $4343$0;
      var $4344$1=$4336$1 ^ $4343$1;
      var $4345=(($S+32)|0);
      var $ld$3064$0=(($4345)|0);
      var $4346$0=HEAP32[(($ld$3064$0)>>2)];
      var $ld$3065$1=(($4345+4)|0);
      var $4346$1=HEAP32[(($ld$3065$1)>>2)];
      var $4347$0=($4346$1 >>> 9) | (0 << 23);
      var $4347$1=(0 >>> 9) | (0 << 23);
      var $4348=(($S+32)|0);
      var $ld$3066$0=(($4348)|0);
      var $4349$0=HEAP32[(($ld$3066$0)>>2)];
      var $ld$3067$1=(($4348+4)|0);
      var $4349$1=HEAP32[(($ld$3067$1)>>2)];
      var $4350$0=($4349$0 << 23) | (0 >>> 9);
      var $4350$1=($4349$1 << 23) | ($4349$0 >>> 9);
      var $4351$0=$4347$0 | $4350$0;
      var $4351$1=$4347$1 | $4350$1;
      var $4352$0=$4344$0 ^ $4351$0;
      var $4352$1=$4344$1 ^ $4351$1;
      var $4353$0 = _i64Add($4329$0,$4329$1,$4352$0,$4352$1); var $4353$1 = tempRet0;
      var $4354=(($S+48)|0);
      var $ld$3068$0=(($4354)|0);
      var $4355$0=HEAP32[(($ld$3068$0)>>2)];
      var $ld$3069$1=(($4354+4)|0);
      var $4355$1=HEAP32[(($ld$3069$1)>>2)];
      var $4356=(($S+32)|0);
      var $ld$3070$0=(($4356)|0);
      var $4357$0=HEAP32[(($ld$3070$0)>>2)];
      var $ld$3071$1=(($4356+4)|0);
      var $4357$1=HEAP32[(($ld$3071$1)>>2)];
      var $4358=(($S+40)|0);
      var $ld$3072$0=(($4358)|0);
      var $4359$0=HEAP32[(($ld$3072$0)>>2)];
      var $ld$3073$1=(($4358+4)|0);
      var $4359$1=HEAP32[(($ld$3073$1)>>2)];
      var $4360=(($S+48)|0);
      var $ld$3074$0=(($4360)|0);
      var $4361$0=HEAP32[(($ld$3074$0)>>2)];
      var $ld$3075$1=(($4360+4)|0);
      var $4361$1=HEAP32[(($ld$3075$1)>>2)];
      var $4362$0=$4359$0 ^ $4361$0;
      var $4362$1=$4359$1 ^ $4361$1;
      var $4363$0=$4357$0 & $4362$0;
      var $4363$1=$4357$1 & $4362$1;
      var $4364$0=$4355$0 ^ $4363$0;
      var $4364$1=$4355$1 ^ $4363$1;
      var $4365$0 = _i64Add($4353$0,$4353$1,$4364$0,$4364$1); var $4365$1 = tempRet0;
      var $$etemp$3076$0=-1194143544;
      var $$etemp$3076$1=430227734;
      var $4366$0 = _i64Add($4365$0,$4365$1,$$etemp$3076$0,$$etemp$3076$1); var $4366$1 = tempRet0;
      var $4367=(($W+384)|0);
      var $ld$3077$0=(($4367)|0);
      var $4368$0=HEAP32[(($ld$3077$0)>>2)];
      var $ld$3078$1=(($4367+4)|0);
      var $4368$1=HEAP32[(($ld$3078$1)>>2)];
      var $4369$0 = _i64Add($4366$0,$4366$1,$4368$0,$4368$1); var $4369$1 = tempRet0;
      var $st$3079$0=(($t0)|0);
      HEAP32[(($st$3079$0)>>2)]=$4369$0;
      var $st$3080$1=(($t0+4)|0);
      HEAP32[(($st$3080$1)>>2)]=$4369$1;
      var $4370=(($S)|0);
      var $ld$3081$0=(($4370)|0);
      var $4371$0=HEAP32[(($ld$3081$0)>>2)];
      var $ld$3082$1=(($4370+4)|0);
      var $4371$1=HEAP32[(($ld$3082$1)>>2)];
      var $4372$0=($4371$0 >>> 28) | ($4371$1 << 4);
      var $4372$1=($4371$1 >>> 28) | (0 << 4);
      var $4373=(($S)|0);
      var $ld$3083$0=(($4373)|0);
      var $4374$0=HEAP32[(($ld$3083$0)>>2)];
      var $ld$3084$1=(($4373+4)|0);
      var $4374$1=HEAP32[(($ld$3084$1)>>2)];
      var $4375$0=(0 << 4) | (0 >>> 28);
      var $4375$1=($4374$0 << 4) | (0 >>> 28);
      var $4376$0=$4372$0 | $4375$0;
      var $4376$1=$4372$1 | $4375$1;
      var $4377=(($S)|0);
      var $ld$3085$0=(($4377)|0);
      var $4378$0=HEAP32[(($ld$3085$0)>>2)];
      var $ld$3086$1=(($4377+4)|0);
      var $4378$1=HEAP32[(($ld$3086$1)>>2)];
      var $4379$0=($4378$1 >>> 2) | (0 << 30);
      var $4379$1=(0 >>> 2) | (0 << 30);
      var $4380=(($S)|0);
      var $ld$3087$0=(($4380)|0);
      var $4381$0=HEAP32[(($ld$3087$0)>>2)];
      var $ld$3088$1=(($4380+4)|0);
      var $4381$1=HEAP32[(($ld$3088$1)>>2)];
      var $4382$0=($4381$0 << 30) | (0 >>> 2);
      var $4382$1=($4381$1 << 30) | ($4381$0 >>> 2);
      var $4383$0=$4379$0 | $4382$0;
      var $4383$1=$4379$1 | $4382$1;
      var $4384$0=$4376$0 ^ $4383$0;
      var $4384$1=$4376$1 ^ $4383$1;
      var $4385=(($S)|0);
      var $ld$3089$0=(($4385)|0);
      var $4386$0=HEAP32[(($ld$3089$0)>>2)];
      var $ld$3090$1=(($4385+4)|0);
      var $4386$1=HEAP32[(($ld$3090$1)>>2)];
      var $4387$0=($4386$1 >>> 7) | (0 << 25);
      var $4387$1=(0 >>> 7) | (0 << 25);
      var $4388=(($S)|0);
      var $ld$3091$0=(($4388)|0);
      var $4389$0=HEAP32[(($ld$3091$0)>>2)];
      var $ld$3092$1=(($4388+4)|0);
      var $4389$1=HEAP32[(($ld$3092$1)>>2)];
      var $4390$0=($4389$0 << 25) | (0 >>> 7);
      var $4390$1=($4389$1 << 25) | ($4389$0 >>> 7);
      var $4391$0=$4387$0 | $4390$0;
      var $4391$1=$4387$1 | $4390$1;
      var $4392$0=$4384$0 ^ $4391$0;
      var $4392$1=$4384$1 ^ $4391$1;
      var $4393=(($S)|0);
      var $ld$3093$0=(($4393)|0);
      var $4394$0=HEAP32[(($ld$3093$0)>>2)];
      var $ld$3094$1=(($4393+4)|0);
      var $4394$1=HEAP32[(($ld$3094$1)>>2)];
      var $4395=(($S+8)|0);
      var $ld$3095$0=(($4395)|0);
      var $4396$0=HEAP32[(($ld$3095$0)>>2)];
      var $ld$3096$1=(($4395+4)|0);
      var $4396$1=HEAP32[(($ld$3096$1)>>2)];
      var $4397$0=$4394$0 | $4396$0;
      var $4397$1=$4394$1 | $4396$1;
      var $4398=(($S+16)|0);
      var $ld$3097$0=(($4398)|0);
      var $4399$0=HEAP32[(($ld$3097$0)>>2)];
      var $ld$3098$1=(($4398+4)|0);
      var $4399$1=HEAP32[(($ld$3098$1)>>2)];
      var $4400$0=$4397$0 & $4399$0;
      var $4400$1=$4397$1 & $4399$1;
      var $4401=(($S)|0);
      var $ld$3099$0=(($4401)|0);
      var $4402$0=HEAP32[(($ld$3099$0)>>2)];
      var $ld$3100$1=(($4401+4)|0);
      var $4402$1=HEAP32[(($ld$3100$1)>>2)];
      var $4403=(($S+8)|0);
      var $ld$3101$0=(($4403)|0);
      var $4404$0=HEAP32[(($ld$3101$0)>>2)];
      var $ld$3102$1=(($4403+4)|0);
      var $4404$1=HEAP32[(($ld$3102$1)>>2)];
      var $4405$0=$4402$0 & $4404$0;
      var $4405$1=$4402$1 & $4404$1;
      var $4406$0=$4400$0 | $4405$0;
      var $4406$1=$4400$1 | $4405$1;
      var $4407$0 = _i64Add($4392$0,$4392$1,$4406$0,$4406$1); var $4407$1 = tempRet0;
      var $st$3103$0=(($t1)|0);
      HEAP32[(($st$3103$0)>>2)]=$4407$0;
      var $st$3104$1=(($t1+4)|0);
      HEAP32[(($st$3104$1)>>2)]=$4407$1;
      var $ld$3105$0=(($t0)|0);
      var $4408$0=HEAP32[(($ld$3105$0)>>2)];
      var $ld$3106$1=(($t0+4)|0);
      var $4408$1=HEAP32[(($ld$3106$1)>>2)];
      var $4409=(($S+24)|0);
      var $ld$3107$0=(($4409)|0);
      var $4410$0=HEAP32[(($ld$3107$0)>>2)];
      var $ld$3108$1=(($4409+4)|0);
      var $4410$1=HEAP32[(($ld$3108$1)>>2)];
      var $4411$0 = _i64Add($4410$0,$4410$1,$4408$0,$4408$1); var $4411$1 = tempRet0;
      var $st$3109$0=(($4409)|0);
      HEAP32[(($st$3109$0)>>2)]=$4411$0;
      var $st$3110$1=(($4409+4)|0);
      HEAP32[(($st$3110$1)>>2)]=$4411$1;
      var $ld$3111$0=(($t0)|0);
      var $4412$0=HEAP32[(($ld$3111$0)>>2)];
      var $ld$3112$1=(($t0+4)|0);
      var $4412$1=HEAP32[(($ld$3112$1)>>2)];
      var $ld$3113$0=(($t1)|0);
      var $4413$0=HEAP32[(($ld$3113$0)>>2)];
      var $ld$3114$1=(($t1+4)|0);
      var $4413$1=HEAP32[(($ld$3114$1)>>2)];
      var $4414$0 = _i64Add($4412$0,$4412$1,$4413$0,$4413$1); var $4414$1 = tempRet0;
      var $4415=(($S+56)|0);
      var $st$3115$0=(($4415)|0);
      HEAP32[(($st$3115$0)>>2)]=$4414$0;
      var $st$3116$1=(($4415+4)|0);
      HEAP32[(($st$3116$1)>>2)]=$4414$1;
      var $4416=(($S+48)|0);
      var $ld$3117$0=(($4416)|0);
      var $4417$0=HEAP32[(($ld$3117$0)>>2)];
      var $ld$3118$1=(($4416+4)|0);
      var $4417$1=HEAP32[(($ld$3118$1)>>2)];
      var $4418=(($S+24)|0);
      var $ld$3119$0=(($4418)|0);
      var $4419$0=HEAP32[(($ld$3119$0)>>2)];
      var $ld$3120$1=(($4418+4)|0);
      var $4419$1=HEAP32[(($ld$3120$1)>>2)];
      var $4420$0=($4419$0 >>> 14) | ($4419$1 << 18);
      var $4420$1=($4419$1 >>> 14) | (0 << 18);
      var $4421=(($S+24)|0);
      var $ld$3121$0=(($4421)|0);
      var $4422$0=HEAP32[(($ld$3121$0)>>2)];
      var $ld$3122$1=(($4421+4)|0);
      var $4422$1=HEAP32[(($ld$3122$1)>>2)];
      var $4423$0=(0 << 18) | (0 >>> 14);
      var $4423$1=($4422$0 << 18) | (0 >>> 14);
      var $4424$0=$4420$0 | $4423$0;
      var $4424$1=$4420$1 | $4423$1;
      var $4425=(($S+24)|0);
      var $ld$3123$0=(($4425)|0);
      var $4426$0=HEAP32[(($ld$3123$0)>>2)];
      var $ld$3124$1=(($4425+4)|0);
      var $4426$1=HEAP32[(($ld$3124$1)>>2)];
      var $4427$0=($4426$0 >>> 18) | ($4426$1 << 14);
      var $4427$1=($4426$1 >>> 18) | (0 << 14);
      var $4428=(($S+24)|0);
      var $ld$3125$0=(($4428)|0);
      var $4429$0=HEAP32[(($ld$3125$0)>>2)];
      var $ld$3126$1=(($4428+4)|0);
      var $4429$1=HEAP32[(($ld$3126$1)>>2)];
      var $4430$0=(0 << 14) | (0 >>> 18);
      var $4430$1=($4429$0 << 14) | (0 >>> 18);
      var $4431$0=$4427$0 | $4430$0;
      var $4431$1=$4427$1 | $4430$1;
      var $4432$0=$4424$0 ^ $4431$0;
      var $4432$1=$4424$1 ^ $4431$1;
      var $4433=(($S+24)|0);
      var $ld$3127$0=(($4433)|0);
      var $4434$0=HEAP32[(($ld$3127$0)>>2)];
      var $ld$3128$1=(($4433+4)|0);
      var $4434$1=HEAP32[(($ld$3128$1)>>2)];
      var $4435$0=($4434$1 >>> 9) | (0 << 23);
      var $4435$1=(0 >>> 9) | (0 << 23);
      var $4436=(($S+24)|0);
      var $ld$3129$0=(($4436)|0);
      var $4437$0=HEAP32[(($ld$3129$0)>>2)];
      var $ld$3130$1=(($4436+4)|0);
      var $4437$1=HEAP32[(($ld$3130$1)>>2)];
      var $4438$0=($4437$0 << 23) | (0 >>> 9);
      var $4438$1=($4437$1 << 23) | ($4437$0 >>> 9);
      var $4439$0=$4435$0 | $4438$0;
      var $4439$1=$4435$1 | $4438$1;
      var $4440$0=$4432$0 ^ $4439$0;
      var $4440$1=$4432$1 ^ $4439$1;
      var $4441$0 = _i64Add($4417$0,$4417$1,$4440$0,$4440$1); var $4441$1 = tempRet0;
      var $4442=(($S+40)|0);
      var $ld$3131$0=(($4442)|0);
      var $4443$0=HEAP32[(($ld$3131$0)>>2)];
      var $ld$3132$1=(($4442+4)|0);
      var $4443$1=HEAP32[(($ld$3132$1)>>2)];
      var $4444=(($S+24)|0);
      var $ld$3133$0=(($4444)|0);
      var $4445$0=HEAP32[(($ld$3133$0)>>2)];
      var $ld$3134$1=(($4444+4)|0);
      var $4445$1=HEAP32[(($ld$3134$1)>>2)];
      var $4446=(($S+32)|0);
      var $ld$3135$0=(($4446)|0);
      var $4447$0=HEAP32[(($ld$3135$0)>>2)];
      var $ld$3136$1=(($4446+4)|0);
      var $4447$1=HEAP32[(($ld$3136$1)>>2)];
      var $4448=(($S+40)|0);
      var $ld$3137$0=(($4448)|0);
      var $4449$0=HEAP32[(($ld$3137$0)>>2)];
      var $ld$3138$1=(($4448+4)|0);
      var $4449$1=HEAP32[(($ld$3138$1)>>2)];
      var $4450$0=$4447$0 ^ $4449$0;
      var $4450$1=$4447$1 ^ $4449$1;
      var $4451$0=$4445$0 & $4450$0;
      var $4451$1=$4445$1 & $4450$1;
      var $4452$0=$4443$0 ^ $4451$0;
      var $4452$1=$4443$1 ^ $4451$1;
      var $4453$0 = _i64Add($4441$0,$4441$1,$4452$0,$4452$1); var $4453$1 = tempRet0;
      var $$etemp$3139$0=1363258195;
      var $$etemp$3139$1=506948616;
      var $4454$0 = _i64Add($4453$0,$4453$1,$$etemp$3139$0,$$etemp$3139$1); var $4454$1 = tempRet0;
      var $4455=(($W+392)|0);
      var $ld$3140$0=(($4455)|0);
      var $4456$0=HEAP32[(($ld$3140$0)>>2)];
      var $ld$3141$1=(($4455+4)|0);
      var $4456$1=HEAP32[(($ld$3141$1)>>2)];
      var $4457$0 = _i64Add($4454$0,$4454$1,$4456$0,$4456$1); var $4457$1 = tempRet0;
      var $st$3142$0=(($t0)|0);
      HEAP32[(($st$3142$0)>>2)]=$4457$0;
      var $st$3143$1=(($t0+4)|0);
      HEAP32[(($st$3143$1)>>2)]=$4457$1;
      var $4458=(($S+56)|0);
      var $ld$3144$0=(($4458)|0);
      var $4459$0=HEAP32[(($ld$3144$0)>>2)];
      var $ld$3145$1=(($4458+4)|0);
      var $4459$1=HEAP32[(($ld$3145$1)>>2)];
      var $4460$0=($4459$0 >>> 28) | ($4459$1 << 4);
      var $4460$1=($4459$1 >>> 28) | (0 << 4);
      var $4461=(($S+56)|0);
      var $ld$3146$0=(($4461)|0);
      var $4462$0=HEAP32[(($ld$3146$0)>>2)];
      var $ld$3147$1=(($4461+4)|0);
      var $4462$1=HEAP32[(($ld$3147$1)>>2)];
      var $4463$0=(0 << 4) | (0 >>> 28);
      var $4463$1=($4462$0 << 4) | (0 >>> 28);
      var $4464$0=$4460$0 | $4463$0;
      var $4464$1=$4460$1 | $4463$1;
      var $4465=(($S+56)|0);
      var $ld$3148$0=(($4465)|0);
      var $4466$0=HEAP32[(($ld$3148$0)>>2)];
      var $ld$3149$1=(($4465+4)|0);
      var $4466$1=HEAP32[(($ld$3149$1)>>2)];
      var $4467$0=($4466$1 >>> 2) | (0 << 30);
      var $4467$1=(0 >>> 2) | (0 << 30);
      var $4468=(($S+56)|0);
      var $ld$3150$0=(($4468)|0);
      var $4469$0=HEAP32[(($ld$3150$0)>>2)];
      var $ld$3151$1=(($4468+4)|0);
      var $4469$1=HEAP32[(($ld$3151$1)>>2)];
      var $4470$0=($4469$0 << 30) | (0 >>> 2);
      var $4470$1=($4469$1 << 30) | ($4469$0 >>> 2);
      var $4471$0=$4467$0 | $4470$0;
      var $4471$1=$4467$1 | $4470$1;
      var $4472$0=$4464$0 ^ $4471$0;
      var $4472$1=$4464$1 ^ $4471$1;
      var $4473=(($S+56)|0);
      var $ld$3152$0=(($4473)|0);
      var $4474$0=HEAP32[(($ld$3152$0)>>2)];
      var $ld$3153$1=(($4473+4)|0);
      var $4474$1=HEAP32[(($ld$3153$1)>>2)];
      var $4475$0=($4474$1 >>> 7) | (0 << 25);
      var $4475$1=(0 >>> 7) | (0 << 25);
      var $4476=(($S+56)|0);
      var $ld$3154$0=(($4476)|0);
      var $4477$0=HEAP32[(($ld$3154$0)>>2)];
      var $ld$3155$1=(($4476+4)|0);
      var $4477$1=HEAP32[(($ld$3155$1)>>2)];
      var $4478$0=($4477$0 << 25) | (0 >>> 7);
      var $4478$1=($4477$1 << 25) | ($4477$0 >>> 7);
      var $4479$0=$4475$0 | $4478$0;
      var $4479$1=$4475$1 | $4478$1;
      var $4480$0=$4472$0 ^ $4479$0;
      var $4480$1=$4472$1 ^ $4479$1;
      var $4481=(($S+56)|0);
      var $ld$3156$0=(($4481)|0);
      var $4482$0=HEAP32[(($ld$3156$0)>>2)];
      var $ld$3157$1=(($4481+4)|0);
      var $4482$1=HEAP32[(($ld$3157$1)>>2)];
      var $4483=(($S)|0);
      var $ld$3158$0=(($4483)|0);
      var $4484$0=HEAP32[(($ld$3158$0)>>2)];
      var $ld$3159$1=(($4483+4)|0);
      var $4484$1=HEAP32[(($ld$3159$1)>>2)];
      var $4485$0=$4482$0 | $4484$0;
      var $4485$1=$4482$1 | $4484$1;
      var $4486=(($S+8)|0);
      var $ld$3160$0=(($4486)|0);
      var $4487$0=HEAP32[(($ld$3160$0)>>2)];
      var $ld$3161$1=(($4486+4)|0);
      var $4487$1=HEAP32[(($ld$3161$1)>>2)];
      var $4488$0=$4485$0 & $4487$0;
      var $4488$1=$4485$1 & $4487$1;
      var $4489=(($S+56)|0);
      var $ld$3162$0=(($4489)|0);
      var $4490$0=HEAP32[(($ld$3162$0)>>2)];
      var $ld$3163$1=(($4489+4)|0);
      var $4490$1=HEAP32[(($ld$3163$1)>>2)];
      var $4491=(($S)|0);
      var $ld$3164$0=(($4491)|0);
      var $4492$0=HEAP32[(($ld$3164$0)>>2)];
      var $ld$3165$1=(($4491+4)|0);
      var $4492$1=HEAP32[(($ld$3165$1)>>2)];
      var $4493$0=$4490$0 & $4492$0;
      var $4493$1=$4490$1 & $4492$1;
      var $4494$0=$4488$0 | $4493$0;
      var $4494$1=$4488$1 | $4493$1;
      var $4495$0 = _i64Add($4480$0,$4480$1,$4494$0,$4494$1); var $4495$1 = tempRet0;
      var $st$3166$0=(($t1)|0);
      HEAP32[(($st$3166$0)>>2)]=$4495$0;
      var $st$3167$1=(($t1+4)|0);
      HEAP32[(($st$3167$1)>>2)]=$4495$1;
      var $ld$3168$0=(($t0)|0);
      var $4496$0=HEAP32[(($ld$3168$0)>>2)];
      var $ld$3169$1=(($t0+4)|0);
      var $4496$1=HEAP32[(($ld$3169$1)>>2)];
      var $4497=(($S+16)|0);
      var $ld$3170$0=(($4497)|0);
      var $4498$0=HEAP32[(($ld$3170$0)>>2)];
      var $ld$3171$1=(($4497+4)|0);
      var $4498$1=HEAP32[(($ld$3171$1)>>2)];
      var $4499$0 = _i64Add($4498$0,$4498$1,$4496$0,$4496$1); var $4499$1 = tempRet0;
      var $st$3172$0=(($4497)|0);
      HEAP32[(($st$3172$0)>>2)]=$4499$0;
      var $st$3173$1=(($4497+4)|0);
      HEAP32[(($st$3173$1)>>2)]=$4499$1;
      var $ld$3174$0=(($t0)|0);
      var $4500$0=HEAP32[(($ld$3174$0)>>2)];
      var $ld$3175$1=(($t0+4)|0);
      var $4500$1=HEAP32[(($ld$3175$1)>>2)];
      var $ld$3176$0=(($t1)|0);
      var $4501$0=HEAP32[(($ld$3176$0)>>2)];
      var $ld$3177$1=(($t1+4)|0);
      var $4501$1=HEAP32[(($ld$3177$1)>>2)];
      var $4502$0 = _i64Add($4500$0,$4500$1,$4501$0,$4501$1); var $4502$1 = tempRet0;
      var $4503=(($S+48)|0);
      var $st$3178$0=(($4503)|0);
      HEAP32[(($st$3178$0)>>2)]=$4502$0;
      var $st$3179$1=(($4503+4)|0);
      HEAP32[(($st$3179$1)>>2)]=$4502$1;
      var $4504=(($S+40)|0);
      var $ld$3180$0=(($4504)|0);
      var $4505$0=HEAP32[(($ld$3180$0)>>2)];
      var $ld$3181$1=(($4504+4)|0);
      var $4505$1=HEAP32[(($ld$3181$1)>>2)];
      var $4506=(($S+16)|0);
      var $ld$3182$0=(($4506)|0);
      var $4507$0=HEAP32[(($ld$3182$0)>>2)];
      var $ld$3183$1=(($4506+4)|0);
      var $4507$1=HEAP32[(($ld$3183$1)>>2)];
      var $4508$0=($4507$0 >>> 14) | ($4507$1 << 18);
      var $4508$1=($4507$1 >>> 14) | (0 << 18);
      var $4509=(($S+16)|0);
      var $ld$3184$0=(($4509)|0);
      var $4510$0=HEAP32[(($ld$3184$0)>>2)];
      var $ld$3185$1=(($4509+4)|0);
      var $4510$1=HEAP32[(($ld$3185$1)>>2)];
      var $4511$0=(0 << 18) | (0 >>> 14);
      var $4511$1=($4510$0 << 18) | (0 >>> 14);
      var $4512$0=$4508$0 | $4511$0;
      var $4512$1=$4508$1 | $4511$1;
      var $4513=(($S+16)|0);
      var $ld$3186$0=(($4513)|0);
      var $4514$0=HEAP32[(($ld$3186$0)>>2)];
      var $ld$3187$1=(($4513+4)|0);
      var $4514$1=HEAP32[(($ld$3187$1)>>2)];
      var $4515$0=($4514$0 >>> 18) | ($4514$1 << 14);
      var $4515$1=($4514$1 >>> 18) | (0 << 14);
      var $4516=(($S+16)|0);
      var $ld$3188$0=(($4516)|0);
      var $4517$0=HEAP32[(($ld$3188$0)>>2)];
      var $ld$3189$1=(($4516+4)|0);
      var $4517$1=HEAP32[(($ld$3189$1)>>2)];
      var $4518$0=(0 << 14) | (0 >>> 18);
      var $4518$1=($4517$0 << 14) | (0 >>> 18);
      var $4519$0=$4515$0 | $4518$0;
      var $4519$1=$4515$1 | $4518$1;
      var $4520$0=$4512$0 ^ $4519$0;
      var $4520$1=$4512$1 ^ $4519$1;
      var $4521=(($S+16)|0);
      var $ld$3190$0=(($4521)|0);
      var $4522$0=HEAP32[(($ld$3190$0)>>2)];
      var $ld$3191$1=(($4521+4)|0);
      var $4522$1=HEAP32[(($ld$3191$1)>>2)];
      var $4523$0=($4522$1 >>> 9) | (0 << 23);
      var $4523$1=(0 >>> 9) | (0 << 23);
      var $4524=(($S+16)|0);
      var $ld$3192$0=(($4524)|0);
      var $4525$0=HEAP32[(($ld$3192$0)>>2)];
      var $ld$3193$1=(($4524+4)|0);
      var $4525$1=HEAP32[(($ld$3193$1)>>2)];
      var $4526$0=($4525$0 << 23) | (0 >>> 9);
      var $4526$1=($4525$1 << 23) | ($4525$0 >>> 9);
      var $4527$0=$4523$0 | $4526$0;
      var $4527$1=$4523$1 | $4526$1;
      var $4528$0=$4520$0 ^ $4527$0;
      var $4528$1=$4520$1 ^ $4527$1;
      var $4529$0 = _i64Add($4505$0,$4505$1,$4528$0,$4528$1); var $4529$1 = tempRet0;
      var $4530=(($S+32)|0);
      var $ld$3194$0=(($4530)|0);
      var $4531$0=HEAP32[(($ld$3194$0)>>2)];
      var $ld$3195$1=(($4530+4)|0);
      var $4531$1=HEAP32[(($ld$3195$1)>>2)];
      var $4532=(($S+16)|0);
      var $ld$3196$0=(($4532)|0);
      var $4533$0=HEAP32[(($ld$3196$0)>>2)];
      var $ld$3197$1=(($4532+4)|0);
      var $4533$1=HEAP32[(($ld$3197$1)>>2)];
      var $4534=(($S+24)|0);
      var $ld$3198$0=(($4534)|0);
      var $4535$0=HEAP32[(($ld$3198$0)>>2)];
      var $ld$3199$1=(($4534+4)|0);
      var $4535$1=HEAP32[(($ld$3199$1)>>2)];
      var $4536=(($S+32)|0);
      var $ld$3200$0=(($4536)|0);
      var $4537$0=HEAP32[(($ld$3200$0)>>2)];
      var $ld$3201$1=(($4536+4)|0);
      var $4537$1=HEAP32[(($ld$3201$1)>>2)];
      var $4538$0=$4535$0 ^ $4537$0;
      var $4538$1=$4535$1 ^ $4537$1;
      var $4539$0=$4533$0 & $4538$0;
      var $4539$1=$4533$1 & $4538$1;
      var $4540$0=$4531$0 ^ $4539$0;
      var $4540$1=$4531$1 ^ $4539$1;
      var $4541$0 = _i64Add($4529$0,$4529$1,$4540$0,$4540$1); var $4541$1 = tempRet0;
      var $$etemp$3202$0=-544281703;
      var $$etemp$3202$1=659060556;
      var $4542$0 = _i64Add($4541$0,$4541$1,$$etemp$3202$0,$$etemp$3202$1); var $4542$1 = tempRet0;
      var $4543=(($W+400)|0);
      var $ld$3203$0=(($4543)|0);
      var $4544$0=HEAP32[(($ld$3203$0)>>2)];
      var $ld$3204$1=(($4543+4)|0);
      var $4544$1=HEAP32[(($ld$3204$1)>>2)];
      var $4545$0 = _i64Add($4542$0,$4542$1,$4544$0,$4544$1); var $4545$1 = tempRet0;
      var $st$3205$0=(($t0)|0);
      HEAP32[(($st$3205$0)>>2)]=$4545$0;
      var $st$3206$1=(($t0+4)|0);
      HEAP32[(($st$3206$1)>>2)]=$4545$1;
      var $4546=(($S+48)|0);
      var $ld$3207$0=(($4546)|0);
      var $4547$0=HEAP32[(($ld$3207$0)>>2)];
      var $ld$3208$1=(($4546+4)|0);
      var $4547$1=HEAP32[(($ld$3208$1)>>2)];
      var $4548$0=($4547$0 >>> 28) | ($4547$1 << 4);
      var $4548$1=($4547$1 >>> 28) | (0 << 4);
      var $4549=(($S+48)|0);
      var $ld$3209$0=(($4549)|0);
      var $4550$0=HEAP32[(($ld$3209$0)>>2)];
      var $ld$3210$1=(($4549+4)|0);
      var $4550$1=HEAP32[(($ld$3210$1)>>2)];
      var $4551$0=(0 << 4) | (0 >>> 28);
      var $4551$1=($4550$0 << 4) | (0 >>> 28);
      var $4552$0=$4548$0 | $4551$0;
      var $4552$1=$4548$1 | $4551$1;
      var $4553=(($S+48)|0);
      var $ld$3211$0=(($4553)|0);
      var $4554$0=HEAP32[(($ld$3211$0)>>2)];
      var $ld$3212$1=(($4553+4)|0);
      var $4554$1=HEAP32[(($ld$3212$1)>>2)];
      var $4555$0=($4554$1 >>> 2) | (0 << 30);
      var $4555$1=(0 >>> 2) | (0 << 30);
      var $4556=(($S+48)|0);
      var $ld$3213$0=(($4556)|0);
      var $4557$0=HEAP32[(($ld$3213$0)>>2)];
      var $ld$3214$1=(($4556+4)|0);
      var $4557$1=HEAP32[(($ld$3214$1)>>2)];
      var $4558$0=($4557$0 << 30) | (0 >>> 2);
      var $4558$1=($4557$1 << 30) | ($4557$0 >>> 2);
      var $4559$0=$4555$0 | $4558$0;
      var $4559$1=$4555$1 | $4558$1;
      var $4560$0=$4552$0 ^ $4559$0;
      var $4560$1=$4552$1 ^ $4559$1;
      var $4561=(($S+48)|0);
      var $ld$3215$0=(($4561)|0);
      var $4562$0=HEAP32[(($ld$3215$0)>>2)];
      var $ld$3216$1=(($4561+4)|0);
      var $4562$1=HEAP32[(($ld$3216$1)>>2)];
      var $4563$0=($4562$1 >>> 7) | (0 << 25);
      var $4563$1=(0 >>> 7) | (0 << 25);
      var $4564=(($S+48)|0);
      var $ld$3217$0=(($4564)|0);
      var $4565$0=HEAP32[(($ld$3217$0)>>2)];
      var $ld$3218$1=(($4564+4)|0);
      var $4565$1=HEAP32[(($ld$3218$1)>>2)];
      var $4566$0=($4565$0 << 25) | (0 >>> 7);
      var $4566$1=($4565$1 << 25) | ($4565$0 >>> 7);
      var $4567$0=$4563$0 | $4566$0;
      var $4567$1=$4563$1 | $4566$1;
      var $4568$0=$4560$0 ^ $4567$0;
      var $4568$1=$4560$1 ^ $4567$1;
      var $4569=(($S+48)|0);
      var $ld$3219$0=(($4569)|0);
      var $4570$0=HEAP32[(($ld$3219$0)>>2)];
      var $ld$3220$1=(($4569+4)|0);
      var $4570$1=HEAP32[(($ld$3220$1)>>2)];
      var $4571=(($S+56)|0);
      var $ld$3221$0=(($4571)|0);
      var $4572$0=HEAP32[(($ld$3221$0)>>2)];
      var $ld$3222$1=(($4571+4)|0);
      var $4572$1=HEAP32[(($ld$3222$1)>>2)];
      var $4573$0=$4570$0 | $4572$0;
      var $4573$1=$4570$1 | $4572$1;
      var $4574=(($S)|0);
      var $ld$3223$0=(($4574)|0);
      var $4575$0=HEAP32[(($ld$3223$0)>>2)];
      var $ld$3224$1=(($4574+4)|0);
      var $4575$1=HEAP32[(($ld$3224$1)>>2)];
      var $4576$0=$4573$0 & $4575$0;
      var $4576$1=$4573$1 & $4575$1;
      var $4577=(($S+48)|0);
      var $ld$3225$0=(($4577)|0);
      var $4578$0=HEAP32[(($ld$3225$0)>>2)];
      var $ld$3226$1=(($4577+4)|0);
      var $4578$1=HEAP32[(($ld$3226$1)>>2)];
      var $4579=(($S+56)|0);
      var $ld$3227$0=(($4579)|0);
      var $4580$0=HEAP32[(($ld$3227$0)>>2)];
      var $ld$3228$1=(($4579+4)|0);
      var $4580$1=HEAP32[(($ld$3228$1)>>2)];
      var $4581$0=$4578$0 & $4580$0;
      var $4581$1=$4578$1 & $4580$1;
      var $4582$0=$4576$0 | $4581$0;
      var $4582$1=$4576$1 | $4581$1;
      var $4583$0 = _i64Add($4568$0,$4568$1,$4582$0,$4582$1); var $4583$1 = tempRet0;
      var $st$3229$0=(($t1)|0);
      HEAP32[(($st$3229$0)>>2)]=$4583$0;
      var $st$3230$1=(($t1+4)|0);
      HEAP32[(($st$3230$1)>>2)]=$4583$1;
      var $ld$3231$0=(($t0)|0);
      var $4584$0=HEAP32[(($ld$3231$0)>>2)];
      var $ld$3232$1=(($t0+4)|0);
      var $4584$1=HEAP32[(($ld$3232$1)>>2)];
      var $4585=(($S+8)|0);
      var $ld$3233$0=(($4585)|0);
      var $4586$0=HEAP32[(($ld$3233$0)>>2)];
      var $ld$3234$1=(($4585+4)|0);
      var $4586$1=HEAP32[(($ld$3234$1)>>2)];
      var $4587$0 = _i64Add($4586$0,$4586$1,$4584$0,$4584$1); var $4587$1 = tempRet0;
      var $st$3235$0=(($4585)|0);
      HEAP32[(($st$3235$0)>>2)]=$4587$0;
      var $st$3236$1=(($4585+4)|0);
      HEAP32[(($st$3236$1)>>2)]=$4587$1;
      var $ld$3237$0=(($t0)|0);
      var $4588$0=HEAP32[(($ld$3237$0)>>2)];
      var $ld$3238$1=(($t0+4)|0);
      var $4588$1=HEAP32[(($ld$3238$1)>>2)];
      var $ld$3239$0=(($t1)|0);
      var $4589$0=HEAP32[(($ld$3239$0)>>2)];
      var $ld$3240$1=(($t1+4)|0);
      var $4589$1=HEAP32[(($ld$3240$1)>>2)];
      var $4590$0 = _i64Add($4588$0,$4588$1,$4589$0,$4589$1); var $4590$1 = tempRet0;
      var $4591=(($S+40)|0);
      var $st$3241$0=(($4591)|0);
      HEAP32[(($st$3241$0)>>2)]=$4590$0;
      var $st$3242$1=(($4591+4)|0);
      HEAP32[(($st$3242$1)>>2)]=$4590$1;
      var $4592=(($S+32)|0);
      var $ld$3243$0=(($4592)|0);
      var $4593$0=HEAP32[(($ld$3243$0)>>2)];
      var $ld$3244$1=(($4592+4)|0);
      var $4593$1=HEAP32[(($ld$3244$1)>>2)];
      var $4594=(($S+8)|0);
      var $ld$3245$0=(($4594)|0);
      var $4595$0=HEAP32[(($ld$3245$0)>>2)];
      var $ld$3246$1=(($4594+4)|0);
      var $4595$1=HEAP32[(($ld$3246$1)>>2)];
      var $4596$0=($4595$0 >>> 14) | ($4595$1 << 18);
      var $4596$1=($4595$1 >>> 14) | (0 << 18);
      var $4597=(($S+8)|0);
      var $ld$3247$0=(($4597)|0);
      var $4598$0=HEAP32[(($ld$3247$0)>>2)];
      var $ld$3248$1=(($4597+4)|0);
      var $4598$1=HEAP32[(($ld$3248$1)>>2)];
      var $4599$0=(0 << 18) | (0 >>> 14);
      var $4599$1=($4598$0 << 18) | (0 >>> 14);
      var $4600$0=$4596$0 | $4599$0;
      var $4600$1=$4596$1 | $4599$1;
      var $4601=(($S+8)|0);
      var $ld$3249$0=(($4601)|0);
      var $4602$0=HEAP32[(($ld$3249$0)>>2)];
      var $ld$3250$1=(($4601+4)|0);
      var $4602$1=HEAP32[(($ld$3250$1)>>2)];
      var $4603$0=($4602$0 >>> 18) | ($4602$1 << 14);
      var $4603$1=($4602$1 >>> 18) | (0 << 14);
      var $4604=(($S+8)|0);
      var $ld$3251$0=(($4604)|0);
      var $4605$0=HEAP32[(($ld$3251$0)>>2)];
      var $ld$3252$1=(($4604+4)|0);
      var $4605$1=HEAP32[(($ld$3252$1)>>2)];
      var $4606$0=(0 << 14) | (0 >>> 18);
      var $4606$1=($4605$0 << 14) | (0 >>> 18);
      var $4607$0=$4603$0 | $4606$0;
      var $4607$1=$4603$1 | $4606$1;
      var $4608$0=$4600$0 ^ $4607$0;
      var $4608$1=$4600$1 ^ $4607$1;
      var $4609=(($S+8)|0);
      var $ld$3253$0=(($4609)|0);
      var $4610$0=HEAP32[(($ld$3253$0)>>2)];
      var $ld$3254$1=(($4609+4)|0);
      var $4610$1=HEAP32[(($ld$3254$1)>>2)];
      var $4611$0=($4610$1 >>> 9) | (0 << 23);
      var $4611$1=(0 >>> 9) | (0 << 23);
      var $4612=(($S+8)|0);
      var $ld$3255$0=(($4612)|0);
      var $4613$0=HEAP32[(($ld$3255$0)>>2)];
      var $ld$3256$1=(($4612+4)|0);
      var $4613$1=HEAP32[(($ld$3256$1)>>2)];
      var $4614$0=($4613$0 << 23) | (0 >>> 9);
      var $4614$1=($4613$1 << 23) | ($4613$0 >>> 9);
      var $4615$0=$4611$0 | $4614$0;
      var $4615$1=$4611$1 | $4614$1;
      var $4616$0=$4608$0 ^ $4615$0;
      var $4616$1=$4608$1 ^ $4615$1;
      var $4617$0 = _i64Add($4593$0,$4593$1,$4616$0,$4616$1); var $4617$1 = tempRet0;
      var $4618=(($S+24)|0);
      var $ld$3257$0=(($4618)|0);
      var $4619$0=HEAP32[(($ld$3257$0)>>2)];
      var $ld$3258$1=(($4618+4)|0);
      var $4619$1=HEAP32[(($ld$3258$1)>>2)];
      var $4620=(($S+8)|0);
      var $ld$3259$0=(($4620)|0);
      var $4621$0=HEAP32[(($ld$3259$0)>>2)];
      var $ld$3260$1=(($4620+4)|0);
      var $4621$1=HEAP32[(($ld$3260$1)>>2)];
      var $4622=(($S+16)|0);
      var $ld$3261$0=(($4622)|0);
      var $4623$0=HEAP32[(($ld$3261$0)>>2)];
      var $ld$3262$1=(($4622+4)|0);
      var $4623$1=HEAP32[(($ld$3262$1)>>2)];
      var $4624=(($S+24)|0);
      var $ld$3263$0=(($4624)|0);
      var $4625$0=HEAP32[(($ld$3263$0)>>2)];
      var $ld$3264$1=(($4624+4)|0);
      var $4625$1=HEAP32[(($ld$3264$1)>>2)];
      var $4626$0=$4623$0 ^ $4625$0;
      var $4626$1=$4623$1 ^ $4625$1;
      var $4627$0=$4621$0 & $4626$0;
      var $4627$1=$4621$1 & $4626$1;
      var $4628$0=$4619$0 ^ $4627$0;
      var $4628$1=$4619$1 ^ $4627$1;
      var $4629$0 = _i64Add($4617$0,$4617$1,$4628$0,$4628$1); var $4629$1 = tempRet0;
      var $$etemp$3265$0=-509917016;
      var $$etemp$3265$1=883997877;
      var $4630$0 = _i64Add($4629$0,$4629$1,$$etemp$3265$0,$$etemp$3265$1); var $4630$1 = tempRet0;
      var $4631=(($W+408)|0);
      var $ld$3266$0=(($4631)|0);
      var $4632$0=HEAP32[(($ld$3266$0)>>2)];
      var $ld$3267$1=(($4631+4)|0);
      var $4632$1=HEAP32[(($ld$3267$1)>>2)];
      var $4633$0 = _i64Add($4630$0,$4630$1,$4632$0,$4632$1); var $4633$1 = tempRet0;
      var $st$3268$0=(($t0)|0);
      HEAP32[(($st$3268$0)>>2)]=$4633$0;
      var $st$3269$1=(($t0+4)|0);
      HEAP32[(($st$3269$1)>>2)]=$4633$1;
      var $4634=(($S+40)|0);
      var $ld$3270$0=(($4634)|0);
      var $4635$0=HEAP32[(($ld$3270$0)>>2)];
      var $ld$3271$1=(($4634+4)|0);
      var $4635$1=HEAP32[(($ld$3271$1)>>2)];
      var $4636$0=($4635$0 >>> 28) | ($4635$1 << 4);
      var $4636$1=($4635$1 >>> 28) | (0 << 4);
      var $4637=(($S+40)|0);
      var $ld$3272$0=(($4637)|0);
      var $4638$0=HEAP32[(($ld$3272$0)>>2)];
      var $ld$3273$1=(($4637+4)|0);
      var $4638$1=HEAP32[(($ld$3273$1)>>2)];
      var $4639$0=(0 << 4) | (0 >>> 28);
      var $4639$1=($4638$0 << 4) | (0 >>> 28);
      var $4640$0=$4636$0 | $4639$0;
      var $4640$1=$4636$1 | $4639$1;
      var $4641=(($S+40)|0);
      var $ld$3274$0=(($4641)|0);
      var $4642$0=HEAP32[(($ld$3274$0)>>2)];
      var $ld$3275$1=(($4641+4)|0);
      var $4642$1=HEAP32[(($ld$3275$1)>>2)];
      var $4643$0=($4642$1 >>> 2) | (0 << 30);
      var $4643$1=(0 >>> 2) | (0 << 30);
      var $4644=(($S+40)|0);
      var $ld$3276$0=(($4644)|0);
      var $4645$0=HEAP32[(($ld$3276$0)>>2)];
      var $ld$3277$1=(($4644+4)|0);
      var $4645$1=HEAP32[(($ld$3277$1)>>2)];
      var $4646$0=($4645$0 << 30) | (0 >>> 2);
      var $4646$1=($4645$1 << 30) | ($4645$0 >>> 2);
      var $4647$0=$4643$0 | $4646$0;
      var $4647$1=$4643$1 | $4646$1;
      var $4648$0=$4640$0 ^ $4647$0;
      var $4648$1=$4640$1 ^ $4647$1;
      var $4649=(($S+40)|0);
      var $ld$3278$0=(($4649)|0);
      var $4650$0=HEAP32[(($ld$3278$0)>>2)];
      var $ld$3279$1=(($4649+4)|0);
      var $4650$1=HEAP32[(($ld$3279$1)>>2)];
      var $4651$0=($4650$1 >>> 7) | (0 << 25);
      var $4651$1=(0 >>> 7) | (0 << 25);
      var $4652=(($S+40)|0);
      var $ld$3280$0=(($4652)|0);
      var $4653$0=HEAP32[(($ld$3280$0)>>2)];
      var $ld$3281$1=(($4652+4)|0);
      var $4653$1=HEAP32[(($ld$3281$1)>>2)];
      var $4654$0=($4653$0 << 25) | (0 >>> 7);
      var $4654$1=($4653$1 << 25) | ($4653$0 >>> 7);
      var $4655$0=$4651$0 | $4654$0;
      var $4655$1=$4651$1 | $4654$1;
      var $4656$0=$4648$0 ^ $4655$0;
      var $4656$1=$4648$1 ^ $4655$1;
      var $4657=(($S+40)|0);
      var $ld$3282$0=(($4657)|0);
      var $4658$0=HEAP32[(($ld$3282$0)>>2)];
      var $ld$3283$1=(($4657+4)|0);
      var $4658$1=HEAP32[(($ld$3283$1)>>2)];
      var $4659=(($S+48)|0);
      var $ld$3284$0=(($4659)|0);
      var $4660$0=HEAP32[(($ld$3284$0)>>2)];
      var $ld$3285$1=(($4659+4)|0);
      var $4660$1=HEAP32[(($ld$3285$1)>>2)];
      var $4661$0=$4658$0 | $4660$0;
      var $4661$1=$4658$1 | $4660$1;
      var $4662=(($S+56)|0);
      var $ld$3286$0=(($4662)|0);
      var $4663$0=HEAP32[(($ld$3286$0)>>2)];
      var $ld$3287$1=(($4662+4)|0);
      var $4663$1=HEAP32[(($ld$3287$1)>>2)];
      var $4664$0=$4661$0 & $4663$0;
      var $4664$1=$4661$1 & $4663$1;
      var $4665=(($S+40)|0);
      var $ld$3288$0=(($4665)|0);
      var $4666$0=HEAP32[(($ld$3288$0)>>2)];
      var $ld$3289$1=(($4665+4)|0);
      var $4666$1=HEAP32[(($ld$3289$1)>>2)];
      var $4667=(($S+48)|0);
      var $ld$3290$0=(($4667)|0);
      var $4668$0=HEAP32[(($ld$3290$0)>>2)];
      var $ld$3291$1=(($4667+4)|0);
      var $4668$1=HEAP32[(($ld$3291$1)>>2)];
      var $4669$0=$4666$0 & $4668$0;
      var $4669$1=$4666$1 & $4668$1;
      var $4670$0=$4664$0 | $4669$0;
      var $4670$1=$4664$1 | $4669$1;
      var $4671$0 = _i64Add($4656$0,$4656$1,$4670$0,$4670$1); var $4671$1 = tempRet0;
      var $st$3292$0=(($t1)|0);
      HEAP32[(($st$3292$0)>>2)]=$4671$0;
      var $st$3293$1=(($t1+4)|0);
      HEAP32[(($st$3293$1)>>2)]=$4671$1;
      var $ld$3294$0=(($t0)|0);
      var $4672$0=HEAP32[(($ld$3294$0)>>2)];
      var $ld$3295$1=(($t0+4)|0);
      var $4672$1=HEAP32[(($ld$3295$1)>>2)];
      var $4673=(($S)|0);
      var $ld$3296$0=(($4673)|0);
      var $4674$0=HEAP32[(($ld$3296$0)>>2)];
      var $ld$3297$1=(($4673+4)|0);
      var $4674$1=HEAP32[(($ld$3297$1)>>2)];
      var $4675$0 = _i64Add($4674$0,$4674$1,$4672$0,$4672$1); var $4675$1 = tempRet0;
      var $st$3298$0=(($4673)|0);
      HEAP32[(($st$3298$0)>>2)]=$4675$0;
      var $st$3299$1=(($4673+4)|0);
      HEAP32[(($st$3299$1)>>2)]=$4675$1;
      var $ld$3300$0=(($t0)|0);
      var $4676$0=HEAP32[(($ld$3300$0)>>2)];
      var $ld$3301$1=(($t0+4)|0);
      var $4676$1=HEAP32[(($ld$3301$1)>>2)];
      var $ld$3302$0=(($t1)|0);
      var $4677$0=HEAP32[(($ld$3302$0)>>2)];
      var $ld$3303$1=(($t1+4)|0);
      var $4677$1=HEAP32[(($ld$3303$1)>>2)];
      var $4678$0 = _i64Add($4676$0,$4676$1,$4677$0,$4677$1); var $4678$1 = tempRet0;
      var $4679=(($S+32)|0);
      var $st$3304$0=(($4679)|0);
      HEAP32[(($st$3304$0)>>2)]=$4678$0;
      var $st$3305$1=(($4679+4)|0);
      HEAP32[(($st$3305$1)>>2)]=$4678$1;
      var $4680=(($S+24)|0);
      var $ld$3306$0=(($4680)|0);
      var $4681$0=HEAP32[(($ld$3306$0)>>2)];
      var $ld$3307$1=(($4680+4)|0);
      var $4681$1=HEAP32[(($ld$3307$1)>>2)];
      var $4682=(($S)|0);
      var $ld$3308$0=(($4682)|0);
      var $4683$0=HEAP32[(($ld$3308$0)>>2)];
      var $ld$3309$1=(($4682+4)|0);
      var $4683$1=HEAP32[(($ld$3309$1)>>2)];
      var $4684$0=($4683$0 >>> 14) | ($4683$1 << 18);
      var $4684$1=($4683$1 >>> 14) | (0 << 18);
      var $4685=(($S)|0);
      var $ld$3310$0=(($4685)|0);
      var $4686$0=HEAP32[(($ld$3310$0)>>2)];
      var $ld$3311$1=(($4685+4)|0);
      var $4686$1=HEAP32[(($ld$3311$1)>>2)];
      var $4687$0=(0 << 18) | (0 >>> 14);
      var $4687$1=($4686$0 << 18) | (0 >>> 14);
      var $4688$0=$4684$0 | $4687$0;
      var $4688$1=$4684$1 | $4687$1;
      var $4689=(($S)|0);
      var $ld$3312$0=(($4689)|0);
      var $4690$0=HEAP32[(($ld$3312$0)>>2)];
      var $ld$3313$1=(($4689+4)|0);
      var $4690$1=HEAP32[(($ld$3313$1)>>2)];
      var $4691$0=($4690$0 >>> 18) | ($4690$1 << 14);
      var $4691$1=($4690$1 >>> 18) | (0 << 14);
      var $4692=(($S)|0);
      var $ld$3314$0=(($4692)|0);
      var $4693$0=HEAP32[(($ld$3314$0)>>2)];
      var $ld$3315$1=(($4692+4)|0);
      var $4693$1=HEAP32[(($ld$3315$1)>>2)];
      var $4694$0=(0 << 14) | (0 >>> 18);
      var $4694$1=($4693$0 << 14) | (0 >>> 18);
      var $4695$0=$4691$0 | $4694$0;
      var $4695$1=$4691$1 | $4694$1;
      var $4696$0=$4688$0 ^ $4695$0;
      var $4696$1=$4688$1 ^ $4695$1;
      var $4697=(($S)|0);
      var $ld$3316$0=(($4697)|0);
      var $4698$0=HEAP32[(($ld$3316$0)>>2)];
      var $ld$3317$1=(($4697+4)|0);
      var $4698$1=HEAP32[(($ld$3317$1)>>2)];
      var $4699$0=($4698$1 >>> 9) | (0 << 23);
      var $4699$1=(0 >>> 9) | (0 << 23);
      var $4700=(($S)|0);
      var $ld$3318$0=(($4700)|0);
      var $4701$0=HEAP32[(($ld$3318$0)>>2)];
      var $ld$3319$1=(($4700+4)|0);
      var $4701$1=HEAP32[(($ld$3319$1)>>2)];
      var $4702$0=($4701$0 << 23) | (0 >>> 9);
      var $4702$1=($4701$1 << 23) | ($4701$0 >>> 9);
      var $4703$0=$4699$0 | $4702$0;
      var $4703$1=$4699$1 | $4702$1;
      var $4704$0=$4696$0 ^ $4703$0;
      var $4704$1=$4696$1 ^ $4703$1;
      var $4705$0 = _i64Add($4681$0,$4681$1,$4704$0,$4704$1); var $4705$1 = tempRet0;
      var $4706=(($S+16)|0);
      var $ld$3320$0=(($4706)|0);
      var $4707$0=HEAP32[(($ld$3320$0)>>2)];
      var $ld$3321$1=(($4706+4)|0);
      var $4707$1=HEAP32[(($ld$3321$1)>>2)];
      var $4708=(($S)|0);
      var $ld$3322$0=(($4708)|0);
      var $4709$0=HEAP32[(($ld$3322$0)>>2)];
      var $ld$3323$1=(($4708+4)|0);
      var $4709$1=HEAP32[(($ld$3323$1)>>2)];
      var $4710=(($S+8)|0);
      var $ld$3324$0=(($4710)|0);
      var $4711$0=HEAP32[(($ld$3324$0)>>2)];
      var $ld$3325$1=(($4710+4)|0);
      var $4711$1=HEAP32[(($ld$3325$1)>>2)];
      var $4712=(($S+16)|0);
      var $ld$3326$0=(($4712)|0);
      var $4713$0=HEAP32[(($ld$3326$0)>>2)];
      var $ld$3327$1=(($4712+4)|0);
      var $4713$1=HEAP32[(($ld$3327$1)>>2)];
      var $4714$0=$4711$0 ^ $4713$0;
      var $4714$1=$4711$1 ^ $4713$1;
      var $4715$0=$4709$0 & $4714$0;
      var $4715$1=$4709$1 & $4714$1;
      var $4716$0=$4707$0 ^ $4715$0;
      var $4716$1=$4707$1 ^ $4715$1;
      var $4717$0 = _i64Add($4705$0,$4705$1,$4716$0,$4716$1); var $4717$1 = tempRet0;
      var $$etemp$3328$0=-976659869;
      var $$etemp$3328$1=958139571;
      var $4718$0 = _i64Add($4717$0,$4717$1,$$etemp$3328$0,$$etemp$3328$1); var $4718$1 = tempRet0;
      var $4719=(($W+416)|0);
      var $ld$3329$0=(($4719)|0);
      var $4720$0=HEAP32[(($ld$3329$0)>>2)];
      var $ld$3330$1=(($4719+4)|0);
      var $4720$1=HEAP32[(($ld$3330$1)>>2)];
      var $4721$0 = _i64Add($4718$0,$4718$1,$4720$0,$4720$1); var $4721$1 = tempRet0;
      var $st$3331$0=(($t0)|0);
      HEAP32[(($st$3331$0)>>2)]=$4721$0;
      var $st$3332$1=(($t0+4)|0);
      HEAP32[(($st$3332$1)>>2)]=$4721$1;
      var $4722=(($S+32)|0);
      var $ld$3333$0=(($4722)|0);
      var $4723$0=HEAP32[(($ld$3333$0)>>2)];
      var $ld$3334$1=(($4722+4)|0);
      var $4723$1=HEAP32[(($ld$3334$1)>>2)];
      var $4724$0=($4723$0 >>> 28) | ($4723$1 << 4);
      var $4724$1=($4723$1 >>> 28) | (0 << 4);
      var $4725=(($S+32)|0);
      var $ld$3335$0=(($4725)|0);
      var $4726$0=HEAP32[(($ld$3335$0)>>2)];
      var $ld$3336$1=(($4725+4)|0);
      var $4726$1=HEAP32[(($ld$3336$1)>>2)];
      var $4727$0=(0 << 4) | (0 >>> 28);
      var $4727$1=($4726$0 << 4) | (0 >>> 28);
      var $4728$0=$4724$0 | $4727$0;
      var $4728$1=$4724$1 | $4727$1;
      var $4729=(($S+32)|0);
      var $ld$3337$0=(($4729)|0);
      var $4730$0=HEAP32[(($ld$3337$0)>>2)];
      var $ld$3338$1=(($4729+4)|0);
      var $4730$1=HEAP32[(($ld$3338$1)>>2)];
      var $4731$0=($4730$1 >>> 2) | (0 << 30);
      var $4731$1=(0 >>> 2) | (0 << 30);
      var $4732=(($S+32)|0);
      var $ld$3339$0=(($4732)|0);
      var $4733$0=HEAP32[(($ld$3339$0)>>2)];
      var $ld$3340$1=(($4732+4)|0);
      var $4733$1=HEAP32[(($ld$3340$1)>>2)];
      var $4734$0=($4733$0 << 30) | (0 >>> 2);
      var $4734$1=($4733$1 << 30) | ($4733$0 >>> 2);
      var $4735$0=$4731$0 | $4734$0;
      var $4735$1=$4731$1 | $4734$1;
      var $4736$0=$4728$0 ^ $4735$0;
      var $4736$1=$4728$1 ^ $4735$1;
      var $4737=(($S+32)|0);
      var $ld$3341$0=(($4737)|0);
      var $4738$0=HEAP32[(($ld$3341$0)>>2)];
      var $ld$3342$1=(($4737+4)|0);
      var $4738$1=HEAP32[(($ld$3342$1)>>2)];
      var $4739$0=($4738$1 >>> 7) | (0 << 25);
      var $4739$1=(0 >>> 7) | (0 << 25);
      var $4740=(($S+32)|0);
      var $ld$3343$0=(($4740)|0);
      var $4741$0=HEAP32[(($ld$3343$0)>>2)];
      var $ld$3344$1=(($4740+4)|0);
      var $4741$1=HEAP32[(($ld$3344$1)>>2)];
      var $4742$0=($4741$0 << 25) | (0 >>> 7);
      var $4742$1=($4741$1 << 25) | ($4741$0 >>> 7);
      var $4743$0=$4739$0 | $4742$0;
      var $4743$1=$4739$1 | $4742$1;
      var $4744$0=$4736$0 ^ $4743$0;
      var $4744$1=$4736$1 ^ $4743$1;
      var $4745=(($S+32)|0);
      var $ld$3345$0=(($4745)|0);
      var $4746$0=HEAP32[(($ld$3345$0)>>2)];
      var $ld$3346$1=(($4745+4)|0);
      var $4746$1=HEAP32[(($ld$3346$1)>>2)];
      var $4747=(($S+40)|0);
      var $ld$3347$0=(($4747)|0);
      var $4748$0=HEAP32[(($ld$3347$0)>>2)];
      var $ld$3348$1=(($4747+4)|0);
      var $4748$1=HEAP32[(($ld$3348$1)>>2)];
      var $4749$0=$4746$0 | $4748$0;
      var $4749$1=$4746$1 | $4748$1;
      var $4750=(($S+48)|0);
      var $ld$3349$0=(($4750)|0);
      var $4751$0=HEAP32[(($ld$3349$0)>>2)];
      var $ld$3350$1=(($4750+4)|0);
      var $4751$1=HEAP32[(($ld$3350$1)>>2)];
      var $4752$0=$4749$0 & $4751$0;
      var $4752$1=$4749$1 & $4751$1;
      var $4753=(($S+32)|0);
      var $ld$3351$0=(($4753)|0);
      var $4754$0=HEAP32[(($ld$3351$0)>>2)];
      var $ld$3352$1=(($4753+4)|0);
      var $4754$1=HEAP32[(($ld$3352$1)>>2)];
      var $4755=(($S+40)|0);
      var $ld$3353$0=(($4755)|0);
      var $4756$0=HEAP32[(($ld$3353$0)>>2)];
      var $ld$3354$1=(($4755+4)|0);
      var $4756$1=HEAP32[(($ld$3354$1)>>2)];
      var $4757$0=$4754$0 & $4756$0;
      var $4757$1=$4754$1 & $4756$1;
      var $4758$0=$4752$0 | $4757$0;
      var $4758$1=$4752$1 | $4757$1;
      var $4759$0 = _i64Add($4744$0,$4744$1,$4758$0,$4758$1); var $4759$1 = tempRet0;
      var $st$3355$0=(($t1)|0);
      HEAP32[(($st$3355$0)>>2)]=$4759$0;
      var $st$3356$1=(($t1+4)|0);
      HEAP32[(($st$3356$1)>>2)]=$4759$1;
      var $ld$3357$0=(($t0)|0);
      var $4760$0=HEAP32[(($ld$3357$0)>>2)];
      var $ld$3358$1=(($t0+4)|0);
      var $4760$1=HEAP32[(($ld$3358$1)>>2)];
      var $4761=(($S+56)|0);
      var $ld$3359$0=(($4761)|0);
      var $4762$0=HEAP32[(($ld$3359$0)>>2)];
      var $ld$3360$1=(($4761+4)|0);
      var $4762$1=HEAP32[(($ld$3360$1)>>2)];
      var $4763$0 = _i64Add($4762$0,$4762$1,$4760$0,$4760$1); var $4763$1 = tempRet0;
      var $st$3361$0=(($4761)|0);
      HEAP32[(($st$3361$0)>>2)]=$4763$0;
      var $st$3362$1=(($4761+4)|0);
      HEAP32[(($st$3362$1)>>2)]=$4763$1;
      var $ld$3363$0=(($t0)|0);
      var $4764$0=HEAP32[(($ld$3363$0)>>2)];
      var $ld$3364$1=(($t0+4)|0);
      var $4764$1=HEAP32[(($ld$3364$1)>>2)];
      var $ld$3365$0=(($t1)|0);
      var $4765$0=HEAP32[(($ld$3365$0)>>2)];
      var $ld$3366$1=(($t1+4)|0);
      var $4765$1=HEAP32[(($ld$3366$1)>>2)];
      var $4766$0 = _i64Add($4764$0,$4764$1,$4765$0,$4765$1); var $4766$1 = tempRet0;
      var $4767=(($S+24)|0);
      var $st$3367$0=(($4767)|0);
      HEAP32[(($st$3367$0)>>2)]=$4766$0;
      var $st$3368$1=(($4767+4)|0);
      HEAP32[(($st$3368$1)>>2)]=$4766$1;
      var $4768=(($S+16)|0);
      var $ld$3369$0=(($4768)|0);
      var $4769$0=HEAP32[(($ld$3369$0)>>2)];
      var $ld$3370$1=(($4768+4)|0);
      var $4769$1=HEAP32[(($ld$3370$1)>>2)];
      var $4770=(($S+56)|0);
      var $ld$3371$0=(($4770)|0);
      var $4771$0=HEAP32[(($ld$3371$0)>>2)];
      var $ld$3372$1=(($4770+4)|0);
      var $4771$1=HEAP32[(($ld$3372$1)>>2)];
      var $4772$0=($4771$0 >>> 14) | ($4771$1 << 18);
      var $4772$1=($4771$1 >>> 14) | (0 << 18);
      var $4773=(($S+56)|0);
      var $ld$3373$0=(($4773)|0);
      var $4774$0=HEAP32[(($ld$3373$0)>>2)];
      var $ld$3374$1=(($4773+4)|0);
      var $4774$1=HEAP32[(($ld$3374$1)>>2)];
      var $4775$0=(0 << 18) | (0 >>> 14);
      var $4775$1=($4774$0 << 18) | (0 >>> 14);
      var $4776$0=$4772$0 | $4775$0;
      var $4776$1=$4772$1 | $4775$1;
      var $4777=(($S+56)|0);
      var $ld$3375$0=(($4777)|0);
      var $4778$0=HEAP32[(($ld$3375$0)>>2)];
      var $ld$3376$1=(($4777+4)|0);
      var $4778$1=HEAP32[(($ld$3376$1)>>2)];
      var $4779$0=($4778$0 >>> 18) | ($4778$1 << 14);
      var $4779$1=($4778$1 >>> 18) | (0 << 14);
      var $4780=(($S+56)|0);
      var $ld$3377$0=(($4780)|0);
      var $4781$0=HEAP32[(($ld$3377$0)>>2)];
      var $ld$3378$1=(($4780+4)|0);
      var $4781$1=HEAP32[(($ld$3378$1)>>2)];
      var $4782$0=(0 << 14) | (0 >>> 18);
      var $4782$1=($4781$0 << 14) | (0 >>> 18);
      var $4783$0=$4779$0 | $4782$0;
      var $4783$1=$4779$1 | $4782$1;
      var $4784$0=$4776$0 ^ $4783$0;
      var $4784$1=$4776$1 ^ $4783$1;
      var $4785=(($S+56)|0);
      var $ld$3379$0=(($4785)|0);
      var $4786$0=HEAP32[(($ld$3379$0)>>2)];
      var $ld$3380$1=(($4785+4)|0);
      var $4786$1=HEAP32[(($ld$3380$1)>>2)];
      var $4787$0=($4786$1 >>> 9) | (0 << 23);
      var $4787$1=(0 >>> 9) | (0 << 23);
      var $4788=(($S+56)|0);
      var $ld$3381$0=(($4788)|0);
      var $4789$0=HEAP32[(($ld$3381$0)>>2)];
      var $ld$3382$1=(($4788+4)|0);
      var $4789$1=HEAP32[(($ld$3382$1)>>2)];
      var $4790$0=($4789$0 << 23) | (0 >>> 9);
      var $4790$1=($4789$1 << 23) | ($4789$0 >>> 9);
      var $4791$0=$4787$0 | $4790$0;
      var $4791$1=$4787$1 | $4790$1;
      var $4792$0=$4784$0 ^ $4791$0;
      var $4792$1=$4784$1 ^ $4791$1;
      var $4793$0 = _i64Add($4769$0,$4769$1,$4792$0,$4792$1); var $4793$1 = tempRet0;
      var $4794=(($S+8)|0);
      var $ld$3383$0=(($4794)|0);
      var $4795$0=HEAP32[(($ld$3383$0)>>2)];
      var $ld$3384$1=(($4794+4)|0);
      var $4795$1=HEAP32[(($ld$3384$1)>>2)];
      var $4796=(($S+56)|0);
      var $ld$3385$0=(($4796)|0);
      var $4797$0=HEAP32[(($ld$3385$0)>>2)];
      var $ld$3386$1=(($4796+4)|0);
      var $4797$1=HEAP32[(($ld$3386$1)>>2)];
      var $4798=(($S)|0);
      var $ld$3387$0=(($4798)|0);
      var $4799$0=HEAP32[(($ld$3387$0)>>2)];
      var $ld$3388$1=(($4798+4)|0);
      var $4799$1=HEAP32[(($ld$3388$1)>>2)];
      var $4800=(($S+8)|0);
      var $ld$3389$0=(($4800)|0);
      var $4801$0=HEAP32[(($ld$3389$0)>>2)];
      var $ld$3390$1=(($4800+4)|0);
      var $4801$1=HEAP32[(($ld$3390$1)>>2)];
      var $4802$0=$4799$0 ^ $4801$0;
      var $4802$1=$4799$1 ^ $4801$1;
      var $4803$0=$4797$0 & $4802$0;
      var $4803$1=$4797$1 & $4802$1;
      var $4804$0=$4795$0 ^ $4803$0;
      var $4804$1=$4795$1 ^ $4803$1;
      var $4805$0 = _i64Add($4793$0,$4793$1,$4804$0,$4804$1); var $4805$1 = tempRet0;
      var $$etemp$3391$0=-482243893;
      var $$etemp$3391$1=1322822218;
      var $4806$0 = _i64Add($4805$0,$4805$1,$$etemp$3391$0,$$etemp$3391$1); var $4806$1 = tempRet0;
      var $4807=(($W+424)|0);
      var $ld$3392$0=(($4807)|0);
      var $4808$0=HEAP32[(($ld$3392$0)>>2)];
      var $ld$3393$1=(($4807+4)|0);
      var $4808$1=HEAP32[(($ld$3393$1)>>2)];
      var $4809$0 = _i64Add($4806$0,$4806$1,$4808$0,$4808$1); var $4809$1 = tempRet0;
      var $st$3394$0=(($t0)|0);
      HEAP32[(($st$3394$0)>>2)]=$4809$0;
      var $st$3395$1=(($t0+4)|0);
      HEAP32[(($st$3395$1)>>2)]=$4809$1;
      var $4810=(($S+24)|0);
      var $ld$3396$0=(($4810)|0);
      var $4811$0=HEAP32[(($ld$3396$0)>>2)];
      var $ld$3397$1=(($4810+4)|0);
      var $4811$1=HEAP32[(($ld$3397$1)>>2)];
      var $4812$0=($4811$0 >>> 28) | ($4811$1 << 4);
      var $4812$1=($4811$1 >>> 28) | (0 << 4);
      var $4813=(($S+24)|0);
      var $ld$3398$0=(($4813)|0);
      var $4814$0=HEAP32[(($ld$3398$0)>>2)];
      var $ld$3399$1=(($4813+4)|0);
      var $4814$1=HEAP32[(($ld$3399$1)>>2)];
      var $4815$0=(0 << 4) | (0 >>> 28);
      var $4815$1=($4814$0 << 4) | (0 >>> 28);
      var $4816$0=$4812$0 | $4815$0;
      var $4816$1=$4812$1 | $4815$1;
      var $4817=(($S+24)|0);
      var $ld$3400$0=(($4817)|0);
      var $4818$0=HEAP32[(($ld$3400$0)>>2)];
      var $ld$3401$1=(($4817+4)|0);
      var $4818$1=HEAP32[(($ld$3401$1)>>2)];
      var $4819$0=($4818$1 >>> 2) | (0 << 30);
      var $4819$1=(0 >>> 2) | (0 << 30);
      var $4820=(($S+24)|0);
      var $ld$3402$0=(($4820)|0);
      var $4821$0=HEAP32[(($ld$3402$0)>>2)];
      var $ld$3403$1=(($4820+4)|0);
      var $4821$1=HEAP32[(($ld$3403$1)>>2)];
      var $4822$0=($4821$0 << 30) | (0 >>> 2);
      var $4822$1=($4821$1 << 30) | ($4821$0 >>> 2);
      var $4823$0=$4819$0 | $4822$0;
      var $4823$1=$4819$1 | $4822$1;
      var $4824$0=$4816$0 ^ $4823$0;
      var $4824$1=$4816$1 ^ $4823$1;
      var $4825=(($S+24)|0);
      var $ld$3404$0=(($4825)|0);
      var $4826$0=HEAP32[(($ld$3404$0)>>2)];
      var $ld$3405$1=(($4825+4)|0);
      var $4826$1=HEAP32[(($ld$3405$1)>>2)];
      var $4827$0=($4826$1 >>> 7) | (0 << 25);
      var $4827$1=(0 >>> 7) | (0 << 25);
      var $4828=(($S+24)|0);
      var $ld$3406$0=(($4828)|0);
      var $4829$0=HEAP32[(($ld$3406$0)>>2)];
      var $ld$3407$1=(($4828+4)|0);
      var $4829$1=HEAP32[(($ld$3407$1)>>2)];
      var $4830$0=($4829$0 << 25) | (0 >>> 7);
      var $4830$1=($4829$1 << 25) | ($4829$0 >>> 7);
      var $4831$0=$4827$0 | $4830$0;
      var $4831$1=$4827$1 | $4830$1;
      var $4832$0=$4824$0 ^ $4831$0;
      var $4832$1=$4824$1 ^ $4831$1;
      var $4833=(($S+24)|0);
      var $ld$3408$0=(($4833)|0);
      var $4834$0=HEAP32[(($ld$3408$0)>>2)];
      var $ld$3409$1=(($4833+4)|0);
      var $4834$1=HEAP32[(($ld$3409$1)>>2)];
      var $4835=(($S+32)|0);
      var $ld$3410$0=(($4835)|0);
      var $4836$0=HEAP32[(($ld$3410$0)>>2)];
      var $ld$3411$1=(($4835+4)|0);
      var $4836$1=HEAP32[(($ld$3411$1)>>2)];
      var $4837$0=$4834$0 | $4836$0;
      var $4837$1=$4834$1 | $4836$1;
      var $4838=(($S+40)|0);
      var $ld$3412$0=(($4838)|0);
      var $4839$0=HEAP32[(($ld$3412$0)>>2)];
      var $ld$3413$1=(($4838+4)|0);
      var $4839$1=HEAP32[(($ld$3413$1)>>2)];
      var $4840$0=$4837$0 & $4839$0;
      var $4840$1=$4837$1 & $4839$1;
      var $4841=(($S+24)|0);
      var $ld$3414$0=(($4841)|0);
      var $4842$0=HEAP32[(($ld$3414$0)>>2)];
      var $ld$3415$1=(($4841+4)|0);
      var $4842$1=HEAP32[(($ld$3415$1)>>2)];
      var $4843=(($S+32)|0);
      var $ld$3416$0=(($4843)|0);
      var $4844$0=HEAP32[(($ld$3416$0)>>2)];
      var $ld$3417$1=(($4843+4)|0);
      var $4844$1=HEAP32[(($ld$3417$1)>>2)];
      var $4845$0=$4842$0 & $4844$0;
      var $4845$1=$4842$1 & $4844$1;
      var $4846$0=$4840$0 | $4845$0;
      var $4846$1=$4840$1 | $4845$1;
      var $4847$0 = _i64Add($4832$0,$4832$1,$4846$0,$4846$1); var $4847$1 = tempRet0;
      var $st$3418$0=(($t1)|0);
      HEAP32[(($st$3418$0)>>2)]=$4847$0;
      var $st$3419$1=(($t1+4)|0);
      HEAP32[(($st$3419$1)>>2)]=$4847$1;
      var $ld$3420$0=(($t0)|0);
      var $4848$0=HEAP32[(($ld$3420$0)>>2)];
      var $ld$3421$1=(($t0+4)|0);
      var $4848$1=HEAP32[(($ld$3421$1)>>2)];
      var $4849=(($S+48)|0);
      var $ld$3422$0=(($4849)|0);
      var $4850$0=HEAP32[(($ld$3422$0)>>2)];
      var $ld$3423$1=(($4849+4)|0);
      var $4850$1=HEAP32[(($ld$3423$1)>>2)];
      var $4851$0 = _i64Add($4850$0,$4850$1,$4848$0,$4848$1); var $4851$1 = tempRet0;
      var $st$3424$0=(($4849)|0);
      HEAP32[(($st$3424$0)>>2)]=$4851$0;
      var $st$3425$1=(($4849+4)|0);
      HEAP32[(($st$3425$1)>>2)]=$4851$1;
      var $ld$3426$0=(($t0)|0);
      var $4852$0=HEAP32[(($ld$3426$0)>>2)];
      var $ld$3427$1=(($t0+4)|0);
      var $4852$1=HEAP32[(($ld$3427$1)>>2)];
      var $ld$3428$0=(($t1)|0);
      var $4853$0=HEAP32[(($ld$3428$0)>>2)];
      var $ld$3429$1=(($t1+4)|0);
      var $4853$1=HEAP32[(($ld$3429$1)>>2)];
      var $4854$0 = _i64Add($4852$0,$4852$1,$4853$0,$4853$1); var $4854$1 = tempRet0;
      var $4855=(($S+16)|0);
      var $st$3430$0=(($4855)|0);
      HEAP32[(($st$3430$0)>>2)]=$4854$0;
      var $st$3431$1=(($4855+4)|0);
      HEAP32[(($st$3431$1)>>2)]=$4854$1;
      var $4856=(($S+8)|0);
      var $ld$3432$0=(($4856)|0);
      var $4857$0=HEAP32[(($ld$3432$0)>>2)];
      var $ld$3433$1=(($4856+4)|0);
      var $4857$1=HEAP32[(($ld$3433$1)>>2)];
      var $4858=(($S+48)|0);
      var $ld$3434$0=(($4858)|0);
      var $4859$0=HEAP32[(($ld$3434$0)>>2)];
      var $ld$3435$1=(($4858+4)|0);
      var $4859$1=HEAP32[(($ld$3435$1)>>2)];
      var $4860$0=($4859$0 >>> 14) | ($4859$1 << 18);
      var $4860$1=($4859$1 >>> 14) | (0 << 18);
      var $4861=(($S+48)|0);
      var $ld$3436$0=(($4861)|0);
      var $4862$0=HEAP32[(($ld$3436$0)>>2)];
      var $ld$3437$1=(($4861+4)|0);
      var $4862$1=HEAP32[(($ld$3437$1)>>2)];
      var $4863$0=(0 << 18) | (0 >>> 14);
      var $4863$1=($4862$0 << 18) | (0 >>> 14);
      var $4864$0=$4860$0 | $4863$0;
      var $4864$1=$4860$1 | $4863$1;
      var $4865=(($S+48)|0);
      var $ld$3438$0=(($4865)|0);
      var $4866$0=HEAP32[(($ld$3438$0)>>2)];
      var $ld$3439$1=(($4865+4)|0);
      var $4866$1=HEAP32[(($ld$3439$1)>>2)];
      var $4867$0=($4866$0 >>> 18) | ($4866$1 << 14);
      var $4867$1=($4866$1 >>> 18) | (0 << 14);
      var $4868=(($S+48)|0);
      var $ld$3440$0=(($4868)|0);
      var $4869$0=HEAP32[(($ld$3440$0)>>2)];
      var $ld$3441$1=(($4868+4)|0);
      var $4869$1=HEAP32[(($ld$3441$1)>>2)];
      var $4870$0=(0 << 14) | (0 >>> 18);
      var $4870$1=($4869$0 << 14) | (0 >>> 18);
      var $4871$0=$4867$0 | $4870$0;
      var $4871$1=$4867$1 | $4870$1;
      var $4872$0=$4864$0 ^ $4871$0;
      var $4872$1=$4864$1 ^ $4871$1;
      var $4873=(($S+48)|0);
      var $ld$3442$0=(($4873)|0);
      var $4874$0=HEAP32[(($ld$3442$0)>>2)];
      var $ld$3443$1=(($4873+4)|0);
      var $4874$1=HEAP32[(($ld$3443$1)>>2)];
      var $4875$0=($4874$1 >>> 9) | (0 << 23);
      var $4875$1=(0 >>> 9) | (0 << 23);
      var $4876=(($S+48)|0);
      var $ld$3444$0=(($4876)|0);
      var $4877$0=HEAP32[(($ld$3444$0)>>2)];
      var $ld$3445$1=(($4876+4)|0);
      var $4877$1=HEAP32[(($ld$3445$1)>>2)];
      var $4878$0=($4877$0 << 23) | (0 >>> 9);
      var $4878$1=($4877$1 << 23) | ($4877$0 >>> 9);
      var $4879$0=$4875$0 | $4878$0;
      var $4879$1=$4875$1 | $4878$1;
      var $4880$0=$4872$0 ^ $4879$0;
      var $4880$1=$4872$1 ^ $4879$1;
      var $4881$0 = _i64Add($4857$0,$4857$1,$4880$0,$4880$1); var $4881$1 = tempRet0;
      var $4882=(($S)|0);
      var $ld$3446$0=(($4882)|0);
      var $4883$0=HEAP32[(($ld$3446$0)>>2)];
      var $ld$3447$1=(($4882+4)|0);
      var $4883$1=HEAP32[(($ld$3447$1)>>2)];
      var $4884=(($S+48)|0);
      var $ld$3448$0=(($4884)|0);
      var $4885$0=HEAP32[(($ld$3448$0)>>2)];
      var $ld$3449$1=(($4884+4)|0);
      var $4885$1=HEAP32[(($ld$3449$1)>>2)];
      var $4886=(($S+56)|0);
      var $ld$3450$0=(($4886)|0);
      var $4887$0=HEAP32[(($ld$3450$0)>>2)];
      var $ld$3451$1=(($4886+4)|0);
      var $4887$1=HEAP32[(($ld$3451$1)>>2)];
      var $4888=(($S)|0);
      var $ld$3452$0=(($4888)|0);
      var $4889$0=HEAP32[(($ld$3452$0)>>2)];
      var $ld$3453$1=(($4888+4)|0);
      var $4889$1=HEAP32[(($ld$3453$1)>>2)];
      var $4890$0=$4887$0 ^ $4889$0;
      var $4890$1=$4887$1 ^ $4889$1;
      var $4891$0=$4885$0 & $4890$0;
      var $4891$1=$4885$1 & $4890$1;
      var $4892$0=$4883$0 ^ $4891$0;
      var $4892$1=$4883$1 ^ $4891$1;
      var $4893$0 = _i64Add($4881$0,$4881$1,$4892$0,$4892$1); var $4893$1 = tempRet0;
      var $$etemp$3454$0=2003034995;
      var $$etemp$3454$1=1537002063;
      var $4894$0 = _i64Add($4893$0,$4893$1,$$etemp$3454$0,$$etemp$3454$1); var $4894$1 = tempRet0;
      var $4895=(($W+432)|0);
      var $ld$3455$0=(($4895)|0);
      var $4896$0=HEAP32[(($ld$3455$0)>>2)];
      var $ld$3456$1=(($4895+4)|0);
      var $4896$1=HEAP32[(($ld$3456$1)>>2)];
      var $4897$0 = _i64Add($4894$0,$4894$1,$4896$0,$4896$1); var $4897$1 = tempRet0;
      var $st$3457$0=(($t0)|0);
      HEAP32[(($st$3457$0)>>2)]=$4897$0;
      var $st$3458$1=(($t0+4)|0);
      HEAP32[(($st$3458$1)>>2)]=$4897$1;
      var $4898=(($S+16)|0);
      var $ld$3459$0=(($4898)|0);
      var $4899$0=HEAP32[(($ld$3459$0)>>2)];
      var $ld$3460$1=(($4898+4)|0);
      var $4899$1=HEAP32[(($ld$3460$1)>>2)];
      var $4900$0=($4899$0 >>> 28) | ($4899$1 << 4);
      var $4900$1=($4899$1 >>> 28) | (0 << 4);
      var $4901=(($S+16)|0);
      var $ld$3461$0=(($4901)|0);
      var $4902$0=HEAP32[(($ld$3461$0)>>2)];
      var $ld$3462$1=(($4901+4)|0);
      var $4902$1=HEAP32[(($ld$3462$1)>>2)];
      var $4903$0=(0 << 4) | (0 >>> 28);
      var $4903$1=($4902$0 << 4) | (0 >>> 28);
      var $4904$0=$4900$0 | $4903$0;
      var $4904$1=$4900$1 | $4903$1;
      var $4905=(($S+16)|0);
      var $ld$3463$0=(($4905)|0);
      var $4906$0=HEAP32[(($ld$3463$0)>>2)];
      var $ld$3464$1=(($4905+4)|0);
      var $4906$1=HEAP32[(($ld$3464$1)>>2)];
      var $4907$0=($4906$1 >>> 2) | (0 << 30);
      var $4907$1=(0 >>> 2) | (0 << 30);
      var $4908=(($S+16)|0);
      var $ld$3465$0=(($4908)|0);
      var $4909$0=HEAP32[(($ld$3465$0)>>2)];
      var $ld$3466$1=(($4908+4)|0);
      var $4909$1=HEAP32[(($ld$3466$1)>>2)];
      var $4910$0=($4909$0 << 30) | (0 >>> 2);
      var $4910$1=($4909$1 << 30) | ($4909$0 >>> 2);
      var $4911$0=$4907$0 | $4910$0;
      var $4911$1=$4907$1 | $4910$1;
      var $4912$0=$4904$0 ^ $4911$0;
      var $4912$1=$4904$1 ^ $4911$1;
      var $4913=(($S+16)|0);
      var $ld$3467$0=(($4913)|0);
      var $4914$0=HEAP32[(($ld$3467$0)>>2)];
      var $ld$3468$1=(($4913+4)|0);
      var $4914$1=HEAP32[(($ld$3468$1)>>2)];
      var $4915$0=($4914$1 >>> 7) | (0 << 25);
      var $4915$1=(0 >>> 7) | (0 << 25);
      var $4916=(($S+16)|0);
      var $ld$3469$0=(($4916)|0);
      var $4917$0=HEAP32[(($ld$3469$0)>>2)];
      var $ld$3470$1=(($4916+4)|0);
      var $4917$1=HEAP32[(($ld$3470$1)>>2)];
      var $4918$0=($4917$0 << 25) | (0 >>> 7);
      var $4918$1=($4917$1 << 25) | ($4917$0 >>> 7);
      var $4919$0=$4915$0 | $4918$0;
      var $4919$1=$4915$1 | $4918$1;
      var $4920$0=$4912$0 ^ $4919$0;
      var $4920$1=$4912$1 ^ $4919$1;
      var $4921=(($S+16)|0);
      var $ld$3471$0=(($4921)|0);
      var $4922$0=HEAP32[(($ld$3471$0)>>2)];
      var $ld$3472$1=(($4921+4)|0);
      var $4922$1=HEAP32[(($ld$3472$1)>>2)];
      var $4923=(($S+24)|0);
      var $ld$3473$0=(($4923)|0);
      var $4924$0=HEAP32[(($ld$3473$0)>>2)];
      var $ld$3474$1=(($4923+4)|0);
      var $4924$1=HEAP32[(($ld$3474$1)>>2)];
      var $4925$0=$4922$0 | $4924$0;
      var $4925$1=$4922$1 | $4924$1;
      var $4926=(($S+32)|0);
      var $ld$3475$0=(($4926)|0);
      var $4927$0=HEAP32[(($ld$3475$0)>>2)];
      var $ld$3476$1=(($4926+4)|0);
      var $4927$1=HEAP32[(($ld$3476$1)>>2)];
      var $4928$0=$4925$0 & $4927$0;
      var $4928$1=$4925$1 & $4927$1;
      var $4929=(($S+16)|0);
      var $ld$3477$0=(($4929)|0);
      var $4930$0=HEAP32[(($ld$3477$0)>>2)];
      var $ld$3478$1=(($4929+4)|0);
      var $4930$1=HEAP32[(($ld$3478$1)>>2)];
      var $4931=(($S+24)|0);
      var $ld$3479$0=(($4931)|0);
      var $4932$0=HEAP32[(($ld$3479$0)>>2)];
      var $ld$3480$1=(($4931+4)|0);
      var $4932$1=HEAP32[(($ld$3480$1)>>2)];
      var $4933$0=$4930$0 & $4932$0;
      var $4933$1=$4930$1 & $4932$1;
      var $4934$0=$4928$0 | $4933$0;
      var $4934$1=$4928$1 | $4933$1;
      var $4935$0 = _i64Add($4920$0,$4920$1,$4934$0,$4934$1); var $4935$1 = tempRet0;
      var $st$3481$0=(($t1)|0);
      HEAP32[(($st$3481$0)>>2)]=$4935$0;
      var $st$3482$1=(($t1+4)|0);
      HEAP32[(($st$3482$1)>>2)]=$4935$1;
      var $ld$3483$0=(($t0)|0);
      var $4936$0=HEAP32[(($ld$3483$0)>>2)];
      var $ld$3484$1=(($t0+4)|0);
      var $4936$1=HEAP32[(($ld$3484$1)>>2)];
      var $4937=(($S+40)|0);
      var $ld$3485$0=(($4937)|0);
      var $4938$0=HEAP32[(($ld$3485$0)>>2)];
      var $ld$3486$1=(($4937+4)|0);
      var $4938$1=HEAP32[(($ld$3486$1)>>2)];
      var $4939$0 = _i64Add($4938$0,$4938$1,$4936$0,$4936$1); var $4939$1 = tempRet0;
      var $st$3487$0=(($4937)|0);
      HEAP32[(($st$3487$0)>>2)]=$4939$0;
      var $st$3488$1=(($4937+4)|0);
      HEAP32[(($st$3488$1)>>2)]=$4939$1;
      var $ld$3489$0=(($t0)|0);
      var $4940$0=HEAP32[(($ld$3489$0)>>2)];
      var $ld$3490$1=(($t0+4)|0);
      var $4940$1=HEAP32[(($ld$3490$1)>>2)];
      var $ld$3491$0=(($t1)|0);
      var $4941$0=HEAP32[(($ld$3491$0)>>2)];
      var $ld$3492$1=(($t1+4)|0);
      var $4941$1=HEAP32[(($ld$3492$1)>>2)];
      var $4942$0 = _i64Add($4940$0,$4940$1,$4941$0,$4941$1); var $4942$1 = tempRet0;
      var $4943=(($S+8)|0);
      var $st$3493$0=(($4943)|0);
      HEAP32[(($st$3493$0)>>2)]=$4942$0;
      var $st$3494$1=(($4943+4)|0);
      HEAP32[(($st$3494$1)>>2)]=$4942$1;
      var $4944=(($S)|0);
      var $ld$3495$0=(($4944)|0);
      var $4945$0=HEAP32[(($ld$3495$0)>>2)];
      var $ld$3496$1=(($4944+4)|0);
      var $4945$1=HEAP32[(($ld$3496$1)>>2)];
      var $4946=(($S+40)|0);
      var $ld$3497$0=(($4946)|0);
      var $4947$0=HEAP32[(($ld$3497$0)>>2)];
      var $ld$3498$1=(($4946+4)|0);
      var $4947$1=HEAP32[(($ld$3498$1)>>2)];
      var $4948$0=($4947$0 >>> 14) | ($4947$1 << 18);
      var $4948$1=($4947$1 >>> 14) | (0 << 18);
      var $4949=(($S+40)|0);
      var $ld$3499$0=(($4949)|0);
      var $4950$0=HEAP32[(($ld$3499$0)>>2)];
      var $ld$3500$1=(($4949+4)|0);
      var $4950$1=HEAP32[(($ld$3500$1)>>2)];
      var $4951$0=(0 << 18) | (0 >>> 14);
      var $4951$1=($4950$0 << 18) | (0 >>> 14);
      var $4952$0=$4948$0 | $4951$0;
      var $4952$1=$4948$1 | $4951$1;
      var $4953=(($S+40)|0);
      var $ld$3501$0=(($4953)|0);
      var $4954$0=HEAP32[(($ld$3501$0)>>2)];
      var $ld$3502$1=(($4953+4)|0);
      var $4954$1=HEAP32[(($ld$3502$1)>>2)];
      var $4955$0=($4954$0 >>> 18) | ($4954$1 << 14);
      var $4955$1=($4954$1 >>> 18) | (0 << 14);
      var $4956=(($S+40)|0);
      var $ld$3503$0=(($4956)|0);
      var $4957$0=HEAP32[(($ld$3503$0)>>2)];
      var $ld$3504$1=(($4956+4)|0);
      var $4957$1=HEAP32[(($ld$3504$1)>>2)];
      var $4958$0=(0 << 14) | (0 >>> 18);
      var $4958$1=($4957$0 << 14) | (0 >>> 18);
      var $4959$0=$4955$0 | $4958$0;
      var $4959$1=$4955$1 | $4958$1;
      var $4960$0=$4952$0 ^ $4959$0;
      var $4960$1=$4952$1 ^ $4959$1;
      var $4961=(($S+40)|0);
      var $ld$3505$0=(($4961)|0);
      var $4962$0=HEAP32[(($ld$3505$0)>>2)];
      var $ld$3506$1=(($4961+4)|0);
      var $4962$1=HEAP32[(($ld$3506$1)>>2)];
      var $4963$0=($4962$1 >>> 9) | (0 << 23);
      var $4963$1=(0 >>> 9) | (0 << 23);
      var $4964=(($S+40)|0);
      var $ld$3507$0=(($4964)|0);
      var $4965$0=HEAP32[(($ld$3507$0)>>2)];
      var $ld$3508$1=(($4964+4)|0);
      var $4965$1=HEAP32[(($ld$3508$1)>>2)];
      var $4966$0=($4965$0 << 23) | (0 >>> 9);
      var $4966$1=($4965$1 << 23) | ($4965$0 >>> 9);
      var $4967$0=$4963$0 | $4966$0;
      var $4967$1=$4963$1 | $4966$1;
      var $4968$0=$4960$0 ^ $4967$0;
      var $4968$1=$4960$1 ^ $4967$1;
      var $4969$0 = _i64Add($4945$0,$4945$1,$4968$0,$4968$1); var $4969$1 = tempRet0;
      var $4970=(($S+56)|0);
      var $ld$3509$0=(($4970)|0);
      var $4971$0=HEAP32[(($ld$3509$0)>>2)];
      var $ld$3510$1=(($4970+4)|0);
      var $4971$1=HEAP32[(($ld$3510$1)>>2)];
      var $4972=(($S+40)|0);
      var $ld$3511$0=(($4972)|0);
      var $4973$0=HEAP32[(($ld$3511$0)>>2)];
      var $ld$3512$1=(($4972+4)|0);
      var $4973$1=HEAP32[(($ld$3512$1)>>2)];
      var $4974=(($S+48)|0);
      var $ld$3513$0=(($4974)|0);
      var $4975$0=HEAP32[(($ld$3513$0)>>2)];
      var $ld$3514$1=(($4974+4)|0);
      var $4975$1=HEAP32[(($ld$3514$1)>>2)];
      var $4976=(($S+56)|0);
      var $ld$3515$0=(($4976)|0);
      var $4977$0=HEAP32[(($ld$3515$0)>>2)];
      var $ld$3516$1=(($4976+4)|0);
      var $4977$1=HEAP32[(($ld$3516$1)>>2)];
      var $4978$0=$4975$0 ^ $4977$0;
      var $4978$1=$4975$1 ^ $4977$1;
      var $4979$0=$4973$0 & $4978$0;
      var $4979$1=$4973$1 & $4978$1;
      var $4980$0=$4971$0 ^ $4979$0;
      var $4980$1=$4971$1 ^ $4979$1;
      var $4981$0 = _i64Add($4969$0,$4969$1,$4980$0,$4980$1); var $4981$1 = tempRet0;
      var $$etemp$3517$0=-692930397;
      var $$etemp$3517$1=1747873779;
      var $4982$0 = _i64Add($4981$0,$4981$1,$$etemp$3517$0,$$etemp$3517$1); var $4982$1 = tempRet0;
      var $4983=(($W+440)|0);
      var $ld$3518$0=(($4983)|0);
      var $4984$0=HEAP32[(($ld$3518$0)>>2)];
      var $ld$3519$1=(($4983+4)|0);
      var $4984$1=HEAP32[(($ld$3519$1)>>2)];
      var $4985$0 = _i64Add($4982$0,$4982$1,$4984$0,$4984$1); var $4985$1 = tempRet0;
      var $st$3520$0=(($t0)|0);
      HEAP32[(($st$3520$0)>>2)]=$4985$0;
      var $st$3521$1=(($t0+4)|0);
      HEAP32[(($st$3521$1)>>2)]=$4985$1;
      var $4986=(($S+8)|0);
      var $ld$3522$0=(($4986)|0);
      var $4987$0=HEAP32[(($ld$3522$0)>>2)];
      var $ld$3523$1=(($4986+4)|0);
      var $4987$1=HEAP32[(($ld$3523$1)>>2)];
      var $4988$0=($4987$0 >>> 28) | ($4987$1 << 4);
      var $4988$1=($4987$1 >>> 28) | (0 << 4);
      var $4989=(($S+8)|0);
      var $ld$3524$0=(($4989)|0);
      var $4990$0=HEAP32[(($ld$3524$0)>>2)];
      var $ld$3525$1=(($4989+4)|0);
      var $4990$1=HEAP32[(($ld$3525$1)>>2)];
      var $4991$0=(0 << 4) | (0 >>> 28);
      var $4991$1=($4990$0 << 4) | (0 >>> 28);
      var $4992$0=$4988$0 | $4991$0;
      var $4992$1=$4988$1 | $4991$1;
      var $4993=(($S+8)|0);
      var $ld$3526$0=(($4993)|0);
      var $4994$0=HEAP32[(($ld$3526$0)>>2)];
      var $ld$3527$1=(($4993+4)|0);
      var $4994$1=HEAP32[(($ld$3527$1)>>2)];
      var $4995$0=($4994$1 >>> 2) | (0 << 30);
      var $4995$1=(0 >>> 2) | (0 << 30);
      var $4996=(($S+8)|0);
      var $ld$3528$0=(($4996)|0);
      var $4997$0=HEAP32[(($ld$3528$0)>>2)];
      var $ld$3529$1=(($4996+4)|0);
      var $4997$1=HEAP32[(($ld$3529$1)>>2)];
      var $4998$0=($4997$0 << 30) | (0 >>> 2);
      var $4998$1=($4997$1 << 30) | ($4997$0 >>> 2);
      var $4999$0=$4995$0 | $4998$0;
      var $4999$1=$4995$1 | $4998$1;
      var $5000$0=$4992$0 ^ $4999$0;
      var $5000$1=$4992$1 ^ $4999$1;
      var $5001=(($S+8)|0);
      var $ld$3530$0=(($5001)|0);
      var $5002$0=HEAP32[(($ld$3530$0)>>2)];
      var $ld$3531$1=(($5001+4)|0);
      var $5002$1=HEAP32[(($ld$3531$1)>>2)];
      var $5003$0=($5002$1 >>> 7) | (0 << 25);
      var $5003$1=(0 >>> 7) | (0 << 25);
      var $5004=(($S+8)|0);
      var $ld$3532$0=(($5004)|0);
      var $5005$0=HEAP32[(($ld$3532$0)>>2)];
      var $ld$3533$1=(($5004+4)|0);
      var $5005$1=HEAP32[(($ld$3533$1)>>2)];
      var $5006$0=($5005$0 << 25) | (0 >>> 7);
      var $5006$1=($5005$1 << 25) | ($5005$0 >>> 7);
      var $5007$0=$5003$0 | $5006$0;
      var $5007$1=$5003$1 | $5006$1;
      var $5008$0=$5000$0 ^ $5007$0;
      var $5008$1=$5000$1 ^ $5007$1;
      var $5009=(($S+8)|0);
      var $ld$3534$0=(($5009)|0);
      var $5010$0=HEAP32[(($ld$3534$0)>>2)];
      var $ld$3535$1=(($5009+4)|0);
      var $5010$1=HEAP32[(($ld$3535$1)>>2)];
      var $5011=(($S+16)|0);
      var $ld$3536$0=(($5011)|0);
      var $5012$0=HEAP32[(($ld$3536$0)>>2)];
      var $ld$3537$1=(($5011+4)|0);
      var $5012$1=HEAP32[(($ld$3537$1)>>2)];
      var $5013$0=$5010$0 | $5012$0;
      var $5013$1=$5010$1 | $5012$1;
      var $5014=(($S+24)|0);
      var $ld$3538$0=(($5014)|0);
      var $5015$0=HEAP32[(($ld$3538$0)>>2)];
      var $ld$3539$1=(($5014+4)|0);
      var $5015$1=HEAP32[(($ld$3539$1)>>2)];
      var $5016$0=$5013$0 & $5015$0;
      var $5016$1=$5013$1 & $5015$1;
      var $5017=(($S+8)|0);
      var $ld$3540$0=(($5017)|0);
      var $5018$0=HEAP32[(($ld$3540$0)>>2)];
      var $ld$3541$1=(($5017+4)|0);
      var $5018$1=HEAP32[(($ld$3541$1)>>2)];
      var $5019=(($S+16)|0);
      var $ld$3542$0=(($5019)|0);
      var $5020$0=HEAP32[(($ld$3542$0)>>2)];
      var $ld$3543$1=(($5019+4)|0);
      var $5020$1=HEAP32[(($ld$3543$1)>>2)];
      var $5021$0=$5018$0 & $5020$0;
      var $5021$1=$5018$1 & $5020$1;
      var $5022$0=$5016$0 | $5021$0;
      var $5022$1=$5016$1 | $5021$1;
      var $5023$0 = _i64Add($5008$0,$5008$1,$5022$0,$5022$1); var $5023$1 = tempRet0;
      var $st$3544$0=(($t1)|0);
      HEAP32[(($st$3544$0)>>2)]=$5023$0;
      var $st$3545$1=(($t1+4)|0);
      HEAP32[(($st$3545$1)>>2)]=$5023$1;
      var $ld$3546$0=(($t0)|0);
      var $5024$0=HEAP32[(($ld$3546$0)>>2)];
      var $ld$3547$1=(($t0+4)|0);
      var $5024$1=HEAP32[(($ld$3547$1)>>2)];
      var $5025=(($S+32)|0);
      var $ld$3548$0=(($5025)|0);
      var $5026$0=HEAP32[(($ld$3548$0)>>2)];
      var $ld$3549$1=(($5025+4)|0);
      var $5026$1=HEAP32[(($ld$3549$1)>>2)];
      var $5027$0 = _i64Add($5026$0,$5026$1,$5024$0,$5024$1); var $5027$1 = tempRet0;
      var $st$3550$0=(($5025)|0);
      HEAP32[(($st$3550$0)>>2)]=$5027$0;
      var $st$3551$1=(($5025+4)|0);
      HEAP32[(($st$3551$1)>>2)]=$5027$1;
      var $ld$3552$0=(($t0)|0);
      var $5028$0=HEAP32[(($ld$3552$0)>>2)];
      var $ld$3553$1=(($t0+4)|0);
      var $5028$1=HEAP32[(($ld$3553$1)>>2)];
      var $ld$3554$0=(($t1)|0);
      var $5029$0=HEAP32[(($ld$3554$0)>>2)];
      var $ld$3555$1=(($t1+4)|0);
      var $5029$1=HEAP32[(($ld$3555$1)>>2)];
      var $5030$0 = _i64Add($5028$0,$5028$1,$5029$0,$5029$1); var $5030$1 = tempRet0;
      var $5031=(($S)|0);
      var $st$3556$0=(($5031)|0);
      HEAP32[(($st$3556$0)>>2)]=$5030$0;
      var $st$3557$1=(($5031+4)|0);
      HEAP32[(($st$3557$1)>>2)]=$5030$1;
      var $5032=(($S+56)|0);
      var $ld$3558$0=(($5032)|0);
      var $5033$0=HEAP32[(($ld$3558$0)>>2)];
      var $ld$3559$1=(($5032+4)|0);
      var $5033$1=HEAP32[(($ld$3559$1)>>2)];
      var $5034=(($S+32)|0);
      var $ld$3560$0=(($5034)|0);
      var $5035$0=HEAP32[(($ld$3560$0)>>2)];
      var $ld$3561$1=(($5034+4)|0);
      var $5035$1=HEAP32[(($ld$3561$1)>>2)];
      var $5036$0=($5035$0 >>> 14) | ($5035$1 << 18);
      var $5036$1=($5035$1 >>> 14) | (0 << 18);
      var $5037=(($S+32)|0);
      var $ld$3562$0=(($5037)|0);
      var $5038$0=HEAP32[(($ld$3562$0)>>2)];
      var $ld$3563$1=(($5037+4)|0);
      var $5038$1=HEAP32[(($ld$3563$1)>>2)];
      var $5039$0=(0 << 18) | (0 >>> 14);
      var $5039$1=($5038$0 << 18) | (0 >>> 14);
      var $5040$0=$5036$0 | $5039$0;
      var $5040$1=$5036$1 | $5039$1;
      var $5041=(($S+32)|0);
      var $ld$3564$0=(($5041)|0);
      var $5042$0=HEAP32[(($ld$3564$0)>>2)];
      var $ld$3565$1=(($5041+4)|0);
      var $5042$1=HEAP32[(($ld$3565$1)>>2)];
      var $5043$0=($5042$0 >>> 18) | ($5042$1 << 14);
      var $5043$1=($5042$1 >>> 18) | (0 << 14);
      var $5044=(($S+32)|0);
      var $ld$3566$0=(($5044)|0);
      var $5045$0=HEAP32[(($ld$3566$0)>>2)];
      var $ld$3567$1=(($5044+4)|0);
      var $5045$1=HEAP32[(($ld$3567$1)>>2)];
      var $5046$0=(0 << 14) | (0 >>> 18);
      var $5046$1=($5045$0 << 14) | (0 >>> 18);
      var $5047$0=$5043$0 | $5046$0;
      var $5047$1=$5043$1 | $5046$1;
      var $5048$0=$5040$0 ^ $5047$0;
      var $5048$1=$5040$1 ^ $5047$1;
      var $5049=(($S+32)|0);
      var $ld$3568$0=(($5049)|0);
      var $5050$0=HEAP32[(($ld$3568$0)>>2)];
      var $ld$3569$1=(($5049+4)|0);
      var $5050$1=HEAP32[(($ld$3569$1)>>2)];
      var $5051$0=($5050$1 >>> 9) | (0 << 23);
      var $5051$1=(0 >>> 9) | (0 << 23);
      var $5052=(($S+32)|0);
      var $ld$3570$0=(($5052)|0);
      var $5053$0=HEAP32[(($ld$3570$0)>>2)];
      var $ld$3571$1=(($5052+4)|0);
      var $5053$1=HEAP32[(($ld$3571$1)>>2)];
      var $5054$0=($5053$0 << 23) | (0 >>> 9);
      var $5054$1=($5053$1 << 23) | ($5053$0 >>> 9);
      var $5055$0=$5051$0 | $5054$0;
      var $5055$1=$5051$1 | $5054$1;
      var $5056$0=$5048$0 ^ $5055$0;
      var $5056$1=$5048$1 ^ $5055$1;
      var $5057$0 = _i64Add($5033$0,$5033$1,$5056$0,$5056$1); var $5057$1 = tempRet0;
      var $5058=(($S+48)|0);
      var $ld$3572$0=(($5058)|0);
      var $5059$0=HEAP32[(($ld$3572$0)>>2)];
      var $ld$3573$1=(($5058+4)|0);
      var $5059$1=HEAP32[(($ld$3573$1)>>2)];
      var $5060=(($S+32)|0);
      var $ld$3574$0=(($5060)|0);
      var $5061$0=HEAP32[(($ld$3574$0)>>2)];
      var $ld$3575$1=(($5060+4)|0);
      var $5061$1=HEAP32[(($ld$3575$1)>>2)];
      var $5062=(($S+40)|0);
      var $ld$3576$0=(($5062)|0);
      var $5063$0=HEAP32[(($ld$3576$0)>>2)];
      var $ld$3577$1=(($5062+4)|0);
      var $5063$1=HEAP32[(($ld$3577$1)>>2)];
      var $5064=(($S+48)|0);
      var $ld$3578$0=(($5064)|0);
      var $5065$0=HEAP32[(($ld$3578$0)>>2)];
      var $ld$3579$1=(($5064+4)|0);
      var $5065$1=HEAP32[(($ld$3579$1)>>2)];
      var $5066$0=$5063$0 ^ $5065$0;
      var $5066$1=$5063$1 ^ $5065$1;
      var $5067$0=$5061$0 & $5066$0;
      var $5067$1=$5061$1 & $5066$1;
      var $5068$0=$5059$0 ^ $5067$0;
      var $5068$1=$5059$1 ^ $5067$1;
      var $5069$0 = _i64Add($5057$0,$5057$1,$5068$0,$5068$1); var $5069$1 = tempRet0;
      var $$etemp$3580$0=1575990012;
      var $$etemp$3580$1=1955562222;
      var $5070$0 = _i64Add($5069$0,$5069$1,$$etemp$3580$0,$$etemp$3580$1); var $5070$1 = tempRet0;
      var $5071=(($W+448)|0);
      var $ld$3581$0=(($5071)|0);
      var $5072$0=HEAP32[(($ld$3581$0)>>2)];
      var $ld$3582$1=(($5071+4)|0);
      var $5072$1=HEAP32[(($ld$3582$1)>>2)];
      var $5073$0 = _i64Add($5070$0,$5070$1,$5072$0,$5072$1); var $5073$1 = tempRet0;
      var $st$3583$0=(($t0)|0);
      HEAP32[(($st$3583$0)>>2)]=$5073$0;
      var $st$3584$1=(($t0+4)|0);
      HEAP32[(($st$3584$1)>>2)]=$5073$1;
      var $5074=(($S)|0);
      var $ld$3585$0=(($5074)|0);
      var $5075$0=HEAP32[(($ld$3585$0)>>2)];
      var $ld$3586$1=(($5074+4)|0);
      var $5075$1=HEAP32[(($ld$3586$1)>>2)];
      var $5076$0=($5075$0 >>> 28) | ($5075$1 << 4);
      var $5076$1=($5075$1 >>> 28) | (0 << 4);
      var $5077=(($S)|0);
      var $ld$3587$0=(($5077)|0);
      var $5078$0=HEAP32[(($ld$3587$0)>>2)];
      var $ld$3588$1=(($5077+4)|0);
      var $5078$1=HEAP32[(($ld$3588$1)>>2)];
      var $5079$0=(0 << 4) | (0 >>> 28);
      var $5079$1=($5078$0 << 4) | (0 >>> 28);
      var $5080$0=$5076$0 | $5079$0;
      var $5080$1=$5076$1 | $5079$1;
      var $5081=(($S)|0);
      var $ld$3589$0=(($5081)|0);
      var $5082$0=HEAP32[(($ld$3589$0)>>2)];
      var $ld$3590$1=(($5081+4)|0);
      var $5082$1=HEAP32[(($ld$3590$1)>>2)];
      var $5083$0=($5082$1 >>> 2) | (0 << 30);
      var $5083$1=(0 >>> 2) | (0 << 30);
      var $5084=(($S)|0);
      var $ld$3591$0=(($5084)|0);
      var $5085$0=HEAP32[(($ld$3591$0)>>2)];
      var $ld$3592$1=(($5084+4)|0);
      var $5085$1=HEAP32[(($ld$3592$1)>>2)];
      var $5086$0=($5085$0 << 30) | (0 >>> 2);
      var $5086$1=($5085$1 << 30) | ($5085$0 >>> 2);
      var $5087$0=$5083$0 | $5086$0;
      var $5087$1=$5083$1 | $5086$1;
      var $5088$0=$5080$0 ^ $5087$0;
      var $5088$1=$5080$1 ^ $5087$1;
      var $5089=(($S)|0);
      var $ld$3593$0=(($5089)|0);
      var $5090$0=HEAP32[(($ld$3593$0)>>2)];
      var $ld$3594$1=(($5089+4)|0);
      var $5090$1=HEAP32[(($ld$3594$1)>>2)];
      var $5091$0=($5090$1 >>> 7) | (0 << 25);
      var $5091$1=(0 >>> 7) | (0 << 25);
      var $5092=(($S)|0);
      var $ld$3595$0=(($5092)|0);
      var $5093$0=HEAP32[(($ld$3595$0)>>2)];
      var $ld$3596$1=(($5092+4)|0);
      var $5093$1=HEAP32[(($ld$3596$1)>>2)];
      var $5094$0=($5093$0 << 25) | (0 >>> 7);
      var $5094$1=($5093$1 << 25) | ($5093$0 >>> 7);
      var $5095$0=$5091$0 | $5094$0;
      var $5095$1=$5091$1 | $5094$1;
      var $5096$0=$5088$0 ^ $5095$0;
      var $5096$1=$5088$1 ^ $5095$1;
      var $5097=(($S)|0);
      var $ld$3597$0=(($5097)|0);
      var $5098$0=HEAP32[(($ld$3597$0)>>2)];
      var $ld$3598$1=(($5097+4)|0);
      var $5098$1=HEAP32[(($ld$3598$1)>>2)];
      var $5099=(($S+8)|0);
      var $ld$3599$0=(($5099)|0);
      var $5100$0=HEAP32[(($ld$3599$0)>>2)];
      var $ld$3600$1=(($5099+4)|0);
      var $5100$1=HEAP32[(($ld$3600$1)>>2)];
      var $5101$0=$5098$0 | $5100$0;
      var $5101$1=$5098$1 | $5100$1;
      var $5102=(($S+16)|0);
      var $ld$3601$0=(($5102)|0);
      var $5103$0=HEAP32[(($ld$3601$0)>>2)];
      var $ld$3602$1=(($5102+4)|0);
      var $5103$1=HEAP32[(($ld$3602$1)>>2)];
      var $5104$0=$5101$0 & $5103$0;
      var $5104$1=$5101$1 & $5103$1;
      var $5105=(($S)|0);
      var $ld$3603$0=(($5105)|0);
      var $5106$0=HEAP32[(($ld$3603$0)>>2)];
      var $ld$3604$1=(($5105+4)|0);
      var $5106$1=HEAP32[(($ld$3604$1)>>2)];
      var $5107=(($S+8)|0);
      var $ld$3605$0=(($5107)|0);
      var $5108$0=HEAP32[(($ld$3605$0)>>2)];
      var $ld$3606$1=(($5107+4)|0);
      var $5108$1=HEAP32[(($ld$3606$1)>>2)];
      var $5109$0=$5106$0 & $5108$0;
      var $5109$1=$5106$1 & $5108$1;
      var $5110$0=$5104$0 | $5109$0;
      var $5110$1=$5104$1 | $5109$1;
      var $5111$0 = _i64Add($5096$0,$5096$1,$5110$0,$5110$1); var $5111$1 = tempRet0;
      var $st$3607$0=(($t1)|0);
      HEAP32[(($st$3607$0)>>2)]=$5111$0;
      var $st$3608$1=(($t1+4)|0);
      HEAP32[(($st$3608$1)>>2)]=$5111$1;
      var $ld$3609$0=(($t0)|0);
      var $5112$0=HEAP32[(($ld$3609$0)>>2)];
      var $ld$3610$1=(($t0+4)|0);
      var $5112$1=HEAP32[(($ld$3610$1)>>2)];
      var $5113=(($S+24)|0);
      var $ld$3611$0=(($5113)|0);
      var $5114$0=HEAP32[(($ld$3611$0)>>2)];
      var $ld$3612$1=(($5113+4)|0);
      var $5114$1=HEAP32[(($ld$3612$1)>>2)];
      var $5115$0 = _i64Add($5114$0,$5114$1,$5112$0,$5112$1); var $5115$1 = tempRet0;
      var $st$3613$0=(($5113)|0);
      HEAP32[(($st$3613$0)>>2)]=$5115$0;
      var $st$3614$1=(($5113+4)|0);
      HEAP32[(($st$3614$1)>>2)]=$5115$1;
      var $ld$3615$0=(($t0)|0);
      var $5116$0=HEAP32[(($ld$3615$0)>>2)];
      var $ld$3616$1=(($t0+4)|0);
      var $5116$1=HEAP32[(($ld$3616$1)>>2)];
      var $ld$3617$0=(($t1)|0);
      var $5117$0=HEAP32[(($ld$3617$0)>>2)];
      var $ld$3618$1=(($t1+4)|0);
      var $5117$1=HEAP32[(($ld$3618$1)>>2)];
      var $5118$0 = _i64Add($5116$0,$5116$1,$5117$0,$5117$1); var $5118$1 = tempRet0;
      var $5119=(($S+56)|0);
      var $st$3619$0=(($5119)|0);
      HEAP32[(($st$3619$0)>>2)]=$5118$0;
      var $st$3620$1=(($5119+4)|0);
      HEAP32[(($st$3620$1)>>2)]=$5118$1;
      var $5120=(($S+48)|0);
      var $ld$3621$0=(($5120)|0);
      var $5121$0=HEAP32[(($ld$3621$0)>>2)];
      var $ld$3622$1=(($5120+4)|0);
      var $5121$1=HEAP32[(($ld$3622$1)>>2)];
      var $5122=(($S+24)|0);
      var $ld$3623$0=(($5122)|0);
      var $5123$0=HEAP32[(($ld$3623$0)>>2)];
      var $ld$3624$1=(($5122+4)|0);
      var $5123$1=HEAP32[(($ld$3624$1)>>2)];
      var $5124$0=($5123$0 >>> 14) | ($5123$1 << 18);
      var $5124$1=($5123$1 >>> 14) | (0 << 18);
      var $5125=(($S+24)|0);
      var $ld$3625$0=(($5125)|0);
      var $5126$0=HEAP32[(($ld$3625$0)>>2)];
      var $ld$3626$1=(($5125+4)|0);
      var $5126$1=HEAP32[(($ld$3626$1)>>2)];
      var $5127$0=(0 << 18) | (0 >>> 14);
      var $5127$1=($5126$0 << 18) | (0 >>> 14);
      var $5128$0=$5124$0 | $5127$0;
      var $5128$1=$5124$1 | $5127$1;
      var $5129=(($S+24)|0);
      var $ld$3627$0=(($5129)|0);
      var $5130$0=HEAP32[(($ld$3627$0)>>2)];
      var $ld$3628$1=(($5129+4)|0);
      var $5130$1=HEAP32[(($ld$3628$1)>>2)];
      var $5131$0=($5130$0 >>> 18) | ($5130$1 << 14);
      var $5131$1=($5130$1 >>> 18) | (0 << 14);
      var $5132=(($S+24)|0);
      var $ld$3629$0=(($5132)|0);
      var $5133$0=HEAP32[(($ld$3629$0)>>2)];
      var $ld$3630$1=(($5132+4)|0);
      var $5133$1=HEAP32[(($ld$3630$1)>>2)];
      var $5134$0=(0 << 14) | (0 >>> 18);
      var $5134$1=($5133$0 << 14) | (0 >>> 18);
      var $5135$0=$5131$0 | $5134$0;
      var $5135$1=$5131$1 | $5134$1;
      var $5136$0=$5128$0 ^ $5135$0;
      var $5136$1=$5128$1 ^ $5135$1;
      var $5137=(($S+24)|0);
      var $ld$3631$0=(($5137)|0);
      var $5138$0=HEAP32[(($ld$3631$0)>>2)];
      var $ld$3632$1=(($5137+4)|0);
      var $5138$1=HEAP32[(($ld$3632$1)>>2)];
      var $5139$0=($5138$1 >>> 9) | (0 << 23);
      var $5139$1=(0 >>> 9) | (0 << 23);
      var $5140=(($S+24)|0);
      var $ld$3633$0=(($5140)|0);
      var $5141$0=HEAP32[(($ld$3633$0)>>2)];
      var $ld$3634$1=(($5140+4)|0);
      var $5141$1=HEAP32[(($ld$3634$1)>>2)];
      var $5142$0=($5141$0 << 23) | (0 >>> 9);
      var $5142$1=($5141$1 << 23) | ($5141$0 >>> 9);
      var $5143$0=$5139$0 | $5142$0;
      var $5143$1=$5139$1 | $5142$1;
      var $5144$0=$5136$0 ^ $5143$0;
      var $5144$1=$5136$1 ^ $5143$1;
      var $5145$0 = _i64Add($5121$0,$5121$1,$5144$0,$5144$1); var $5145$1 = tempRet0;
      var $5146=(($S+40)|0);
      var $ld$3635$0=(($5146)|0);
      var $5147$0=HEAP32[(($ld$3635$0)>>2)];
      var $ld$3636$1=(($5146+4)|0);
      var $5147$1=HEAP32[(($ld$3636$1)>>2)];
      var $5148=(($S+24)|0);
      var $ld$3637$0=(($5148)|0);
      var $5149$0=HEAP32[(($ld$3637$0)>>2)];
      var $ld$3638$1=(($5148+4)|0);
      var $5149$1=HEAP32[(($ld$3638$1)>>2)];
      var $5150=(($S+32)|0);
      var $ld$3639$0=(($5150)|0);
      var $5151$0=HEAP32[(($ld$3639$0)>>2)];
      var $ld$3640$1=(($5150+4)|0);
      var $5151$1=HEAP32[(($ld$3640$1)>>2)];
      var $5152=(($S+40)|0);
      var $ld$3641$0=(($5152)|0);
      var $5153$0=HEAP32[(($ld$3641$0)>>2)];
      var $ld$3642$1=(($5152+4)|0);
      var $5153$1=HEAP32[(($ld$3642$1)>>2)];
      var $5154$0=$5151$0 ^ $5153$0;
      var $5154$1=$5151$1 ^ $5153$1;
      var $5155$0=$5149$0 & $5154$0;
      var $5155$1=$5149$1 & $5154$1;
      var $5156$0=$5147$0 ^ $5155$0;
      var $5156$1=$5147$1 ^ $5155$1;
      var $5157$0 = _i64Add($5145$0,$5145$1,$5156$0,$5156$1); var $5157$1 = tempRet0;
      var $$etemp$3643$0=1125592928;
      var $$etemp$3643$1=2024104815;
      var $5158$0 = _i64Add($5157$0,$5157$1,$$etemp$3643$0,$$etemp$3643$1); var $5158$1 = tempRet0;
      var $5159=(($W+456)|0);
      var $ld$3644$0=(($5159)|0);
      var $5160$0=HEAP32[(($ld$3644$0)>>2)];
      var $ld$3645$1=(($5159+4)|0);
      var $5160$1=HEAP32[(($ld$3645$1)>>2)];
      var $5161$0 = _i64Add($5158$0,$5158$1,$5160$0,$5160$1); var $5161$1 = tempRet0;
      var $st$3646$0=(($t0)|0);
      HEAP32[(($st$3646$0)>>2)]=$5161$0;
      var $st$3647$1=(($t0+4)|0);
      HEAP32[(($st$3647$1)>>2)]=$5161$1;
      var $5162=(($S+56)|0);
      var $ld$3648$0=(($5162)|0);
      var $5163$0=HEAP32[(($ld$3648$0)>>2)];
      var $ld$3649$1=(($5162+4)|0);
      var $5163$1=HEAP32[(($ld$3649$1)>>2)];
      var $5164$0=($5163$0 >>> 28) | ($5163$1 << 4);
      var $5164$1=($5163$1 >>> 28) | (0 << 4);
      var $5165=(($S+56)|0);
      var $ld$3650$0=(($5165)|0);
      var $5166$0=HEAP32[(($ld$3650$0)>>2)];
      var $ld$3651$1=(($5165+4)|0);
      var $5166$1=HEAP32[(($ld$3651$1)>>2)];
      var $5167$0=(0 << 4) | (0 >>> 28);
      var $5167$1=($5166$0 << 4) | (0 >>> 28);
      var $5168$0=$5164$0 | $5167$0;
      var $5168$1=$5164$1 | $5167$1;
      var $5169=(($S+56)|0);
      var $ld$3652$0=(($5169)|0);
      var $5170$0=HEAP32[(($ld$3652$0)>>2)];
      var $ld$3653$1=(($5169+4)|0);
      var $5170$1=HEAP32[(($ld$3653$1)>>2)];
      var $5171$0=($5170$1 >>> 2) | (0 << 30);
      var $5171$1=(0 >>> 2) | (0 << 30);
      var $5172=(($S+56)|0);
      var $ld$3654$0=(($5172)|0);
      var $5173$0=HEAP32[(($ld$3654$0)>>2)];
      var $ld$3655$1=(($5172+4)|0);
      var $5173$1=HEAP32[(($ld$3655$1)>>2)];
      var $5174$0=($5173$0 << 30) | (0 >>> 2);
      var $5174$1=($5173$1 << 30) | ($5173$0 >>> 2);
      var $5175$0=$5171$0 | $5174$0;
      var $5175$1=$5171$1 | $5174$1;
      var $5176$0=$5168$0 ^ $5175$0;
      var $5176$1=$5168$1 ^ $5175$1;
      var $5177=(($S+56)|0);
      var $ld$3656$0=(($5177)|0);
      var $5178$0=HEAP32[(($ld$3656$0)>>2)];
      var $ld$3657$1=(($5177+4)|0);
      var $5178$1=HEAP32[(($ld$3657$1)>>2)];
      var $5179$0=($5178$1 >>> 7) | (0 << 25);
      var $5179$1=(0 >>> 7) | (0 << 25);
      var $5180=(($S+56)|0);
      var $ld$3658$0=(($5180)|0);
      var $5181$0=HEAP32[(($ld$3658$0)>>2)];
      var $ld$3659$1=(($5180+4)|0);
      var $5181$1=HEAP32[(($ld$3659$1)>>2)];
      var $5182$0=($5181$0 << 25) | (0 >>> 7);
      var $5182$1=($5181$1 << 25) | ($5181$0 >>> 7);
      var $5183$0=$5179$0 | $5182$0;
      var $5183$1=$5179$1 | $5182$1;
      var $5184$0=$5176$0 ^ $5183$0;
      var $5184$1=$5176$1 ^ $5183$1;
      var $5185=(($S+56)|0);
      var $ld$3660$0=(($5185)|0);
      var $5186$0=HEAP32[(($ld$3660$0)>>2)];
      var $ld$3661$1=(($5185+4)|0);
      var $5186$1=HEAP32[(($ld$3661$1)>>2)];
      var $5187=(($S)|0);
      var $ld$3662$0=(($5187)|0);
      var $5188$0=HEAP32[(($ld$3662$0)>>2)];
      var $ld$3663$1=(($5187+4)|0);
      var $5188$1=HEAP32[(($ld$3663$1)>>2)];
      var $5189$0=$5186$0 | $5188$0;
      var $5189$1=$5186$1 | $5188$1;
      var $5190=(($S+8)|0);
      var $ld$3664$0=(($5190)|0);
      var $5191$0=HEAP32[(($ld$3664$0)>>2)];
      var $ld$3665$1=(($5190+4)|0);
      var $5191$1=HEAP32[(($ld$3665$1)>>2)];
      var $5192$0=$5189$0 & $5191$0;
      var $5192$1=$5189$1 & $5191$1;
      var $5193=(($S+56)|0);
      var $ld$3666$0=(($5193)|0);
      var $5194$0=HEAP32[(($ld$3666$0)>>2)];
      var $ld$3667$1=(($5193+4)|0);
      var $5194$1=HEAP32[(($ld$3667$1)>>2)];
      var $5195=(($S)|0);
      var $ld$3668$0=(($5195)|0);
      var $5196$0=HEAP32[(($ld$3668$0)>>2)];
      var $ld$3669$1=(($5195+4)|0);
      var $5196$1=HEAP32[(($ld$3669$1)>>2)];
      var $5197$0=$5194$0 & $5196$0;
      var $5197$1=$5194$1 & $5196$1;
      var $5198$0=$5192$0 | $5197$0;
      var $5198$1=$5192$1 | $5197$1;
      var $5199$0 = _i64Add($5184$0,$5184$1,$5198$0,$5198$1); var $5199$1 = tempRet0;
      var $st$3670$0=(($t1)|0);
      HEAP32[(($st$3670$0)>>2)]=$5199$0;
      var $st$3671$1=(($t1+4)|0);
      HEAP32[(($st$3671$1)>>2)]=$5199$1;
      var $ld$3672$0=(($t0)|0);
      var $5200$0=HEAP32[(($ld$3672$0)>>2)];
      var $ld$3673$1=(($t0+4)|0);
      var $5200$1=HEAP32[(($ld$3673$1)>>2)];
      var $5201=(($S+16)|0);
      var $ld$3674$0=(($5201)|0);
      var $5202$0=HEAP32[(($ld$3674$0)>>2)];
      var $ld$3675$1=(($5201+4)|0);
      var $5202$1=HEAP32[(($ld$3675$1)>>2)];
      var $5203$0 = _i64Add($5202$0,$5202$1,$5200$0,$5200$1); var $5203$1 = tempRet0;
      var $st$3676$0=(($5201)|0);
      HEAP32[(($st$3676$0)>>2)]=$5203$0;
      var $st$3677$1=(($5201+4)|0);
      HEAP32[(($st$3677$1)>>2)]=$5203$1;
      var $ld$3678$0=(($t0)|0);
      var $5204$0=HEAP32[(($ld$3678$0)>>2)];
      var $ld$3679$1=(($t0+4)|0);
      var $5204$1=HEAP32[(($ld$3679$1)>>2)];
      var $ld$3680$0=(($t1)|0);
      var $5205$0=HEAP32[(($ld$3680$0)>>2)];
      var $ld$3681$1=(($t1+4)|0);
      var $5205$1=HEAP32[(($ld$3681$1)>>2)];
      var $5206$0 = _i64Add($5204$0,$5204$1,$5205$0,$5205$1); var $5206$1 = tempRet0;
      var $5207=(($S+48)|0);
      var $st$3682$0=(($5207)|0);
      HEAP32[(($st$3682$0)>>2)]=$5206$0;
      var $st$3683$1=(($5207+4)|0);
      HEAP32[(($st$3683$1)>>2)]=$5206$1;
      var $5208=(($S+40)|0);
      var $ld$3684$0=(($5208)|0);
      var $5209$0=HEAP32[(($ld$3684$0)>>2)];
      var $ld$3685$1=(($5208+4)|0);
      var $5209$1=HEAP32[(($ld$3685$1)>>2)];
      var $5210=(($S+16)|0);
      var $ld$3686$0=(($5210)|0);
      var $5211$0=HEAP32[(($ld$3686$0)>>2)];
      var $ld$3687$1=(($5210+4)|0);
      var $5211$1=HEAP32[(($ld$3687$1)>>2)];
      var $5212$0=($5211$0 >>> 14) | ($5211$1 << 18);
      var $5212$1=($5211$1 >>> 14) | (0 << 18);
      var $5213=(($S+16)|0);
      var $ld$3688$0=(($5213)|0);
      var $5214$0=HEAP32[(($ld$3688$0)>>2)];
      var $ld$3689$1=(($5213+4)|0);
      var $5214$1=HEAP32[(($ld$3689$1)>>2)];
      var $5215$0=(0 << 18) | (0 >>> 14);
      var $5215$1=($5214$0 << 18) | (0 >>> 14);
      var $5216$0=$5212$0 | $5215$0;
      var $5216$1=$5212$1 | $5215$1;
      var $5217=(($S+16)|0);
      var $ld$3690$0=(($5217)|0);
      var $5218$0=HEAP32[(($ld$3690$0)>>2)];
      var $ld$3691$1=(($5217+4)|0);
      var $5218$1=HEAP32[(($ld$3691$1)>>2)];
      var $5219$0=($5218$0 >>> 18) | ($5218$1 << 14);
      var $5219$1=($5218$1 >>> 18) | (0 << 14);
      var $5220=(($S+16)|0);
      var $ld$3692$0=(($5220)|0);
      var $5221$0=HEAP32[(($ld$3692$0)>>2)];
      var $ld$3693$1=(($5220+4)|0);
      var $5221$1=HEAP32[(($ld$3693$1)>>2)];
      var $5222$0=(0 << 14) | (0 >>> 18);
      var $5222$1=($5221$0 << 14) | (0 >>> 18);
      var $5223$0=$5219$0 | $5222$0;
      var $5223$1=$5219$1 | $5222$1;
      var $5224$0=$5216$0 ^ $5223$0;
      var $5224$1=$5216$1 ^ $5223$1;
      var $5225=(($S+16)|0);
      var $ld$3694$0=(($5225)|0);
      var $5226$0=HEAP32[(($ld$3694$0)>>2)];
      var $ld$3695$1=(($5225+4)|0);
      var $5226$1=HEAP32[(($ld$3695$1)>>2)];
      var $5227$0=($5226$1 >>> 9) | (0 << 23);
      var $5227$1=(0 >>> 9) | (0 << 23);
      var $5228=(($S+16)|0);
      var $ld$3696$0=(($5228)|0);
      var $5229$0=HEAP32[(($ld$3696$0)>>2)];
      var $ld$3697$1=(($5228+4)|0);
      var $5229$1=HEAP32[(($ld$3697$1)>>2)];
      var $5230$0=($5229$0 << 23) | (0 >>> 9);
      var $5230$1=($5229$1 << 23) | ($5229$0 >>> 9);
      var $5231$0=$5227$0 | $5230$0;
      var $5231$1=$5227$1 | $5230$1;
      var $5232$0=$5224$0 ^ $5231$0;
      var $5232$1=$5224$1 ^ $5231$1;
      var $5233$0 = _i64Add($5209$0,$5209$1,$5232$0,$5232$1); var $5233$1 = tempRet0;
      var $5234=(($S+32)|0);
      var $ld$3698$0=(($5234)|0);
      var $5235$0=HEAP32[(($ld$3698$0)>>2)];
      var $ld$3699$1=(($5234+4)|0);
      var $5235$1=HEAP32[(($ld$3699$1)>>2)];
      var $5236=(($S+16)|0);
      var $ld$3700$0=(($5236)|0);
      var $5237$0=HEAP32[(($ld$3700$0)>>2)];
      var $ld$3701$1=(($5236+4)|0);
      var $5237$1=HEAP32[(($ld$3701$1)>>2)];
      var $5238=(($S+24)|0);
      var $ld$3702$0=(($5238)|0);
      var $5239$0=HEAP32[(($ld$3702$0)>>2)];
      var $ld$3703$1=(($5238+4)|0);
      var $5239$1=HEAP32[(($ld$3703$1)>>2)];
      var $5240=(($S+32)|0);
      var $ld$3704$0=(($5240)|0);
      var $5241$0=HEAP32[(($ld$3704$0)>>2)];
      var $ld$3705$1=(($5240+4)|0);
      var $5241$1=HEAP32[(($ld$3705$1)>>2)];
      var $5242$0=$5239$0 ^ $5241$0;
      var $5242$1=$5239$1 ^ $5241$1;
      var $5243$0=$5237$0 & $5242$0;
      var $5243$1=$5237$1 & $5242$1;
      var $5244$0=$5235$0 ^ $5243$0;
      var $5244$1=$5235$1 ^ $5243$1;
      var $5245$0 = _i64Add($5233$0,$5233$1,$5244$0,$5244$1); var $5245$1 = tempRet0;
      var $$etemp$3706$0=-1578062990;
      var $$etemp$3706$1=-2067236844;
      var $5246$0 = _i64Add($5245$0,$5245$1,$$etemp$3706$0,$$etemp$3706$1); var $5246$1 = tempRet0;
      var $5247=(($W+464)|0);
      var $ld$3707$0=(($5247)|0);
      var $5248$0=HEAP32[(($ld$3707$0)>>2)];
      var $ld$3708$1=(($5247+4)|0);
      var $5248$1=HEAP32[(($ld$3708$1)>>2)];
      var $5249$0 = _i64Add($5246$0,$5246$1,$5248$0,$5248$1); var $5249$1 = tempRet0;
      var $st$3709$0=(($t0)|0);
      HEAP32[(($st$3709$0)>>2)]=$5249$0;
      var $st$3710$1=(($t0+4)|0);
      HEAP32[(($st$3710$1)>>2)]=$5249$1;
      var $5250=(($S+48)|0);
      var $ld$3711$0=(($5250)|0);
      var $5251$0=HEAP32[(($ld$3711$0)>>2)];
      var $ld$3712$1=(($5250+4)|0);
      var $5251$1=HEAP32[(($ld$3712$1)>>2)];
      var $5252$0=($5251$0 >>> 28) | ($5251$1 << 4);
      var $5252$1=($5251$1 >>> 28) | (0 << 4);
      var $5253=(($S+48)|0);
      var $ld$3713$0=(($5253)|0);
      var $5254$0=HEAP32[(($ld$3713$0)>>2)];
      var $ld$3714$1=(($5253+4)|0);
      var $5254$1=HEAP32[(($ld$3714$1)>>2)];
      var $5255$0=(0 << 4) | (0 >>> 28);
      var $5255$1=($5254$0 << 4) | (0 >>> 28);
      var $5256$0=$5252$0 | $5255$0;
      var $5256$1=$5252$1 | $5255$1;
      var $5257=(($S+48)|0);
      var $ld$3715$0=(($5257)|0);
      var $5258$0=HEAP32[(($ld$3715$0)>>2)];
      var $ld$3716$1=(($5257+4)|0);
      var $5258$1=HEAP32[(($ld$3716$1)>>2)];
      var $5259$0=($5258$1 >>> 2) | (0 << 30);
      var $5259$1=(0 >>> 2) | (0 << 30);
      var $5260=(($S+48)|0);
      var $ld$3717$0=(($5260)|0);
      var $5261$0=HEAP32[(($ld$3717$0)>>2)];
      var $ld$3718$1=(($5260+4)|0);
      var $5261$1=HEAP32[(($ld$3718$1)>>2)];
      var $5262$0=($5261$0 << 30) | (0 >>> 2);
      var $5262$1=($5261$1 << 30) | ($5261$0 >>> 2);
      var $5263$0=$5259$0 | $5262$0;
      var $5263$1=$5259$1 | $5262$1;
      var $5264$0=$5256$0 ^ $5263$0;
      var $5264$1=$5256$1 ^ $5263$1;
      var $5265=(($S+48)|0);
      var $ld$3719$0=(($5265)|0);
      var $5266$0=HEAP32[(($ld$3719$0)>>2)];
      var $ld$3720$1=(($5265+4)|0);
      var $5266$1=HEAP32[(($ld$3720$1)>>2)];
      var $5267$0=($5266$1 >>> 7) | (0 << 25);
      var $5267$1=(0 >>> 7) | (0 << 25);
      var $5268=(($S+48)|0);
      var $ld$3721$0=(($5268)|0);
      var $5269$0=HEAP32[(($ld$3721$0)>>2)];
      var $ld$3722$1=(($5268+4)|0);
      var $5269$1=HEAP32[(($ld$3722$1)>>2)];
      var $5270$0=($5269$0 << 25) | (0 >>> 7);
      var $5270$1=($5269$1 << 25) | ($5269$0 >>> 7);
      var $5271$0=$5267$0 | $5270$0;
      var $5271$1=$5267$1 | $5270$1;
      var $5272$0=$5264$0 ^ $5271$0;
      var $5272$1=$5264$1 ^ $5271$1;
      var $5273=(($S+48)|0);
      var $ld$3723$0=(($5273)|0);
      var $5274$0=HEAP32[(($ld$3723$0)>>2)];
      var $ld$3724$1=(($5273+4)|0);
      var $5274$1=HEAP32[(($ld$3724$1)>>2)];
      var $5275=(($S+56)|0);
      var $ld$3725$0=(($5275)|0);
      var $5276$0=HEAP32[(($ld$3725$0)>>2)];
      var $ld$3726$1=(($5275+4)|0);
      var $5276$1=HEAP32[(($ld$3726$1)>>2)];
      var $5277$0=$5274$0 | $5276$0;
      var $5277$1=$5274$1 | $5276$1;
      var $5278=(($S)|0);
      var $ld$3727$0=(($5278)|0);
      var $5279$0=HEAP32[(($ld$3727$0)>>2)];
      var $ld$3728$1=(($5278+4)|0);
      var $5279$1=HEAP32[(($ld$3728$1)>>2)];
      var $5280$0=$5277$0 & $5279$0;
      var $5280$1=$5277$1 & $5279$1;
      var $5281=(($S+48)|0);
      var $ld$3729$0=(($5281)|0);
      var $5282$0=HEAP32[(($ld$3729$0)>>2)];
      var $ld$3730$1=(($5281+4)|0);
      var $5282$1=HEAP32[(($ld$3730$1)>>2)];
      var $5283=(($S+56)|0);
      var $ld$3731$0=(($5283)|0);
      var $5284$0=HEAP32[(($ld$3731$0)>>2)];
      var $ld$3732$1=(($5283+4)|0);
      var $5284$1=HEAP32[(($ld$3732$1)>>2)];
      var $5285$0=$5282$0 & $5284$0;
      var $5285$1=$5282$1 & $5284$1;
      var $5286$0=$5280$0 | $5285$0;
      var $5286$1=$5280$1 | $5285$1;
      var $5287$0 = _i64Add($5272$0,$5272$1,$5286$0,$5286$1); var $5287$1 = tempRet0;
      var $st$3733$0=(($t1)|0);
      HEAP32[(($st$3733$0)>>2)]=$5287$0;
      var $st$3734$1=(($t1+4)|0);
      HEAP32[(($st$3734$1)>>2)]=$5287$1;
      var $ld$3735$0=(($t0)|0);
      var $5288$0=HEAP32[(($ld$3735$0)>>2)];
      var $ld$3736$1=(($t0+4)|0);
      var $5288$1=HEAP32[(($ld$3736$1)>>2)];
      var $5289=(($S+8)|0);
      var $ld$3737$0=(($5289)|0);
      var $5290$0=HEAP32[(($ld$3737$0)>>2)];
      var $ld$3738$1=(($5289+4)|0);
      var $5290$1=HEAP32[(($ld$3738$1)>>2)];
      var $5291$0 = _i64Add($5290$0,$5290$1,$5288$0,$5288$1); var $5291$1 = tempRet0;
      var $st$3739$0=(($5289)|0);
      HEAP32[(($st$3739$0)>>2)]=$5291$0;
      var $st$3740$1=(($5289+4)|0);
      HEAP32[(($st$3740$1)>>2)]=$5291$1;
      var $ld$3741$0=(($t0)|0);
      var $5292$0=HEAP32[(($ld$3741$0)>>2)];
      var $ld$3742$1=(($t0+4)|0);
      var $5292$1=HEAP32[(($ld$3742$1)>>2)];
      var $ld$3743$0=(($t1)|0);
      var $5293$0=HEAP32[(($ld$3743$0)>>2)];
      var $ld$3744$1=(($t1+4)|0);
      var $5293$1=HEAP32[(($ld$3744$1)>>2)];
      var $5294$0 = _i64Add($5292$0,$5292$1,$5293$0,$5293$1); var $5294$1 = tempRet0;
      var $5295=(($S+40)|0);
      var $st$3745$0=(($5295)|0);
      HEAP32[(($st$3745$0)>>2)]=$5294$0;
      var $st$3746$1=(($5295+4)|0);
      HEAP32[(($st$3746$1)>>2)]=$5294$1;
      var $5296=(($S+32)|0);
      var $ld$3747$0=(($5296)|0);
      var $5297$0=HEAP32[(($ld$3747$0)>>2)];
      var $ld$3748$1=(($5296+4)|0);
      var $5297$1=HEAP32[(($ld$3748$1)>>2)];
      var $5298=(($S+8)|0);
      var $ld$3749$0=(($5298)|0);
      var $5299$0=HEAP32[(($ld$3749$0)>>2)];
      var $ld$3750$1=(($5298+4)|0);
      var $5299$1=HEAP32[(($ld$3750$1)>>2)];
      var $5300$0=($5299$0 >>> 14) | ($5299$1 << 18);
      var $5300$1=($5299$1 >>> 14) | (0 << 18);
      var $5301=(($S+8)|0);
      var $ld$3751$0=(($5301)|0);
      var $5302$0=HEAP32[(($ld$3751$0)>>2)];
      var $ld$3752$1=(($5301+4)|0);
      var $5302$1=HEAP32[(($ld$3752$1)>>2)];
      var $5303$0=(0 << 18) | (0 >>> 14);
      var $5303$1=($5302$0 << 18) | (0 >>> 14);
      var $5304$0=$5300$0 | $5303$0;
      var $5304$1=$5300$1 | $5303$1;
      var $5305=(($S+8)|0);
      var $ld$3753$0=(($5305)|0);
      var $5306$0=HEAP32[(($ld$3753$0)>>2)];
      var $ld$3754$1=(($5305+4)|0);
      var $5306$1=HEAP32[(($ld$3754$1)>>2)];
      var $5307$0=($5306$0 >>> 18) | ($5306$1 << 14);
      var $5307$1=($5306$1 >>> 18) | (0 << 14);
      var $5308=(($S+8)|0);
      var $ld$3755$0=(($5308)|0);
      var $5309$0=HEAP32[(($ld$3755$0)>>2)];
      var $ld$3756$1=(($5308+4)|0);
      var $5309$1=HEAP32[(($ld$3756$1)>>2)];
      var $5310$0=(0 << 14) | (0 >>> 18);
      var $5310$1=($5309$0 << 14) | (0 >>> 18);
      var $5311$0=$5307$0 | $5310$0;
      var $5311$1=$5307$1 | $5310$1;
      var $5312$0=$5304$0 ^ $5311$0;
      var $5312$1=$5304$1 ^ $5311$1;
      var $5313=(($S+8)|0);
      var $ld$3757$0=(($5313)|0);
      var $5314$0=HEAP32[(($ld$3757$0)>>2)];
      var $ld$3758$1=(($5313+4)|0);
      var $5314$1=HEAP32[(($ld$3758$1)>>2)];
      var $5315$0=($5314$1 >>> 9) | (0 << 23);
      var $5315$1=(0 >>> 9) | (0 << 23);
      var $5316=(($S+8)|0);
      var $ld$3759$0=(($5316)|0);
      var $5317$0=HEAP32[(($ld$3759$0)>>2)];
      var $ld$3760$1=(($5316+4)|0);
      var $5317$1=HEAP32[(($ld$3760$1)>>2)];
      var $5318$0=($5317$0 << 23) | (0 >>> 9);
      var $5318$1=($5317$1 << 23) | ($5317$0 >>> 9);
      var $5319$0=$5315$0 | $5318$0;
      var $5319$1=$5315$1 | $5318$1;
      var $5320$0=$5312$0 ^ $5319$0;
      var $5320$1=$5312$1 ^ $5319$1;
      var $5321$0 = _i64Add($5297$0,$5297$1,$5320$0,$5320$1); var $5321$1 = tempRet0;
      var $5322=(($S+24)|0);
      var $ld$3761$0=(($5322)|0);
      var $5323$0=HEAP32[(($ld$3761$0)>>2)];
      var $ld$3762$1=(($5322+4)|0);
      var $5323$1=HEAP32[(($ld$3762$1)>>2)];
      var $5324=(($S+8)|0);
      var $ld$3763$0=(($5324)|0);
      var $5325$0=HEAP32[(($ld$3763$0)>>2)];
      var $ld$3764$1=(($5324+4)|0);
      var $5325$1=HEAP32[(($ld$3764$1)>>2)];
      var $5326=(($S+16)|0);
      var $ld$3765$0=(($5326)|0);
      var $5327$0=HEAP32[(($ld$3765$0)>>2)];
      var $ld$3766$1=(($5326+4)|0);
      var $5327$1=HEAP32[(($ld$3766$1)>>2)];
      var $5328=(($S+24)|0);
      var $ld$3767$0=(($5328)|0);
      var $5329$0=HEAP32[(($ld$3767$0)>>2)];
      var $ld$3768$1=(($5328+4)|0);
      var $5329$1=HEAP32[(($ld$3768$1)>>2)];
      var $5330$0=$5327$0 ^ $5329$0;
      var $5330$1=$5327$1 ^ $5329$1;
      var $5331$0=$5325$0 & $5330$0;
      var $5331$1=$5325$1 & $5330$1;
      var $5332$0=$5323$0 ^ $5331$0;
      var $5332$1=$5323$1 ^ $5331$1;
      var $5333$0 = _i64Add($5321$0,$5321$1,$5332$0,$5332$1); var $5333$1 = tempRet0;
      var $$etemp$3769$0=442776044;
      var $$etemp$3769$1=-1933114872;
      var $5334$0 = _i64Add($5333$0,$5333$1,$$etemp$3769$0,$$etemp$3769$1); var $5334$1 = tempRet0;
      var $5335=(($W+472)|0);
      var $ld$3770$0=(($5335)|0);
      var $5336$0=HEAP32[(($ld$3770$0)>>2)];
      var $ld$3771$1=(($5335+4)|0);
      var $5336$1=HEAP32[(($ld$3771$1)>>2)];
      var $5337$0 = _i64Add($5334$0,$5334$1,$5336$0,$5336$1); var $5337$1 = tempRet0;
      var $st$3772$0=(($t0)|0);
      HEAP32[(($st$3772$0)>>2)]=$5337$0;
      var $st$3773$1=(($t0+4)|0);
      HEAP32[(($st$3773$1)>>2)]=$5337$1;
      var $5338=(($S+40)|0);
      var $ld$3774$0=(($5338)|0);
      var $5339$0=HEAP32[(($ld$3774$0)>>2)];
      var $ld$3775$1=(($5338+4)|0);
      var $5339$1=HEAP32[(($ld$3775$1)>>2)];
      var $5340$0=($5339$0 >>> 28) | ($5339$1 << 4);
      var $5340$1=($5339$1 >>> 28) | (0 << 4);
      var $5341=(($S+40)|0);
      var $ld$3776$0=(($5341)|0);
      var $5342$0=HEAP32[(($ld$3776$0)>>2)];
      var $ld$3777$1=(($5341+4)|0);
      var $5342$1=HEAP32[(($ld$3777$1)>>2)];
      var $5343$0=(0 << 4) | (0 >>> 28);
      var $5343$1=($5342$0 << 4) | (0 >>> 28);
      var $5344$0=$5340$0 | $5343$0;
      var $5344$1=$5340$1 | $5343$1;
      var $5345=(($S+40)|0);
      var $ld$3778$0=(($5345)|0);
      var $5346$0=HEAP32[(($ld$3778$0)>>2)];
      var $ld$3779$1=(($5345+4)|0);
      var $5346$1=HEAP32[(($ld$3779$1)>>2)];
      var $5347$0=($5346$1 >>> 2) | (0 << 30);
      var $5347$1=(0 >>> 2) | (0 << 30);
      var $5348=(($S+40)|0);
      var $ld$3780$0=(($5348)|0);
      var $5349$0=HEAP32[(($ld$3780$0)>>2)];
      var $ld$3781$1=(($5348+4)|0);
      var $5349$1=HEAP32[(($ld$3781$1)>>2)];
      var $5350$0=($5349$0 << 30) | (0 >>> 2);
      var $5350$1=($5349$1 << 30) | ($5349$0 >>> 2);
      var $5351$0=$5347$0 | $5350$0;
      var $5351$1=$5347$1 | $5350$1;
      var $5352$0=$5344$0 ^ $5351$0;
      var $5352$1=$5344$1 ^ $5351$1;
      var $5353=(($S+40)|0);
      var $ld$3782$0=(($5353)|0);
      var $5354$0=HEAP32[(($ld$3782$0)>>2)];
      var $ld$3783$1=(($5353+4)|0);
      var $5354$1=HEAP32[(($ld$3783$1)>>2)];
      var $5355$0=($5354$1 >>> 7) | (0 << 25);
      var $5355$1=(0 >>> 7) | (0 << 25);
      var $5356=(($S+40)|0);
      var $ld$3784$0=(($5356)|0);
      var $5357$0=HEAP32[(($ld$3784$0)>>2)];
      var $ld$3785$1=(($5356+4)|0);
      var $5357$1=HEAP32[(($ld$3785$1)>>2)];
      var $5358$0=($5357$0 << 25) | (0 >>> 7);
      var $5358$1=($5357$1 << 25) | ($5357$0 >>> 7);
      var $5359$0=$5355$0 | $5358$0;
      var $5359$1=$5355$1 | $5358$1;
      var $5360$0=$5352$0 ^ $5359$0;
      var $5360$1=$5352$1 ^ $5359$1;
      var $5361=(($S+40)|0);
      var $ld$3786$0=(($5361)|0);
      var $5362$0=HEAP32[(($ld$3786$0)>>2)];
      var $ld$3787$1=(($5361+4)|0);
      var $5362$1=HEAP32[(($ld$3787$1)>>2)];
      var $5363=(($S+48)|0);
      var $ld$3788$0=(($5363)|0);
      var $5364$0=HEAP32[(($ld$3788$0)>>2)];
      var $ld$3789$1=(($5363+4)|0);
      var $5364$1=HEAP32[(($ld$3789$1)>>2)];
      var $5365$0=$5362$0 | $5364$0;
      var $5365$1=$5362$1 | $5364$1;
      var $5366=(($S+56)|0);
      var $ld$3790$0=(($5366)|0);
      var $5367$0=HEAP32[(($ld$3790$0)>>2)];
      var $ld$3791$1=(($5366+4)|0);
      var $5367$1=HEAP32[(($ld$3791$1)>>2)];
      var $5368$0=$5365$0 & $5367$0;
      var $5368$1=$5365$1 & $5367$1;
      var $5369=(($S+40)|0);
      var $ld$3792$0=(($5369)|0);
      var $5370$0=HEAP32[(($ld$3792$0)>>2)];
      var $ld$3793$1=(($5369+4)|0);
      var $5370$1=HEAP32[(($ld$3793$1)>>2)];
      var $5371=(($S+48)|0);
      var $ld$3794$0=(($5371)|0);
      var $5372$0=HEAP32[(($ld$3794$0)>>2)];
      var $ld$3795$1=(($5371+4)|0);
      var $5372$1=HEAP32[(($ld$3795$1)>>2)];
      var $5373$0=$5370$0 & $5372$0;
      var $5373$1=$5370$1 & $5372$1;
      var $5374$0=$5368$0 | $5373$0;
      var $5374$1=$5368$1 | $5373$1;
      var $5375$0 = _i64Add($5360$0,$5360$1,$5374$0,$5374$1); var $5375$1 = tempRet0;
      var $st$3796$0=(($t1)|0);
      HEAP32[(($st$3796$0)>>2)]=$5375$0;
      var $st$3797$1=(($t1+4)|0);
      HEAP32[(($st$3797$1)>>2)]=$5375$1;
      var $ld$3798$0=(($t0)|0);
      var $5376$0=HEAP32[(($ld$3798$0)>>2)];
      var $ld$3799$1=(($t0+4)|0);
      var $5376$1=HEAP32[(($ld$3799$1)>>2)];
      var $5377=(($S)|0);
      var $ld$3800$0=(($5377)|0);
      var $5378$0=HEAP32[(($ld$3800$0)>>2)];
      var $ld$3801$1=(($5377+4)|0);
      var $5378$1=HEAP32[(($ld$3801$1)>>2)];
      var $5379$0 = _i64Add($5378$0,$5378$1,$5376$0,$5376$1); var $5379$1 = tempRet0;
      var $st$3802$0=(($5377)|0);
      HEAP32[(($st$3802$0)>>2)]=$5379$0;
      var $st$3803$1=(($5377+4)|0);
      HEAP32[(($st$3803$1)>>2)]=$5379$1;
      var $ld$3804$0=(($t0)|0);
      var $5380$0=HEAP32[(($ld$3804$0)>>2)];
      var $ld$3805$1=(($t0+4)|0);
      var $5380$1=HEAP32[(($ld$3805$1)>>2)];
      var $ld$3806$0=(($t1)|0);
      var $5381$0=HEAP32[(($ld$3806$0)>>2)];
      var $ld$3807$1=(($t1+4)|0);
      var $5381$1=HEAP32[(($ld$3807$1)>>2)];
      var $5382$0 = _i64Add($5380$0,$5380$1,$5381$0,$5381$1); var $5382$1 = tempRet0;
      var $5383=(($S+32)|0);
      var $st$3808$0=(($5383)|0);
      HEAP32[(($st$3808$0)>>2)]=$5382$0;
      var $st$3809$1=(($5383+4)|0);
      HEAP32[(($st$3809$1)>>2)]=$5382$1;
      var $5384=(($S+24)|0);
      var $ld$3810$0=(($5384)|0);
      var $5385$0=HEAP32[(($ld$3810$0)>>2)];
      var $ld$3811$1=(($5384+4)|0);
      var $5385$1=HEAP32[(($ld$3811$1)>>2)];
      var $5386=(($S)|0);
      var $ld$3812$0=(($5386)|0);
      var $5387$0=HEAP32[(($ld$3812$0)>>2)];
      var $ld$3813$1=(($5386+4)|0);
      var $5387$1=HEAP32[(($ld$3813$1)>>2)];
      var $5388$0=($5387$0 >>> 14) | ($5387$1 << 18);
      var $5388$1=($5387$1 >>> 14) | (0 << 18);
      var $5389=(($S)|0);
      var $ld$3814$0=(($5389)|0);
      var $5390$0=HEAP32[(($ld$3814$0)>>2)];
      var $ld$3815$1=(($5389+4)|0);
      var $5390$1=HEAP32[(($ld$3815$1)>>2)];
      var $5391$0=(0 << 18) | (0 >>> 14);
      var $5391$1=($5390$0 << 18) | (0 >>> 14);
      var $5392$0=$5388$0 | $5391$0;
      var $5392$1=$5388$1 | $5391$1;
      var $5393=(($S)|0);
      var $ld$3816$0=(($5393)|0);
      var $5394$0=HEAP32[(($ld$3816$0)>>2)];
      var $ld$3817$1=(($5393+4)|0);
      var $5394$1=HEAP32[(($ld$3817$1)>>2)];
      var $5395$0=($5394$0 >>> 18) | ($5394$1 << 14);
      var $5395$1=($5394$1 >>> 18) | (0 << 14);
      var $5396=(($S)|0);
      var $ld$3818$0=(($5396)|0);
      var $5397$0=HEAP32[(($ld$3818$0)>>2)];
      var $ld$3819$1=(($5396+4)|0);
      var $5397$1=HEAP32[(($ld$3819$1)>>2)];
      var $5398$0=(0 << 14) | (0 >>> 18);
      var $5398$1=($5397$0 << 14) | (0 >>> 18);
      var $5399$0=$5395$0 | $5398$0;
      var $5399$1=$5395$1 | $5398$1;
      var $5400$0=$5392$0 ^ $5399$0;
      var $5400$1=$5392$1 ^ $5399$1;
      var $5401=(($S)|0);
      var $ld$3820$0=(($5401)|0);
      var $5402$0=HEAP32[(($ld$3820$0)>>2)];
      var $ld$3821$1=(($5401+4)|0);
      var $5402$1=HEAP32[(($ld$3821$1)>>2)];
      var $5403$0=($5402$1 >>> 9) | (0 << 23);
      var $5403$1=(0 >>> 9) | (0 << 23);
      var $5404=(($S)|0);
      var $ld$3822$0=(($5404)|0);
      var $5405$0=HEAP32[(($ld$3822$0)>>2)];
      var $ld$3823$1=(($5404+4)|0);
      var $5405$1=HEAP32[(($ld$3823$1)>>2)];
      var $5406$0=($5405$0 << 23) | (0 >>> 9);
      var $5406$1=($5405$1 << 23) | ($5405$0 >>> 9);
      var $5407$0=$5403$0 | $5406$0;
      var $5407$1=$5403$1 | $5406$1;
      var $5408$0=$5400$0 ^ $5407$0;
      var $5408$1=$5400$1 ^ $5407$1;
      var $5409$0 = _i64Add($5385$0,$5385$1,$5408$0,$5408$1); var $5409$1 = tempRet0;
      var $5410=(($S+16)|0);
      var $ld$3824$0=(($5410)|0);
      var $5411$0=HEAP32[(($ld$3824$0)>>2)];
      var $ld$3825$1=(($5410+4)|0);
      var $5411$1=HEAP32[(($ld$3825$1)>>2)];
      var $5412=(($S)|0);
      var $ld$3826$0=(($5412)|0);
      var $5413$0=HEAP32[(($ld$3826$0)>>2)];
      var $ld$3827$1=(($5412+4)|0);
      var $5413$1=HEAP32[(($ld$3827$1)>>2)];
      var $5414=(($S+8)|0);
      var $ld$3828$0=(($5414)|0);
      var $5415$0=HEAP32[(($ld$3828$0)>>2)];
      var $ld$3829$1=(($5414+4)|0);
      var $5415$1=HEAP32[(($ld$3829$1)>>2)];
      var $5416=(($S+16)|0);
      var $ld$3830$0=(($5416)|0);
      var $5417$0=HEAP32[(($ld$3830$0)>>2)];
      var $ld$3831$1=(($5416+4)|0);
      var $5417$1=HEAP32[(($ld$3831$1)>>2)];
      var $5418$0=$5415$0 ^ $5417$0;
      var $5418$1=$5415$1 ^ $5417$1;
      var $5419$0=$5413$0 & $5418$0;
      var $5419$1=$5413$1 & $5418$1;
      var $5420$0=$5411$0 ^ $5419$0;
      var $5420$1=$5411$1 ^ $5419$1;
      var $5421$0 = _i64Add($5409$0,$5409$1,$5420$0,$5420$1); var $5421$1 = tempRet0;
      var $$etemp$3832$0=593698344;
      var $$etemp$3832$1=-1866530822;
      var $5422$0 = _i64Add($5421$0,$5421$1,$$etemp$3832$0,$$etemp$3832$1); var $5422$1 = tempRet0;
      var $5423=(($W+480)|0);
      var $ld$3833$0=(($5423)|0);
      var $5424$0=HEAP32[(($ld$3833$0)>>2)];
      var $ld$3834$1=(($5423+4)|0);
      var $5424$1=HEAP32[(($ld$3834$1)>>2)];
      var $5425$0 = _i64Add($5422$0,$5422$1,$5424$0,$5424$1); var $5425$1 = tempRet0;
      var $st$3835$0=(($t0)|0);
      HEAP32[(($st$3835$0)>>2)]=$5425$0;
      var $st$3836$1=(($t0+4)|0);
      HEAP32[(($st$3836$1)>>2)]=$5425$1;
      var $5426=(($S+32)|0);
      var $ld$3837$0=(($5426)|0);
      var $5427$0=HEAP32[(($ld$3837$0)>>2)];
      var $ld$3838$1=(($5426+4)|0);
      var $5427$1=HEAP32[(($ld$3838$1)>>2)];
      var $5428$0=($5427$0 >>> 28) | ($5427$1 << 4);
      var $5428$1=($5427$1 >>> 28) | (0 << 4);
      var $5429=(($S+32)|0);
      var $ld$3839$0=(($5429)|0);
      var $5430$0=HEAP32[(($ld$3839$0)>>2)];
      var $ld$3840$1=(($5429+4)|0);
      var $5430$1=HEAP32[(($ld$3840$1)>>2)];
      var $5431$0=(0 << 4) | (0 >>> 28);
      var $5431$1=($5430$0 << 4) | (0 >>> 28);
      var $5432$0=$5428$0 | $5431$0;
      var $5432$1=$5428$1 | $5431$1;
      var $5433=(($S+32)|0);
      var $ld$3841$0=(($5433)|0);
      var $5434$0=HEAP32[(($ld$3841$0)>>2)];
      var $ld$3842$1=(($5433+4)|0);
      var $5434$1=HEAP32[(($ld$3842$1)>>2)];
      var $5435$0=($5434$1 >>> 2) | (0 << 30);
      var $5435$1=(0 >>> 2) | (0 << 30);
      var $5436=(($S+32)|0);
      var $ld$3843$0=(($5436)|0);
      var $5437$0=HEAP32[(($ld$3843$0)>>2)];
      var $ld$3844$1=(($5436+4)|0);
      var $5437$1=HEAP32[(($ld$3844$1)>>2)];
      var $5438$0=($5437$0 << 30) | (0 >>> 2);
      var $5438$1=($5437$1 << 30) | ($5437$0 >>> 2);
      var $5439$0=$5435$0 | $5438$0;
      var $5439$1=$5435$1 | $5438$1;
      var $5440$0=$5432$0 ^ $5439$0;
      var $5440$1=$5432$1 ^ $5439$1;
      var $5441=(($S+32)|0);
      var $ld$3845$0=(($5441)|0);
      var $5442$0=HEAP32[(($ld$3845$0)>>2)];
      var $ld$3846$1=(($5441+4)|0);
      var $5442$1=HEAP32[(($ld$3846$1)>>2)];
      var $5443$0=($5442$1 >>> 7) | (0 << 25);
      var $5443$1=(0 >>> 7) | (0 << 25);
      var $5444=(($S+32)|0);
      var $ld$3847$0=(($5444)|0);
      var $5445$0=HEAP32[(($ld$3847$0)>>2)];
      var $ld$3848$1=(($5444+4)|0);
      var $5445$1=HEAP32[(($ld$3848$1)>>2)];
      var $5446$0=($5445$0 << 25) | (0 >>> 7);
      var $5446$1=($5445$1 << 25) | ($5445$0 >>> 7);
      var $5447$0=$5443$0 | $5446$0;
      var $5447$1=$5443$1 | $5446$1;
      var $5448$0=$5440$0 ^ $5447$0;
      var $5448$1=$5440$1 ^ $5447$1;
      var $5449=(($S+32)|0);
      var $ld$3849$0=(($5449)|0);
      var $5450$0=HEAP32[(($ld$3849$0)>>2)];
      var $ld$3850$1=(($5449+4)|0);
      var $5450$1=HEAP32[(($ld$3850$1)>>2)];
      var $5451=(($S+40)|0);
      var $ld$3851$0=(($5451)|0);
      var $5452$0=HEAP32[(($ld$3851$0)>>2)];
      var $ld$3852$1=(($5451+4)|0);
      var $5452$1=HEAP32[(($ld$3852$1)>>2)];
      var $5453$0=$5450$0 | $5452$0;
      var $5453$1=$5450$1 | $5452$1;
      var $5454=(($S+48)|0);
      var $ld$3853$0=(($5454)|0);
      var $5455$0=HEAP32[(($ld$3853$0)>>2)];
      var $ld$3854$1=(($5454+4)|0);
      var $5455$1=HEAP32[(($ld$3854$1)>>2)];
      var $5456$0=$5453$0 & $5455$0;
      var $5456$1=$5453$1 & $5455$1;
      var $5457=(($S+32)|0);
      var $ld$3855$0=(($5457)|0);
      var $5458$0=HEAP32[(($ld$3855$0)>>2)];
      var $ld$3856$1=(($5457+4)|0);
      var $5458$1=HEAP32[(($ld$3856$1)>>2)];
      var $5459=(($S+40)|0);
      var $ld$3857$0=(($5459)|0);
      var $5460$0=HEAP32[(($ld$3857$0)>>2)];
      var $ld$3858$1=(($5459+4)|0);
      var $5460$1=HEAP32[(($ld$3858$1)>>2)];
      var $5461$0=$5458$0 & $5460$0;
      var $5461$1=$5458$1 & $5460$1;
      var $5462$0=$5456$0 | $5461$0;
      var $5462$1=$5456$1 | $5461$1;
      var $5463$0 = _i64Add($5448$0,$5448$1,$5462$0,$5462$1); var $5463$1 = tempRet0;
      var $st$3859$0=(($t1)|0);
      HEAP32[(($st$3859$0)>>2)]=$5463$0;
      var $st$3860$1=(($t1+4)|0);
      HEAP32[(($st$3860$1)>>2)]=$5463$1;
      var $ld$3861$0=(($t0)|0);
      var $5464$0=HEAP32[(($ld$3861$0)>>2)];
      var $ld$3862$1=(($t0+4)|0);
      var $5464$1=HEAP32[(($ld$3862$1)>>2)];
      var $5465=(($S+56)|0);
      var $ld$3863$0=(($5465)|0);
      var $5466$0=HEAP32[(($ld$3863$0)>>2)];
      var $ld$3864$1=(($5465+4)|0);
      var $5466$1=HEAP32[(($ld$3864$1)>>2)];
      var $5467$0 = _i64Add($5466$0,$5466$1,$5464$0,$5464$1); var $5467$1 = tempRet0;
      var $st$3865$0=(($5465)|0);
      HEAP32[(($st$3865$0)>>2)]=$5467$0;
      var $st$3866$1=(($5465+4)|0);
      HEAP32[(($st$3866$1)>>2)]=$5467$1;
      var $ld$3867$0=(($t0)|0);
      var $5468$0=HEAP32[(($ld$3867$0)>>2)];
      var $ld$3868$1=(($t0+4)|0);
      var $5468$1=HEAP32[(($ld$3868$1)>>2)];
      var $ld$3869$0=(($t1)|0);
      var $5469$0=HEAP32[(($ld$3869$0)>>2)];
      var $ld$3870$1=(($t1+4)|0);
      var $5469$1=HEAP32[(($ld$3870$1)>>2)];
      var $5470$0 = _i64Add($5468$0,$5468$1,$5469$0,$5469$1); var $5470$1 = tempRet0;
      var $5471=(($S+24)|0);
      var $st$3871$0=(($5471)|0);
      HEAP32[(($st$3871$0)>>2)]=$5470$0;
      var $st$3872$1=(($5471+4)|0);
      HEAP32[(($st$3872$1)>>2)]=$5470$1;
      var $5472=(($S+16)|0);
      var $ld$3873$0=(($5472)|0);
      var $5473$0=HEAP32[(($ld$3873$0)>>2)];
      var $ld$3874$1=(($5472+4)|0);
      var $5473$1=HEAP32[(($ld$3874$1)>>2)];
      var $5474=(($S+56)|0);
      var $ld$3875$0=(($5474)|0);
      var $5475$0=HEAP32[(($ld$3875$0)>>2)];
      var $ld$3876$1=(($5474+4)|0);
      var $5475$1=HEAP32[(($ld$3876$1)>>2)];
      var $5476$0=($5475$0 >>> 14) | ($5475$1 << 18);
      var $5476$1=($5475$1 >>> 14) | (0 << 18);
      var $5477=(($S+56)|0);
      var $ld$3877$0=(($5477)|0);
      var $5478$0=HEAP32[(($ld$3877$0)>>2)];
      var $ld$3878$1=(($5477+4)|0);
      var $5478$1=HEAP32[(($ld$3878$1)>>2)];
      var $5479$0=(0 << 18) | (0 >>> 14);
      var $5479$1=($5478$0 << 18) | (0 >>> 14);
      var $5480$0=$5476$0 | $5479$0;
      var $5480$1=$5476$1 | $5479$1;
      var $5481=(($S+56)|0);
      var $ld$3879$0=(($5481)|0);
      var $5482$0=HEAP32[(($ld$3879$0)>>2)];
      var $ld$3880$1=(($5481+4)|0);
      var $5482$1=HEAP32[(($ld$3880$1)>>2)];
      var $5483$0=($5482$0 >>> 18) | ($5482$1 << 14);
      var $5483$1=($5482$1 >>> 18) | (0 << 14);
      var $5484=(($S+56)|0);
      var $ld$3881$0=(($5484)|0);
      var $5485$0=HEAP32[(($ld$3881$0)>>2)];
      var $ld$3882$1=(($5484+4)|0);
      var $5485$1=HEAP32[(($ld$3882$1)>>2)];
      var $5486$0=(0 << 14) | (0 >>> 18);
      var $5486$1=($5485$0 << 14) | (0 >>> 18);
      var $5487$0=$5483$0 | $5486$0;
      var $5487$1=$5483$1 | $5486$1;
      var $5488$0=$5480$0 ^ $5487$0;
      var $5488$1=$5480$1 ^ $5487$1;
      var $5489=(($S+56)|0);
      var $ld$3883$0=(($5489)|0);
      var $5490$0=HEAP32[(($ld$3883$0)>>2)];
      var $ld$3884$1=(($5489+4)|0);
      var $5490$1=HEAP32[(($ld$3884$1)>>2)];
      var $5491$0=($5490$1 >>> 9) | (0 << 23);
      var $5491$1=(0 >>> 9) | (0 << 23);
      var $5492=(($S+56)|0);
      var $ld$3885$0=(($5492)|0);
      var $5493$0=HEAP32[(($ld$3885$0)>>2)];
      var $ld$3886$1=(($5492+4)|0);
      var $5493$1=HEAP32[(($ld$3886$1)>>2)];
      var $5494$0=($5493$0 << 23) | (0 >>> 9);
      var $5494$1=($5493$1 << 23) | ($5493$0 >>> 9);
      var $5495$0=$5491$0 | $5494$0;
      var $5495$1=$5491$1 | $5494$1;
      var $5496$0=$5488$0 ^ $5495$0;
      var $5496$1=$5488$1 ^ $5495$1;
      var $5497$0 = _i64Add($5473$0,$5473$1,$5496$0,$5496$1); var $5497$1 = tempRet0;
      var $5498=(($S+8)|0);
      var $ld$3887$0=(($5498)|0);
      var $5499$0=HEAP32[(($ld$3887$0)>>2)];
      var $ld$3888$1=(($5498+4)|0);
      var $5499$1=HEAP32[(($ld$3888$1)>>2)];
      var $5500=(($S+56)|0);
      var $ld$3889$0=(($5500)|0);
      var $5501$0=HEAP32[(($ld$3889$0)>>2)];
      var $ld$3890$1=(($5500+4)|0);
      var $5501$1=HEAP32[(($ld$3890$1)>>2)];
      var $5502=(($S)|0);
      var $ld$3891$0=(($5502)|0);
      var $5503$0=HEAP32[(($ld$3891$0)>>2)];
      var $ld$3892$1=(($5502+4)|0);
      var $5503$1=HEAP32[(($ld$3892$1)>>2)];
      var $5504=(($S+8)|0);
      var $ld$3893$0=(($5504)|0);
      var $5505$0=HEAP32[(($ld$3893$0)>>2)];
      var $ld$3894$1=(($5504+4)|0);
      var $5505$1=HEAP32[(($ld$3894$1)>>2)];
      var $5506$0=$5503$0 ^ $5505$0;
      var $5506$1=$5503$1 ^ $5505$1;
      var $5507$0=$5501$0 & $5506$0;
      var $5507$1=$5501$1 & $5506$1;
      var $5508$0=$5499$0 ^ $5507$0;
      var $5508$1=$5499$1 ^ $5507$1;
      var $5509$0 = _i64Add($5497$0,$5497$1,$5508$0,$5508$1); var $5509$1 = tempRet0;
      var $$etemp$3895$0=-561857047;
      var $$etemp$3895$1=-1538233109;
      var $5510$0 = _i64Add($5509$0,$5509$1,$$etemp$3895$0,$$etemp$3895$1); var $5510$1 = tempRet0;
      var $5511=(($W+488)|0);
      var $ld$3896$0=(($5511)|0);
      var $5512$0=HEAP32[(($ld$3896$0)>>2)];
      var $ld$3897$1=(($5511+4)|0);
      var $5512$1=HEAP32[(($ld$3897$1)>>2)];
      var $5513$0 = _i64Add($5510$0,$5510$1,$5512$0,$5512$1); var $5513$1 = tempRet0;
      var $st$3898$0=(($t0)|0);
      HEAP32[(($st$3898$0)>>2)]=$5513$0;
      var $st$3899$1=(($t0+4)|0);
      HEAP32[(($st$3899$1)>>2)]=$5513$1;
      var $5514=(($S+24)|0);
      var $ld$3900$0=(($5514)|0);
      var $5515$0=HEAP32[(($ld$3900$0)>>2)];
      var $ld$3901$1=(($5514+4)|0);
      var $5515$1=HEAP32[(($ld$3901$1)>>2)];
      var $5516$0=($5515$0 >>> 28) | ($5515$1 << 4);
      var $5516$1=($5515$1 >>> 28) | (0 << 4);
      var $5517=(($S+24)|0);
      var $ld$3902$0=(($5517)|0);
      var $5518$0=HEAP32[(($ld$3902$0)>>2)];
      var $ld$3903$1=(($5517+4)|0);
      var $5518$1=HEAP32[(($ld$3903$1)>>2)];
      var $5519$0=(0 << 4) | (0 >>> 28);
      var $5519$1=($5518$0 << 4) | (0 >>> 28);
      var $5520$0=$5516$0 | $5519$0;
      var $5520$1=$5516$1 | $5519$1;
      var $5521=(($S+24)|0);
      var $ld$3904$0=(($5521)|0);
      var $5522$0=HEAP32[(($ld$3904$0)>>2)];
      var $ld$3905$1=(($5521+4)|0);
      var $5522$1=HEAP32[(($ld$3905$1)>>2)];
      var $5523$0=($5522$1 >>> 2) | (0 << 30);
      var $5523$1=(0 >>> 2) | (0 << 30);
      var $5524=(($S+24)|0);
      var $ld$3906$0=(($5524)|0);
      var $5525$0=HEAP32[(($ld$3906$0)>>2)];
      var $ld$3907$1=(($5524+4)|0);
      var $5525$1=HEAP32[(($ld$3907$1)>>2)];
      var $5526$0=($5525$0 << 30) | (0 >>> 2);
      var $5526$1=($5525$1 << 30) | ($5525$0 >>> 2);
      var $5527$0=$5523$0 | $5526$0;
      var $5527$1=$5523$1 | $5526$1;
      var $5528$0=$5520$0 ^ $5527$0;
      var $5528$1=$5520$1 ^ $5527$1;
      var $5529=(($S+24)|0);
      var $ld$3908$0=(($5529)|0);
      var $5530$0=HEAP32[(($ld$3908$0)>>2)];
      var $ld$3909$1=(($5529+4)|0);
      var $5530$1=HEAP32[(($ld$3909$1)>>2)];
      var $5531$0=($5530$1 >>> 7) | (0 << 25);
      var $5531$1=(0 >>> 7) | (0 << 25);
      var $5532=(($S+24)|0);
      var $ld$3910$0=(($5532)|0);
      var $5533$0=HEAP32[(($ld$3910$0)>>2)];
      var $ld$3911$1=(($5532+4)|0);
      var $5533$1=HEAP32[(($ld$3911$1)>>2)];
      var $5534$0=($5533$0 << 25) | (0 >>> 7);
      var $5534$1=($5533$1 << 25) | ($5533$0 >>> 7);
      var $5535$0=$5531$0 | $5534$0;
      var $5535$1=$5531$1 | $5534$1;
      var $5536$0=$5528$0 ^ $5535$0;
      var $5536$1=$5528$1 ^ $5535$1;
      var $5537=(($S+24)|0);
      var $ld$3912$0=(($5537)|0);
      var $5538$0=HEAP32[(($ld$3912$0)>>2)];
      var $ld$3913$1=(($5537+4)|0);
      var $5538$1=HEAP32[(($ld$3913$1)>>2)];
      var $5539=(($S+32)|0);
      var $ld$3914$0=(($5539)|0);
      var $5540$0=HEAP32[(($ld$3914$0)>>2)];
      var $ld$3915$1=(($5539+4)|0);
      var $5540$1=HEAP32[(($ld$3915$1)>>2)];
      var $5541$0=$5538$0 | $5540$0;
      var $5541$1=$5538$1 | $5540$1;
      var $5542=(($S+40)|0);
      var $ld$3916$0=(($5542)|0);
      var $5543$0=HEAP32[(($ld$3916$0)>>2)];
      var $ld$3917$1=(($5542+4)|0);
      var $5543$1=HEAP32[(($ld$3917$1)>>2)];
      var $5544$0=$5541$0 & $5543$0;
      var $5544$1=$5541$1 & $5543$1;
      var $5545=(($S+24)|0);
      var $ld$3918$0=(($5545)|0);
      var $5546$0=HEAP32[(($ld$3918$0)>>2)];
      var $ld$3919$1=(($5545+4)|0);
      var $5546$1=HEAP32[(($ld$3919$1)>>2)];
      var $5547=(($S+32)|0);
      var $ld$3920$0=(($5547)|0);
      var $5548$0=HEAP32[(($ld$3920$0)>>2)];
      var $ld$3921$1=(($5547+4)|0);
      var $5548$1=HEAP32[(($ld$3921$1)>>2)];
      var $5549$0=$5546$0 & $5548$0;
      var $5549$1=$5546$1 & $5548$1;
      var $5550$0=$5544$0 | $5549$0;
      var $5550$1=$5544$1 | $5549$1;
      var $5551$0 = _i64Add($5536$0,$5536$1,$5550$0,$5550$1); var $5551$1 = tempRet0;
      var $st$3922$0=(($t1)|0);
      HEAP32[(($st$3922$0)>>2)]=$5551$0;
      var $st$3923$1=(($t1+4)|0);
      HEAP32[(($st$3923$1)>>2)]=$5551$1;
      var $ld$3924$0=(($t0)|0);
      var $5552$0=HEAP32[(($ld$3924$0)>>2)];
      var $ld$3925$1=(($t0+4)|0);
      var $5552$1=HEAP32[(($ld$3925$1)>>2)];
      var $5553=(($S+48)|0);
      var $ld$3926$0=(($5553)|0);
      var $5554$0=HEAP32[(($ld$3926$0)>>2)];
      var $ld$3927$1=(($5553+4)|0);
      var $5554$1=HEAP32[(($ld$3927$1)>>2)];
      var $5555$0 = _i64Add($5554$0,$5554$1,$5552$0,$5552$1); var $5555$1 = tempRet0;
      var $st$3928$0=(($5553)|0);
      HEAP32[(($st$3928$0)>>2)]=$5555$0;
      var $st$3929$1=(($5553+4)|0);
      HEAP32[(($st$3929$1)>>2)]=$5555$1;
      var $ld$3930$0=(($t0)|0);
      var $5556$0=HEAP32[(($ld$3930$0)>>2)];
      var $ld$3931$1=(($t0+4)|0);
      var $5556$1=HEAP32[(($ld$3931$1)>>2)];
      var $ld$3932$0=(($t1)|0);
      var $5557$0=HEAP32[(($ld$3932$0)>>2)];
      var $ld$3933$1=(($t1+4)|0);
      var $5557$1=HEAP32[(($ld$3933$1)>>2)];
      var $5558$0 = _i64Add($5556$0,$5556$1,$5557$0,$5557$1); var $5558$1 = tempRet0;
      var $5559=(($S+16)|0);
      var $st$3934$0=(($5559)|0);
      HEAP32[(($st$3934$0)>>2)]=$5558$0;
      var $st$3935$1=(($5559+4)|0);
      HEAP32[(($st$3935$1)>>2)]=$5558$1;
      var $5560=(($S+8)|0);
      var $ld$3936$0=(($5560)|0);
      var $5561$0=HEAP32[(($ld$3936$0)>>2)];
      var $ld$3937$1=(($5560+4)|0);
      var $5561$1=HEAP32[(($ld$3937$1)>>2)];
      var $5562=(($S+48)|0);
      var $ld$3938$0=(($5562)|0);
      var $5563$0=HEAP32[(($ld$3938$0)>>2)];
      var $ld$3939$1=(($5562+4)|0);
      var $5563$1=HEAP32[(($ld$3939$1)>>2)];
      var $5564$0=($5563$0 >>> 14) | ($5563$1 << 18);
      var $5564$1=($5563$1 >>> 14) | (0 << 18);
      var $5565=(($S+48)|0);
      var $ld$3940$0=(($5565)|0);
      var $5566$0=HEAP32[(($ld$3940$0)>>2)];
      var $ld$3941$1=(($5565+4)|0);
      var $5566$1=HEAP32[(($ld$3941$1)>>2)];
      var $5567$0=(0 << 18) | (0 >>> 14);
      var $5567$1=($5566$0 << 18) | (0 >>> 14);
      var $5568$0=$5564$0 | $5567$0;
      var $5568$1=$5564$1 | $5567$1;
      var $5569=(($S+48)|0);
      var $ld$3942$0=(($5569)|0);
      var $5570$0=HEAP32[(($ld$3942$0)>>2)];
      var $ld$3943$1=(($5569+4)|0);
      var $5570$1=HEAP32[(($ld$3943$1)>>2)];
      var $5571$0=($5570$0 >>> 18) | ($5570$1 << 14);
      var $5571$1=($5570$1 >>> 18) | (0 << 14);
      var $5572=(($S+48)|0);
      var $ld$3944$0=(($5572)|0);
      var $5573$0=HEAP32[(($ld$3944$0)>>2)];
      var $ld$3945$1=(($5572+4)|0);
      var $5573$1=HEAP32[(($ld$3945$1)>>2)];
      var $5574$0=(0 << 14) | (0 >>> 18);
      var $5574$1=($5573$0 << 14) | (0 >>> 18);
      var $5575$0=$5571$0 | $5574$0;
      var $5575$1=$5571$1 | $5574$1;
      var $5576$0=$5568$0 ^ $5575$0;
      var $5576$1=$5568$1 ^ $5575$1;
      var $5577=(($S+48)|0);
      var $ld$3946$0=(($5577)|0);
      var $5578$0=HEAP32[(($ld$3946$0)>>2)];
      var $ld$3947$1=(($5577+4)|0);
      var $5578$1=HEAP32[(($ld$3947$1)>>2)];
      var $5579$0=($5578$1 >>> 9) | (0 << 23);
      var $5579$1=(0 >>> 9) | (0 << 23);
      var $5580=(($S+48)|0);
      var $ld$3948$0=(($5580)|0);
      var $5581$0=HEAP32[(($ld$3948$0)>>2)];
      var $ld$3949$1=(($5580+4)|0);
      var $5581$1=HEAP32[(($ld$3949$1)>>2)];
      var $5582$0=($5581$0 << 23) | (0 >>> 9);
      var $5582$1=($5581$1 << 23) | ($5581$0 >>> 9);
      var $5583$0=$5579$0 | $5582$0;
      var $5583$1=$5579$1 | $5582$1;
      var $5584$0=$5576$0 ^ $5583$0;
      var $5584$1=$5576$1 ^ $5583$1;
      var $5585$0 = _i64Add($5561$0,$5561$1,$5584$0,$5584$1); var $5585$1 = tempRet0;
      var $5586=(($S)|0);
      var $ld$3950$0=(($5586)|0);
      var $5587$0=HEAP32[(($ld$3950$0)>>2)];
      var $ld$3951$1=(($5586+4)|0);
      var $5587$1=HEAP32[(($ld$3951$1)>>2)];
      var $5588=(($S+48)|0);
      var $ld$3952$0=(($5588)|0);
      var $5589$0=HEAP32[(($ld$3952$0)>>2)];
      var $ld$3953$1=(($5588+4)|0);
      var $5589$1=HEAP32[(($ld$3953$1)>>2)];
      var $5590=(($S+56)|0);
      var $ld$3954$0=(($5590)|0);
      var $5591$0=HEAP32[(($ld$3954$0)>>2)];
      var $ld$3955$1=(($5590+4)|0);
      var $5591$1=HEAP32[(($ld$3955$1)>>2)];
      var $5592=(($S)|0);
      var $ld$3956$0=(($5592)|0);
      var $5593$0=HEAP32[(($ld$3956$0)>>2)];
      var $ld$3957$1=(($5592+4)|0);
      var $5593$1=HEAP32[(($ld$3957$1)>>2)];
      var $5594$0=$5591$0 ^ $5593$0;
      var $5594$1=$5591$1 ^ $5593$1;
      var $5595$0=$5589$0 & $5594$0;
      var $5595$1=$5589$1 & $5594$1;
      var $5596$0=$5587$0 ^ $5595$0;
      var $5596$1=$5587$1 ^ $5595$1;
      var $5597$0 = _i64Add($5585$0,$5585$1,$5596$0,$5596$1); var $5597$1 = tempRet0;
      var $$etemp$3958$0=-1295615723;
      var $$etemp$3958$1=-1090935817;
      var $5598$0 = _i64Add($5597$0,$5597$1,$$etemp$3958$0,$$etemp$3958$1); var $5598$1 = tempRet0;
      var $5599=(($W+496)|0);
      var $ld$3959$0=(($5599)|0);
      var $5600$0=HEAP32[(($ld$3959$0)>>2)];
      var $ld$3960$1=(($5599+4)|0);
      var $5600$1=HEAP32[(($ld$3960$1)>>2)];
      var $5601$0 = _i64Add($5598$0,$5598$1,$5600$0,$5600$1); var $5601$1 = tempRet0;
      var $st$3961$0=(($t0)|0);
      HEAP32[(($st$3961$0)>>2)]=$5601$0;
      var $st$3962$1=(($t0+4)|0);
      HEAP32[(($st$3962$1)>>2)]=$5601$1;
      var $5602=(($S+16)|0);
      var $ld$3963$0=(($5602)|0);
      var $5603$0=HEAP32[(($ld$3963$0)>>2)];
      var $ld$3964$1=(($5602+4)|0);
      var $5603$1=HEAP32[(($ld$3964$1)>>2)];
      var $5604$0=($5603$0 >>> 28) | ($5603$1 << 4);
      var $5604$1=($5603$1 >>> 28) | (0 << 4);
      var $5605=(($S+16)|0);
      var $ld$3965$0=(($5605)|0);
      var $5606$0=HEAP32[(($ld$3965$0)>>2)];
      var $ld$3966$1=(($5605+4)|0);
      var $5606$1=HEAP32[(($ld$3966$1)>>2)];
      var $5607$0=(0 << 4) | (0 >>> 28);
      var $5607$1=($5606$0 << 4) | (0 >>> 28);
      var $5608$0=$5604$0 | $5607$0;
      var $5608$1=$5604$1 | $5607$1;
      var $5609=(($S+16)|0);
      var $ld$3967$0=(($5609)|0);
      var $5610$0=HEAP32[(($ld$3967$0)>>2)];
      var $ld$3968$1=(($5609+4)|0);
      var $5610$1=HEAP32[(($ld$3968$1)>>2)];
      var $5611$0=($5610$1 >>> 2) | (0 << 30);
      var $5611$1=(0 >>> 2) | (0 << 30);
      var $5612=(($S+16)|0);
      var $ld$3969$0=(($5612)|0);
      var $5613$0=HEAP32[(($ld$3969$0)>>2)];
      var $ld$3970$1=(($5612+4)|0);
      var $5613$1=HEAP32[(($ld$3970$1)>>2)];
      var $5614$0=($5613$0 << 30) | (0 >>> 2);
      var $5614$1=($5613$1 << 30) | ($5613$0 >>> 2);
      var $5615$0=$5611$0 | $5614$0;
      var $5615$1=$5611$1 | $5614$1;
      var $5616$0=$5608$0 ^ $5615$0;
      var $5616$1=$5608$1 ^ $5615$1;
      var $5617=(($S+16)|0);
      var $ld$3971$0=(($5617)|0);
      var $5618$0=HEAP32[(($ld$3971$0)>>2)];
      var $ld$3972$1=(($5617+4)|0);
      var $5618$1=HEAP32[(($ld$3972$1)>>2)];
      var $5619$0=($5618$1 >>> 7) | (0 << 25);
      var $5619$1=(0 >>> 7) | (0 << 25);
      var $5620=(($S+16)|0);
      var $ld$3973$0=(($5620)|0);
      var $5621$0=HEAP32[(($ld$3973$0)>>2)];
      var $ld$3974$1=(($5620+4)|0);
      var $5621$1=HEAP32[(($ld$3974$1)>>2)];
      var $5622$0=($5621$0 << 25) | (0 >>> 7);
      var $5622$1=($5621$1 << 25) | ($5621$0 >>> 7);
      var $5623$0=$5619$0 | $5622$0;
      var $5623$1=$5619$1 | $5622$1;
      var $5624$0=$5616$0 ^ $5623$0;
      var $5624$1=$5616$1 ^ $5623$1;
      var $5625=(($S+16)|0);
      var $ld$3975$0=(($5625)|0);
      var $5626$0=HEAP32[(($ld$3975$0)>>2)];
      var $ld$3976$1=(($5625+4)|0);
      var $5626$1=HEAP32[(($ld$3976$1)>>2)];
      var $5627=(($S+24)|0);
      var $ld$3977$0=(($5627)|0);
      var $5628$0=HEAP32[(($ld$3977$0)>>2)];
      var $ld$3978$1=(($5627+4)|0);
      var $5628$1=HEAP32[(($ld$3978$1)>>2)];
      var $5629$0=$5626$0 | $5628$0;
      var $5629$1=$5626$1 | $5628$1;
      var $5630=(($S+32)|0);
      var $ld$3979$0=(($5630)|0);
      var $5631$0=HEAP32[(($ld$3979$0)>>2)];
      var $ld$3980$1=(($5630+4)|0);
      var $5631$1=HEAP32[(($ld$3980$1)>>2)];
      var $5632$0=$5629$0 & $5631$0;
      var $5632$1=$5629$1 & $5631$1;
      var $5633=(($S+16)|0);
      var $ld$3981$0=(($5633)|0);
      var $5634$0=HEAP32[(($ld$3981$0)>>2)];
      var $ld$3982$1=(($5633+4)|0);
      var $5634$1=HEAP32[(($ld$3982$1)>>2)];
      var $5635=(($S+24)|0);
      var $ld$3983$0=(($5635)|0);
      var $5636$0=HEAP32[(($ld$3983$0)>>2)];
      var $ld$3984$1=(($5635+4)|0);
      var $5636$1=HEAP32[(($ld$3984$1)>>2)];
      var $5637$0=$5634$0 & $5636$0;
      var $5637$1=$5634$1 & $5636$1;
      var $5638$0=$5632$0 | $5637$0;
      var $5638$1=$5632$1 | $5637$1;
      var $5639$0 = _i64Add($5624$0,$5624$1,$5638$0,$5638$1); var $5639$1 = tempRet0;
      var $st$3985$0=(($t1)|0);
      HEAP32[(($st$3985$0)>>2)]=$5639$0;
      var $st$3986$1=(($t1+4)|0);
      HEAP32[(($st$3986$1)>>2)]=$5639$1;
      var $ld$3987$0=(($t0)|0);
      var $5640$0=HEAP32[(($ld$3987$0)>>2)];
      var $ld$3988$1=(($t0+4)|0);
      var $5640$1=HEAP32[(($ld$3988$1)>>2)];
      var $5641=(($S+40)|0);
      var $ld$3989$0=(($5641)|0);
      var $5642$0=HEAP32[(($ld$3989$0)>>2)];
      var $ld$3990$1=(($5641+4)|0);
      var $5642$1=HEAP32[(($ld$3990$1)>>2)];
      var $5643$0 = _i64Add($5642$0,$5642$1,$5640$0,$5640$1); var $5643$1 = tempRet0;
      var $st$3991$0=(($5641)|0);
      HEAP32[(($st$3991$0)>>2)]=$5643$0;
      var $st$3992$1=(($5641+4)|0);
      HEAP32[(($st$3992$1)>>2)]=$5643$1;
      var $ld$3993$0=(($t0)|0);
      var $5644$0=HEAP32[(($ld$3993$0)>>2)];
      var $ld$3994$1=(($t0+4)|0);
      var $5644$1=HEAP32[(($ld$3994$1)>>2)];
      var $ld$3995$0=(($t1)|0);
      var $5645$0=HEAP32[(($ld$3995$0)>>2)];
      var $ld$3996$1=(($t1+4)|0);
      var $5645$1=HEAP32[(($ld$3996$1)>>2)];
      var $5646$0 = _i64Add($5644$0,$5644$1,$5645$0,$5645$1); var $5646$1 = tempRet0;
      var $5647=(($S+8)|0);
      var $st$3997$0=(($5647)|0);
      HEAP32[(($st$3997$0)>>2)]=$5646$0;
      var $st$3998$1=(($5647+4)|0);
      HEAP32[(($st$3998$1)>>2)]=$5646$1;
      var $5648=(($S)|0);
      var $ld$3999$0=(($5648)|0);
      var $5649$0=HEAP32[(($ld$3999$0)>>2)];
      var $ld$4000$1=(($5648+4)|0);
      var $5649$1=HEAP32[(($ld$4000$1)>>2)];
      var $5650=(($S+40)|0);
      var $ld$4001$0=(($5650)|0);
      var $5651$0=HEAP32[(($ld$4001$0)>>2)];
      var $ld$4002$1=(($5650+4)|0);
      var $5651$1=HEAP32[(($ld$4002$1)>>2)];
      var $5652$0=($5651$0 >>> 14) | ($5651$1 << 18);
      var $5652$1=($5651$1 >>> 14) | (0 << 18);
      var $5653=(($S+40)|0);
      var $ld$4003$0=(($5653)|0);
      var $5654$0=HEAP32[(($ld$4003$0)>>2)];
      var $ld$4004$1=(($5653+4)|0);
      var $5654$1=HEAP32[(($ld$4004$1)>>2)];
      var $5655$0=(0 << 18) | (0 >>> 14);
      var $5655$1=($5654$0 << 18) | (0 >>> 14);
      var $5656$0=$5652$0 | $5655$0;
      var $5656$1=$5652$1 | $5655$1;
      var $5657=(($S+40)|0);
      var $ld$4005$0=(($5657)|0);
      var $5658$0=HEAP32[(($ld$4005$0)>>2)];
      var $ld$4006$1=(($5657+4)|0);
      var $5658$1=HEAP32[(($ld$4006$1)>>2)];
      var $5659$0=($5658$0 >>> 18) | ($5658$1 << 14);
      var $5659$1=($5658$1 >>> 18) | (0 << 14);
      var $5660=(($S+40)|0);
      var $ld$4007$0=(($5660)|0);
      var $5661$0=HEAP32[(($ld$4007$0)>>2)];
      var $ld$4008$1=(($5660+4)|0);
      var $5661$1=HEAP32[(($ld$4008$1)>>2)];
      var $5662$0=(0 << 14) | (0 >>> 18);
      var $5662$1=($5661$0 << 14) | (0 >>> 18);
      var $5663$0=$5659$0 | $5662$0;
      var $5663$1=$5659$1 | $5662$1;
      var $5664$0=$5656$0 ^ $5663$0;
      var $5664$1=$5656$1 ^ $5663$1;
      var $5665=(($S+40)|0);
      var $ld$4009$0=(($5665)|0);
      var $5666$0=HEAP32[(($ld$4009$0)>>2)];
      var $ld$4010$1=(($5665+4)|0);
      var $5666$1=HEAP32[(($ld$4010$1)>>2)];
      var $5667$0=($5666$1 >>> 9) | (0 << 23);
      var $5667$1=(0 >>> 9) | (0 << 23);
      var $5668=(($S+40)|0);
      var $ld$4011$0=(($5668)|0);
      var $5669$0=HEAP32[(($ld$4011$0)>>2)];
      var $ld$4012$1=(($5668+4)|0);
      var $5669$1=HEAP32[(($ld$4012$1)>>2)];
      var $5670$0=($5669$0 << 23) | (0 >>> 9);
      var $5670$1=($5669$1 << 23) | ($5669$0 >>> 9);
      var $5671$0=$5667$0 | $5670$0;
      var $5671$1=$5667$1 | $5670$1;
      var $5672$0=$5664$0 ^ $5671$0;
      var $5672$1=$5664$1 ^ $5671$1;
      var $5673$0 = _i64Add($5649$0,$5649$1,$5672$0,$5672$1); var $5673$1 = tempRet0;
      var $5674=(($S+56)|0);
      var $ld$4013$0=(($5674)|0);
      var $5675$0=HEAP32[(($ld$4013$0)>>2)];
      var $ld$4014$1=(($5674+4)|0);
      var $5675$1=HEAP32[(($ld$4014$1)>>2)];
      var $5676=(($S+40)|0);
      var $ld$4015$0=(($5676)|0);
      var $5677$0=HEAP32[(($ld$4015$0)>>2)];
      var $ld$4016$1=(($5676+4)|0);
      var $5677$1=HEAP32[(($ld$4016$1)>>2)];
      var $5678=(($S+48)|0);
      var $ld$4017$0=(($5678)|0);
      var $5679$0=HEAP32[(($ld$4017$0)>>2)];
      var $ld$4018$1=(($5678+4)|0);
      var $5679$1=HEAP32[(($ld$4018$1)>>2)];
      var $5680=(($S+56)|0);
      var $ld$4019$0=(($5680)|0);
      var $5681$0=HEAP32[(($ld$4019$0)>>2)];
      var $ld$4020$1=(($5680+4)|0);
      var $5681$1=HEAP32[(($ld$4020$1)>>2)];
      var $5682$0=$5679$0 ^ $5681$0;
      var $5682$1=$5679$1 ^ $5681$1;
      var $5683$0=$5677$0 & $5682$0;
      var $5683$1=$5677$1 & $5682$1;
      var $5684$0=$5675$0 ^ $5683$0;
      var $5684$1=$5675$1 ^ $5683$1;
      var $5685$0 = _i64Add($5673$0,$5673$1,$5684$0,$5684$1); var $5685$1 = tempRet0;
      var $$etemp$4021$0=-479046869;
      var $$etemp$4021$1=-965641998;
      var $5686$0 = _i64Add($5685$0,$5685$1,$$etemp$4021$0,$$etemp$4021$1); var $5686$1 = tempRet0;
      var $5687=(($W+504)|0);
      var $ld$4022$0=(($5687)|0);
      var $5688$0=HEAP32[(($ld$4022$0)>>2)];
      var $ld$4023$1=(($5687+4)|0);
      var $5688$1=HEAP32[(($ld$4023$1)>>2)];
      var $5689$0 = _i64Add($5686$0,$5686$1,$5688$0,$5688$1); var $5689$1 = tempRet0;
      var $st$4024$0=(($t0)|0);
      HEAP32[(($st$4024$0)>>2)]=$5689$0;
      var $st$4025$1=(($t0+4)|0);
      HEAP32[(($st$4025$1)>>2)]=$5689$1;
      var $5690=(($S+8)|0);
      var $ld$4026$0=(($5690)|0);
      var $5691$0=HEAP32[(($ld$4026$0)>>2)];
      var $ld$4027$1=(($5690+4)|0);
      var $5691$1=HEAP32[(($ld$4027$1)>>2)];
      var $5692$0=($5691$0 >>> 28) | ($5691$1 << 4);
      var $5692$1=($5691$1 >>> 28) | (0 << 4);
      var $5693=(($S+8)|0);
      var $ld$4028$0=(($5693)|0);
      var $5694$0=HEAP32[(($ld$4028$0)>>2)];
      var $ld$4029$1=(($5693+4)|0);
      var $5694$1=HEAP32[(($ld$4029$1)>>2)];
      var $5695$0=(0 << 4) | (0 >>> 28);
      var $5695$1=($5694$0 << 4) | (0 >>> 28);
      var $5696$0=$5692$0 | $5695$0;
      var $5696$1=$5692$1 | $5695$1;
      var $5697=(($S+8)|0);
      var $ld$4030$0=(($5697)|0);
      var $5698$0=HEAP32[(($ld$4030$0)>>2)];
      var $ld$4031$1=(($5697+4)|0);
      var $5698$1=HEAP32[(($ld$4031$1)>>2)];
      var $5699$0=($5698$1 >>> 2) | (0 << 30);
      var $5699$1=(0 >>> 2) | (0 << 30);
      var $5700=(($S+8)|0);
      var $ld$4032$0=(($5700)|0);
      var $5701$0=HEAP32[(($ld$4032$0)>>2)];
      var $ld$4033$1=(($5700+4)|0);
      var $5701$1=HEAP32[(($ld$4033$1)>>2)];
      var $5702$0=($5701$0 << 30) | (0 >>> 2);
      var $5702$1=($5701$1 << 30) | ($5701$0 >>> 2);
      var $5703$0=$5699$0 | $5702$0;
      var $5703$1=$5699$1 | $5702$1;
      var $5704$0=$5696$0 ^ $5703$0;
      var $5704$1=$5696$1 ^ $5703$1;
      var $5705=(($S+8)|0);
      var $ld$4034$0=(($5705)|0);
      var $5706$0=HEAP32[(($ld$4034$0)>>2)];
      var $ld$4035$1=(($5705+4)|0);
      var $5706$1=HEAP32[(($ld$4035$1)>>2)];
      var $5707$0=($5706$1 >>> 7) | (0 << 25);
      var $5707$1=(0 >>> 7) | (0 << 25);
      var $5708=(($S+8)|0);
      var $ld$4036$0=(($5708)|0);
      var $5709$0=HEAP32[(($ld$4036$0)>>2)];
      var $ld$4037$1=(($5708+4)|0);
      var $5709$1=HEAP32[(($ld$4037$1)>>2)];
      var $5710$0=($5709$0 << 25) | (0 >>> 7);
      var $5710$1=($5709$1 << 25) | ($5709$0 >>> 7);
      var $5711$0=$5707$0 | $5710$0;
      var $5711$1=$5707$1 | $5710$1;
      var $5712$0=$5704$0 ^ $5711$0;
      var $5712$1=$5704$1 ^ $5711$1;
      var $5713=(($S+8)|0);
      var $ld$4038$0=(($5713)|0);
      var $5714$0=HEAP32[(($ld$4038$0)>>2)];
      var $ld$4039$1=(($5713+4)|0);
      var $5714$1=HEAP32[(($ld$4039$1)>>2)];
      var $5715=(($S+16)|0);
      var $ld$4040$0=(($5715)|0);
      var $5716$0=HEAP32[(($ld$4040$0)>>2)];
      var $ld$4041$1=(($5715+4)|0);
      var $5716$1=HEAP32[(($ld$4041$1)>>2)];
      var $5717$0=$5714$0 | $5716$0;
      var $5717$1=$5714$1 | $5716$1;
      var $5718=(($S+24)|0);
      var $ld$4042$0=(($5718)|0);
      var $5719$0=HEAP32[(($ld$4042$0)>>2)];
      var $ld$4043$1=(($5718+4)|0);
      var $5719$1=HEAP32[(($ld$4043$1)>>2)];
      var $5720$0=$5717$0 & $5719$0;
      var $5720$1=$5717$1 & $5719$1;
      var $5721=(($S+8)|0);
      var $ld$4044$0=(($5721)|0);
      var $5722$0=HEAP32[(($ld$4044$0)>>2)];
      var $ld$4045$1=(($5721+4)|0);
      var $5722$1=HEAP32[(($ld$4045$1)>>2)];
      var $5723=(($S+16)|0);
      var $ld$4046$0=(($5723)|0);
      var $5724$0=HEAP32[(($ld$4046$0)>>2)];
      var $ld$4047$1=(($5723+4)|0);
      var $5724$1=HEAP32[(($ld$4047$1)>>2)];
      var $5725$0=$5722$0 & $5724$0;
      var $5725$1=$5722$1 & $5724$1;
      var $5726$0=$5720$0 | $5725$0;
      var $5726$1=$5720$1 | $5725$1;
      var $5727$0 = _i64Add($5712$0,$5712$1,$5726$0,$5726$1); var $5727$1 = tempRet0;
      var $st$4048$0=(($t1)|0);
      HEAP32[(($st$4048$0)>>2)]=$5727$0;
      var $st$4049$1=(($t1+4)|0);
      HEAP32[(($st$4049$1)>>2)]=$5727$1;
      var $ld$4050$0=(($t0)|0);
      var $5728$0=HEAP32[(($ld$4050$0)>>2)];
      var $ld$4051$1=(($t0+4)|0);
      var $5728$1=HEAP32[(($ld$4051$1)>>2)];
      var $5729=(($S+32)|0);
      var $ld$4052$0=(($5729)|0);
      var $5730$0=HEAP32[(($ld$4052$0)>>2)];
      var $ld$4053$1=(($5729+4)|0);
      var $5730$1=HEAP32[(($ld$4053$1)>>2)];
      var $5731$0 = _i64Add($5730$0,$5730$1,$5728$0,$5728$1); var $5731$1 = tempRet0;
      var $st$4054$0=(($5729)|0);
      HEAP32[(($st$4054$0)>>2)]=$5731$0;
      var $st$4055$1=(($5729+4)|0);
      HEAP32[(($st$4055$1)>>2)]=$5731$1;
      var $ld$4056$0=(($t0)|0);
      var $5732$0=HEAP32[(($ld$4056$0)>>2)];
      var $ld$4057$1=(($t0+4)|0);
      var $5732$1=HEAP32[(($ld$4057$1)>>2)];
      var $ld$4058$0=(($t1)|0);
      var $5733$0=HEAP32[(($ld$4058$0)>>2)];
      var $ld$4059$1=(($t1+4)|0);
      var $5733$1=HEAP32[(($ld$4059$1)>>2)];
      var $5734$0 = _i64Add($5732$0,$5732$1,$5733$0,$5733$1); var $5734$1 = tempRet0;
      var $5735=(($S)|0);
      var $st$4060$0=(($5735)|0);
      HEAP32[(($st$4060$0)>>2)]=$5734$0;
      var $st$4061$1=(($5735+4)|0);
      HEAP32[(($st$4061$1)>>2)]=$5734$1;
      var $5736=(($S+56)|0);
      var $ld$4062$0=(($5736)|0);
      var $5737$0=HEAP32[(($ld$4062$0)>>2)];
      var $ld$4063$1=(($5736+4)|0);
      var $5737$1=HEAP32[(($ld$4063$1)>>2)];
      var $5738=(($S+32)|0);
      var $ld$4064$0=(($5738)|0);
      var $5739$0=HEAP32[(($ld$4064$0)>>2)];
      var $ld$4065$1=(($5738+4)|0);
      var $5739$1=HEAP32[(($ld$4065$1)>>2)];
      var $5740$0=($5739$0 >>> 14) | ($5739$1 << 18);
      var $5740$1=($5739$1 >>> 14) | (0 << 18);
      var $5741=(($S+32)|0);
      var $ld$4066$0=(($5741)|0);
      var $5742$0=HEAP32[(($ld$4066$0)>>2)];
      var $ld$4067$1=(($5741+4)|0);
      var $5742$1=HEAP32[(($ld$4067$1)>>2)];
      var $5743$0=(0 << 18) | (0 >>> 14);
      var $5743$1=($5742$0 << 18) | (0 >>> 14);
      var $5744$0=$5740$0 | $5743$0;
      var $5744$1=$5740$1 | $5743$1;
      var $5745=(($S+32)|0);
      var $ld$4068$0=(($5745)|0);
      var $5746$0=HEAP32[(($ld$4068$0)>>2)];
      var $ld$4069$1=(($5745+4)|0);
      var $5746$1=HEAP32[(($ld$4069$1)>>2)];
      var $5747$0=($5746$0 >>> 18) | ($5746$1 << 14);
      var $5747$1=($5746$1 >>> 18) | (0 << 14);
      var $5748=(($S+32)|0);
      var $ld$4070$0=(($5748)|0);
      var $5749$0=HEAP32[(($ld$4070$0)>>2)];
      var $ld$4071$1=(($5748+4)|0);
      var $5749$1=HEAP32[(($ld$4071$1)>>2)];
      var $5750$0=(0 << 14) | (0 >>> 18);
      var $5750$1=($5749$0 << 14) | (0 >>> 18);
      var $5751$0=$5747$0 | $5750$0;
      var $5751$1=$5747$1 | $5750$1;
      var $5752$0=$5744$0 ^ $5751$0;
      var $5752$1=$5744$1 ^ $5751$1;
      var $5753=(($S+32)|0);
      var $ld$4072$0=(($5753)|0);
      var $5754$0=HEAP32[(($ld$4072$0)>>2)];
      var $ld$4073$1=(($5753+4)|0);
      var $5754$1=HEAP32[(($ld$4073$1)>>2)];
      var $5755$0=($5754$1 >>> 9) | (0 << 23);
      var $5755$1=(0 >>> 9) | (0 << 23);
      var $5756=(($S+32)|0);
      var $ld$4074$0=(($5756)|0);
      var $5757$0=HEAP32[(($ld$4074$0)>>2)];
      var $ld$4075$1=(($5756+4)|0);
      var $5757$1=HEAP32[(($ld$4075$1)>>2)];
      var $5758$0=($5757$0 << 23) | (0 >>> 9);
      var $5758$1=($5757$1 << 23) | ($5757$0 >>> 9);
      var $5759$0=$5755$0 | $5758$0;
      var $5759$1=$5755$1 | $5758$1;
      var $5760$0=$5752$0 ^ $5759$0;
      var $5760$1=$5752$1 ^ $5759$1;
      var $5761$0 = _i64Add($5737$0,$5737$1,$5760$0,$5760$1); var $5761$1 = tempRet0;
      var $5762=(($S+48)|0);
      var $ld$4076$0=(($5762)|0);
      var $5763$0=HEAP32[(($ld$4076$0)>>2)];
      var $ld$4077$1=(($5762+4)|0);
      var $5763$1=HEAP32[(($ld$4077$1)>>2)];
      var $5764=(($S+32)|0);
      var $ld$4078$0=(($5764)|0);
      var $5765$0=HEAP32[(($ld$4078$0)>>2)];
      var $ld$4079$1=(($5764+4)|0);
      var $5765$1=HEAP32[(($ld$4079$1)>>2)];
      var $5766=(($S+40)|0);
      var $ld$4080$0=(($5766)|0);
      var $5767$0=HEAP32[(($ld$4080$0)>>2)];
      var $ld$4081$1=(($5766+4)|0);
      var $5767$1=HEAP32[(($ld$4081$1)>>2)];
      var $5768=(($S+48)|0);
      var $ld$4082$0=(($5768)|0);
      var $5769$0=HEAP32[(($ld$4082$0)>>2)];
      var $ld$4083$1=(($5768+4)|0);
      var $5769$1=HEAP32[(($ld$4083$1)>>2)];
      var $5770$0=$5767$0 ^ $5769$0;
      var $5770$1=$5767$1 ^ $5769$1;
      var $5771$0=$5765$0 & $5770$0;
      var $5771$1=$5765$1 & $5770$1;
      var $5772$0=$5763$0 ^ $5771$0;
      var $5772$1=$5763$1 ^ $5771$1;
      var $5773$0 = _i64Add($5761$0,$5761$1,$5772$0,$5772$1); var $5773$1 = tempRet0;
      var $$etemp$4084$0=-366583396;
      var $$etemp$4084$1=-903397682;
      var $5774$0 = _i64Add($5773$0,$5773$1,$$etemp$4084$0,$$etemp$4084$1); var $5774$1 = tempRet0;
      var $5775=(($W+512)|0);
      var $ld$4085$0=(($5775)|0);
      var $5776$0=HEAP32[(($ld$4085$0)>>2)];
      var $ld$4086$1=(($5775+4)|0);
      var $5776$1=HEAP32[(($ld$4086$1)>>2)];
      var $5777$0 = _i64Add($5774$0,$5774$1,$5776$0,$5776$1); var $5777$1 = tempRet0;
      var $st$4087$0=(($t0)|0);
      HEAP32[(($st$4087$0)>>2)]=$5777$0;
      var $st$4088$1=(($t0+4)|0);
      HEAP32[(($st$4088$1)>>2)]=$5777$1;
      var $5778=(($S)|0);
      var $ld$4089$0=(($5778)|0);
      var $5779$0=HEAP32[(($ld$4089$0)>>2)];
      var $ld$4090$1=(($5778+4)|0);
      var $5779$1=HEAP32[(($ld$4090$1)>>2)];
      var $5780$0=($5779$0 >>> 28) | ($5779$1 << 4);
      var $5780$1=($5779$1 >>> 28) | (0 << 4);
      var $5781=(($S)|0);
      var $ld$4091$0=(($5781)|0);
      var $5782$0=HEAP32[(($ld$4091$0)>>2)];
      var $ld$4092$1=(($5781+4)|0);
      var $5782$1=HEAP32[(($ld$4092$1)>>2)];
      var $5783$0=(0 << 4) | (0 >>> 28);
      var $5783$1=($5782$0 << 4) | (0 >>> 28);
      var $5784$0=$5780$0 | $5783$0;
      var $5784$1=$5780$1 | $5783$1;
      var $5785=(($S)|0);
      var $ld$4093$0=(($5785)|0);
      var $5786$0=HEAP32[(($ld$4093$0)>>2)];
      var $ld$4094$1=(($5785+4)|0);
      var $5786$1=HEAP32[(($ld$4094$1)>>2)];
      var $5787$0=($5786$1 >>> 2) | (0 << 30);
      var $5787$1=(0 >>> 2) | (0 << 30);
      var $5788=(($S)|0);
      var $ld$4095$0=(($5788)|0);
      var $5789$0=HEAP32[(($ld$4095$0)>>2)];
      var $ld$4096$1=(($5788+4)|0);
      var $5789$1=HEAP32[(($ld$4096$1)>>2)];
      var $5790$0=($5789$0 << 30) | (0 >>> 2);
      var $5790$1=($5789$1 << 30) | ($5789$0 >>> 2);
      var $5791$0=$5787$0 | $5790$0;
      var $5791$1=$5787$1 | $5790$1;
      var $5792$0=$5784$0 ^ $5791$0;
      var $5792$1=$5784$1 ^ $5791$1;
      var $5793=(($S)|0);
      var $ld$4097$0=(($5793)|0);
      var $5794$0=HEAP32[(($ld$4097$0)>>2)];
      var $ld$4098$1=(($5793+4)|0);
      var $5794$1=HEAP32[(($ld$4098$1)>>2)];
      var $5795$0=($5794$1 >>> 7) | (0 << 25);
      var $5795$1=(0 >>> 7) | (0 << 25);
      var $5796=(($S)|0);
      var $ld$4099$0=(($5796)|0);
      var $5797$0=HEAP32[(($ld$4099$0)>>2)];
      var $ld$4100$1=(($5796+4)|0);
      var $5797$1=HEAP32[(($ld$4100$1)>>2)];
      var $5798$0=($5797$0 << 25) | (0 >>> 7);
      var $5798$1=($5797$1 << 25) | ($5797$0 >>> 7);
      var $5799$0=$5795$0 | $5798$0;
      var $5799$1=$5795$1 | $5798$1;
      var $5800$0=$5792$0 ^ $5799$0;
      var $5800$1=$5792$1 ^ $5799$1;
      var $5801=(($S)|0);
      var $ld$4101$0=(($5801)|0);
      var $5802$0=HEAP32[(($ld$4101$0)>>2)];
      var $ld$4102$1=(($5801+4)|0);
      var $5802$1=HEAP32[(($ld$4102$1)>>2)];
      var $5803=(($S+8)|0);
      var $ld$4103$0=(($5803)|0);
      var $5804$0=HEAP32[(($ld$4103$0)>>2)];
      var $ld$4104$1=(($5803+4)|0);
      var $5804$1=HEAP32[(($ld$4104$1)>>2)];
      var $5805$0=$5802$0 | $5804$0;
      var $5805$1=$5802$1 | $5804$1;
      var $5806=(($S+16)|0);
      var $ld$4105$0=(($5806)|0);
      var $5807$0=HEAP32[(($ld$4105$0)>>2)];
      var $ld$4106$1=(($5806+4)|0);
      var $5807$1=HEAP32[(($ld$4106$1)>>2)];
      var $5808$0=$5805$0 & $5807$0;
      var $5808$1=$5805$1 & $5807$1;
      var $5809=(($S)|0);
      var $ld$4107$0=(($5809)|0);
      var $5810$0=HEAP32[(($ld$4107$0)>>2)];
      var $ld$4108$1=(($5809+4)|0);
      var $5810$1=HEAP32[(($ld$4108$1)>>2)];
      var $5811=(($S+8)|0);
      var $ld$4109$0=(($5811)|0);
      var $5812$0=HEAP32[(($ld$4109$0)>>2)];
      var $ld$4110$1=(($5811+4)|0);
      var $5812$1=HEAP32[(($ld$4110$1)>>2)];
      var $5813$0=$5810$0 & $5812$0;
      var $5813$1=$5810$1 & $5812$1;
      var $5814$0=$5808$0 | $5813$0;
      var $5814$1=$5808$1 | $5813$1;
      var $5815$0 = _i64Add($5800$0,$5800$1,$5814$0,$5814$1); var $5815$1 = tempRet0;
      var $st$4111$0=(($t1)|0);
      HEAP32[(($st$4111$0)>>2)]=$5815$0;
      var $st$4112$1=(($t1+4)|0);
      HEAP32[(($st$4112$1)>>2)]=$5815$1;
      var $ld$4113$0=(($t0)|0);
      var $5816$0=HEAP32[(($ld$4113$0)>>2)];
      var $ld$4114$1=(($t0+4)|0);
      var $5816$1=HEAP32[(($ld$4114$1)>>2)];
      var $5817=(($S+24)|0);
      var $ld$4115$0=(($5817)|0);
      var $5818$0=HEAP32[(($ld$4115$0)>>2)];
      var $ld$4116$1=(($5817+4)|0);
      var $5818$1=HEAP32[(($ld$4116$1)>>2)];
      var $5819$0 = _i64Add($5818$0,$5818$1,$5816$0,$5816$1); var $5819$1 = tempRet0;
      var $st$4117$0=(($5817)|0);
      HEAP32[(($st$4117$0)>>2)]=$5819$0;
      var $st$4118$1=(($5817+4)|0);
      HEAP32[(($st$4118$1)>>2)]=$5819$1;
      var $ld$4119$0=(($t0)|0);
      var $5820$0=HEAP32[(($ld$4119$0)>>2)];
      var $ld$4120$1=(($t0+4)|0);
      var $5820$1=HEAP32[(($ld$4120$1)>>2)];
      var $ld$4121$0=(($t1)|0);
      var $5821$0=HEAP32[(($ld$4121$0)>>2)];
      var $ld$4122$1=(($t1+4)|0);
      var $5821$1=HEAP32[(($ld$4122$1)>>2)];
      var $5822$0 = _i64Add($5820$0,$5820$1,$5821$0,$5821$1); var $5822$1 = tempRet0;
      var $5823=(($S+56)|0);
      var $st$4123$0=(($5823)|0);
      HEAP32[(($st$4123$0)>>2)]=$5822$0;
      var $st$4124$1=(($5823+4)|0);
      HEAP32[(($st$4124$1)>>2)]=$5822$1;
      var $5824=(($S+48)|0);
      var $ld$4125$0=(($5824)|0);
      var $5825$0=HEAP32[(($ld$4125$0)>>2)];
      var $ld$4126$1=(($5824+4)|0);
      var $5825$1=HEAP32[(($ld$4126$1)>>2)];
      var $5826=(($S+24)|0);
      var $ld$4127$0=(($5826)|0);
      var $5827$0=HEAP32[(($ld$4127$0)>>2)];
      var $ld$4128$1=(($5826+4)|0);
      var $5827$1=HEAP32[(($ld$4128$1)>>2)];
      var $5828$0=($5827$0 >>> 14) | ($5827$1 << 18);
      var $5828$1=($5827$1 >>> 14) | (0 << 18);
      var $5829=(($S+24)|0);
      var $ld$4129$0=(($5829)|0);
      var $5830$0=HEAP32[(($ld$4129$0)>>2)];
      var $ld$4130$1=(($5829+4)|0);
      var $5830$1=HEAP32[(($ld$4130$1)>>2)];
      var $5831$0=(0 << 18) | (0 >>> 14);
      var $5831$1=($5830$0 << 18) | (0 >>> 14);
      var $5832$0=$5828$0 | $5831$0;
      var $5832$1=$5828$1 | $5831$1;
      var $5833=(($S+24)|0);
      var $ld$4131$0=(($5833)|0);
      var $5834$0=HEAP32[(($ld$4131$0)>>2)];
      var $ld$4132$1=(($5833+4)|0);
      var $5834$1=HEAP32[(($ld$4132$1)>>2)];
      var $5835$0=($5834$0 >>> 18) | ($5834$1 << 14);
      var $5835$1=($5834$1 >>> 18) | (0 << 14);
      var $5836=(($S+24)|0);
      var $ld$4133$0=(($5836)|0);
      var $5837$0=HEAP32[(($ld$4133$0)>>2)];
      var $ld$4134$1=(($5836+4)|0);
      var $5837$1=HEAP32[(($ld$4134$1)>>2)];
      var $5838$0=(0 << 14) | (0 >>> 18);
      var $5838$1=($5837$0 << 14) | (0 >>> 18);
      var $5839$0=$5835$0 | $5838$0;
      var $5839$1=$5835$1 | $5838$1;
      var $5840$0=$5832$0 ^ $5839$0;
      var $5840$1=$5832$1 ^ $5839$1;
      var $5841=(($S+24)|0);
      var $ld$4135$0=(($5841)|0);
      var $5842$0=HEAP32[(($ld$4135$0)>>2)];
      var $ld$4136$1=(($5841+4)|0);
      var $5842$1=HEAP32[(($ld$4136$1)>>2)];
      var $5843$0=($5842$1 >>> 9) | (0 << 23);
      var $5843$1=(0 >>> 9) | (0 << 23);
      var $5844=(($S+24)|0);
      var $ld$4137$0=(($5844)|0);
      var $5845$0=HEAP32[(($ld$4137$0)>>2)];
      var $ld$4138$1=(($5844+4)|0);
      var $5845$1=HEAP32[(($ld$4138$1)>>2)];
      var $5846$0=($5845$0 << 23) | (0 >>> 9);
      var $5846$1=($5845$1 << 23) | ($5845$0 >>> 9);
      var $5847$0=$5843$0 | $5846$0;
      var $5847$1=$5843$1 | $5846$1;
      var $5848$0=$5840$0 ^ $5847$0;
      var $5848$1=$5840$1 ^ $5847$1;
      var $5849$0 = _i64Add($5825$0,$5825$1,$5848$0,$5848$1); var $5849$1 = tempRet0;
      var $5850=(($S+40)|0);
      var $ld$4139$0=(($5850)|0);
      var $5851$0=HEAP32[(($ld$4139$0)>>2)];
      var $ld$4140$1=(($5850+4)|0);
      var $5851$1=HEAP32[(($ld$4140$1)>>2)];
      var $5852=(($S+24)|0);
      var $ld$4141$0=(($5852)|0);
      var $5853$0=HEAP32[(($ld$4141$0)>>2)];
      var $ld$4142$1=(($5852+4)|0);
      var $5853$1=HEAP32[(($ld$4142$1)>>2)];
      var $5854=(($S+32)|0);
      var $ld$4143$0=(($5854)|0);
      var $5855$0=HEAP32[(($ld$4143$0)>>2)];
      var $ld$4144$1=(($5854+4)|0);
      var $5855$1=HEAP32[(($ld$4144$1)>>2)];
      var $5856=(($S+40)|0);
      var $ld$4145$0=(($5856)|0);
      var $5857$0=HEAP32[(($ld$4145$0)>>2)];
      var $ld$4146$1=(($5856+4)|0);
      var $5857$1=HEAP32[(($ld$4146$1)>>2)];
      var $5858$0=$5855$0 ^ $5857$0;
      var $5858$1=$5855$1 ^ $5857$1;
      var $5859$0=$5853$0 & $5858$0;
      var $5859$1=$5853$1 & $5858$1;
      var $5860$0=$5851$0 ^ $5859$0;
      var $5860$1=$5851$1 ^ $5859$1;
      var $5861$0 = _i64Add($5849$0,$5849$1,$5860$0,$5860$1); var $5861$1 = tempRet0;
      var $$etemp$4147$0=566280711;
      var $$etemp$4147$1=-779700025;
      var $5862$0 = _i64Add($5861$0,$5861$1,$$etemp$4147$0,$$etemp$4147$1); var $5862$1 = tempRet0;
      var $5863=(($W+520)|0);
      var $ld$4148$0=(($5863)|0);
      var $5864$0=HEAP32[(($ld$4148$0)>>2)];
      var $ld$4149$1=(($5863+4)|0);
      var $5864$1=HEAP32[(($ld$4149$1)>>2)];
      var $5865$0 = _i64Add($5862$0,$5862$1,$5864$0,$5864$1); var $5865$1 = tempRet0;
      var $st$4150$0=(($t0)|0);
      HEAP32[(($st$4150$0)>>2)]=$5865$0;
      var $st$4151$1=(($t0+4)|0);
      HEAP32[(($st$4151$1)>>2)]=$5865$1;
      var $5866=(($S+56)|0);
      var $ld$4152$0=(($5866)|0);
      var $5867$0=HEAP32[(($ld$4152$0)>>2)];
      var $ld$4153$1=(($5866+4)|0);
      var $5867$1=HEAP32[(($ld$4153$1)>>2)];
      var $5868$0=($5867$0 >>> 28) | ($5867$1 << 4);
      var $5868$1=($5867$1 >>> 28) | (0 << 4);
      var $5869=(($S+56)|0);
      var $ld$4154$0=(($5869)|0);
      var $5870$0=HEAP32[(($ld$4154$0)>>2)];
      var $ld$4155$1=(($5869+4)|0);
      var $5870$1=HEAP32[(($ld$4155$1)>>2)];
      var $5871$0=(0 << 4) | (0 >>> 28);
      var $5871$1=($5870$0 << 4) | (0 >>> 28);
      var $5872$0=$5868$0 | $5871$0;
      var $5872$1=$5868$1 | $5871$1;
      var $5873=(($S+56)|0);
      var $ld$4156$0=(($5873)|0);
      var $5874$0=HEAP32[(($ld$4156$0)>>2)];
      var $ld$4157$1=(($5873+4)|0);
      var $5874$1=HEAP32[(($ld$4157$1)>>2)];
      var $5875$0=($5874$1 >>> 2) | (0 << 30);
      var $5875$1=(0 >>> 2) | (0 << 30);
      var $5876=(($S+56)|0);
      var $ld$4158$0=(($5876)|0);
      var $5877$0=HEAP32[(($ld$4158$0)>>2)];
      var $ld$4159$1=(($5876+4)|0);
      var $5877$1=HEAP32[(($ld$4159$1)>>2)];
      var $5878$0=($5877$0 << 30) | (0 >>> 2);
      var $5878$1=($5877$1 << 30) | ($5877$0 >>> 2);
      var $5879$0=$5875$0 | $5878$0;
      var $5879$1=$5875$1 | $5878$1;
      var $5880$0=$5872$0 ^ $5879$0;
      var $5880$1=$5872$1 ^ $5879$1;
      var $5881=(($S+56)|0);
      var $ld$4160$0=(($5881)|0);
      var $5882$0=HEAP32[(($ld$4160$0)>>2)];
      var $ld$4161$1=(($5881+4)|0);
      var $5882$1=HEAP32[(($ld$4161$1)>>2)];
      var $5883$0=($5882$1 >>> 7) | (0 << 25);
      var $5883$1=(0 >>> 7) | (0 << 25);
      var $5884=(($S+56)|0);
      var $ld$4162$0=(($5884)|0);
      var $5885$0=HEAP32[(($ld$4162$0)>>2)];
      var $ld$4163$1=(($5884+4)|0);
      var $5885$1=HEAP32[(($ld$4163$1)>>2)];
      var $5886$0=($5885$0 << 25) | (0 >>> 7);
      var $5886$1=($5885$1 << 25) | ($5885$0 >>> 7);
      var $5887$0=$5883$0 | $5886$0;
      var $5887$1=$5883$1 | $5886$1;
      var $5888$0=$5880$0 ^ $5887$0;
      var $5888$1=$5880$1 ^ $5887$1;
      var $5889=(($S+56)|0);
      var $ld$4164$0=(($5889)|0);
      var $5890$0=HEAP32[(($ld$4164$0)>>2)];
      var $ld$4165$1=(($5889+4)|0);
      var $5890$1=HEAP32[(($ld$4165$1)>>2)];
      var $5891=(($S)|0);
      var $ld$4166$0=(($5891)|0);
      var $5892$0=HEAP32[(($ld$4166$0)>>2)];
      var $ld$4167$1=(($5891+4)|0);
      var $5892$1=HEAP32[(($ld$4167$1)>>2)];
      var $5893$0=$5890$0 | $5892$0;
      var $5893$1=$5890$1 | $5892$1;
      var $5894=(($S+8)|0);
      var $ld$4168$0=(($5894)|0);
      var $5895$0=HEAP32[(($ld$4168$0)>>2)];
      var $ld$4169$1=(($5894+4)|0);
      var $5895$1=HEAP32[(($ld$4169$1)>>2)];
      var $5896$0=$5893$0 & $5895$0;
      var $5896$1=$5893$1 & $5895$1;
      var $5897=(($S+56)|0);
      var $ld$4170$0=(($5897)|0);
      var $5898$0=HEAP32[(($ld$4170$0)>>2)];
      var $ld$4171$1=(($5897+4)|0);
      var $5898$1=HEAP32[(($ld$4171$1)>>2)];
      var $5899=(($S)|0);
      var $ld$4172$0=(($5899)|0);
      var $5900$0=HEAP32[(($ld$4172$0)>>2)];
      var $ld$4173$1=(($5899+4)|0);
      var $5900$1=HEAP32[(($ld$4173$1)>>2)];
      var $5901$0=$5898$0 & $5900$0;
      var $5901$1=$5898$1 & $5900$1;
      var $5902$0=$5896$0 | $5901$0;
      var $5902$1=$5896$1 | $5901$1;
      var $5903$0 = _i64Add($5888$0,$5888$1,$5902$0,$5902$1); var $5903$1 = tempRet0;
      var $st$4174$0=(($t1)|0);
      HEAP32[(($st$4174$0)>>2)]=$5903$0;
      var $st$4175$1=(($t1+4)|0);
      HEAP32[(($st$4175$1)>>2)]=$5903$1;
      var $ld$4176$0=(($t0)|0);
      var $5904$0=HEAP32[(($ld$4176$0)>>2)];
      var $ld$4177$1=(($t0+4)|0);
      var $5904$1=HEAP32[(($ld$4177$1)>>2)];
      var $5905=(($S+16)|0);
      var $ld$4178$0=(($5905)|0);
      var $5906$0=HEAP32[(($ld$4178$0)>>2)];
      var $ld$4179$1=(($5905+4)|0);
      var $5906$1=HEAP32[(($ld$4179$1)>>2)];
      var $5907$0 = _i64Add($5906$0,$5906$1,$5904$0,$5904$1); var $5907$1 = tempRet0;
      var $st$4180$0=(($5905)|0);
      HEAP32[(($st$4180$0)>>2)]=$5907$0;
      var $st$4181$1=(($5905+4)|0);
      HEAP32[(($st$4181$1)>>2)]=$5907$1;
      var $ld$4182$0=(($t0)|0);
      var $5908$0=HEAP32[(($ld$4182$0)>>2)];
      var $ld$4183$1=(($t0+4)|0);
      var $5908$1=HEAP32[(($ld$4183$1)>>2)];
      var $ld$4184$0=(($t1)|0);
      var $5909$0=HEAP32[(($ld$4184$0)>>2)];
      var $ld$4185$1=(($t1+4)|0);
      var $5909$1=HEAP32[(($ld$4185$1)>>2)];
      var $5910$0 = _i64Add($5908$0,$5908$1,$5909$0,$5909$1); var $5910$1 = tempRet0;
      var $5911=(($S+48)|0);
      var $st$4186$0=(($5911)|0);
      HEAP32[(($st$4186$0)>>2)]=$5910$0;
      var $st$4187$1=(($5911+4)|0);
      HEAP32[(($st$4187$1)>>2)]=$5910$1;
      var $5912=(($S+40)|0);
      var $ld$4188$0=(($5912)|0);
      var $5913$0=HEAP32[(($ld$4188$0)>>2)];
      var $ld$4189$1=(($5912+4)|0);
      var $5913$1=HEAP32[(($ld$4189$1)>>2)];
      var $5914=(($S+16)|0);
      var $ld$4190$0=(($5914)|0);
      var $5915$0=HEAP32[(($ld$4190$0)>>2)];
      var $ld$4191$1=(($5914+4)|0);
      var $5915$1=HEAP32[(($ld$4191$1)>>2)];
      var $5916$0=($5915$0 >>> 14) | ($5915$1 << 18);
      var $5916$1=($5915$1 >>> 14) | (0 << 18);
      var $5917=(($S+16)|0);
      var $ld$4192$0=(($5917)|0);
      var $5918$0=HEAP32[(($ld$4192$0)>>2)];
      var $ld$4193$1=(($5917+4)|0);
      var $5918$1=HEAP32[(($ld$4193$1)>>2)];
      var $5919$0=(0 << 18) | (0 >>> 14);
      var $5919$1=($5918$0 << 18) | (0 >>> 14);
      var $5920$0=$5916$0 | $5919$0;
      var $5920$1=$5916$1 | $5919$1;
      var $5921=(($S+16)|0);
      var $ld$4194$0=(($5921)|0);
      var $5922$0=HEAP32[(($ld$4194$0)>>2)];
      var $ld$4195$1=(($5921+4)|0);
      var $5922$1=HEAP32[(($ld$4195$1)>>2)];
      var $5923$0=($5922$0 >>> 18) | ($5922$1 << 14);
      var $5923$1=($5922$1 >>> 18) | (0 << 14);
      var $5924=(($S+16)|0);
      var $ld$4196$0=(($5924)|0);
      var $5925$0=HEAP32[(($ld$4196$0)>>2)];
      var $ld$4197$1=(($5924+4)|0);
      var $5925$1=HEAP32[(($ld$4197$1)>>2)];
      var $5926$0=(0 << 14) | (0 >>> 18);
      var $5926$1=($5925$0 << 14) | (0 >>> 18);
      var $5927$0=$5923$0 | $5926$0;
      var $5927$1=$5923$1 | $5926$1;
      var $5928$0=$5920$0 ^ $5927$0;
      var $5928$1=$5920$1 ^ $5927$1;
      var $5929=(($S+16)|0);
      var $ld$4198$0=(($5929)|0);
      var $5930$0=HEAP32[(($ld$4198$0)>>2)];
      var $ld$4199$1=(($5929+4)|0);
      var $5930$1=HEAP32[(($ld$4199$1)>>2)];
      var $5931$0=($5930$1 >>> 9) | (0 << 23);
      var $5931$1=(0 >>> 9) | (0 << 23);
      var $5932=(($S+16)|0);
      var $ld$4200$0=(($5932)|0);
      var $5933$0=HEAP32[(($ld$4200$0)>>2)];
      var $ld$4201$1=(($5932+4)|0);
      var $5933$1=HEAP32[(($ld$4201$1)>>2)];
      var $5934$0=($5933$0 << 23) | (0 >>> 9);
      var $5934$1=($5933$1 << 23) | ($5933$0 >>> 9);
      var $5935$0=$5931$0 | $5934$0;
      var $5935$1=$5931$1 | $5934$1;
      var $5936$0=$5928$0 ^ $5935$0;
      var $5936$1=$5928$1 ^ $5935$1;
      var $5937$0 = _i64Add($5913$0,$5913$1,$5936$0,$5936$1); var $5937$1 = tempRet0;
      var $5938=(($S+32)|0);
      var $ld$4202$0=(($5938)|0);
      var $5939$0=HEAP32[(($ld$4202$0)>>2)];
      var $ld$4203$1=(($5938+4)|0);
      var $5939$1=HEAP32[(($ld$4203$1)>>2)];
      var $5940=(($S+16)|0);
      var $ld$4204$0=(($5940)|0);
      var $5941$0=HEAP32[(($ld$4204$0)>>2)];
      var $ld$4205$1=(($5940+4)|0);
      var $5941$1=HEAP32[(($ld$4205$1)>>2)];
      var $5942=(($S+24)|0);
      var $ld$4206$0=(($5942)|0);
      var $5943$0=HEAP32[(($ld$4206$0)>>2)];
      var $ld$4207$1=(($5942+4)|0);
      var $5943$1=HEAP32[(($ld$4207$1)>>2)];
      var $5944=(($S+32)|0);
      var $ld$4208$0=(($5944)|0);
      var $5945$0=HEAP32[(($ld$4208$0)>>2)];
      var $ld$4209$1=(($5944+4)|0);
      var $5945$1=HEAP32[(($ld$4209$1)>>2)];
      var $5946$0=$5943$0 ^ $5945$0;
      var $5946$1=$5943$1 ^ $5945$1;
      var $5947$0=$5941$0 & $5946$0;
      var $5947$1=$5941$1 & $5946$1;
      var $5948$0=$5939$0 ^ $5947$0;
      var $5948$1=$5939$1 ^ $5947$1;
      var $5949$0 = _i64Add($5937$0,$5937$1,$5948$0,$5948$1); var $5949$1 = tempRet0;
      var $$etemp$4210$0=-840897762;
      var $$etemp$4210$1=-354779690;
      var $5950$0 = _i64Add($5949$0,$5949$1,$$etemp$4210$0,$$etemp$4210$1); var $5950$1 = tempRet0;
      var $5951=(($W+528)|0);
      var $ld$4211$0=(($5951)|0);
      var $5952$0=HEAP32[(($ld$4211$0)>>2)];
      var $ld$4212$1=(($5951+4)|0);
      var $5952$1=HEAP32[(($ld$4212$1)>>2)];
      var $5953$0 = _i64Add($5950$0,$5950$1,$5952$0,$5952$1); var $5953$1 = tempRet0;
      var $st$4213$0=(($t0)|0);
      HEAP32[(($st$4213$0)>>2)]=$5953$0;
      var $st$4214$1=(($t0+4)|0);
      HEAP32[(($st$4214$1)>>2)]=$5953$1;
      var $5954=(($S+48)|0);
      var $ld$4215$0=(($5954)|0);
      var $5955$0=HEAP32[(($ld$4215$0)>>2)];
      var $ld$4216$1=(($5954+4)|0);
      var $5955$1=HEAP32[(($ld$4216$1)>>2)];
      var $5956$0=($5955$0 >>> 28) | ($5955$1 << 4);
      var $5956$1=($5955$1 >>> 28) | (0 << 4);
      var $5957=(($S+48)|0);
      var $ld$4217$0=(($5957)|0);
      var $5958$0=HEAP32[(($ld$4217$0)>>2)];
      var $ld$4218$1=(($5957+4)|0);
      var $5958$1=HEAP32[(($ld$4218$1)>>2)];
      var $5959$0=(0 << 4) | (0 >>> 28);
      var $5959$1=($5958$0 << 4) | (0 >>> 28);
      var $5960$0=$5956$0 | $5959$0;
      var $5960$1=$5956$1 | $5959$1;
      var $5961=(($S+48)|0);
      var $ld$4219$0=(($5961)|0);
      var $5962$0=HEAP32[(($ld$4219$0)>>2)];
      var $ld$4220$1=(($5961+4)|0);
      var $5962$1=HEAP32[(($ld$4220$1)>>2)];
      var $5963$0=($5962$1 >>> 2) | (0 << 30);
      var $5963$1=(0 >>> 2) | (0 << 30);
      var $5964=(($S+48)|0);
      var $ld$4221$0=(($5964)|0);
      var $5965$0=HEAP32[(($ld$4221$0)>>2)];
      var $ld$4222$1=(($5964+4)|0);
      var $5965$1=HEAP32[(($ld$4222$1)>>2)];
      var $5966$0=($5965$0 << 30) | (0 >>> 2);
      var $5966$1=($5965$1 << 30) | ($5965$0 >>> 2);
      var $5967$0=$5963$0 | $5966$0;
      var $5967$1=$5963$1 | $5966$1;
      var $5968$0=$5960$0 ^ $5967$0;
      var $5968$1=$5960$1 ^ $5967$1;
      var $5969=(($S+48)|0);
      var $ld$4223$0=(($5969)|0);
      var $5970$0=HEAP32[(($ld$4223$0)>>2)];
      var $ld$4224$1=(($5969+4)|0);
      var $5970$1=HEAP32[(($ld$4224$1)>>2)];
      var $5971$0=($5970$1 >>> 7) | (0 << 25);
      var $5971$1=(0 >>> 7) | (0 << 25);
      var $5972=(($S+48)|0);
      var $ld$4225$0=(($5972)|0);
      var $5973$0=HEAP32[(($ld$4225$0)>>2)];
      var $ld$4226$1=(($5972+4)|0);
      var $5973$1=HEAP32[(($ld$4226$1)>>2)];
      var $5974$0=($5973$0 << 25) | (0 >>> 7);
      var $5974$1=($5973$1 << 25) | ($5973$0 >>> 7);
      var $5975$0=$5971$0 | $5974$0;
      var $5975$1=$5971$1 | $5974$1;
      var $5976$0=$5968$0 ^ $5975$0;
      var $5976$1=$5968$1 ^ $5975$1;
      var $5977=(($S+48)|0);
      var $ld$4227$0=(($5977)|0);
      var $5978$0=HEAP32[(($ld$4227$0)>>2)];
      var $ld$4228$1=(($5977+4)|0);
      var $5978$1=HEAP32[(($ld$4228$1)>>2)];
      var $5979=(($S+56)|0);
      var $ld$4229$0=(($5979)|0);
      var $5980$0=HEAP32[(($ld$4229$0)>>2)];
      var $ld$4230$1=(($5979+4)|0);
      var $5980$1=HEAP32[(($ld$4230$1)>>2)];
      var $5981$0=$5978$0 | $5980$0;
      var $5981$1=$5978$1 | $5980$1;
      var $5982=(($S)|0);
      var $ld$4231$0=(($5982)|0);
      var $5983$0=HEAP32[(($ld$4231$0)>>2)];
      var $ld$4232$1=(($5982+4)|0);
      var $5983$1=HEAP32[(($ld$4232$1)>>2)];
      var $5984$0=$5981$0 & $5983$0;
      var $5984$1=$5981$1 & $5983$1;
      var $5985=(($S+48)|0);
      var $ld$4233$0=(($5985)|0);
      var $5986$0=HEAP32[(($ld$4233$0)>>2)];
      var $ld$4234$1=(($5985+4)|0);
      var $5986$1=HEAP32[(($ld$4234$1)>>2)];
      var $5987=(($S+56)|0);
      var $ld$4235$0=(($5987)|0);
      var $5988$0=HEAP32[(($ld$4235$0)>>2)];
      var $ld$4236$1=(($5987+4)|0);
      var $5988$1=HEAP32[(($ld$4236$1)>>2)];
      var $5989$0=$5986$0 & $5988$0;
      var $5989$1=$5986$1 & $5988$1;
      var $5990$0=$5984$0 | $5989$0;
      var $5990$1=$5984$1 | $5989$1;
      var $5991$0 = _i64Add($5976$0,$5976$1,$5990$0,$5990$1); var $5991$1 = tempRet0;
      var $st$4237$0=(($t1)|0);
      HEAP32[(($st$4237$0)>>2)]=$5991$0;
      var $st$4238$1=(($t1+4)|0);
      HEAP32[(($st$4238$1)>>2)]=$5991$1;
      var $ld$4239$0=(($t0)|0);
      var $5992$0=HEAP32[(($ld$4239$0)>>2)];
      var $ld$4240$1=(($t0+4)|0);
      var $5992$1=HEAP32[(($ld$4240$1)>>2)];
      var $5993=(($S+8)|0);
      var $ld$4241$0=(($5993)|0);
      var $5994$0=HEAP32[(($ld$4241$0)>>2)];
      var $ld$4242$1=(($5993+4)|0);
      var $5994$1=HEAP32[(($ld$4242$1)>>2)];
      var $5995$0 = _i64Add($5994$0,$5994$1,$5992$0,$5992$1); var $5995$1 = tempRet0;
      var $st$4243$0=(($5993)|0);
      HEAP32[(($st$4243$0)>>2)]=$5995$0;
      var $st$4244$1=(($5993+4)|0);
      HEAP32[(($st$4244$1)>>2)]=$5995$1;
      var $ld$4245$0=(($t0)|0);
      var $5996$0=HEAP32[(($ld$4245$0)>>2)];
      var $ld$4246$1=(($t0+4)|0);
      var $5996$1=HEAP32[(($ld$4246$1)>>2)];
      var $ld$4247$0=(($t1)|0);
      var $5997$0=HEAP32[(($ld$4247$0)>>2)];
      var $ld$4248$1=(($t1+4)|0);
      var $5997$1=HEAP32[(($ld$4248$1)>>2)];
      var $5998$0 = _i64Add($5996$0,$5996$1,$5997$0,$5997$1); var $5998$1 = tempRet0;
      var $5999=(($S+40)|0);
      var $st$4249$0=(($5999)|0);
      HEAP32[(($st$4249$0)>>2)]=$5998$0;
      var $st$4250$1=(($5999+4)|0);
      HEAP32[(($st$4250$1)>>2)]=$5998$1;
      var $6000=(($S+32)|0);
      var $ld$4251$0=(($6000)|0);
      var $6001$0=HEAP32[(($ld$4251$0)>>2)];
      var $ld$4252$1=(($6000+4)|0);
      var $6001$1=HEAP32[(($ld$4252$1)>>2)];
      var $6002=(($S+8)|0);
      var $ld$4253$0=(($6002)|0);
      var $6003$0=HEAP32[(($ld$4253$0)>>2)];
      var $ld$4254$1=(($6002+4)|0);
      var $6003$1=HEAP32[(($ld$4254$1)>>2)];
      var $6004$0=($6003$0 >>> 14) | ($6003$1 << 18);
      var $6004$1=($6003$1 >>> 14) | (0 << 18);
      var $6005=(($S+8)|0);
      var $ld$4255$0=(($6005)|0);
      var $6006$0=HEAP32[(($ld$4255$0)>>2)];
      var $ld$4256$1=(($6005+4)|0);
      var $6006$1=HEAP32[(($ld$4256$1)>>2)];
      var $6007$0=(0 << 18) | (0 >>> 14);
      var $6007$1=($6006$0 << 18) | (0 >>> 14);
      var $6008$0=$6004$0 | $6007$0;
      var $6008$1=$6004$1 | $6007$1;
      var $6009=(($S+8)|0);
      var $ld$4257$0=(($6009)|0);
      var $6010$0=HEAP32[(($ld$4257$0)>>2)];
      var $ld$4258$1=(($6009+4)|0);
      var $6010$1=HEAP32[(($ld$4258$1)>>2)];
      var $6011$0=($6010$0 >>> 18) | ($6010$1 << 14);
      var $6011$1=($6010$1 >>> 18) | (0 << 14);
      var $6012=(($S+8)|0);
      var $ld$4259$0=(($6012)|0);
      var $6013$0=HEAP32[(($ld$4259$0)>>2)];
      var $ld$4260$1=(($6012+4)|0);
      var $6013$1=HEAP32[(($ld$4260$1)>>2)];
      var $6014$0=(0 << 14) | (0 >>> 18);
      var $6014$1=($6013$0 << 14) | (0 >>> 18);
      var $6015$0=$6011$0 | $6014$0;
      var $6015$1=$6011$1 | $6014$1;
      var $6016$0=$6008$0 ^ $6015$0;
      var $6016$1=$6008$1 ^ $6015$1;
      var $6017=(($S+8)|0);
      var $ld$4261$0=(($6017)|0);
      var $6018$0=HEAP32[(($ld$4261$0)>>2)];
      var $ld$4262$1=(($6017+4)|0);
      var $6018$1=HEAP32[(($ld$4262$1)>>2)];
      var $6019$0=($6018$1 >>> 9) | (0 << 23);
      var $6019$1=(0 >>> 9) | (0 << 23);
      var $6020=(($S+8)|0);
      var $ld$4263$0=(($6020)|0);
      var $6021$0=HEAP32[(($ld$4263$0)>>2)];
      var $ld$4264$1=(($6020+4)|0);
      var $6021$1=HEAP32[(($ld$4264$1)>>2)];
      var $6022$0=($6021$0 << 23) | (0 >>> 9);
      var $6022$1=($6021$1 << 23) | ($6021$0 >>> 9);
      var $6023$0=$6019$0 | $6022$0;
      var $6023$1=$6019$1 | $6022$1;
      var $6024$0=$6016$0 ^ $6023$0;
      var $6024$1=$6016$1 ^ $6023$1;
      var $6025$0 = _i64Add($6001$0,$6001$1,$6024$0,$6024$1); var $6025$1 = tempRet0;
      var $6026=(($S+24)|0);
      var $ld$4265$0=(($6026)|0);
      var $6027$0=HEAP32[(($ld$4265$0)>>2)];
      var $ld$4266$1=(($6026+4)|0);
      var $6027$1=HEAP32[(($ld$4266$1)>>2)];
      var $6028=(($S+8)|0);
      var $ld$4267$0=(($6028)|0);
      var $6029$0=HEAP32[(($ld$4267$0)>>2)];
      var $ld$4268$1=(($6028+4)|0);
      var $6029$1=HEAP32[(($ld$4268$1)>>2)];
      var $6030=(($S+16)|0);
      var $ld$4269$0=(($6030)|0);
      var $6031$0=HEAP32[(($ld$4269$0)>>2)];
      var $ld$4270$1=(($6030+4)|0);
      var $6031$1=HEAP32[(($ld$4270$1)>>2)];
      var $6032=(($S+24)|0);
      var $ld$4271$0=(($6032)|0);
      var $6033$0=HEAP32[(($ld$4271$0)>>2)];
      var $ld$4272$1=(($6032+4)|0);
      var $6033$1=HEAP32[(($ld$4272$1)>>2)];
      var $6034$0=$6031$0 ^ $6033$0;
      var $6034$1=$6031$1 ^ $6033$1;
      var $6035$0=$6029$0 & $6034$0;
      var $6035$1=$6029$1 & $6034$1;
      var $6036$0=$6027$0 ^ $6035$0;
      var $6036$1=$6027$1 ^ $6035$1;
      var $6037$0 = _i64Add($6025$0,$6025$1,$6036$0,$6036$1); var $6037$1 = tempRet0;
      var $$etemp$4273$0=-294727304;
      var $$etemp$4273$1=-176337025;
      var $6038$0 = _i64Add($6037$0,$6037$1,$$etemp$4273$0,$$etemp$4273$1); var $6038$1 = tempRet0;
      var $6039=(($W+536)|0);
      var $ld$4274$0=(($6039)|0);
      var $6040$0=HEAP32[(($ld$4274$0)>>2)];
      var $ld$4275$1=(($6039+4)|0);
      var $6040$1=HEAP32[(($ld$4275$1)>>2)];
      var $6041$0 = _i64Add($6038$0,$6038$1,$6040$0,$6040$1); var $6041$1 = tempRet0;
      var $st$4276$0=(($t0)|0);
      HEAP32[(($st$4276$0)>>2)]=$6041$0;
      var $st$4277$1=(($t0+4)|0);
      HEAP32[(($st$4277$1)>>2)]=$6041$1;
      var $6042=(($S+40)|0);
      var $ld$4278$0=(($6042)|0);
      var $6043$0=HEAP32[(($ld$4278$0)>>2)];
      var $ld$4279$1=(($6042+4)|0);
      var $6043$1=HEAP32[(($ld$4279$1)>>2)];
      var $6044$0=($6043$0 >>> 28) | ($6043$1 << 4);
      var $6044$1=($6043$1 >>> 28) | (0 << 4);
      var $6045=(($S+40)|0);
      var $ld$4280$0=(($6045)|0);
      var $6046$0=HEAP32[(($ld$4280$0)>>2)];
      var $ld$4281$1=(($6045+4)|0);
      var $6046$1=HEAP32[(($ld$4281$1)>>2)];
      var $6047$0=(0 << 4) | (0 >>> 28);
      var $6047$1=($6046$0 << 4) | (0 >>> 28);
      var $6048$0=$6044$0 | $6047$0;
      var $6048$1=$6044$1 | $6047$1;
      var $6049=(($S+40)|0);
      var $ld$4282$0=(($6049)|0);
      var $6050$0=HEAP32[(($ld$4282$0)>>2)];
      var $ld$4283$1=(($6049+4)|0);
      var $6050$1=HEAP32[(($ld$4283$1)>>2)];
      var $6051$0=($6050$1 >>> 2) | (0 << 30);
      var $6051$1=(0 >>> 2) | (0 << 30);
      var $6052=(($S+40)|0);
      var $ld$4284$0=(($6052)|0);
      var $6053$0=HEAP32[(($ld$4284$0)>>2)];
      var $ld$4285$1=(($6052+4)|0);
      var $6053$1=HEAP32[(($ld$4285$1)>>2)];
      var $6054$0=($6053$0 << 30) | (0 >>> 2);
      var $6054$1=($6053$1 << 30) | ($6053$0 >>> 2);
      var $6055$0=$6051$0 | $6054$0;
      var $6055$1=$6051$1 | $6054$1;
      var $6056$0=$6048$0 ^ $6055$0;
      var $6056$1=$6048$1 ^ $6055$1;
      var $6057=(($S+40)|0);
      var $ld$4286$0=(($6057)|0);
      var $6058$0=HEAP32[(($ld$4286$0)>>2)];
      var $ld$4287$1=(($6057+4)|0);
      var $6058$1=HEAP32[(($ld$4287$1)>>2)];
      var $6059$0=($6058$1 >>> 7) | (0 << 25);
      var $6059$1=(0 >>> 7) | (0 << 25);
      var $6060=(($S+40)|0);
      var $ld$4288$0=(($6060)|0);
      var $6061$0=HEAP32[(($ld$4288$0)>>2)];
      var $ld$4289$1=(($6060+4)|0);
      var $6061$1=HEAP32[(($ld$4289$1)>>2)];
      var $6062$0=($6061$0 << 25) | (0 >>> 7);
      var $6062$1=($6061$1 << 25) | ($6061$0 >>> 7);
      var $6063$0=$6059$0 | $6062$0;
      var $6063$1=$6059$1 | $6062$1;
      var $6064$0=$6056$0 ^ $6063$0;
      var $6064$1=$6056$1 ^ $6063$1;
      var $6065=(($S+40)|0);
      var $ld$4290$0=(($6065)|0);
      var $6066$0=HEAP32[(($ld$4290$0)>>2)];
      var $ld$4291$1=(($6065+4)|0);
      var $6066$1=HEAP32[(($ld$4291$1)>>2)];
      var $6067=(($S+48)|0);
      var $ld$4292$0=(($6067)|0);
      var $6068$0=HEAP32[(($ld$4292$0)>>2)];
      var $ld$4293$1=(($6067+4)|0);
      var $6068$1=HEAP32[(($ld$4293$1)>>2)];
      var $6069$0=$6066$0 | $6068$0;
      var $6069$1=$6066$1 | $6068$1;
      var $6070=(($S+56)|0);
      var $ld$4294$0=(($6070)|0);
      var $6071$0=HEAP32[(($ld$4294$0)>>2)];
      var $ld$4295$1=(($6070+4)|0);
      var $6071$1=HEAP32[(($ld$4295$1)>>2)];
      var $6072$0=$6069$0 & $6071$0;
      var $6072$1=$6069$1 & $6071$1;
      var $6073=(($S+40)|0);
      var $ld$4296$0=(($6073)|0);
      var $6074$0=HEAP32[(($ld$4296$0)>>2)];
      var $ld$4297$1=(($6073+4)|0);
      var $6074$1=HEAP32[(($ld$4297$1)>>2)];
      var $6075=(($S+48)|0);
      var $ld$4298$0=(($6075)|0);
      var $6076$0=HEAP32[(($ld$4298$0)>>2)];
      var $ld$4299$1=(($6075+4)|0);
      var $6076$1=HEAP32[(($ld$4299$1)>>2)];
      var $6077$0=$6074$0 & $6076$0;
      var $6077$1=$6074$1 & $6076$1;
      var $6078$0=$6072$0 | $6077$0;
      var $6078$1=$6072$1 | $6077$1;
      var $6079$0 = _i64Add($6064$0,$6064$1,$6078$0,$6078$1); var $6079$1 = tempRet0;
      var $st$4300$0=(($t1)|0);
      HEAP32[(($st$4300$0)>>2)]=$6079$0;
      var $st$4301$1=(($t1+4)|0);
      HEAP32[(($st$4301$1)>>2)]=$6079$1;
      var $ld$4302$0=(($t0)|0);
      var $6080$0=HEAP32[(($ld$4302$0)>>2)];
      var $ld$4303$1=(($t0+4)|0);
      var $6080$1=HEAP32[(($ld$4303$1)>>2)];
      var $6081=(($S)|0);
      var $ld$4304$0=(($6081)|0);
      var $6082$0=HEAP32[(($ld$4304$0)>>2)];
      var $ld$4305$1=(($6081+4)|0);
      var $6082$1=HEAP32[(($ld$4305$1)>>2)];
      var $6083$0 = _i64Add($6082$0,$6082$1,$6080$0,$6080$1); var $6083$1 = tempRet0;
      var $st$4306$0=(($6081)|0);
      HEAP32[(($st$4306$0)>>2)]=$6083$0;
      var $st$4307$1=(($6081+4)|0);
      HEAP32[(($st$4307$1)>>2)]=$6083$1;
      var $ld$4308$0=(($t0)|0);
      var $6084$0=HEAP32[(($ld$4308$0)>>2)];
      var $ld$4309$1=(($t0+4)|0);
      var $6084$1=HEAP32[(($ld$4309$1)>>2)];
      var $ld$4310$0=(($t1)|0);
      var $6085$0=HEAP32[(($ld$4310$0)>>2)];
      var $ld$4311$1=(($t1+4)|0);
      var $6085$1=HEAP32[(($ld$4311$1)>>2)];
      var $6086$0 = _i64Add($6084$0,$6084$1,$6085$0,$6085$1); var $6086$1 = tempRet0;
      var $6087=(($S+32)|0);
      var $st$4312$0=(($6087)|0);
      HEAP32[(($st$4312$0)>>2)]=$6086$0;
      var $st$4313$1=(($6087+4)|0);
      HEAP32[(($st$4313$1)>>2)]=$6086$1;
      var $6088=(($S+24)|0);
      var $ld$4314$0=(($6088)|0);
      var $6089$0=HEAP32[(($ld$4314$0)>>2)];
      var $ld$4315$1=(($6088+4)|0);
      var $6089$1=HEAP32[(($ld$4315$1)>>2)];
      var $6090=(($S)|0);
      var $ld$4316$0=(($6090)|0);
      var $6091$0=HEAP32[(($ld$4316$0)>>2)];
      var $ld$4317$1=(($6090+4)|0);
      var $6091$1=HEAP32[(($ld$4317$1)>>2)];
      var $6092$0=($6091$0 >>> 14) | ($6091$1 << 18);
      var $6092$1=($6091$1 >>> 14) | (0 << 18);
      var $6093=(($S)|0);
      var $ld$4318$0=(($6093)|0);
      var $6094$0=HEAP32[(($ld$4318$0)>>2)];
      var $ld$4319$1=(($6093+4)|0);
      var $6094$1=HEAP32[(($ld$4319$1)>>2)];
      var $6095$0=(0 << 18) | (0 >>> 14);
      var $6095$1=($6094$0 << 18) | (0 >>> 14);
      var $6096$0=$6092$0 | $6095$0;
      var $6096$1=$6092$1 | $6095$1;
      var $6097=(($S)|0);
      var $ld$4320$0=(($6097)|0);
      var $6098$0=HEAP32[(($ld$4320$0)>>2)];
      var $ld$4321$1=(($6097+4)|0);
      var $6098$1=HEAP32[(($ld$4321$1)>>2)];
      var $6099$0=($6098$0 >>> 18) | ($6098$1 << 14);
      var $6099$1=($6098$1 >>> 18) | (0 << 14);
      var $6100=(($S)|0);
      var $ld$4322$0=(($6100)|0);
      var $6101$0=HEAP32[(($ld$4322$0)>>2)];
      var $ld$4323$1=(($6100+4)|0);
      var $6101$1=HEAP32[(($ld$4323$1)>>2)];
      var $6102$0=(0 << 14) | (0 >>> 18);
      var $6102$1=($6101$0 << 14) | (0 >>> 18);
      var $6103$0=$6099$0 | $6102$0;
      var $6103$1=$6099$1 | $6102$1;
      var $6104$0=$6096$0 ^ $6103$0;
      var $6104$1=$6096$1 ^ $6103$1;
      var $6105=(($S)|0);
      var $ld$4324$0=(($6105)|0);
      var $6106$0=HEAP32[(($ld$4324$0)>>2)];
      var $ld$4325$1=(($6105+4)|0);
      var $6106$1=HEAP32[(($ld$4325$1)>>2)];
      var $6107$0=($6106$1 >>> 9) | (0 << 23);
      var $6107$1=(0 >>> 9) | (0 << 23);
      var $6108=(($S)|0);
      var $ld$4326$0=(($6108)|0);
      var $6109$0=HEAP32[(($ld$4326$0)>>2)];
      var $ld$4327$1=(($6108+4)|0);
      var $6109$1=HEAP32[(($ld$4327$1)>>2)];
      var $6110$0=($6109$0 << 23) | (0 >>> 9);
      var $6110$1=($6109$1 << 23) | ($6109$0 >>> 9);
      var $6111$0=$6107$0 | $6110$0;
      var $6111$1=$6107$1 | $6110$1;
      var $6112$0=$6104$0 ^ $6111$0;
      var $6112$1=$6104$1 ^ $6111$1;
      var $6113$0 = _i64Add($6089$0,$6089$1,$6112$0,$6112$1); var $6113$1 = tempRet0;
      var $6114=(($S+16)|0);
      var $ld$4328$0=(($6114)|0);
      var $6115$0=HEAP32[(($ld$4328$0)>>2)];
      var $ld$4329$1=(($6114+4)|0);
      var $6115$1=HEAP32[(($ld$4329$1)>>2)];
      var $6116=(($S)|0);
      var $ld$4330$0=(($6116)|0);
      var $6117$0=HEAP32[(($ld$4330$0)>>2)];
      var $ld$4331$1=(($6116+4)|0);
      var $6117$1=HEAP32[(($ld$4331$1)>>2)];
      var $6118=(($S+8)|0);
      var $ld$4332$0=(($6118)|0);
      var $6119$0=HEAP32[(($ld$4332$0)>>2)];
      var $ld$4333$1=(($6118+4)|0);
      var $6119$1=HEAP32[(($ld$4333$1)>>2)];
      var $6120=(($S+16)|0);
      var $ld$4334$0=(($6120)|0);
      var $6121$0=HEAP32[(($ld$4334$0)>>2)];
      var $ld$4335$1=(($6120+4)|0);
      var $6121$1=HEAP32[(($ld$4335$1)>>2)];
      var $6122$0=$6119$0 ^ $6121$0;
      var $6122$1=$6119$1 ^ $6121$1;
      var $6123$0=$6117$0 & $6122$0;
      var $6123$1=$6117$1 & $6122$1;
      var $6124$0=$6115$0 ^ $6123$0;
      var $6124$1=$6115$1 ^ $6123$1;
      var $6125$0 = _i64Add($6113$0,$6113$1,$6124$0,$6124$1); var $6125$1 = tempRet0;
      var $$etemp$4336$0=1914138554;
      var $$etemp$4336$1=116418474;
      var $6126$0 = _i64Add($6125$0,$6125$1,$$etemp$4336$0,$$etemp$4336$1); var $6126$1 = tempRet0;
      var $6127=(($W+544)|0);
      var $ld$4337$0=(($6127)|0);
      var $6128$0=HEAP32[(($ld$4337$0)>>2)];
      var $ld$4338$1=(($6127+4)|0);
      var $6128$1=HEAP32[(($ld$4338$1)>>2)];
      var $6129$0 = _i64Add($6126$0,$6126$1,$6128$0,$6128$1); var $6129$1 = tempRet0;
      var $st$4339$0=(($t0)|0);
      HEAP32[(($st$4339$0)>>2)]=$6129$0;
      var $st$4340$1=(($t0+4)|0);
      HEAP32[(($st$4340$1)>>2)]=$6129$1;
      var $6130=(($S+32)|0);
      var $ld$4341$0=(($6130)|0);
      var $6131$0=HEAP32[(($ld$4341$0)>>2)];
      var $ld$4342$1=(($6130+4)|0);
      var $6131$1=HEAP32[(($ld$4342$1)>>2)];
      var $6132$0=($6131$0 >>> 28) | ($6131$1 << 4);
      var $6132$1=($6131$1 >>> 28) | (0 << 4);
      var $6133=(($S+32)|0);
      var $ld$4343$0=(($6133)|0);
      var $6134$0=HEAP32[(($ld$4343$0)>>2)];
      var $ld$4344$1=(($6133+4)|0);
      var $6134$1=HEAP32[(($ld$4344$1)>>2)];
      var $6135$0=(0 << 4) | (0 >>> 28);
      var $6135$1=($6134$0 << 4) | (0 >>> 28);
      var $6136$0=$6132$0 | $6135$0;
      var $6136$1=$6132$1 | $6135$1;
      var $6137=(($S+32)|0);
      var $ld$4345$0=(($6137)|0);
      var $6138$0=HEAP32[(($ld$4345$0)>>2)];
      var $ld$4346$1=(($6137+4)|0);
      var $6138$1=HEAP32[(($ld$4346$1)>>2)];
      var $6139$0=($6138$1 >>> 2) | (0 << 30);
      var $6139$1=(0 >>> 2) | (0 << 30);
      var $6140=(($S+32)|0);
      var $ld$4347$0=(($6140)|0);
      var $6141$0=HEAP32[(($ld$4347$0)>>2)];
      var $ld$4348$1=(($6140+4)|0);
      var $6141$1=HEAP32[(($ld$4348$1)>>2)];
      var $6142$0=($6141$0 << 30) | (0 >>> 2);
      var $6142$1=($6141$1 << 30) | ($6141$0 >>> 2);
      var $6143$0=$6139$0 | $6142$0;
      var $6143$1=$6139$1 | $6142$1;
      var $6144$0=$6136$0 ^ $6143$0;
      var $6144$1=$6136$1 ^ $6143$1;
      var $6145=(($S+32)|0);
      var $ld$4349$0=(($6145)|0);
      var $6146$0=HEAP32[(($ld$4349$0)>>2)];
      var $ld$4350$1=(($6145+4)|0);
      var $6146$1=HEAP32[(($ld$4350$1)>>2)];
      var $6147$0=($6146$1 >>> 7) | (0 << 25);
      var $6147$1=(0 >>> 7) | (0 << 25);
      var $6148=(($S+32)|0);
      var $ld$4351$0=(($6148)|0);
      var $6149$0=HEAP32[(($ld$4351$0)>>2)];
      var $ld$4352$1=(($6148+4)|0);
      var $6149$1=HEAP32[(($ld$4352$1)>>2)];
      var $6150$0=($6149$0 << 25) | (0 >>> 7);
      var $6150$1=($6149$1 << 25) | ($6149$0 >>> 7);
      var $6151$0=$6147$0 | $6150$0;
      var $6151$1=$6147$1 | $6150$1;
      var $6152$0=$6144$0 ^ $6151$0;
      var $6152$1=$6144$1 ^ $6151$1;
      var $6153=(($S+32)|0);
      var $ld$4353$0=(($6153)|0);
      var $6154$0=HEAP32[(($ld$4353$0)>>2)];
      var $ld$4354$1=(($6153+4)|0);
      var $6154$1=HEAP32[(($ld$4354$1)>>2)];
      var $6155=(($S+40)|0);
      var $ld$4355$0=(($6155)|0);
      var $6156$0=HEAP32[(($ld$4355$0)>>2)];
      var $ld$4356$1=(($6155+4)|0);
      var $6156$1=HEAP32[(($ld$4356$1)>>2)];
      var $6157$0=$6154$0 | $6156$0;
      var $6157$1=$6154$1 | $6156$1;
      var $6158=(($S+48)|0);
      var $ld$4357$0=(($6158)|0);
      var $6159$0=HEAP32[(($ld$4357$0)>>2)];
      var $ld$4358$1=(($6158+4)|0);
      var $6159$1=HEAP32[(($ld$4358$1)>>2)];
      var $6160$0=$6157$0 & $6159$0;
      var $6160$1=$6157$1 & $6159$1;
      var $6161=(($S+32)|0);
      var $ld$4359$0=(($6161)|0);
      var $6162$0=HEAP32[(($ld$4359$0)>>2)];
      var $ld$4360$1=(($6161+4)|0);
      var $6162$1=HEAP32[(($ld$4360$1)>>2)];
      var $6163=(($S+40)|0);
      var $ld$4361$0=(($6163)|0);
      var $6164$0=HEAP32[(($ld$4361$0)>>2)];
      var $ld$4362$1=(($6163+4)|0);
      var $6164$1=HEAP32[(($ld$4362$1)>>2)];
      var $6165$0=$6162$0 & $6164$0;
      var $6165$1=$6162$1 & $6164$1;
      var $6166$0=$6160$0 | $6165$0;
      var $6166$1=$6160$1 | $6165$1;
      var $6167$0 = _i64Add($6152$0,$6152$1,$6166$0,$6166$1); var $6167$1 = tempRet0;
      var $st$4363$0=(($t1)|0);
      HEAP32[(($st$4363$0)>>2)]=$6167$0;
      var $st$4364$1=(($t1+4)|0);
      HEAP32[(($st$4364$1)>>2)]=$6167$1;
      var $ld$4365$0=(($t0)|0);
      var $6168$0=HEAP32[(($ld$4365$0)>>2)];
      var $ld$4366$1=(($t0+4)|0);
      var $6168$1=HEAP32[(($ld$4366$1)>>2)];
      var $6169=(($S+56)|0);
      var $ld$4367$0=(($6169)|0);
      var $6170$0=HEAP32[(($ld$4367$0)>>2)];
      var $ld$4368$1=(($6169+4)|0);
      var $6170$1=HEAP32[(($ld$4368$1)>>2)];
      var $6171$0 = _i64Add($6170$0,$6170$1,$6168$0,$6168$1); var $6171$1 = tempRet0;
      var $st$4369$0=(($6169)|0);
      HEAP32[(($st$4369$0)>>2)]=$6171$0;
      var $st$4370$1=(($6169+4)|0);
      HEAP32[(($st$4370$1)>>2)]=$6171$1;
      var $ld$4371$0=(($t0)|0);
      var $6172$0=HEAP32[(($ld$4371$0)>>2)];
      var $ld$4372$1=(($t0+4)|0);
      var $6172$1=HEAP32[(($ld$4372$1)>>2)];
      var $ld$4373$0=(($t1)|0);
      var $6173$0=HEAP32[(($ld$4373$0)>>2)];
      var $ld$4374$1=(($t1+4)|0);
      var $6173$1=HEAP32[(($ld$4374$1)>>2)];
      var $6174$0 = _i64Add($6172$0,$6172$1,$6173$0,$6173$1); var $6174$1 = tempRet0;
      var $6175=(($S+24)|0);
      var $st$4375$0=(($6175)|0);
      HEAP32[(($st$4375$0)>>2)]=$6174$0;
      var $st$4376$1=(($6175+4)|0);
      HEAP32[(($st$4376$1)>>2)]=$6174$1;
      var $6176=(($S+16)|0);
      var $ld$4377$0=(($6176)|0);
      var $6177$0=HEAP32[(($ld$4377$0)>>2)];
      var $ld$4378$1=(($6176+4)|0);
      var $6177$1=HEAP32[(($ld$4378$1)>>2)];
      var $6178=(($S+56)|0);
      var $ld$4379$0=(($6178)|0);
      var $6179$0=HEAP32[(($ld$4379$0)>>2)];
      var $ld$4380$1=(($6178+4)|0);
      var $6179$1=HEAP32[(($ld$4380$1)>>2)];
      var $6180$0=($6179$0 >>> 14) | ($6179$1 << 18);
      var $6180$1=($6179$1 >>> 14) | (0 << 18);
      var $6181=(($S+56)|0);
      var $ld$4381$0=(($6181)|0);
      var $6182$0=HEAP32[(($ld$4381$0)>>2)];
      var $ld$4382$1=(($6181+4)|0);
      var $6182$1=HEAP32[(($ld$4382$1)>>2)];
      var $6183$0=(0 << 18) | (0 >>> 14);
      var $6183$1=($6182$0 << 18) | (0 >>> 14);
      var $6184$0=$6180$0 | $6183$0;
      var $6184$1=$6180$1 | $6183$1;
      var $6185=(($S+56)|0);
      var $ld$4383$0=(($6185)|0);
      var $6186$0=HEAP32[(($ld$4383$0)>>2)];
      var $ld$4384$1=(($6185+4)|0);
      var $6186$1=HEAP32[(($ld$4384$1)>>2)];
      var $6187$0=($6186$0 >>> 18) | ($6186$1 << 14);
      var $6187$1=($6186$1 >>> 18) | (0 << 14);
      var $6188=(($S+56)|0);
      var $ld$4385$0=(($6188)|0);
      var $6189$0=HEAP32[(($ld$4385$0)>>2)];
      var $ld$4386$1=(($6188+4)|0);
      var $6189$1=HEAP32[(($ld$4386$1)>>2)];
      var $6190$0=(0 << 14) | (0 >>> 18);
      var $6190$1=($6189$0 << 14) | (0 >>> 18);
      var $6191$0=$6187$0 | $6190$0;
      var $6191$1=$6187$1 | $6190$1;
      var $6192$0=$6184$0 ^ $6191$0;
      var $6192$1=$6184$1 ^ $6191$1;
      var $6193=(($S+56)|0);
      var $ld$4387$0=(($6193)|0);
      var $6194$0=HEAP32[(($ld$4387$0)>>2)];
      var $ld$4388$1=(($6193+4)|0);
      var $6194$1=HEAP32[(($ld$4388$1)>>2)];
      var $6195$0=($6194$1 >>> 9) | (0 << 23);
      var $6195$1=(0 >>> 9) | (0 << 23);
      var $6196=(($S+56)|0);
      var $ld$4389$0=(($6196)|0);
      var $6197$0=HEAP32[(($ld$4389$0)>>2)];
      var $ld$4390$1=(($6196+4)|0);
      var $6197$1=HEAP32[(($ld$4390$1)>>2)];
      var $6198$0=($6197$0 << 23) | (0 >>> 9);
      var $6198$1=($6197$1 << 23) | ($6197$0 >>> 9);
      var $6199$0=$6195$0 | $6198$0;
      var $6199$1=$6195$1 | $6198$1;
      var $6200$0=$6192$0 ^ $6199$0;
      var $6200$1=$6192$1 ^ $6199$1;
      var $6201$0 = _i64Add($6177$0,$6177$1,$6200$0,$6200$1); var $6201$1 = tempRet0;
      var $6202=(($S+8)|0);
      var $ld$4391$0=(($6202)|0);
      var $6203$0=HEAP32[(($ld$4391$0)>>2)];
      var $ld$4392$1=(($6202+4)|0);
      var $6203$1=HEAP32[(($ld$4392$1)>>2)];
      var $6204=(($S+56)|0);
      var $ld$4393$0=(($6204)|0);
      var $6205$0=HEAP32[(($ld$4393$0)>>2)];
      var $ld$4394$1=(($6204+4)|0);
      var $6205$1=HEAP32[(($ld$4394$1)>>2)];
      var $6206=(($S)|0);
      var $ld$4395$0=(($6206)|0);
      var $6207$0=HEAP32[(($ld$4395$0)>>2)];
      var $ld$4396$1=(($6206+4)|0);
      var $6207$1=HEAP32[(($ld$4396$1)>>2)];
      var $6208=(($S+8)|0);
      var $ld$4397$0=(($6208)|0);
      var $6209$0=HEAP32[(($ld$4397$0)>>2)];
      var $ld$4398$1=(($6208+4)|0);
      var $6209$1=HEAP32[(($ld$4398$1)>>2)];
      var $6210$0=$6207$0 ^ $6209$0;
      var $6210$1=$6207$1 ^ $6209$1;
      var $6211$0=$6205$0 & $6210$0;
      var $6211$1=$6205$1 & $6210$1;
      var $6212$0=$6203$0 ^ $6211$0;
      var $6212$1=$6203$1 ^ $6211$1;
      var $6213$0 = _i64Add($6201$0,$6201$1,$6212$0,$6212$1); var $6213$1 = tempRet0;
      var $$etemp$4399$0=-1563912026;
      var $$etemp$4399$1=174292421;
      var $6214$0 = _i64Add($6213$0,$6213$1,$$etemp$4399$0,$$etemp$4399$1); var $6214$1 = tempRet0;
      var $6215=(($W+552)|0);
      var $ld$4400$0=(($6215)|0);
      var $6216$0=HEAP32[(($ld$4400$0)>>2)];
      var $ld$4401$1=(($6215+4)|0);
      var $6216$1=HEAP32[(($ld$4401$1)>>2)];
      var $6217$0 = _i64Add($6214$0,$6214$1,$6216$0,$6216$1); var $6217$1 = tempRet0;
      var $st$4402$0=(($t0)|0);
      HEAP32[(($st$4402$0)>>2)]=$6217$0;
      var $st$4403$1=(($t0+4)|0);
      HEAP32[(($st$4403$1)>>2)]=$6217$1;
      var $6218=(($S+24)|0);
      var $ld$4404$0=(($6218)|0);
      var $6219$0=HEAP32[(($ld$4404$0)>>2)];
      var $ld$4405$1=(($6218+4)|0);
      var $6219$1=HEAP32[(($ld$4405$1)>>2)];
      var $6220$0=($6219$0 >>> 28) | ($6219$1 << 4);
      var $6220$1=($6219$1 >>> 28) | (0 << 4);
      var $6221=(($S+24)|0);
      var $ld$4406$0=(($6221)|0);
      var $6222$0=HEAP32[(($ld$4406$0)>>2)];
      var $ld$4407$1=(($6221+4)|0);
      var $6222$1=HEAP32[(($ld$4407$1)>>2)];
      var $6223$0=(0 << 4) | (0 >>> 28);
      var $6223$1=($6222$0 << 4) | (0 >>> 28);
      var $6224$0=$6220$0 | $6223$0;
      var $6224$1=$6220$1 | $6223$1;
      var $6225=(($S+24)|0);
      var $ld$4408$0=(($6225)|0);
      var $6226$0=HEAP32[(($ld$4408$0)>>2)];
      var $ld$4409$1=(($6225+4)|0);
      var $6226$1=HEAP32[(($ld$4409$1)>>2)];
      var $6227$0=($6226$1 >>> 2) | (0 << 30);
      var $6227$1=(0 >>> 2) | (0 << 30);
      var $6228=(($S+24)|0);
      var $ld$4410$0=(($6228)|0);
      var $6229$0=HEAP32[(($ld$4410$0)>>2)];
      var $ld$4411$1=(($6228+4)|0);
      var $6229$1=HEAP32[(($ld$4411$1)>>2)];
      var $6230$0=($6229$0 << 30) | (0 >>> 2);
      var $6230$1=($6229$1 << 30) | ($6229$0 >>> 2);
      var $6231$0=$6227$0 | $6230$0;
      var $6231$1=$6227$1 | $6230$1;
      var $6232$0=$6224$0 ^ $6231$0;
      var $6232$1=$6224$1 ^ $6231$1;
      var $6233=(($S+24)|0);
      var $ld$4412$0=(($6233)|0);
      var $6234$0=HEAP32[(($ld$4412$0)>>2)];
      var $ld$4413$1=(($6233+4)|0);
      var $6234$1=HEAP32[(($ld$4413$1)>>2)];
      var $6235$0=($6234$1 >>> 7) | (0 << 25);
      var $6235$1=(0 >>> 7) | (0 << 25);
      var $6236=(($S+24)|0);
      var $ld$4414$0=(($6236)|0);
      var $6237$0=HEAP32[(($ld$4414$0)>>2)];
      var $ld$4415$1=(($6236+4)|0);
      var $6237$1=HEAP32[(($ld$4415$1)>>2)];
      var $6238$0=($6237$0 << 25) | (0 >>> 7);
      var $6238$1=($6237$1 << 25) | ($6237$0 >>> 7);
      var $6239$0=$6235$0 | $6238$0;
      var $6239$1=$6235$1 | $6238$1;
      var $6240$0=$6232$0 ^ $6239$0;
      var $6240$1=$6232$1 ^ $6239$1;
      var $6241=(($S+24)|0);
      var $ld$4416$0=(($6241)|0);
      var $6242$0=HEAP32[(($ld$4416$0)>>2)];
      var $ld$4417$1=(($6241+4)|0);
      var $6242$1=HEAP32[(($ld$4417$1)>>2)];
      var $6243=(($S+32)|0);
      var $ld$4418$0=(($6243)|0);
      var $6244$0=HEAP32[(($ld$4418$0)>>2)];
      var $ld$4419$1=(($6243+4)|0);
      var $6244$1=HEAP32[(($ld$4419$1)>>2)];
      var $6245$0=$6242$0 | $6244$0;
      var $6245$1=$6242$1 | $6244$1;
      var $6246=(($S+40)|0);
      var $ld$4420$0=(($6246)|0);
      var $6247$0=HEAP32[(($ld$4420$0)>>2)];
      var $ld$4421$1=(($6246+4)|0);
      var $6247$1=HEAP32[(($ld$4421$1)>>2)];
      var $6248$0=$6245$0 & $6247$0;
      var $6248$1=$6245$1 & $6247$1;
      var $6249=(($S+24)|0);
      var $ld$4422$0=(($6249)|0);
      var $6250$0=HEAP32[(($ld$4422$0)>>2)];
      var $ld$4423$1=(($6249+4)|0);
      var $6250$1=HEAP32[(($ld$4423$1)>>2)];
      var $6251=(($S+32)|0);
      var $ld$4424$0=(($6251)|0);
      var $6252$0=HEAP32[(($ld$4424$0)>>2)];
      var $ld$4425$1=(($6251+4)|0);
      var $6252$1=HEAP32[(($ld$4425$1)>>2)];
      var $6253$0=$6250$0 & $6252$0;
      var $6253$1=$6250$1 & $6252$1;
      var $6254$0=$6248$0 | $6253$0;
      var $6254$1=$6248$1 | $6253$1;
      var $6255$0 = _i64Add($6240$0,$6240$1,$6254$0,$6254$1); var $6255$1 = tempRet0;
      var $st$4426$0=(($t1)|0);
      HEAP32[(($st$4426$0)>>2)]=$6255$0;
      var $st$4427$1=(($t1+4)|0);
      HEAP32[(($st$4427$1)>>2)]=$6255$1;
      var $ld$4428$0=(($t0)|0);
      var $6256$0=HEAP32[(($ld$4428$0)>>2)];
      var $ld$4429$1=(($t0+4)|0);
      var $6256$1=HEAP32[(($ld$4429$1)>>2)];
      var $6257=(($S+48)|0);
      var $ld$4430$0=(($6257)|0);
      var $6258$0=HEAP32[(($ld$4430$0)>>2)];
      var $ld$4431$1=(($6257+4)|0);
      var $6258$1=HEAP32[(($ld$4431$1)>>2)];
      var $6259$0 = _i64Add($6258$0,$6258$1,$6256$0,$6256$1); var $6259$1 = tempRet0;
      var $st$4432$0=(($6257)|0);
      HEAP32[(($st$4432$0)>>2)]=$6259$0;
      var $st$4433$1=(($6257+4)|0);
      HEAP32[(($st$4433$1)>>2)]=$6259$1;
      var $ld$4434$0=(($t0)|0);
      var $6260$0=HEAP32[(($ld$4434$0)>>2)];
      var $ld$4435$1=(($t0+4)|0);
      var $6260$1=HEAP32[(($ld$4435$1)>>2)];
      var $ld$4436$0=(($t1)|0);
      var $6261$0=HEAP32[(($ld$4436$0)>>2)];
      var $ld$4437$1=(($t1+4)|0);
      var $6261$1=HEAP32[(($ld$4437$1)>>2)];
      var $6262$0 = _i64Add($6260$0,$6260$1,$6261$0,$6261$1); var $6262$1 = tempRet0;
      var $6263=(($S+16)|0);
      var $st$4438$0=(($6263)|0);
      HEAP32[(($st$4438$0)>>2)]=$6262$0;
      var $st$4439$1=(($6263+4)|0);
      HEAP32[(($st$4439$1)>>2)]=$6262$1;
      var $6264=(($S+8)|0);
      var $ld$4440$0=(($6264)|0);
      var $6265$0=HEAP32[(($ld$4440$0)>>2)];
      var $ld$4441$1=(($6264+4)|0);
      var $6265$1=HEAP32[(($ld$4441$1)>>2)];
      var $6266=(($S+48)|0);
      var $ld$4442$0=(($6266)|0);
      var $6267$0=HEAP32[(($ld$4442$0)>>2)];
      var $ld$4443$1=(($6266+4)|0);
      var $6267$1=HEAP32[(($ld$4443$1)>>2)];
      var $6268$0=($6267$0 >>> 14) | ($6267$1 << 18);
      var $6268$1=($6267$1 >>> 14) | (0 << 18);
      var $6269=(($S+48)|0);
      var $ld$4444$0=(($6269)|0);
      var $6270$0=HEAP32[(($ld$4444$0)>>2)];
      var $ld$4445$1=(($6269+4)|0);
      var $6270$1=HEAP32[(($ld$4445$1)>>2)];
      var $6271$0=(0 << 18) | (0 >>> 14);
      var $6271$1=($6270$0 << 18) | (0 >>> 14);
      var $6272$0=$6268$0 | $6271$0;
      var $6272$1=$6268$1 | $6271$1;
      var $6273=(($S+48)|0);
      var $ld$4446$0=(($6273)|0);
      var $6274$0=HEAP32[(($ld$4446$0)>>2)];
      var $ld$4447$1=(($6273+4)|0);
      var $6274$1=HEAP32[(($ld$4447$1)>>2)];
      var $6275$0=($6274$0 >>> 18) | ($6274$1 << 14);
      var $6275$1=($6274$1 >>> 18) | (0 << 14);
      var $6276=(($S+48)|0);
      var $ld$4448$0=(($6276)|0);
      var $6277$0=HEAP32[(($ld$4448$0)>>2)];
      var $ld$4449$1=(($6276+4)|0);
      var $6277$1=HEAP32[(($ld$4449$1)>>2)];
      var $6278$0=(0 << 14) | (0 >>> 18);
      var $6278$1=($6277$0 << 14) | (0 >>> 18);
      var $6279$0=$6275$0 | $6278$0;
      var $6279$1=$6275$1 | $6278$1;
      var $6280$0=$6272$0 ^ $6279$0;
      var $6280$1=$6272$1 ^ $6279$1;
      var $6281=(($S+48)|0);
      var $ld$4450$0=(($6281)|0);
      var $6282$0=HEAP32[(($ld$4450$0)>>2)];
      var $ld$4451$1=(($6281+4)|0);
      var $6282$1=HEAP32[(($ld$4451$1)>>2)];
      var $6283$0=($6282$1 >>> 9) | (0 << 23);
      var $6283$1=(0 >>> 9) | (0 << 23);
      var $6284=(($S+48)|0);
      var $ld$4452$0=(($6284)|0);
      var $6285$0=HEAP32[(($ld$4452$0)>>2)];
      var $ld$4453$1=(($6284+4)|0);
      var $6285$1=HEAP32[(($ld$4453$1)>>2)];
      var $6286$0=($6285$0 << 23) | (0 >>> 9);
      var $6286$1=($6285$1 << 23) | ($6285$0 >>> 9);
      var $6287$0=$6283$0 | $6286$0;
      var $6287$1=$6283$1 | $6286$1;
      var $6288$0=$6280$0 ^ $6287$0;
      var $6288$1=$6280$1 ^ $6287$1;
      var $6289$0 = _i64Add($6265$0,$6265$1,$6288$0,$6288$1); var $6289$1 = tempRet0;
      var $6290=(($S)|0);
      var $ld$4454$0=(($6290)|0);
      var $6291$0=HEAP32[(($ld$4454$0)>>2)];
      var $ld$4455$1=(($6290+4)|0);
      var $6291$1=HEAP32[(($ld$4455$1)>>2)];
      var $6292=(($S+48)|0);
      var $ld$4456$0=(($6292)|0);
      var $6293$0=HEAP32[(($ld$4456$0)>>2)];
      var $ld$4457$1=(($6292+4)|0);
      var $6293$1=HEAP32[(($ld$4457$1)>>2)];
      var $6294=(($S+56)|0);
      var $ld$4458$0=(($6294)|0);
      var $6295$0=HEAP32[(($ld$4458$0)>>2)];
      var $ld$4459$1=(($6294+4)|0);
      var $6295$1=HEAP32[(($ld$4459$1)>>2)];
      var $6296=(($S)|0);
      var $ld$4460$0=(($6296)|0);
      var $6297$0=HEAP32[(($ld$4460$0)>>2)];
      var $ld$4461$1=(($6296+4)|0);
      var $6297$1=HEAP32[(($ld$4461$1)>>2)];
      var $6298$0=$6295$0 ^ $6297$0;
      var $6298$1=$6295$1 ^ $6297$1;
      var $6299$0=$6293$0 & $6298$0;
      var $6299$1=$6293$1 & $6298$1;
      var $6300$0=$6291$0 ^ $6299$0;
      var $6300$1=$6291$1 ^ $6299$1;
      var $6301$0 = _i64Add($6289$0,$6289$1,$6300$0,$6300$1); var $6301$1 = tempRet0;
      var $$etemp$4462$0=-1090974290;
      var $$etemp$4462$1=289380356;
      var $6302$0 = _i64Add($6301$0,$6301$1,$$etemp$4462$0,$$etemp$4462$1); var $6302$1 = tempRet0;
      var $6303=(($W+560)|0);
      var $ld$4463$0=(($6303)|0);
      var $6304$0=HEAP32[(($ld$4463$0)>>2)];
      var $ld$4464$1=(($6303+4)|0);
      var $6304$1=HEAP32[(($ld$4464$1)>>2)];
      var $6305$0 = _i64Add($6302$0,$6302$1,$6304$0,$6304$1); var $6305$1 = tempRet0;
      var $st$4465$0=(($t0)|0);
      HEAP32[(($st$4465$0)>>2)]=$6305$0;
      var $st$4466$1=(($t0+4)|0);
      HEAP32[(($st$4466$1)>>2)]=$6305$1;
      var $6306=(($S+16)|0);
      var $ld$4467$0=(($6306)|0);
      var $6307$0=HEAP32[(($ld$4467$0)>>2)];
      var $ld$4468$1=(($6306+4)|0);
      var $6307$1=HEAP32[(($ld$4468$1)>>2)];
      var $6308$0=($6307$0 >>> 28) | ($6307$1 << 4);
      var $6308$1=($6307$1 >>> 28) | (0 << 4);
      var $6309=(($S+16)|0);
      var $ld$4469$0=(($6309)|0);
      var $6310$0=HEAP32[(($ld$4469$0)>>2)];
      var $ld$4470$1=(($6309+4)|0);
      var $6310$1=HEAP32[(($ld$4470$1)>>2)];
      var $6311$0=(0 << 4) | (0 >>> 28);
      var $6311$1=($6310$0 << 4) | (0 >>> 28);
      var $6312$0=$6308$0 | $6311$0;
      var $6312$1=$6308$1 | $6311$1;
      var $6313=(($S+16)|0);
      var $ld$4471$0=(($6313)|0);
      var $6314$0=HEAP32[(($ld$4471$0)>>2)];
      var $ld$4472$1=(($6313+4)|0);
      var $6314$1=HEAP32[(($ld$4472$1)>>2)];
      var $6315$0=($6314$1 >>> 2) | (0 << 30);
      var $6315$1=(0 >>> 2) | (0 << 30);
      var $6316=(($S+16)|0);
      var $ld$4473$0=(($6316)|0);
      var $6317$0=HEAP32[(($ld$4473$0)>>2)];
      var $ld$4474$1=(($6316+4)|0);
      var $6317$1=HEAP32[(($ld$4474$1)>>2)];
      var $6318$0=($6317$0 << 30) | (0 >>> 2);
      var $6318$1=($6317$1 << 30) | ($6317$0 >>> 2);
      var $6319$0=$6315$0 | $6318$0;
      var $6319$1=$6315$1 | $6318$1;
      var $6320$0=$6312$0 ^ $6319$0;
      var $6320$1=$6312$1 ^ $6319$1;
      var $6321=(($S+16)|0);
      var $ld$4475$0=(($6321)|0);
      var $6322$0=HEAP32[(($ld$4475$0)>>2)];
      var $ld$4476$1=(($6321+4)|0);
      var $6322$1=HEAP32[(($ld$4476$1)>>2)];
      var $6323$0=($6322$1 >>> 7) | (0 << 25);
      var $6323$1=(0 >>> 7) | (0 << 25);
      var $6324=(($S+16)|0);
      var $ld$4477$0=(($6324)|0);
      var $6325$0=HEAP32[(($ld$4477$0)>>2)];
      var $ld$4478$1=(($6324+4)|0);
      var $6325$1=HEAP32[(($ld$4478$1)>>2)];
      var $6326$0=($6325$0 << 25) | (0 >>> 7);
      var $6326$1=($6325$1 << 25) | ($6325$0 >>> 7);
      var $6327$0=$6323$0 | $6326$0;
      var $6327$1=$6323$1 | $6326$1;
      var $6328$0=$6320$0 ^ $6327$0;
      var $6328$1=$6320$1 ^ $6327$1;
      var $6329=(($S+16)|0);
      var $ld$4479$0=(($6329)|0);
      var $6330$0=HEAP32[(($ld$4479$0)>>2)];
      var $ld$4480$1=(($6329+4)|0);
      var $6330$1=HEAP32[(($ld$4480$1)>>2)];
      var $6331=(($S+24)|0);
      var $ld$4481$0=(($6331)|0);
      var $6332$0=HEAP32[(($ld$4481$0)>>2)];
      var $ld$4482$1=(($6331+4)|0);
      var $6332$1=HEAP32[(($ld$4482$1)>>2)];
      var $6333$0=$6330$0 | $6332$0;
      var $6333$1=$6330$1 | $6332$1;
      var $6334=(($S+32)|0);
      var $ld$4483$0=(($6334)|0);
      var $6335$0=HEAP32[(($ld$4483$0)>>2)];
      var $ld$4484$1=(($6334+4)|0);
      var $6335$1=HEAP32[(($ld$4484$1)>>2)];
      var $6336$0=$6333$0 & $6335$0;
      var $6336$1=$6333$1 & $6335$1;
      var $6337=(($S+16)|0);
      var $ld$4485$0=(($6337)|0);
      var $6338$0=HEAP32[(($ld$4485$0)>>2)];
      var $ld$4486$1=(($6337+4)|0);
      var $6338$1=HEAP32[(($ld$4486$1)>>2)];
      var $6339=(($S+24)|0);
      var $ld$4487$0=(($6339)|0);
      var $6340$0=HEAP32[(($ld$4487$0)>>2)];
      var $ld$4488$1=(($6339+4)|0);
      var $6340$1=HEAP32[(($ld$4488$1)>>2)];
      var $6341$0=$6338$0 & $6340$0;
      var $6341$1=$6338$1 & $6340$1;
      var $6342$0=$6336$0 | $6341$0;
      var $6342$1=$6336$1 | $6341$1;
      var $6343$0 = _i64Add($6328$0,$6328$1,$6342$0,$6342$1); var $6343$1 = tempRet0;
      var $st$4489$0=(($t1)|0);
      HEAP32[(($st$4489$0)>>2)]=$6343$0;
      var $st$4490$1=(($t1+4)|0);
      HEAP32[(($st$4490$1)>>2)]=$6343$1;
      var $ld$4491$0=(($t0)|0);
      var $6344$0=HEAP32[(($ld$4491$0)>>2)];
      var $ld$4492$1=(($t0+4)|0);
      var $6344$1=HEAP32[(($ld$4492$1)>>2)];
      var $6345=(($S+40)|0);
      var $ld$4493$0=(($6345)|0);
      var $6346$0=HEAP32[(($ld$4493$0)>>2)];
      var $ld$4494$1=(($6345+4)|0);
      var $6346$1=HEAP32[(($ld$4494$1)>>2)];
      var $6347$0 = _i64Add($6346$0,$6346$1,$6344$0,$6344$1); var $6347$1 = tempRet0;
      var $st$4495$0=(($6345)|0);
      HEAP32[(($st$4495$0)>>2)]=$6347$0;
      var $st$4496$1=(($6345+4)|0);
      HEAP32[(($st$4496$1)>>2)]=$6347$1;
      var $ld$4497$0=(($t0)|0);
      var $6348$0=HEAP32[(($ld$4497$0)>>2)];
      var $ld$4498$1=(($t0+4)|0);
      var $6348$1=HEAP32[(($ld$4498$1)>>2)];
      var $ld$4499$0=(($t1)|0);
      var $6349$0=HEAP32[(($ld$4499$0)>>2)];
      var $ld$4500$1=(($t1+4)|0);
      var $6349$1=HEAP32[(($ld$4500$1)>>2)];
      var $6350$0 = _i64Add($6348$0,$6348$1,$6349$0,$6349$1); var $6350$1 = tempRet0;
      var $6351=(($S+8)|0);
      var $st$4501$0=(($6351)|0);
      HEAP32[(($st$4501$0)>>2)]=$6350$0;
      var $st$4502$1=(($6351+4)|0);
      HEAP32[(($st$4502$1)>>2)]=$6350$1;
      var $6352=(($S)|0);
      var $ld$4503$0=(($6352)|0);
      var $6353$0=HEAP32[(($ld$4503$0)>>2)];
      var $ld$4504$1=(($6352+4)|0);
      var $6353$1=HEAP32[(($ld$4504$1)>>2)];
      var $6354=(($S+40)|0);
      var $ld$4505$0=(($6354)|0);
      var $6355$0=HEAP32[(($ld$4505$0)>>2)];
      var $ld$4506$1=(($6354+4)|0);
      var $6355$1=HEAP32[(($ld$4506$1)>>2)];
      var $6356$0=($6355$0 >>> 14) | ($6355$1 << 18);
      var $6356$1=($6355$1 >>> 14) | (0 << 18);
      var $6357=(($S+40)|0);
      var $ld$4507$0=(($6357)|0);
      var $6358$0=HEAP32[(($ld$4507$0)>>2)];
      var $ld$4508$1=(($6357+4)|0);
      var $6358$1=HEAP32[(($ld$4508$1)>>2)];
      var $6359$0=(0 << 18) | (0 >>> 14);
      var $6359$1=($6358$0 << 18) | (0 >>> 14);
      var $6360$0=$6356$0 | $6359$0;
      var $6360$1=$6356$1 | $6359$1;
      var $6361=(($S+40)|0);
      var $ld$4509$0=(($6361)|0);
      var $6362$0=HEAP32[(($ld$4509$0)>>2)];
      var $ld$4510$1=(($6361+4)|0);
      var $6362$1=HEAP32[(($ld$4510$1)>>2)];
      var $6363$0=($6362$0 >>> 18) | ($6362$1 << 14);
      var $6363$1=($6362$1 >>> 18) | (0 << 14);
      var $6364=(($S+40)|0);
      var $ld$4511$0=(($6364)|0);
      var $6365$0=HEAP32[(($ld$4511$0)>>2)];
      var $ld$4512$1=(($6364+4)|0);
      var $6365$1=HEAP32[(($ld$4512$1)>>2)];
      var $6366$0=(0 << 14) | (0 >>> 18);
      var $6366$1=($6365$0 << 14) | (0 >>> 18);
      var $6367$0=$6363$0 | $6366$0;
      var $6367$1=$6363$1 | $6366$1;
      var $6368$0=$6360$0 ^ $6367$0;
      var $6368$1=$6360$1 ^ $6367$1;
      var $6369=(($S+40)|0);
      var $ld$4513$0=(($6369)|0);
      var $6370$0=HEAP32[(($ld$4513$0)>>2)];
      var $ld$4514$1=(($6369+4)|0);
      var $6370$1=HEAP32[(($ld$4514$1)>>2)];
      var $6371$0=($6370$1 >>> 9) | (0 << 23);
      var $6371$1=(0 >>> 9) | (0 << 23);
      var $6372=(($S+40)|0);
      var $ld$4515$0=(($6372)|0);
      var $6373$0=HEAP32[(($ld$4515$0)>>2)];
      var $ld$4516$1=(($6372+4)|0);
      var $6373$1=HEAP32[(($ld$4516$1)>>2)];
      var $6374$0=($6373$0 << 23) | (0 >>> 9);
      var $6374$1=($6373$1 << 23) | ($6373$0 >>> 9);
      var $6375$0=$6371$0 | $6374$0;
      var $6375$1=$6371$1 | $6374$1;
      var $6376$0=$6368$0 ^ $6375$0;
      var $6376$1=$6368$1 ^ $6375$1;
      var $6377$0 = _i64Add($6353$0,$6353$1,$6376$0,$6376$1); var $6377$1 = tempRet0;
      var $6378=(($S+56)|0);
      var $ld$4517$0=(($6378)|0);
      var $6379$0=HEAP32[(($ld$4517$0)>>2)];
      var $ld$4518$1=(($6378+4)|0);
      var $6379$1=HEAP32[(($ld$4518$1)>>2)];
      var $6380=(($S+40)|0);
      var $ld$4519$0=(($6380)|0);
      var $6381$0=HEAP32[(($ld$4519$0)>>2)];
      var $ld$4520$1=(($6380+4)|0);
      var $6381$1=HEAP32[(($ld$4520$1)>>2)];
      var $6382=(($S+48)|0);
      var $ld$4521$0=(($6382)|0);
      var $6383$0=HEAP32[(($ld$4521$0)>>2)];
      var $ld$4522$1=(($6382+4)|0);
      var $6383$1=HEAP32[(($ld$4522$1)>>2)];
      var $6384=(($S+56)|0);
      var $ld$4523$0=(($6384)|0);
      var $6385$0=HEAP32[(($ld$4523$0)>>2)];
      var $ld$4524$1=(($6384+4)|0);
      var $6385$1=HEAP32[(($ld$4524$1)>>2)];
      var $6386$0=$6383$0 ^ $6385$0;
      var $6386$1=$6383$1 ^ $6385$1;
      var $6387$0=$6381$0 & $6386$0;
      var $6387$1=$6381$1 & $6386$1;
      var $6388$0=$6379$0 ^ $6387$0;
      var $6388$1=$6379$1 ^ $6387$1;
      var $6389$0 = _i64Add($6377$0,$6377$1,$6388$0,$6388$1); var $6389$1 = tempRet0;
      var $$etemp$4525$0=320620315;
      var $$etemp$4525$1=460393269;
      var $6390$0 = _i64Add($6389$0,$6389$1,$$etemp$4525$0,$$etemp$4525$1); var $6390$1 = tempRet0;
      var $6391=(($W+568)|0);
      var $ld$4526$0=(($6391)|0);
      var $6392$0=HEAP32[(($ld$4526$0)>>2)];
      var $ld$4527$1=(($6391+4)|0);
      var $6392$1=HEAP32[(($ld$4527$1)>>2)];
      var $6393$0 = _i64Add($6390$0,$6390$1,$6392$0,$6392$1); var $6393$1 = tempRet0;
      var $st$4528$0=(($t0)|0);
      HEAP32[(($st$4528$0)>>2)]=$6393$0;
      var $st$4529$1=(($t0+4)|0);
      HEAP32[(($st$4529$1)>>2)]=$6393$1;
      var $6394=(($S+8)|0);
      var $ld$4530$0=(($6394)|0);
      var $6395$0=HEAP32[(($ld$4530$0)>>2)];
      var $ld$4531$1=(($6394+4)|0);
      var $6395$1=HEAP32[(($ld$4531$1)>>2)];
      var $6396$0=($6395$0 >>> 28) | ($6395$1 << 4);
      var $6396$1=($6395$1 >>> 28) | (0 << 4);
      var $6397=(($S+8)|0);
      var $ld$4532$0=(($6397)|0);
      var $6398$0=HEAP32[(($ld$4532$0)>>2)];
      var $ld$4533$1=(($6397+4)|0);
      var $6398$1=HEAP32[(($ld$4533$1)>>2)];
      var $6399$0=(0 << 4) | (0 >>> 28);
      var $6399$1=($6398$0 << 4) | (0 >>> 28);
      var $6400$0=$6396$0 | $6399$0;
      var $6400$1=$6396$1 | $6399$1;
      var $6401=(($S+8)|0);
      var $ld$4534$0=(($6401)|0);
      var $6402$0=HEAP32[(($ld$4534$0)>>2)];
      var $ld$4535$1=(($6401+4)|0);
      var $6402$1=HEAP32[(($ld$4535$1)>>2)];
      var $6403$0=($6402$1 >>> 2) | (0 << 30);
      var $6403$1=(0 >>> 2) | (0 << 30);
      var $6404=(($S+8)|0);
      var $ld$4536$0=(($6404)|0);
      var $6405$0=HEAP32[(($ld$4536$0)>>2)];
      var $ld$4537$1=(($6404+4)|0);
      var $6405$1=HEAP32[(($ld$4537$1)>>2)];
      var $6406$0=($6405$0 << 30) | (0 >>> 2);
      var $6406$1=($6405$1 << 30) | ($6405$0 >>> 2);
      var $6407$0=$6403$0 | $6406$0;
      var $6407$1=$6403$1 | $6406$1;
      var $6408$0=$6400$0 ^ $6407$0;
      var $6408$1=$6400$1 ^ $6407$1;
      var $6409=(($S+8)|0);
      var $ld$4538$0=(($6409)|0);
      var $6410$0=HEAP32[(($ld$4538$0)>>2)];
      var $ld$4539$1=(($6409+4)|0);
      var $6410$1=HEAP32[(($ld$4539$1)>>2)];
      var $6411$0=($6410$1 >>> 7) | (0 << 25);
      var $6411$1=(0 >>> 7) | (0 << 25);
      var $6412=(($S+8)|0);
      var $ld$4540$0=(($6412)|0);
      var $6413$0=HEAP32[(($ld$4540$0)>>2)];
      var $ld$4541$1=(($6412+4)|0);
      var $6413$1=HEAP32[(($ld$4541$1)>>2)];
      var $6414$0=($6413$0 << 25) | (0 >>> 7);
      var $6414$1=($6413$1 << 25) | ($6413$0 >>> 7);
      var $6415$0=$6411$0 | $6414$0;
      var $6415$1=$6411$1 | $6414$1;
      var $6416$0=$6408$0 ^ $6415$0;
      var $6416$1=$6408$1 ^ $6415$1;
      var $6417=(($S+8)|0);
      var $ld$4542$0=(($6417)|0);
      var $6418$0=HEAP32[(($ld$4542$0)>>2)];
      var $ld$4543$1=(($6417+4)|0);
      var $6418$1=HEAP32[(($ld$4543$1)>>2)];
      var $6419=(($S+16)|0);
      var $ld$4544$0=(($6419)|0);
      var $6420$0=HEAP32[(($ld$4544$0)>>2)];
      var $ld$4545$1=(($6419+4)|0);
      var $6420$1=HEAP32[(($ld$4545$1)>>2)];
      var $6421$0=$6418$0 | $6420$0;
      var $6421$1=$6418$1 | $6420$1;
      var $6422=(($S+24)|0);
      var $ld$4546$0=(($6422)|0);
      var $6423$0=HEAP32[(($ld$4546$0)>>2)];
      var $ld$4547$1=(($6422+4)|0);
      var $6423$1=HEAP32[(($ld$4547$1)>>2)];
      var $6424$0=$6421$0 & $6423$0;
      var $6424$1=$6421$1 & $6423$1;
      var $6425=(($S+8)|0);
      var $ld$4548$0=(($6425)|0);
      var $6426$0=HEAP32[(($ld$4548$0)>>2)];
      var $ld$4549$1=(($6425+4)|0);
      var $6426$1=HEAP32[(($ld$4549$1)>>2)];
      var $6427=(($S+16)|0);
      var $ld$4550$0=(($6427)|0);
      var $6428$0=HEAP32[(($ld$4550$0)>>2)];
      var $ld$4551$1=(($6427+4)|0);
      var $6428$1=HEAP32[(($ld$4551$1)>>2)];
      var $6429$0=$6426$0 & $6428$0;
      var $6429$1=$6426$1 & $6428$1;
      var $6430$0=$6424$0 | $6429$0;
      var $6430$1=$6424$1 | $6429$1;
      var $6431$0 = _i64Add($6416$0,$6416$1,$6430$0,$6430$1); var $6431$1 = tempRet0;
      var $st$4552$0=(($t1)|0);
      HEAP32[(($st$4552$0)>>2)]=$6431$0;
      var $st$4553$1=(($t1+4)|0);
      HEAP32[(($st$4553$1)>>2)]=$6431$1;
      var $ld$4554$0=(($t0)|0);
      var $6432$0=HEAP32[(($ld$4554$0)>>2)];
      var $ld$4555$1=(($t0+4)|0);
      var $6432$1=HEAP32[(($ld$4555$1)>>2)];
      var $6433=(($S+32)|0);
      var $ld$4556$0=(($6433)|0);
      var $6434$0=HEAP32[(($ld$4556$0)>>2)];
      var $ld$4557$1=(($6433+4)|0);
      var $6434$1=HEAP32[(($ld$4557$1)>>2)];
      var $6435$0 = _i64Add($6434$0,$6434$1,$6432$0,$6432$1); var $6435$1 = tempRet0;
      var $st$4558$0=(($6433)|0);
      HEAP32[(($st$4558$0)>>2)]=$6435$0;
      var $st$4559$1=(($6433+4)|0);
      HEAP32[(($st$4559$1)>>2)]=$6435$1;
      var $ld$4560$0=(($t0)|0);
      var $6436$0=HEAP32[(($ld$4560$0)>>2)];
      var $ld$4561$1=(($t0+4)|0);
      var $6436$1=HEAP32[(($ld$4561$1)>>2)];
      var $ld$4562$0=(($t1)|0);
      var $6437$0=HEAP32[(($ld$4562$0)>>2)];
      var $ld$4563$1=(($t1+4)|0);
      var $6437$1=HEAP32[(($ld$4563$1)>>2)];
      var $6438$0 = _i64Add($6436$0,$6436$1,$6437$0,$6437$1); var $6438$1 = tempRet0;
      var $6439=(($S)|0);
      var $st$4564$0=(($6439)|0);
      HEAP32[(($st$4564$0)>>2)]=$6438$0;
      var $st$4565$1=(($6439+4)|0);
      HEAP32[(($st$4565$1)>>2)]=$6438$1;
      var $6440=(($S+56)|0);
      var $ld$4566$0=(($6440)|0);
      var $6441$0=HEAP32[(($ld$4566$0)>>2)];
      var $ld$4567$1=(($6440+4)|0);
      var $6441$1=HEAP32[(($ld$4567$1)>>2)];
      var $6442=(($S+32)|0);
      var $ld$4568$0=(($6442)|0);
      var $6443$0=HEAP32[(($ld$4568$0)>>2)];
      var $ld$4569$1=(($6442+4)|0);
      var $6443$1=HEAP32[(($ld$4569$1)>>2)];
      var $6444$0=($6443$0 >>> 14) | ($6443$1 << 18);
      var $6444$1=($6443$1 >>> 14) | (0 << 18);
      var $6445=(($S+32)|0);
      var $ld$4570$0=(($6445)|0);
      var $6446$0=HEAP32[(($ld$4570$0)>>2)];
      var $ld$4571$1=(($6445+4)|0);
      var $6446$1=HEAP32[(($ld$4571$1)>>2)];
      var $6447$0=(0 << 18) | (0 >>> 14);
      var $6447$1=($6446$0 << 18) | (0 >>> 14);
      var $6448$0=$6444$0 | $6447$0;
      var $6448$1=$6444$1 | $6447$1;
      var $6449=(($S+32)|0);
      var $ld$4572$0=(($6449)|0);
      var $6450$0=HEAP32[(($ld$4572$0)>>2)];
      var $ld$4573$1=(($6449+4)|0);
      var $6450$1=HEAP32[(($ld$4573$1)>>2)];
      var $6451$0=($6450$0 >>> 18) | ($6450$1 << 14);
      var $6451$1=($6450$1 >>> 18) | (0 << 14);
      var $6452=(($S+32)|0);
      var $ld$4574$0=(($6452)|0);
      var $6453$0=HEAP32[(($ld$4574$0)>>2)];
      var $ld$4575$1=(($6452+4)|0);
      var $6453$1=HEAP32[(($ld$4575$1)>>2)];
      var $6454$0=(0 << 14) | (0 >>> 18);
      var $6454$1=($6453$0 << 14) | (0 >>> 18);
      var $6455$0=$6451$0 | $6454$0;
      var $6455$1=$6451$1 | $6454$1;
      var $6456$0=$6448$0 ^ $6455$0;
      var $6456$1=$6448$1 ^ $6455$1;
      var $6457=(($S+32)|0);
      var $ld$4576$0=(($6457)|0);
      var $6458$0=HEAP32[(($ld$4576$0)>>2)];
      var $ld$4577$1=(($6457+4)|0);
      var $6458$1=HEAP32[(($ld$4577$1)>>2)];
      var $6459$0=($6458$1 >>> 9) | (0 << 23);
      var $6459$1=(0 >>> 9) | (0 << 23);
      var $6460=(($S+32)|0);
      var $ld$4578$0=(($6460)|0);
      var $6461$0=HEAP32[(($ld$4578$0)>>2)];
      var $ld$4579$1=(($6460+4)|0);
      var $6461$1=HEAP32[(($ld$4579$1)>>2)];
      var $6462$0=($6461$0 << 23) | (0 >>> 9);
      var $6462$1=($6461$1 << 23) | ($6461$0 >>> 9);
      var $6463$0=$6459$0 | $6462$0;
      var $6463$1=$6459$1 | $6462$1;
      var $6464$0=$6456$0 ^ $6463$0;
      var $6464$1=$6456$1 ^ $6463$1;
      var $6465$0 = _i64Add($6441$0,$6441$1,$6464$0,$6464$1); var $6465$1 = tempRet0;
      var $6466=(($S+48)|0);
      var $ld$4580$0=(($6466)|0);
      var $6467$0=HEAP32[(($ld$4580$0)>>2)];
      var $ld$4581$1=(($6466+4)|0);
      var $6467$1=HEAP32[(($ld$4581$1)>>2)];
      var $6468=(($S+32)|0);
      var $ld$4582$0=(($6468)|0);
      var $6469$0=HEAP32[(($ld$4582$0)>>2)];
      var $ld$4583$1=(($6468+4)|0);
      var $6469$1=HEAP32[(($ld$4583$1)>>2)];
      var $6470=(($S+40)|0);
      var $ld$4584$0=(($6470)|0);
      var $6471$0=HEAP32[(($ld$4584$0)>>2)];
      var $ld$4585$1=(($6470+4)|0);
      var $6471$1=HEAP32[(($ld$4585$1)>>2)];
      var $6472=(($S+48)|0);
      var $ld$4586$0=(($6472)|0);
      var $6473$0=HEAP32[(($ld$4586$0)>>2)];
      var $ld$4587$1=(($6472+4)|0);
      var $6473$1=HEAP32[(($ld$4587$1)>>2)];
      var $6474$0=$6471$0 ^ $6473$0;
      var $6474$1=$6471$1 ^ $6473$1;
      var $6475$0=$6469$0 & $6474$0;
      var $6475$1=$6469$1 & $6474$1;
      var $6476$0=$6467$0 ^ $6475$0;
      var $6476$1=$6467$1 ^ $6475$1;
      var $6477$0 = _i64Add($6465$0,$6465$1,$6476$0,$6476$1); var $6477$1 = tempRet0;
      var $$etemp$4588$0=587496836;
      var $$etemp$4588$1=685471733;
      var $6478$0 = _i64Add($6477$0,$6477$1,$$etemp$4588$0,$$etemp$4588$1); var $6478$1 = tempRet0;
      var $6479=(($W+576)|0);
      var $ld$4589$0=(($6479)|0);
      var $6480$0=HEAP32[(($ld$4589$0)>>2)];
      var $ld$4590$1=(($6479+4)|0);
      var $6480$1=HEAP32[(($ld$4590$1)>>2)];
      var $6481$0 = _i64Add($6478$0,$6478$1,$6480$0,$6480$1); var $6481$1 = tempRet0;
      var $st$4591$0=(($t0)|0);
      HEAP32[(($st$4591$0)>>2)]=$6481$0;
      var $st$4592$1=(($t0+4)|0);
      HEAP32[(($st$4592$1)>>2)]=$6481$1;
      var $6482=(($S)|0);
      var $ld$4593$0=(($6482)|0);
      var $6483$0=HEAP32[(($ld$4593$0)>>2)];
      var $ld$4594$1=(($6482+4)|0);
      var $6483$1=HEAP32[(($ld$4594$1)>>2)];
      var $6484$0=($6483$0 >>> 28) | ($6483$1 << 4);
      var $6484$1=($6483$1 >>> 28) | (0 << 4);
      var $6485=(($S)|0);
      var $ld$4595$0=(($6485)|0);
      var $6486$0=HEAP32[(($ld$4595$0)>>2)];
      var $ld$4596$1=(($6485+4)|0);
      var $6486$1=HEAP32[(($ld$4596$1)>>2)];
      var $6487$0=(0 << 4) | (0 >>> 28);
      var $6487$1=($6486$0 << 4) | (0 >>> 28);
      var $6488$0=$6484$0 | $6487$0;
      var $6488$1=$6484$1 | $6487$1;
      var $6489=(($S)|0);
      var $ld$4597$0=(($6489)|0);
      var $6490$0=HEAP32[(($ld$4597$0)>>2)];
      var $ld$4598$1=(($6489+4)|0);
      var $6490$1=HEAP32[(($ld$4598$1)>>2)];
      var $6491$0=($6490$1 >>> 2) | (0 << 30);
      var $6491$1=(0 >>> 2) | (0 << 30);
      var $6492=(($S)|0);
      var $ld$4599$0=(($6492)|0);
      var $6493$0=HEAP32[(($ld$4599$0)>>2)];
      var $ld$4600$1=(($6492+4)|0);
      var $6493$1=HEAP32[(($ld$4600$1)>>2)];
      var $6494$0=($6493$0 << 30) | (0 >>> 2);
      var $6494$1=($6493$1 << 30) | ($6493$0 >>> 2);
      var $6495$0=$6491$0 | $6494$0;
      var $6495$1=$6491$1 | $6494$1;
      var $6496$0=$6488$0 ^ $6495$0;
      var $6496$1=$6488$1 ^ $6495$1;
      var $6497=(($S)|0);
      var $ld$4601$0=(($6497)|0);
      var $6498$0=HEAP32[(($ld$4601$0)>>2)];
      var $ld$4602$1=(($6497+4)|0);
      var $6498$1=HEAP32[(($ld$4602$1)>>2)];
      var $6499$0=($6498$1 >>> 7) | (0 << 25);
      var $6499$1=(0 >>> 7) | (0 << 25);
      var $6500=(($S)|0);
      var $ld$4603$0=(($6500)|0);
      var $6501$0=HEAP32[(($ld$4603$0)>>2)];
      var $ld$4604$1=(($6500+4)|0);
      var $6501$1=HEAP32[(($ld$4604$1)>>2)];
      var $6502$0=($6501$0 << 25) | (0 >>> 7);
      var $6502$1=($6501$1 << 25) | ($6501$0 >>> 7);
      var $6503$0=$6499$0 | $6502$0;
      var $6503$1=$6499$1 | $6502$1;
      var $6504$0=$6496$0 ^ $6503$0;
      var $6504$1=$6496$1 ^ $6503$1;
      var $6505=(($S)|0);
      var $ld$4605$0=(($6505)|0);
      var $6506$0=HEAP32[(($ld$4605$0)>>2)];
      var $ld$4606$1=(($6505+4)|0);
      var $6506$1=HEAP32[(($ld$4606$1)>>2)];
      var $6507=(($S+8)|0);
      var $ld$4607$0=(($6507)|0);
      var $6508$0=HEAP32[(($ld$4607$0)>>2)];
      var $ld$4608$1=(($6507+4)|0);
      var $6508$1=HEAP32[(($ld$4608$1)>>2)];
      var $6509$0=$6506$0 | $6508$0;
      var $6509$1=$6506$1 | $6508$1;
      var $6510=(($S+16)|0);
      var $ld$4609$0=(($6510)|0);
      var $6511$0=HEAP32[(($ld$4609$0)>>2)];
      var $ld$4610$1=(($6510+4)|0);
      var $6511$1=HEAP32[(($ld$4610$1)>>2)];
      var $6512$0=$6509$0 & $6511$0;
      var $6512$1=$6509$1 & $6511$1;
      var $6513=(($S)|0);
      var $ld$4611$0=(($6513)|0);
      var $6514$0=HEAP32[(($ld$4611$0)>>2)];
      var $ld$4612$1=(($6513+4)|0);
      var $6514$1=HEAP32[(($ld$4612$1)>>2)];
      var $6515=(($S+8)|0);
      var $ld$4613$0=(($6515)|0);
      var $6516$0=HEAP32[(($ld$4613$0)>>2)];
      var $ld$4614$1=(($6515+4)|0);
      var $6516$1=HEAP32[(($ld$4614$1)>>2)];
      var $6517$0=$6514$0 & $6516$0;
      var $6517$1=$6514$1 & $6516$1;
      var $6518$0=$6512$0 | $6517$0;
      var $6518$1=$6512$1 | $6517$1;
      var $6519$0 = _i64Add($6504$0,$6504$1,$6518$0,$6518$1); var $6519$1 = tempRet0;
      var $st$4615$0=(($t1)|0);
      HEAP32[(($st$4615$0)>>2)]=$6519$0;
      var $st$4616$1=(($t1+4)|0);
      HEAP32[(($st$4616$1)>>2)]=$6519$1;
      var $ld$4617$0=(($t0)|0);
      var $6520$0=HEAP32[(($ld$4617$0)>>2)];
      var $ld$4618$1=(($t0+4)|0);
      var $6520$1=HEAP32[(($ld$4618$1)>>2)];
      var $6521=(($S+24)|0);
      var $ld$4619$0=(($6521)|0);
      var $6522$0=HEAP32[(($ld$4619$0)>>2)];
      var $ld$4620$1=(($6521+4)|0);
      var $6522$1=HEAP32[(($ld$4620$1)>>2)];
      var $6523$0 = _i64Add($6522$0,$6522$1,$6520$0,$6520$1); var $6523$1 = tempRet0;
      var $st$4621$0=(($6521)|0);
      HEAP32[(($st$4621$0)>>2)]=$6523$0;
      var $st$4622$1=(($6521+4)|0);
      HEAP32[(($st$4622$1)>>2)]=$6523$1;
      var $ld$4623$0=(($t0)|0);
      var $6524$0=HEAP32[(($ld$4623$0)>>2)];
      var $ld$4624$1=(($t0+4)|0);
      var $6524$1=HEAP32[(($ld$4624$1)>>2)];
      var $ld$4625$0=(($t1)|0);
      var $6525$0=HEAP32[(($ld$4625$0)>>2)];
      var $ld$4626$1=(($t1+4)|0);
      var $6525$1=HEAP32[(($ld$4626$1)>>2)];
      var $6526$0 = _i64Add($6524$0,$6524$1,$6525$0,$6525$1); var $6526$1 = tempRet0;
      var $6527=(($S+56)|0);
      var $st$4627$0=(($6527)|0);
      HEAP32[(($st$4627$0)>>2)]=$6526$0;
      var $st$4628$1=(($6527+4)|0);
      HEAP32[(($st$4628$1)>>2)]=$6526$1;
      var $6528=(($S+48)|0);
      var $ld$4629$0=(($6528)|0);
      var $6529$0=HEAP32[(($ld$4629$0)>>2)];
      var $ld$4630$1=(($6528+4)|0);
      var $6529$1=HEAP32[(($ld$4630$1)>>2)];
      var $6530=(($S+24)|0);
      var $ld$4631$0=(($6530)|0);
      var $6531$0=HEAP32[(($ld$4631$0)>>2)];
      var $ld$4632$1=(($6530+4)|0);
      var $6531$1=HEAP32[(($ld$4632$1)>>2)];
      var $6532$0=($6531$0 >>> 14) | ($6531$1 << 18);
      var $6532$1=($6531$1 >>> 14) | (0 << 18);
      var $6533=(($S+24)|0);
      var $ld$4633$0=(($6533)|0);
      var $6534$0=HEAP32[(($ld$4633$0)>>2)];
      var $ld$4634$1=(($6533+4)|0);
      var $6534$1=HEAP32[(($ld$4634$1)>>2)];
      var $6535$0=(0 << 18) | (0 >>> 14);
      var $6535$1=($6534$0 << 18) | (0 >>> 14);
      var $6536$0=$6532$0 | $6535$0;
      var $6536$1=$6532$1 | $6535$1;
      var $6537=(($S+24)|0);
      var $ld$4635$0=(($6537)|0);
      var $6538$0=HEAP32[(($ld$4635$0)>>2)];
      var $ld$4636$1=(($6537+4)|0);
      var $6538$1=HEAP32[(($ld$4636$1)>>2)];
      var $6539$0=($6538$0 >>> 18) | ($6538$1 << 14);
      var $6539$1=($6538$1 >>> 18) | (0 << 14);
      var $6540=(($S+24)|0);
      var $ld$4637$0=(($6540)|0);
      var $6541$0=HEAP32[(($ld$4637$0)>>2)];
      var $ld$4638$1=(($6540+4)|0);
      var $6541$1=HEAP32[(($ld$4638$1)>>2)];
      var $6542$0=(0 << 14) | (0 >>> 18);
      var $6542$1=($6541$0 << 14) | (0 >>> 18);
      var $6543$0=$6539$0 | $6542$0;
      var $6543$1=$6539$1 | $6542$1;
      var $6544$0=$6536$0 ^ $6543$0;
      var $6544$1=$6536$1 ^ $6543$1;
      var $6545=(($S+24)|0);
      var $ld$4639$0=(($6545)|0);
      var $6546$0=HEAP32[(($ld$4639$0)>>2)];
      var $ld$4640$1=(($6545+4)|0);
      var $6546$1=HEAP32[(($ld$4640$1)>>2)];
      var $6547$0=($6546$1 >>> 9) | (0 << 23);
      var $6547$1=(0 >>> 9) | (0 << 23);
      var $6548=(($S+24)|0);
      var $ld$4641$0=(($6548)|0);
      var $6549$0=HEAP32[(($ld$4641$0)>>2)];
      var $ld$4642$1=(($6548+4)|0);
      var $6549$1=HEAP32[(($ld$4642$1)>>2)];
      var $6550$0=($6549$0 << 23) | (0 >>> 9);
      var $6550$1=($6549$1 << 23) | ($6549$0 >>> 9);
      var $6551$0=$6547$0 | $6550$0;
      var $6551$1=$6547$1 | $6550$1;
      var $6552$0=$6544$0 ^ $6551$0;
      var $6552$1=$6544$1 ^ $6551$1;
      var $6553$0 = _i64Add($6529$0,$6529$1,$6552$0,$6552$1); var $6553$1 = tempRet0;
      var $6554=(($S+40)|0);
      var $ld$4643$0=(($6554)|0);
      var $6555$0=HEAP32[(($ld$4643$0)>>2)];
      var $ld$4644$1=(($6554+4)|0);
      var $6555$1=HEAP32[(($ld$4644$1)>>2)];
      var $6556=(($S+24)|0);
      var $ld$4645$0=(($6556)|0);
      var $6557$0=HEAP32[(($ld$4645$0)>>2)];
      var $ld$4646$1=(($6556+4)|0);
      var $6557$1=HEAP32[(($ld$4646$1)>>2)];
      var $6558=(($S+32)|0);
      var $ld$4647$0=(($6558)|0);
      var $6559$0=HEAP32[(($ld$4647$0)>>2)];
      var $ld$4648$1=(($6558+4)|0);
      var $6559$1=HEAP32[(($ld$4648$1)>>2)];
      var $6560=(($S+40)|0);
      var $ld$4649$0=(($6560)|0);
      var $6561$0=HEAP32[(($ld$4649$0)>>2)];
      var $ld$4650$1=(($6560+4)|0);
      var $6561$1=HEAP32[(($ld$4650$1)>>2)];
      var $6562$0=$6559$0 ^ $6561$0;
      var $6562$1=$6559$1 ^ $6561$1;
      var $6563$0=$6557$0 & $6562$0;
      var $6563$1=$6557$1 & $6562$1;
      var $6564$0=$6555$0 ^ $6563$0;
      var $6564$1=$6555$1 ^ $6563$1;
      var $6565$0 = _i64Add($6553$0,$6553$1,$6564$0,$6564$1); var $6565$1 = tempRet0;
      var $$etemp$4651$0=1086792851;
      var $$etemp$4651$1=852142971;
      var $6566$0 = _i64Add($6565$0,$6565$1,$$etemp$4651$0,$$etemp$4651$1); var $6566$1 = tempRet0;
      var $6567=(($W+584)|0);
      var $ld$4652$0=(($6567)|0);
      var $6568$0=HEAP32[(($ld$4652$0)>>2)];
      var $ld$4653$1=(($6567+4)|0);
      var $6568$1=HEAP32[(($ld$4653$1)>>2)];
      var $6569$0 = _i64Add($6566$0,$6566$1,$6568$0,$6568$1); var $6569$1 = tempRet0;
      var $st$4654$0=(($t0)|0);
      HEAP32[(($st$4654$0)>>2)]=$6569$0;
      var $st$4655$1=(($t0+4)|0);
      HEAP32[(($st$4655$1)>>2)]=$6569$1;
      var $6570=(($S+56)|0);
      var $ld$4656$0=(($6570)|0);
      var $6571$0=HEAP32[(($ld$4656$0)>>2)];
      var $ld$4657$1=(($6570+4)|0);
      var $6571$1=HEAP32[(($ld$4657$1)>>2)];
      var $6572$0=($6571$0 >>> 28) | ($6571$1 << 4);
      var $6572$1=($6571$1 >>> 28) | (0 << 4);
      var $6573=(($S+56)|0);
      var $ld$4658$0=(($6573)|0);
      var $6574$0=HEAP32[(($ld$4658$0)>>2)];
      var $ld$4659$1=(($6573+4)|0);
      var $6574$1=HEAP32[(($ld$4659$1)>>2)];
      var $6575$0=(0 << 4) | (0 >>> 28);
      var $6575$1=($6574$0 << 4) | (0 >>> 28);
      var $6576$0=$6572$0 | $6575$0;
      var $6576$1=$6572$1 | $6575$1;
      var $6577=(($S+56)|0);
      var $ld$4660$0=(($6577)|0);
      var $6578$0=HEAP32[(($ld$4660$0)>>2)];
      var $ld$4661$1=(($6577+4)|0);
      var $6578$1=HEAP32[(($ld$4661$1)>>2)];
      var $6579$0=($6578$1 >>> 2) | (0 << 30);
      var $6579$1=(0 >>> 2) | (0 << 30);
      var $6580=(($S+56)|0);
      var $ld$4662$0=(($6580)|0);
      var $6581$0=HEAP32[(($ld$4662$0)>>2)];
      var $ld$4663$1=(($6580+4)|0);
      var $6581$1=HEAP32[(($ld$4663$1)>>2)];
      var $6582$0=($6581$0 << 30) | (0 >>> 2);
      var $6582$1=($6581$1 << 30) | ($6581$0 >>> 2);
      var $6583$0=$6579$0 | $6582$0;
      var $6583$1=$6579$1 | $6582$1;
      var $6584$0=$6576$0 ^ $6583$0;
      var $6584$1=$6576$1 ^ $6583$1;
      var $6585=(($S+56)|0);
      var $ld$4664$0=(($6585)|0);
      var $6586$0=HEAP32[(($ld$4664$0)>>2)];
      var $ld$4665$1=(($6585+4)|0);
      var $6586$1=HEAP32[(($ld$4665$1)>>2)];
      var $6587$0=($6586$1 >>> 7) | (0 << 25);
      var $6587$1=(0 >>> 7) | (0 << 25);
      var $6588=(($S+56)|0);
      var $ld$4666$0=(($6588)|0);
      var $6589$0=HEAP32[(($ld$4666$0)>>2)];
      var $ld$4667$1=(($6588+4)|0);
      var $6589$1=HEAP32[(($ld$4667$1)>>2)];
      var $6590$0=($6589$0 << 25) | (0 >>> 7);
      var $6590$1=($6589$1 << 25) | ($6589$0 >>> 7);
      var $6591$0=$6587$0 | $6590$0;
      var $6591$1=$6587$1 | $6590$1;
      var $6592$0=$6584$0 ^ $6591$0;
      var $6592$1=$6584$1 ^ $6591$1;
      var $6593=(($S+56)|0);
      var $ld$4668$0=(($6593)|0);
      var $6594$0=HEAP32[(($ld$4668$0)>>2)];
      var $ld$4669$1=(($6593+4)|0);
      var $6594$1=HEAP32[(($ld$4669$1)>>2)];
      var $6595=(($S)|0);
      var $ld$4670$0=(($6595)|0);
      var $6596$0=HEAP32[(($ld$4670$0)>>2)];
      var $ld$4671$1=(($6595+4)|0);
      var $6596$1=HEAP32[(($ld$4671$1)>>2)];
      var $6597$0=$6594$0 | $6596$0;
      var $6597$1=$6594$1 | $6596$1;
      var $6598=(($S+8)|0);
      var $ld$4672$0=(($6598)|0);
      var $6599$0=HEAP32[(($ld$4672$0)>>2)];
      var $ld$4673$1=(($6598+4)|0);
      var $6599$1=HEAP32[(($ld$4673$1)>>2)];
      var $6600$0=$6597$0 & $6599$0;
      var $6600$1=$6597$1 & $6599$1;
      var $6601=(($S+56)|0);
      var $ld$4674$0=(($6601)|0);
      var $6602$0=HEAP32[(($ld$4674$0)>>2)];
      var $ld$4675$1=(($6601+4)|0);
      var $6602$1=HEAP32[(($ld$4675$1)>>2)];
      var $6603=(($S)|0);
      var $ld$4676$0=(($6603)|0);
      var $6604$0=HEAP32[(($ld$4676$0)>>2)];
      var $ld$4677$1=(($6603+4)|0);
      var $6604$1=HEAP32[(($ld$4677$1)>>2)];
      var $6605$0=$6602$0 & $6604$0;
      var $6605$1=$6602$1 & $6604$1;
      var $6606$0=$6600$0 | $6605$0;
      var $6606$1=$6600$1 | $6605$1;
      var $6607$0 = _i64Add($6592$0,$6592$1,$6606$0,$6606$1); var $6607$1 = tempRet0;
      var $st$4678$0=(($t1)|0);
      HEAP32[(($st$4678$0)>>2)]=$6607$0;
      var $st$4679$1=(($t1+4)|0);
      HEAP32[(($st$4679$1)>>2)]=$6607$1;
      var $ld$4680$0=(($t0)|0);
      var $6608$0=HEAP32[(($ld$4680$0)>>2)];
      var $ld$4681$1=(($t0+4)|0);
      var $6608$1=HEAP32[(($ld$4681$1)>>2)];
      var $6609=(($S+16)|0);
      var $ld$4682$0=(($6609)|0);
      var $6610$0=HEAP32[(($ld$4682$0)>>2)];
      var $ld$4683$1=(($6609+4)|0);
      var $6610$1=HEAP32[(($ld$4683$1)>>2)];
      var $6611$0 = _i64Add($6610$0,$6610$1,$6608$0,$6608$1); var $6611$1 = tempRet0;
      var $st$4684$0=(($6609)|0);
      HEAP32[(($st$4684$0)>>2)]=$6611$0;
      var $st$4685$1=(($6609+4)|0);
      HEAP32[(($st$4685$1)>>2)]=$6611$1;
      var $ld$4686$0=(($t0)|0);
      var $6612$0=HEAP32[(($ld$4686$0)>>2)];
      var $ld$4687$1=(($t0+4)|0);
      var $6612$1=HEAP32[(($ld$4687$1)>>2)];
      var $ld$4688$0=(($t1)|0);
      var $6613$0=HEAP32[(($ld$4688$0)>>2)];
      var $ld$4689$1=(($t1+4)|0);
      var $6613$1=HEAP32[(($ld$4689$1)>>2)];
      var $6614$0 = _i64Add($6612$0,$6612$1,$6613$0,$6613$1); var $6614$1 = tempRet0;
      var $6615=(($S+48)|0);
      var $st$4690$0=(($6615)|0);
      HEAP32[(($st$4690$0)>>2)]=$6614$0;
      var $st$4691$1=(($6615+4)|0);
      HEAP32[(($st$4691$1)>>2)]=$6614$1;
      var $6616=(($S+40)|0);
      var $ld$4692$0=(($6616)|0);
      var $6617$0=HEAP32[(($ld$4692$0)>>2)];
      var $ld$4693$1=(($6616+4)|0);
      var $6617$1=HEAP32[(($ld$4693$1)>>2)];
      var $6618=(($S+16)|0);
      var $ld$4694$0=(($6618)|0);
      var $6619$0=HEAP32[(($ld$4694$0)>>2)];
      var $ld$4695$1=(($6618+4)|0);
      var $6619$1=HEAP32[(($ld$4695$1)>>2)];
      var $6620$0=($6619$0 >>> 14) | ($6619$1 << 18);
      var $6620$1=($6619$1 >>> 14) | (0 << 18);
      var $6621=(($S+16)|0);
      var $ld$4696$0=(($6621)|0);
      var $6622$0=HEAP32[(($ld$4696$0)>>2)];
      var $ld$4697$1=(($6621+4)|0);
      var $6622$1=HEAP32[(($ld$4697$1)>>2)];
      var $6623$0=(0 << 18) | (0 >>> 14);
      var $6623$1=($6622$0 << 18) | (0 >>> 14);
      var $6624$0=$6620$0 | $6623$0;
      var $6624$1=$6620$1 | $6623$1;
      var $6625=(($S+16)|0);
      var $ld$4698$0=(($6625)|0);
      var $6626$0=HEAP32[(($ld$4698$0)>>2)];
      var $ld$4699$1=(($6625+4)|0);
      var $6626$1=HEAP32[(($ld$4699$1)>>2)];
      var $6627$0=($6626$0 >>> 18) | ($6626$1 << 14);
      var $6627$1=($6626$1 >>> 18) | (0 << 14);
      var $6628=(($S+16)|0);
      var $ld$4700$0=(($6628)|0);
      var $6629$0=HEAP32[(($ld$4700$0)>>2)];
      var $ld$4701$1=(($6628+4)|0);
      var $6629$1=HEAP32[(($ld$4701$1)>>2)];
      var $6630$0=(0 << 14) | (0 >>> 18);
      var $6630$1=($6629$0 << 14) | (0 >>> 18);
      var $6631$0=$6627$0 | $6630$0;
      var $6631$1=$6627$1 | $6630$1;
      var $6632$0=$6624$0 ^ $6631$0;
      var $6632$1=$6624$1 ^ $6631$1;
      var $6633=(($S+16)|0);
      var $ld$4702$0=(($6633)|0);
      var $6634$0=HEAP32[(($ld$4702$0)>>2)];
      var $ld$4703$1=(($6633+4)|0);
      var $6634$1=HEAP32[(($ld$4703$1)>>2)];
      var $6635$0=($6634$1 >>> 9) | (0 << 23);
      var $6635$1=(0 >>> 9) | (0 << 23);
      var $6636=(($S+16)|0);
      var $ld$4704$0=(($6636)|0);
      var $6637$0=HEAP32[(($ld$4704$0)>>2)];
      var $ld$4705$1=(($6636+4)|0);
      var $6637$1=HEAP32[(($ld$4705$1)>>2)];
      var $6638$0=($6637$0 << 23) | (0 >>> 9);
      var $6638$1=($6637$1 << 23) | ($6637$0 >>> 9);
      var $6639$0=$6635$0 | $6638$0;
      var $6639$1=$6635$1 | $6638$1;
      var $6640$0=$6632$0 ^ $6639$0;
      var $6640$1=$6632$1 ^ $6639$1;
      var $6641$0 = _i64Add($6617$0,$6617$1,$6640$0,$6640$1); var $6641$1 = tempRet0;
      var $6642=(($S+32)|0);
      var $ld$4706$0=(($6642)|0);
      var $6643$0=HEAP32[(($ld$4706$0)>>2)];
      var $ld$4707$1=(($6642+4)|0);
      var $6643$1=HEAP32[(($ld$4707$1)>>2)];
      var $6644=(($S+16)|0);
      var $ld$4708$0=(($6644)|0);
      var $6645$0=HEAP32[(($ld$4708$0)>>2)];
      var $ld$4709$1=(($6644+4)|0);
      var $6645$1=HEAP32[(($ld$4709$1)>>2)];
      var $6646=(($S+24)|0);
      var $ld$4710$0=(($6646)|0);
      var $6647$0=HEAP32[(($ld$4710$0)>>2)];
      var $ld$4711$1=(($6646+4)|0);
      var $6647$1=HEAP32[(($ld$4711$1)>>2)];
      var $6648=(($S+32)|0);
      var $ld$4712$0=(($6648)|0);
      var $6649$0=HEAP32[(($ld$4712$0)>>2)];
      var $ld$4713$1=(($6648+4)|0);
      var $6649$1=HEAP32[(($ld$4713$1)>>2)];
      var $6650$0=$6647$0 ^ $6649$0;
      var $6650$1=$6647$1 ^ $6649$1;
      var $6651$0=$6645$0 & $6650$0;
      var $6651$1=$6645$1 & $6650$1;
      var $6652$0=$6643$0 ^ $6651$0;
      var $6652$1=$6643$1 ^ $6651$1;
      var $6653$0 = _i64Add($6641$0,$6641$1,$6652$0,$6652$1); var $6653$1 = tempRet0;
      var $$etemp$4714$0=365543100;
      var $$etemp$4714$1=1017036298;
      var $6654$0 = _i64Add($6653$0,$6653$1,$$etemp$4714$0,$$etemp$4714$1); var $6654$1 = tempRet0;
      var $6655=(($W+592)|0);
      var $ld$4715$0=(($6655)|0);
      var $6656$0=HEAP32[(($ld$4715$0)>>2)];
      var $ld$4716$1=(($6655+4)|0);
      var $6656$1=HEAP32[(($ld$4716$1)>>2)];
      var $6657$0 = _i64Add($6654$0,$6654$1,$6656$0,$6656$1); var $6657$1 = tempRet0;
      var $st$4717$0=(($t0)|0);
      HEAP32[(($st$4717$0)>>2)]=$6657$0;
      var $st$4718$1=(($t0+4)|0);
      HEAP32[(($st$4718$1)>>2)]=$6657$1;
      var $6658=(($S+48)|0);
      var $ld$4719$0=(($6658)|0);
      var $6659$0=HEAP32[(($ld$4719$0)>>2)];
      var $ld$4720$1=(($6658+4)|0);
      var $6659$1=HEAP32[(($ld$4720$1)>>2)];
      var $6660$0=($6659$0 >>> 28) | ($6659$1 << 4);
      var $6660$1=($6659$1 >>> 28) | (0 << 4);
      var $6661=(($S+48)|0);
      var $ld$4721$0=(($6661)|0);
      var $6662$0=HEAP32[(($ld$4721$0)>>2)];
      var $ld$4722$1=(($6661+4)|0);
      var $6662$1=HEAP32[(($ld$4722$1)>>2)];
      var $6663$0=(0 << 4) | (0 >>> 28);
      var $6663$1=($6662$0 << 4) | (0 >>> 28);
      var $6664$0=$6660$0 | $6663$0;
      var $6664$1=$6660$1 | $6663$1;
      var $6665=(($S+48)|0);
      var $ld$4723$0=(($6665)|0);
      var $6666$0=HEAP32[(($ld$4723$0)>>2)];
      var $ld$4724$1=(($6665+4)|0);
      var $6666$1=HEAP32[(($ld$4724$1)>>2)];
      var $6667$0=($6666$1 >>> 2) | (0 << 30);
      var $6667$1=(0 >>> 2) | (0 << 30);
      var $6668=(($S+48)|0);
      var $ld$4725$0=(($6668)|0);
      var $6669$0=HEAP32[(($ld$4725$0)>>2)];
      var $ld$4726$1=(($6668+4)|0);
      var $6669$1=HEAP32[(($ld$4726$1)>>2)];
      var $6670$0=($6669$0 << 30) | (0 >>> 2);
      var $6670$1=($6669$1 << 30) | ($6669$0 >>> 2);
      var $6671$0=$6667$0 | $6670$0;
      var $6671$1=$6667$1 | $6670$1;
      var $6672$0=$6664$0 ^ $6671$0;
      var $6672$1=$6664$1 ^ $6671$1;
      var $6673=(($S+48)|0);
      var $ld$4727$0=(($6673)|0);
      var $6674$0=HEAP32[(($ld$4727$0)>>2)];
      var $ld$4728$1=(($6673+4)|0);
      var $6674$1=HEAP32[(($ld$4728$1)>>2)];
      var $6675$0=($6674$1 >>> 7) | (0 << 25);
      var $6675$1=(0 >>> 7) | (0 << 25);
      var $6676=(($S+48)|0);
      var $ld$4729$0=(($6676)|0);
      var $6677$0=HEAP32[(($ld$4729$0)>>2)];
      var $ld$4730$1=(($6676+4)|0);
      var $6677$1=HEAP32[(($ld$4730$1)>>2)];
      var $6678$0=($6677$0 << 25) | (0 >>> 7);
      var $6678$1=($6677$1 << 25) | ($6677$0 >>> 7);
      var $6679$0=$6675$0 | $6678$0;
      var $6679$1=$6675$1 | $6678$1;
      var $6680$0=$6672$0 ^ $6679$0;
      var $6680$1=$6672$1 ^ $6679$1;
      var $6681=(($S+48)|0);
      var $ld$4731$0=(($6681)|0);
      var $6682$0=HEAP32[(($ld$4731$0)>>2)];
      var $ld$4732$1=(($6681+4)|0);
      var $6682$1=HEAP32[(($ld$4732$1)>>2)];
      var $6683=(($S+56)|0);
      var $ld$4733$0=(($6683)|0);
      var $6684$0=HEAP32[(($ld$4733$0)>>2)];
      var $ld$4734$1=(($6683+4)|0);
      var $6684$1=HEAP32[(($ld$4734$1)>>2)];
      var $6685$0=$6682$0 | $6684$0;
      var $6685$1=$6682$1 | $6684$1;
      var $6686=(($S)|0);
      var $ld$4735$0=(($6686)|0);
      var $6687$0=HEAP32[(($ld$4735$0)>>2)];
      var $ld$4736$1=(($6686+4)|0);
      var $6687$1=HEAP32[(($ld$4736$1)>>2)];
      var $6688$0=$6685$0 & $6687$0;
      var $6688$1=$6685$1 & $6687$1;
      var $6689=(($S+48)|0);
      var $ld$4737$0=(($6689)|0);
      var $6690$0=HEAP32[(($ld$4737$0)>>2)];
      var $ld$4738$1=(($6689+4)|0);
      var $6690$1=HEAP32[(($ld$4738$1)>>2)];
      var $6691=(($S+56)|0);
      var $ld$4739$0=(($6691)|0);
      var $6692$0=HEAP32[(($ld$4739$0)>>2)];
      var $ld$4740$1=(($6691+4)|0);
      var $6692$1=HEAP32[(($ld$4740$1)>>2)];
      var $6693$0=$6690$0 & $6692$0;
      var $6693$1=$6690$1 & $6692$1;
      var $6694$0=$6688$0 | $6693$0;
      var $6694$1=$6688$1 | $6693$1;
      var $6695$0 = _i64Add($6680$0,$6680$1,$6694$0,$6694$1); var $6695$1 = tempRet0;
      var $st$4741$0=(($t1)|0);
      HEAP32[(($st$4741$0)>>2)]=$6695$0;
      var $st$4742$1=(($t1+4)|0);
      HEAP32[(($st$4742$1)>>2)]=$6695$1;
      var $ld$4743$0=(($t0)|0);
      var $6696$0=HEAP32[(($ld$4743$0)>>2)];
      var $ld$4744$1=(($t0+4)|0);
      var $6696$1=HEAP32[(($ld$4744$1)>>2)];
      var $6697=(($S+8)|0);
      var $ld$4745$0=(($6697)|0);
      var $6698$0=HEAP32[(($ld$4745$0)>>2)];
      var $ld$4746$1=(($6697+4)|0);
      var $6698$1=HEAP32[(($ld$4746$1)>>2)];
      var $6699$0 = _i64Add($6698$0,$6698$1,$6696$0,$6696$1); var $6699$1 = tempRet0;
      var $st$4747$0=(($6697)|0);
      HEAP32[(($st$4747$0)>>2)]=$6699$0;
      var $st$4748$1=(($6697+4)|0);
      HEAP32[(($st$4748$1)>>2)]=$6699$1;
      var $ld$4749$0=(($t0)|0);
      var $6700$0=HEAP32[(($ld$4749$0)>>2)];
      var $ld$4750$1=(($t0+4)|0);
      var $6700$1=HEAP32[(($ld$4750$1)>>2)];
      var $ld$4751$0=(($t1)|0);
      var $6701$0=HEAP32[(($ld$4751$0)>>2)];
      var $ld$4752$1=(($t1+4)|0);
      var $6701$1=HEAP32[(($ld$4752$1)>>2)];
      var $6702$0 = _i64Add($6700$0,$6700$1,$6701$0,$6701$1); var $6702$1 = tempRet0;
      var $6703=(($S+40)|0);
      var $st$4753$0=(($6703)|0);
      HEAP32[(($st$4753$0)>>2)]=$6702$0;
      var $st$4754$1=(($6703+4)|0);
      HEAP32[(($st$4754$1)>>2)]=$6702$1;
      var $6704=(($S+32)|0);
      var $ld$4755$0=(($6704)|0);
      var $6705$0=HEAP32[(($ld$4755$0)>>2)];
      var $ld$4756$1=(($6704+4)|0);
      var $6705$1=HEAP32[(($ld$4756$1)>>2)];
      var $6706=(($S+8)|0);
      var $ld$4757$0=(($6706)|0);
      var $6707$0=HEAP32[(($ld$4757$0)>>2)];
      var $ld$4758$1=(($6706+4)|0);
      var $6707$1=HEAP32[(($ld$4758$1)>>2)];
      var $6708$0=($6707$0 >>> 14) | ($6707$1 << 18);
      var $6708$1=($6707$1 >>> 14) | (0 << 18);
      var $6709=(($S+8)|0);
      var $ld$4759$0=(($6709)|0);
      var $6710$0=HEAP32[(($ld$4759$0)>>2)];
      var $ld$4760$1=(($6709+4)|0);
      var $6710$1=HEAP32[(($ld$4760$1)>>2)];
      var $6711$0=(0 << 18) | (0 >>> 14);
      var $6711$1=($6710$0 << 18) | (0 >>> 14);
      var $6712$0=$6708$0 | $6711$0;
      var $6712$1=$6708$1 | $6711$1;
      var $6713=(($S+8)|0);
      var $ld$4761$0=(($6713)|0);
      var $6714$0=HEAP32[(($ld$4761$0)>>2)];
      var $ld$4762$1=(($6713+4)|0);
      var $6714$1=HEAP32[(($ld$4762$1)>>2)];
      var $6715$0=($6714$0 >>> 18) | ($6714$1 << 14);
      var $6715$1=($6714$1 >>> 18) | (0 << 14);
      var $6716=(($S+8)|0);
      var $ld$4763$0=(($6716)|0);
      var $6717$0=HEAP32[(($ld$4763$0)>>2)];
      var $ld$4764$1=(($6716+4)|0);
      var $6717$1=HEAP32[(($ld$4764$1)>>2)];
      var $6718$0=(0 << 14) | (0 >>> 18);
      var $6718$1=($6717$0 << 14) | (0 >>> 18);
      var $6719$0=$6715$0 | $6718$0;
      var $6719$1=$6715$1 | $6718$1;
      var $6720$0=$6712$0 ^ $6719$0;
      var $6720$1=$6712$1 ^ $6719$1;
      var $6721=(($S+8)|0);
      var $ld$4765$0=(($6721)|0);
      var $6722$0=HEAP32[(($ld$4765$0)>>2)];
      var $ld$4766$1=(($6721+4)|0);
      var $6722$1=HEAP32[(($ld$4766$1)>>2)];
      var $6723$0=($6722$1 >>> 9) | (0 << 23);
      var $6723$1=(0 >>> 9) | (0 << 23);
      var $6724=(($S+8)|0);
      var $ld$4767$0=(($6724)|0);
      var $6725$0=HEAP32[(($ld$4767$0)>>2)];
      var $ld$4768$1=(($6724+4)|0);
      var $6725$1=HEAP32[(($ld$4768$1)>>2)];
      var $6726$0=($6725$0 << 23) | (0 >>> 9);
      var $6726$1=($6725$1 << 23) | ($6725$0 >>> 9);
      var $6727$0=$6723$0 | $6726$0;
      var $6727$1=$6723$1 | $6726$1;
      var $6728$0=$6720$0 ^ $6727$0;
      var $6728$1=$6720$1 ^ $6727$1;
      var $6729$0 = _i64Add($6705$0,$6705$1,$6728$0,$6728$1); var $6729$1 = tempRet0;
      var $6730=(($S+24)|0);
      var $ld$4769$0=(($6730)|0);
      var $6731$0=HEAP32[(($ld$4769$0)>>2)];
      var $ld$4770$1=(($6730+4)|0);
      var $6731$1=HEAP32[(($ld$4770$1)>>2)];
      var $6732=(($S+8)|0);
      var $ld$4771$0=(($6732)|0);
      var $6733$0=HEAP32[(($ld$4771$0)>>2)];
      var $ld$4772$1=(($6732+4)|0);
      var $6733$1=HEAP32[(($ld$4772$1)>>2)];
      var $6734=(($S+16)|0);
      var $ld$4773$0=(($6734)|0);
      var $6735$0=HEAP32[(($ld$4773$0)>>2)];
      var $ld$4774$1=(($6734+4)|0);
      var $6735$1=HEAP32[(($ld$4774$1)>>2)];
      var $6736=(($S+24)|0);
      var $ld$4775$0=(($6736)|0);
      var $6737$0=HEAP32[(($ld$4775$0)>>2)];
      var $ld$4776$1=(($6736+4)|0);
      var $6737$1=HEAP32[(($ld$4776$1)>>2)];
      var $6738$0=$6735$0 ^ $6737$0;
      var $6738$1=$6735$1 ^ $6737$1;
      var $6739$0=$6733$0 & $6738$0;
      var $6739$1=$6733$1 & $6738$1;
      var $6740$0=$6731$0 ^ $6739$0;
      var $6740$1=$6731$1 ^ $6739$1;
      var $6741$0 = _i64Add($6729$0,$6729$1,$6740$0,$6740$1); var $6741$1 = tempRet0;
      var $$etemp$4777$0=-1676669620;
      var $$etemp$4777$1=1126000580;
      var $6742$0 = _i64Add($6741$0,$6741$1,$$etemp$4777$0,$$etemp$4777$1); var $6742$1 = tempRet0;
      var $6743=(($W+600)|0);
      var $ld$4778$0=(($6743)|0);
      var $6744$0=HEAP32[(($ld$4778$0)>>2)];
      var $ld$4779$1=(($6743+4)|0);
      var $6744$1=HEAP32[(($ld$4779$1)>>2)];
      var $6745$0 = _i64Add($6742$0,$6742$1,$6744$0,$6744$1); var $6745$1 = tempRet0;
      var $st$4780$0=(($t0)|0);
      HEAP32[(($st$4780$0)>>2)]=$6745$0;
      var $st$4781$1=(($t0+4)|0);
      HEAP32[(($st$4781$1)>>2)]=$6745$1;
      var $6746=(($S+40)|0);
      var $ld$4782$0=(($6746)|0);
      var $6747$0=HEAP32[(($ld$4782$0)>>2)];
      var $ld$4783$1=(($6746+4)|0);
      var $6747$1=HEAP32[(($ld$4783$1)>>2)];
      var $6748$0=($6747$0 >>> 28) | ($6747$1 << 4);
      var $6748$1=($6747$1 >>> 28) | (0 << 4);
      var $6749=(($S+40)|0);
      var $ld$4784$0=(($6749)|0);
      var $6750$0=HEAP32[(($ld$4784$0)>>2)];
      var $ld$4785$1=(($6749+4)|0);
      var $6750$1=HEAP32[(($ld$4785$1)>>2)];
      var $6751$0=(0 << 4) | (0 >>> 28);
      var $6751$1=($6750$0 << 4) | (0 >>> 28);
      var $6752$0=$6748$0 | $6751$0;
      var $6752$1=$6748$1 | $6751$1;
      var $6753=(($S+40)|0);
      var $ld$4786$0=(($6753)|0);
      var $6754$0=HEAP32[(($ld$4786$0)>>2)];
      var $ld$4787$1=(($6753+4)|0);
      var $6754$1=HEAP32[(($ld$4787$1)>>2)];
      var $6755$0=($6754$1 >>> 2) | (0 << 30);
      var $6755$1=(0 >>> 2) | (0 << 30);
      var $6756=(($S+40)|0);
      var $ld$4788$0=(($6756)|0);
      var $6757$0=HEAP32[(($ld$4788$0)>>2)];
      var $ld$4789$1=(($6756+4)|0);
      var $6757$1=HEAP32[(($ld$4789$1)>>2)];
      var $6758$0=($6757$0 << 30) | (0 >>> 2);
      var $6758$1=($6757$1 << 30) | ($6757$0 >>> 2);
      var $6759$0=$6755$0 | $6758$0;
      var $6759$1=$6755$1 | $6758$1;
      var $6760$0=$6752$0 ^ $6759$0;
      var $6760$1=$6752$1 ^ $6759$1;
      var $6761=(($S+40)|0);
      var $ld$4790$0=(($6761)|0);
      var $6762$0=HEAP32[(($ld$4790$0)>>2)];
      var $ld$4791$1=(($6761+4)|0);
      var $6762$1=HEAP32[(($ld$4791$1)>>2)];
      var $6763$0=($6762$1 >>> 7) | (0 << 25);
      var $6763$1=(0 >>> 7) | (0 << 25);
      var $6764=(($S+40)|0);
      var $ld$4792$0=(($6764)|0);
      var $6765$0=HEAP32[(($ld$4792$0)>>2)];
      var $ld$4793$1=(($6764+4)|0);
      var $6765$1=HEAP32[(($ld$4793$1)>>2)];
      var $6766$0=($6765$0 << 25) | (0 >>> 7);
      var $6766$1=($6765$1 << 25) | ($6765$0 >>> 7);
      var $6767$0=$6763$0 | $6766$0;
      var $6767$1=$6763$1 | $6766$1;
      var $6768$0=$6760$0 ^ $6767$0;
      var $6768$1=$6760$1 ^ $6767$1;
      var $6769=(($S+40)|0);
      var $ld$4794$0=(($6769)|0);
      var $6770$0=HEAP32[(($ld$4794$0)>>2)];
      var $ld$4795$1=(($6769+4)|0);
      var $6770$1=HEAP32[(($ld$4795$1)>>2)];
      var $6771=(($S+48)|0);
      var $ld$4796$0=(($6771)|0);
      var $6772$0=HEAP32[(($ld$4796$0)>>2)];
      var $ld$4797$1=(($6771+4)|0);
      var $6772$1=HEAP32[(($ld$4797$1)>>2)];
      var $6773$0=$6770$0 | $6772$0;
      var $6773$1=$6770$1 | $6772$1;
      var $6774=(($S+56)|0);
      var $ld$4798$0=(($6774)|0);
      var $6775$0=HEAP32[(($ld$4798$0)>>2)];
      var $ld$4799$1=(($6774+4)|0);
      var $6775$1=HEAP32[(($ld$4799$1)>>2)];
      var $6776$0=$6773$0 & $6775$0;
      var $6776$1=$6773$1 & $6775$1;
      var $6777=(($S+40)|0);
      var $ld$4800$0=(($6777)|0);
      var $6778$0=HEAP32[(($ld$4800$0)>>2)];
      var $ld$4801$1=(($6777+4)|0);
      var $6778$1=HEAP32[(($ld$4801$1)>>2)];
      var $6779=(($S+48)|0);
      var $ld$4802$0=(($6779)|0);
      var $6780$0=HEAP32[(($ld$4802$0)>>2)];
      var $ld$4803$1=(($6779+4)|0);
      var $6780$1=HEAP32[(($ld$4803$1)>>2)];
      var $6781$0=$6778$0 & $6780$0;
      var $6781$1=$6778$1 & $6780$1;
      var $6782$0=$6776$0 | $6781$0;
      var $6782$1=$6776$1 | $6781$1;
      var $6783$0 = _i64Add($6768$0,$6768$1,$6782$0,$6782$1); var $6783$1 = tempRet0;
      var $st$4804$0=(($t1)|0);
      HEAP32[(($st$4804$0)>>2)]=$6783$0;
      var $st$4805$1=(($t1+4)|0);
      HEAP32[(($st$4805$1)>>2)]=$6783$1;
      var $ld$4806$0=(($t0)|0);
      var $6784$0=HEAP32[(($ld$4806$0)>>2)];
      var $ld$4807$1=(($t0+4)|0);
      var $6784$1=HEAP32[(($ld$4807$1)>>2)];
      var $6785=(($S)|0);
      var $ld$4808$0=(($6785)|0);
      var $6786$0=HEAP32[(($ld$4808$0)>>2)];
      var $ld$4809$1=(($6785+4)|0);
      var $6786$1=HEAP32[(($ld$4809$1)>>2)];
      var $6787$0 = _i64Add($6786$0,$6786$1,$6784$0,$6784$1); var $6787$1 = tempRet0;
      var $st$4810$0=(($6785)|0);
      HEAP32[(($st$4810$0)>>2)]=$6787$0;
      var $st$4811$1=(($6785+4)|0);
      HEAP32[(($st$4811$1)>>2)]=$6787$1;
      var $ld$4812$0=(($t0)|0);
      var $6788$0=HEAP32[(($ld$4812$0)>>2)];
      var $ld$4813$1=(($t0+4)|0);
      var $6788$1=HEAP32[(($ld$4813$1)>>2)];
      var $ld$4814$0=(($t1)|0);
      var $6789$0=HEAP32[(($ld$4814$0)>>2)];
      var $ld$4815$1=(($t1+4)|0);
      var $6789$1=HEAP32[(($ld$4815$1)>>2)];
      var $6790$0 = _i64Add($6788$0,$6788$1,$6789$0,$6789$1); var $6790$1 = tempRet0;
      var $6791=(($S+32)|0);
      var $st$4816$0=(($6791)|0);
      HEAP32[(($st$4816$0)>>2)]=$6790$0;
      var $st$4817$1=(($6791+4)|0);
      HEAP32[(($st$4817$1)>>2)]=$6790$1;
      var $6792=(($S+24)|0);
      var $ld$4818$0=(($6792)|0);
      var $6793$0=HEAP32[(($ld$4818$0)>>2)];
      var $ld$4819$1=(($6792+4)|0);
      var $6793$1=HEAP32[(($ld$4819$1)>>2)];
      var $6794=(($S)|0);
      var $ld$4820$0=(($6794)|0);
      var $6795$0=HEAP32[(($ld$4820$0)>>2)];
      var $ld$4821$1=(($6794+4)|0);
      var $6795$1=HEAP32[(($ld$4821$1)>>2)];
      var $6796$0=($6795$0 >>> 14) | ($6795$1 << 18);
      var $6796$1=($6795$1 >>> 14) | (0 << 18);
      var $6797=(($S)|0);
      var $ld$4822$0=(($6797)|0);
      var $6798$0=HEAP32[(($ld$4822$0)>>2)];
      var $ld$4823$1=(($6797+4)|0);
      var $6798$1=HEAP32[(($ld$4823$1)>>2)];
      var $6799$0=(0 << 18) | (0 >>> 14);
      var $6799$1=($6798$0 << 18) | (0 >>> 14);
      var $6800$0=$6796$0 | $6799$0;
      var $6800$1=$6796$1 | $6799$1;
      var $6801=(($S)|0);
      var $ld$4824$0=(($6801)|0);
      var $6802$0=HEAP32[(($ld$4824$0)>>2)];
      var $ld$4825$1=(($6801+4)|0);
      var $6802$1=HEAP32[(($ld$4825$1)>>2)];
      var $6803$0=($6802$0 >>> 18) | ($6802$1 << 14);
      var $6803$1=($6802$1 >>> 18) | (0 << 14);
      var $6804=(($S)|0);
      var $ld$4826$0=(($6804)|0);
      var $6805$0=HEAP32[(($ld$4826$0)>>2)];
      var $ld$4827$1=(($6804+4)|0);
      var $6805$1=HEAP32[(($ld$4827$1)>>2)];
      var $6806$0=(0 << 14) | (0 >>> 18);
      var $6806$1=($6805$0 << 14) | (0 >>> 18);
      var $6807$0=$6803$0 | $6806$0;
      var $6807$1=$6803$1 | $6806$1;
      var $6808$0=$6800$0 ^ $6807$0;
      var $6808$1=$6800$1 ^ $6807$1;
      var $6809=(($S)|0);
      var $ld$4828$0=(($6809)|0);
      var $6810$0=HEAP32[(($ld$4828$0)>>2)];
      var $ld$4829$1=(($6809+4)|0);
      var $6810$1=HEAP32[(($ld$4829$1)>>2)];
      var $6811$0=($6810$1 >>> 9) | (0 << 23);
      var $6811$1=(0 >>> 9) | (0 << 23);
      var $6812=(($S)|0);
      var $ld$4830$0=(($6812)|0);
      var $6813$0=HEAP32[(($ld$4830$0)>>2)];
      var $ld$4831$1=(($6812+4)|0);
      var $6813$1=HEAP32[(($ld$4831$1)>>2)];
      var $6814$0=($6813$0 << 23) | (0 >>> 9);
      var $6814$1=($6813$1 << 23) | ($6813$0 >>> 9);
      var $6815$0=$6811$0 | $6814$0;
      var $6815$1=$6811$1 | $6814$1;
      var $6816$0=$6808$0 ^ $6815$0;
      var $6816$1=$6808$1 ^ $6815$1;
      var $6817$0 = _i64Add($6793$0,$6793$1,$6816$0,$6816$1); var $6817$1 = tempRet0;
      var $6818=(($S+16)|0);
      var $ld$4832$0=(($6818)|0);
      var $6819$0=HEAP32[(($ld$4832$0)>>2)];
      var $ld$4833$1=(($6818+4)|0);
      var $6819$1=HEAP32[(($ld$4833$1)>>2)];
      var $6820=(($S)|0);
      var $ld$4834$0=(($6820)|0);
      var $6821$0=HEAP32[(($ld$4834$0)>>2)];
      var $ld$4835$1=(($6820+4)|0);
      var $6821$1=HEAP32[(($ld$4835$1)>>2)];
      var $6822=(($S+8)|0);
      var $ld$4836$0=(($6822)|0);
      var $6823$0=HEAP32[(($ld$4836$0)>>2)];
      var $ld$4837$1=(($6822+4)|0);
      var $6823$1=HEAP32[(($ld$4837$1)>>2)];
      var $6824=(($S+16)|0);
      var $ld$4838$0=(($6824)|0);
      var $6825$0=HEAP32[(($ld$4838$0)>>2)];
      var $ld$4839$1=(($6824+4)|0);
      var $6825$1=HEAP32[(($ld$4839$1)>>2)];
      var $6826$0=$6823$0 ^ $6825$0;
      var $6826$1=$6823$1 ^ $6825$1;
      var $6827$0=$6821$0 & $6826$0;
      var $6827$1=$6821$1 & $6826$1;
      var $6828$0=$6819$0 ^ $6827$0;
      var $6828$1=$6819$1 ^ $6827$1;
      var $6829$0 = _i64Add($6817$0,$6817$1,$6828$0,$6828$1); var $6829$1 = tempRet0;
      var $$etemp$4840$0=-885112138;
      var $$etemp$4840$1=1288033470;
      var $6830$0 = _i64Add($6829$0,$6829$1,$$etemp$4840$0,$$etemp$4840$1); var $6830$1 = tempRet0;
      var $6831=(($W+608)|0);
      var $ld$4841$0=(($6831)|0);
      var $6832$0=HEAP32[(($ld$4841$0)>>2)];
      var $ld$4842$1=(($6831+4)|0);
      var $6832$1=HEAP32[(($ld$4842$1)>>2)];
      var $6833$0 = _i64Add($6830$0,$6830$1,$6832$0,$6832$1); var $6833$1 = tempRet0;
      var $st$4843$0=(($t0)|0);
      HEAP32[(($st$4843$0)>>2)]=$6833$0;
      var $st$4844$1=(($t0+4)|0);
      HEAP32[(($st$4844$1)>>2)]=$6833$1;
      var $6834=(($S+32)|0);
      var $ld$4845$0=(($6834)|0);
      var $6835$0=HEAP32[(($ld$4845$0)>>2)];
      var $ld$4846$1=(($6834+4)|0);
      var $6835$1=HEAP32[(($ld$4846$1)>>2)];
      var $6836$0=($6835$0 >>> 28) | ($6835$1 << 4);
      var $6836$1=($6835$1 >>> 28) | (0 << 4);
      var $6837=(($S+32)|0);
      var $ld$4847$0=(($6837)|0);
      var $6838$0=HEAP32[(($ld$4847$0)>>2)];
      var $ld$4848$1=(($6837+4)|0);
      var $6838$1=HEAP32[(($ld$4848$1)>>2)];
      var $6839$0=(0 << 4) | (0 >>> 28);
      var $6839$1=($6838$0 << 4) | (0 >>> 28);
      var $6840$0=$6836$0 | $6839$0;
      var $6840$1=$6836$1 | $6839$1;
      var $6841=(($S+32)|0);
      var $ld$4849$0=(($6841)|0);
      var $6842$0=HEAP32[(($ld$4849$0)>>2)];
      var $ld$4850$1=(($6841+4)|0);
      var $6842$1=HEAP32[(($ld$4850$1)>>2)];
      var $6843$0=($6842$1 >>> 2) | (0 << 30);
      var $6843$1=(0 >>> 2) | (0 << 30);
      var $6844=(($S+32)|0);
      var $ld$4851$0=(($6844)|0);
      var $6845$0=HEAP32[(($ld$4851$0)>>2)];
      var $ld$4852$1=(($6844+4)|0);
      var $6845$1=HEAP32[(($ld$4852$1)>>2)];
      var $6846$0=($6845$0 << 30) | (0 >>> 2);
      var $6846$1=($6845$1 << 30) | ($6845$0 >>> 2);
      var $6847$0=$6843$0 | $6846$0;
      var $6847$1=$6843$1 | $6846$1;
      var $6848$0=$6840$0 ^ $6847$0;
      var $6848$1=$6840$1 ^ $6847$1;
      var $6849=(($S+32)|0);
      var $ld$4853$0=(($6849)|0);
      var $6850$0=HEAP32[(($ld$4853$0)>>2)];
      var $ld$4854$1=(($6849+4)|0);
      var $6850$1=HEAP32[(($ld$4854$1)>>2)];
      var $6851$0=($6850$1 >>> 7) | (0 << 25);
      var $6851$1=(0 >>> 7) | (0 << 25);
      var $6852=(($S+32)|0);
      var $ld$4855$0=(($6852)|0);
      var $6853$0=HEAP32[(($ld$4855$0)>>2)];
      var $ld$4856$1=(($6852+4)|0);
      var $6853$1=HEAP32[(($ld$4856$1)>>2)];
      var $6854$0=($6853$0 << 25) | (0 >>> 7);
      var $6854$1=($6853$1 << 25) | ($6853$0 >>> 7);
      var $6855$0=$6851$0 | $6854$0;
      var $6855$1=$6851$1 | $6854$1;
      var $6856$0=$6848$0 ^ $6855$0;
      var $6856$1=$6848$1 ^ $6855$1;
      var $6857=(($S+32)|0);
      var $ld$4857$0=(($6857)|0);
      var $6858$0=HEAP32[(($ld$4857$0)>>2)];
      var $ld$4858$1=(($6857+4)|0);
      var $6858$1=HEAP32[(($ld$4858$1)>>2)];
      var $6859=(($S+40)|0);
      var $ld$4859$0=(($6859)|0);
      var $6860$0=HEAP32[(($ld$4859$0)>>2)];
      var $ld$4860$1=(($6859+4)|0);
      var $6860$1=HEAP32[(($ld$4860$1)>>2)];
      var $6861$0=$6858$0 | $6860$0;
      var $6861$1=$6858$1 | $6860$1;
      var $6862=(($S+48)|0);
      var $ld$4861$0=(($6862)|0);
      var $6863$0=HEAP32[(($ld$4861$0)>>2)];
      var $ld$4862$1=(($6862+4)|0);
      var $6863$1=HEAP32[(($ld$4862$1)>>2)];
      var $6864$0=$6861$0 & $6863$0;
      var $6864$1=$6861$1 & $6863$1;
      var $6865=(($S+32)|0);
      var $ld$4863$0=(($6865)|0);
      var $6866$0=HEAP32[(($ld$4863$0)>>2)];
      var $ld$4864$1=(($6865+4)|0);
      var $6866$1=HEAP32[(($ld$4864$1)>>2)];
      var $6867=(($S+40)|0);
      var $ld$4865$0=(($6867)|0);
      var $6868$0=HEAP32[(($ld$4865$0)>>2)];
      var $ld$4866$1=(($6867+4)|0);
      var $6868$1=HEAP32[(($ld$4866$1)>>2)];
      var $6869$0=$6866$0 & $6868$0;
      var $6869$1=$6866$1 & $6868$1;
      var $6870$0=$6864$0 | $6869$0;
      var $6870$1=$6864$1 | $6869$1;
      var $6871$0 = _i64Add($6856$0,$6856$1,$6870$0,$6870$1); var $6871$1 = tempRet0;
      var $st$4867$0=(($t1)|0);
      HEAP32[(($st$4867$0)>>2)]=$6871$0;
      var $st$4868$1=(($t1+4)|0);
      HEAP32[(($st$4868$1)>>2)]=$6871$1;
      var $ld$4869$0=(($t0)|0);
      var $6872$0=HEAP32[(($ld$4869$0)>>2)];
      var $ld$4870$1=(($t0+4)|0);
      var $6872$1=HEAP32[(($ld$4870$1)>>2)];
      var $6873=(($S+56)|0);
      var $ld$4871$0=(($6873)|0);
      var $6874$0=HEAP32[(($ld$4871$0)>>2)];
      var $ld$4872$1=(($6873+4)|0);
      var $6874$1=HEAP32[(($ld$4872$1)>>2)];
      var $6875$0 = _i64Add($6874$0,$6874$1,$6872$0,$6872$1); var $6875$1 = tempRet0;
      var $st$4873$0=(($6873)|0);
      HEAP32[(($st$4873$0)>>2)]=$6875$0;
      var $st$4874$1=(($6873+4)|0);
      HEAP32[(($st$4874$1)>>2)]=$6875$1;
      var $ld$4875$0=(($t0)|0);
      var $6876$0=HEAP32[(($ld$4875$0)>>2)];
      var $ld$4876$1=(($t0+4)|0);
      var $6876$1=HEAP32[(($ld$4876$1)>>2)];
      var $ld$4877$0=(($t1)|0);
      var $6877$0=HEAP32[(($ld$4877$0)>>2)];
      var $ld$4878$1=(($t1+4)|0);
      var $6877$1=HEAP32[(($ld$4878$1)>>2)];
      var $6878$0 = _i64Add($6876$0,$6876$1,$6877$0,$6877$1); var $6878$1 = tempRet0;
      var $6879=(($S+24)|0);
      var $st$4879$0=(($6879)|0);
      HEAP32[(($st$4879$0)>>2)]=$6878$0;
      var $st$4880$1=(($6879+4)|0);
      HEAP32[(($st$4880$1)>>2)]=$6878$1;
      var $6880=(($S+16)|0);
      var $ld$4881$0=(($6880)|0);
      var $6881$0=HEAP32[(($ld$4881$0)>>2)];
      var $ld$4882$1=(($6880+4)|0);
      var $6881$1=HEAP32[(($ld$4882$1)>>2)];
      var $6882=(($S+56)|0);
      var $ld$4883$0=(($6882)|0);
      var $6883$0=HEAP32[(($ld$4883$0)>>2)];
      var $ld$4884$1=(($6882+4)|0);
      var $6883$1=HEAP32[(($ld$4884$1)>>2)];
      var $6884$0=($6883$0 >>> 14) | ($6883$1 << 18);
      var $6884$1=($6883$1 >>> 14) | (0 << 18);
      var $6885=(($S+56)|0);
      var $ld$4885$0=(($6885)|0);
      var $6886$0=HEAP32[(($ld$4885$0)>>2)];
      var $ld$4886$1=(($6885+4)|0);
      var $6886$1=HEAP32[(($ld$4886$1)>>2)];
      var $6887$0=(0 << 18) | (0 >>> 14);
      var $6887$1=($6886$0 << 18) | (0 >>> 14);
      var $6888$0=$6884$0 | $6887$0;
      var $6888$1=$6884$1 | $6887$1;
      var $6889=(($S+56)|0);
      var $ld$4887$0=(($6889)|0);
      var $6890$0=HEAP32[(($ld$4887$0)>>2)];
      var $ld$4888$1=(($6889+4)|0);
      var $6890$1=HEAP32[(($ld$4888$1)>>2)];
      var $6891$0=($6890$0 >>> 18) | ($6890$1 << 14);
      var $6891$1=($6890$1 >>> 18) | (0 << 14);
      var $6892=(($S+56)|0);
      var $ld$4889$0=(($6892)|0);
      var $6893$0=HEAP32[(($ld$4889$0)>>2)];
      var $ld$4890$1=(($6892+4)|0);
      var $6893$1=HEAP32[(($ld$4890$1)>>2)];
      var $6894$0=(0 << 14) | (0 >>> 18);
      var $6894$1=($6893$0 << 14) | (0 >>> 18);
      var $6895$0=$6891$0 | $6894$0;
      var $6895$1=$6891$1 | $6894$1;
      var $6896$0=$6888$0 ^ $6895$0;
      var $6896$1=$6888$1 ^ $6895$1;
      var $6897=(($S+56)|0);
      var $ld$4891$0=(($6897)|0);
      var $6898$0=HEAP32[(($ld$4891$0)>>2)];
      var $ld$4892$1=(($6897+4)|0);
      var $6898$1=HEAP32[(($ld$4892$1)>>2)];
      var $6899$0=($6898$1 >>> 9) | (0 << 23);
      var $6899$1=(0 >>> 9) | (0 << 23);
      var $6900=(($S+56)|0);
      var $ld$4893$0=(($6900)|0);
      var $6901$0=HEAP32[(($ld$4893$0)>>2)];
      var $ld$4894$1=(($6900+4)|0);
      var $6901$1=HEAP32[(($ld$4894$1)>>2)];
      var $6902$0=($6901$0 << 23) | (0 >>> 9);
      var $6902$1=($6901$1 << 23) | ($6901$0 >>> 9);
      var $6903$0=$6899$0 | $6902$0;
      var $6903$1=$6899$1 | $6902$1;
      var $6904$0=$6896$0 ^ $6903$0;
      var $6904$1=$6896$1 ^ $6903$1;
      var $6905$0 = _i64Add($6881$0,$6881$1,$6904$0,$6904$1); var $6905$1 = tempRet0;
      var $6906=(($S+8)|0);
      var $ld$4895$0=(($6906)|0);
      var $6907$0=HEAP32[(($ld$4895$0)>>2)];
      var $ld$4896$1=(($6906+4)|0);
      var $6907$1=HEAP32[(($ld$4896$1)>>2)];
      var $6908=(($S+56)|0);
      var $ld$4897$0=(($6908)|0);
      var $6909$0=HEAP32[(($ld$4897$0)>>2)];
      var $ld$4898$1=(($6908+4)|0);
      var $6909$1=HEAP32[(($ld$4898$1)>>2)];
      var $6910=(($S)|0);
      var $ld$4899$0=(($6910)|0);
      var $6911$0=HEAP32[(($ld$4899$0)>>2)];
      var $ld$4900$1=(($6910+4)|0);
      var $6911$1=HEAP32[(($ld$4900$1)>>2)];
      var $6912=(($S+8)|0);
      var $ld$4901$0=(($6912)|0);
      var $6913$0=HEAP32[(($ld$4901$0)>>2)];
      var $ld$4902$1=(($6912+4)|0);
      var $6913$1=HEAP32[(($ld$4902$1)>>2)];
      var $6914$0=$6911$0 ^ $6913$0;
      var $6914$1=$6911$1 ^ $6913$1;
      var $6915$0=$6909$0 & $6914$0;
      var $6915$1=$6909$1 & $6914$1;
      var $6916$0=$6907$0 ^ $6915$0;
      var $6916$1=$6907$1 ^ $6915$1;
      var $6917$0 = _i64Add($6905$0,$6905$1,$6916$0,$6916$1); var $6917$1 = tempRet0;
      var $$etemp$4903$0=-60457430;
      var $$etemp$4903$1=1501505948;
      var $6918$0 = _i64Add($6917$0,$6917$1,$$etemp$4903$0,$$etemp$4903$1); var $6918$1 = tempRet0;
      var $6919=(($W+616)|0);
      var $ld$4904$0=(($6919)|0);
      var $6920$0=HEAP32[(($ld$4904$0)>>2)];
      var $ld$4905$1=(($6919+4)|0);
      var $6920$1=HEAP32[(($ld$4905$1)>>2)];
      var $6921$0 = _i64Add($6918$0,$6918$1,$6920$0,$6920$1); var $6921$1 = tempRet0;
      var $st$4906$0=(($t0)|0);
      HEAP32[(($st$4906$0)>>2)]=$6921$0;
      var $st$4907$1=(($t0+4)|0);
      HEAP32[(($st$4907$1)>>2)]=$6921$1;
      var $6922=(($S+24)|0);
      var $ld$4908$0=(($6922)|0);
      var $6923$0=HEAP32[(($ld$4908$0)>>2)];
      var $ld$4909$1=(($6922+4)|0);
      var $6923$1=HEAP32[(($ld$4909$1)>>2)];
      var $6924$0=($6923$0 >>> 28) | ($6923$1 << 4);
      var $6924$1=($6923$1 >>> 28) | (0 << 4);
      var $6925=(($S+24)|0);
      var $ld$4910$0=(($6925)|0);
      var $6926$0=HEAP32[(($ld$4910$0)>>2)];
      var $ld$4911$1=(($6925+4)|0);
      var $6926$1=HEAP32[(($ld$4911$1)>>2)];
      var $6927$0=(0 << 4) | (0 >>> 28);
      var $6927$1=($6926$0 << 4) | (0 >>> 28);
      var $6928$0=$6924$0 | $6927$0;
      var $6928$1=$6924$1 | $6927$1;
      var $6929=(($S+24)|0);
      var $ld$4912$0=(($6929)|0);
      var $6930$0=HEAP32[(($ld$4912$0)>>2)];
      var $ld$4913$1=(($6929+4)|0);
      var $6930$1=HEAP32[(($ld$4913$1)>>2)];
      var $6931$0=($6930$1 >>> 2) | (0 << 30);
      var $6931$1=(0 >>> 2) | (0 << 30);
      var $6932=(($S+24)|0);
      var $ld$4914$0=(($6932)|0);
      var $6933$0=HEAP32[(($ld$4914$0)>>2)];
      var $ld$4915$1=(($6932+4)|0);
      var $6933$1=HEAP32[(($ld$4915$1)>>2)];
      var $6934$0=($6933$0 << 30) | (0 >>> 2);
      var $6934$1=($6933$1 << 30) | ($6933$0 >>> 2);
      var $6935$0=$6931$0 | $6934$0;
      var $6935$1=$6931$1 | $6934$1;
      var $6936$0=$6928$0 ^ $6935$0;
      var $6936$1=$6928$1 ^ $6935$1;
      var $6937=(($S+24)|0);
      var $ld$4916$0=(($6937)|0);
      var $6938$0=HEAP32[(($ld$4916$0)>>2)];
      var $ld$4917$1=(($6937+4)|0);
      var $6938$1=HEAP32[(($ld$4917$1)>>2)];
      var $6939$0=($6938$1 >>> 7) | (0 << 25);
      var $6939$1=(0 >>> 7) | (0 << 25);
      var $6940=(($S+24)|0);
      var $ld$4918$0=(($6940)|0);
      var $6941$0=HEAP32[(($ld$4918$0)>>2)];
      var $ld$4919$1=(($6940+4)|0);
      var $6941$1=HEAP32[(($ld$4919$1)>>2)];
      var $6942$0=($6941$0 << 25) | (0 >>> 7);
      var $6942$1=($6941$1 << 25) | ($6941$0 >>> 7);
      var $6943$0=$6939$0 | $6942$0;
      var $6943$1=$6939$1 | $6942$1;
      var $6944$0=$6936$0 ^ $6943$0;
      var $6944$1=$6936$1 ^ $6943$1;
      var $6945=(($S+24)|0);
      var $ld$4920$0=(($6945)|0);
      var $6946$0=HEAP32[(($ld$4920$0)>>2)];
      var $ld$4921$1=(($6945+4)|0);
      var $6946$1=HEAP32[(($ld$4921$1)>>2)];
      var $6947=(($S+32)|0);
      var $ld$4922$0=(($6947)|0);
      var $6948$0=HEAP32[(($ld$4922$0)>>2)];
      var $ld$4923$1=(($6947+4)|0);
      var $6948$1=HEAP32[(($ld$4923$1)>>2)];
      var $6949$0=$6946$0 | $6948$0;
      var $6949$1=$6946$1 | $6948$1;
      var $6950=(($S+40)|0);
      var $ld$4924$0=(($6950)|0);
      var $6951$0=HEAP32[(($ld$4924$0)>>2)];
      var $ld$4925$1=(($6950+4)|0);
      var $6951$1=HEAP32[(($ld$4925$1)>>2)];
      var $6952$0=$6949$0 & $6951$0;
      var $6952$1=$6949$1 & $6951$1;
      var $6953=(($S+24)|0);
      var $ld$4926$0=(($6953)|0);
      var $6954$0=HEAP32[(($ld$4926$0)>>2)];
      var $ld$4927$1=(($6953+4)|0);
      var $6954$1=HEAP32[(($ld$4927$1)>>2)];
      var $6955=(($S+32)|0);
      var $ld$4928$0=(($6955)|0);
      var $6956$0=HEAP32[(($ld$4928$0)>>2)];
      var $ld$4929$1=(($6955+4)|0);
      var $6956$1=HEAP32[(($ld$4929$1)>>2)];
      var $6957$0=$6954$0 & $6956$0;
      var $6957$1=$6954$1 & $6956$1;
      var $6958$0=$6952$0 | $6957$0;
      var $6958$1=$6952$1 | $6957$1;
      var $6959$0 = _i64Add($6944$0,$6944$1,$6958$0,$6958$1); var $6959$1 = tempRet0;
      var $st$4930$0=(($t1)|0);
      HEAP32[(($st$4930$0)>>2)]=$6959$0;
      var $st$4931$1=(($t1+4)|0);
      HEAP32[(($st$4931$1)>>2)]=$6959$1;
      var $ld$4932$0=(($t0)|0);
      var $6960$0=HEAP32[(($ld$4932$0)>>2)];
      var $ld$4933$1=(($t0+4)|0);
      var $6960$1=HEAP32[(($ld$4933$1)>>2)];
      var $6961=(($S+48)|0);
      var $ld$4934$0=(($6961)|0);
      var $6962$0=HEAP32[(($ld$4934$0)>>2)];
      var $ld$4935$1=(($6961+4)|0);
      var $6962$1=HEAP32[(($ld$4935$1)>>2)];
      var $6963$0 = _i64Add($6962$0,$6962$1,$6960$0,$6960$1); var $6963$1 = tempRet0;
      var $st$4936$0=(($6961)|0);
      HEAP32[(($st$4936$0)>>2)]=$6963$0;
      var $st$4937$1=(($6961+4)|0);
      HEAP32[(($st$4937$1)>>2)]=$6963$1;
      var $ld$4938$0=(($t0)|0);
      var $6964$0=HEAP32[(($ld$4938$0)>>2)];
      var $ld$4939$1=(($t0+4)|0);
      var $6964$1=HEAP32[(($ld$4939$1)>>2)];
      var $ld$4940$0=(($t1)|0);
      var $6965$0=HEAP32[(($ld$4940$0)>>2)];
      var $ld$4941$1=(($t1+4)|0);
      var $6965$1=HEAP32[(($ld$4941$1)>>2)];
      var $6966$0 = _i64Add($6964$0,$6964$1,$6965$0,$6965$1); var $6966$1 = tempRet0;
      var $6967=(($S+16)|0);
      var $st$4942$0=(($6967)|0);
      HEAP32[(($st$4942$0)>>2)]=$6966$0;
      var $st$4943$1=(($6967+4)|0);
      HEAP32[(($st$4943$1)>>2)]=$6966$1;
      var $6968=(($S+8)|0);
      var $ld$4944$0=(($6968)|0);
      var $6969$0=HEAP32[(($ld$4944$0)>>2)];
      var $ld$4945$1=(($6968+4)|0);
      var $6969$1=HEAP32[(($ld$4945$1)>>2)];
      var $6970=(($S+48)|0);
      var $ld$4946$0=(($6970)|0);
      var $6971$0=HEAP32[(($ld$4946$0)>>2)];
      var $ld$4947$1=(($6970+4)|0);
      var $6971$1=HEAP32[(($ld$4947$1)>>2)];
      var $6972$0=($6971$0 >>> 14) | ($6971$1 << 18);
      var $6972$1=($6971$1 >>> 14) | (0 << 18);
      var $6973=(($S+48)|0);
      var $ld$4948$0=(($6973)|0);
      var $6974$0=HEAP32[(($ld$4948$0)>>2)];
      var $ld$4949$1=(($6973+4)|0);
      var $6974$1=HEAP32[(($ld$4949$1)>>2)];
      var $6975$0=(0 << 18) | (0 >>> 14);
      var $6975$1=($6974$0 << 18) | (0 >>> 14);
      var $6976$0=$6972$0 | $6975$0;
      var $6976$1=$6972$1 | $6975$1;
      var $6977=(($S+48)|0);
      var $ld$4950$0=(($6977)|0);
      var $6978$0=HEAP32[(($ld$4950$0)>>2)];
      var $ld$4951$1=(($6977+4)|0);
      var $6978$1=HEAP32[(($ld$4951$1)>>2)];
      var $6979$0=($6978$0 >>> 18) | ($6978$1 << 14);
      var $6979$1=($6978$1 >>> 18) | (0 << 14);
      var $6980=(($S+48)|0);
      var $ld$4952$0=(($6980)|0);
      var $6981$0=HEAP32[(($ld$4952$0)>>2)];
      var $ld$4953$1=(($6980+4)|0);
      var $6981$1=HEAP32[(($ld$4953$1)>>2)];
      var $6982$0=(0 << 14) | (0 >>> 18);
      var $6982$1=($6981$0 << 14) | (0 >>> 18);
      var $6983$0=$6979$0 | $6982$0;
      var $6983$1=$6979$1 | $6982$1;
      var $6984$0=$6976$0 ^ $6983$0;
      var $6984$1=$6976$1 ^ $6983$1;
      var $6985=(($S+48)|0);
      var $ld$4954$0=(($6985)|0);
      var $6986$0=HEAP32[(($ld$4954$0)>>2)];
      var $ld$4955$1=(($6985+4)|0);
      var $6986$1=HEAP32[(($ld$4955$1)>>2)];
      var $6987$0=($6986$1 >>> 9) | (0 << 23);
      var $6987$1=(0 >>> 9) | (0 << 23);
      var $6988=(($S+48)|0);
      var $ld$4956$0=(($6988)|0);
      var $6989$0=HEAP32[(($ld$4956$0)>>2)];
      var $ld$4957$1=(($6988+4)|0);
      var $6989$1=HEAP32[(($ld$4957$1)>>2)];
      var $6990$0=($6989$0 << 23) | (0 >>> 9);
      var $6990$1=($6989$1 << 23) | ($6989$0 >>> 9);
      var $6991$0=$6987$0 | $6990$0;
      var $6991$1=$6987$1 | $6990$1;
      var $6992$0=$6984$0 ^ $6991$0;
      var $6992$1=$6984$1 ^ $6991$1;
      var $6993$0 = _i64Add($6969$0,$6969$1,$6992$0,$6992$1); var $6993$1 = tempRet0;
      var $6994=(($S)|0);
      var $ld$4958$0=(($6994)|0);
      var $6995$0=HEAP32[(($ld$4958$0)>>2)];
      var $ld$4959$1=(($6994+4)|0);
      var $6995$1=HEAP32[(($ld$4959$1)>>2)];
      var $6996=(($S+48)|0);
      var $ld$4960$0=(($6996)|0);
      var $6997$0=HEAP32[(($ld$4960$0)>>2)];
      var $ld$4961$1=(($6996+4)|0);
      var $6997$1=HEAP32[(($ld$4961$1)>>2)];
      var $6998=(($S+56)|0);
      var $ld$4962$0=(($6998)|0);
      var $6999$0=HEAP32[(($ld$4962$0)>>2)];
      var $ld$4963$1=(($6998+4)|0);
      var $6999$1=HEAP32[(($ld$4963$1)>>2)];
      var $7000=(($S)|0);
      var $ld$4964$0=(($7000)|0);
      var $7001$0=HEAP32[(($ld$4964$0)>>2)];
      var $ld$4965$1=(($7000+4)|0);
      var $7001$1=HEAP32[(($ld$4965$1)>>2)];
      var $7002$0=$6999$0 ^ $7001$0;
      var $7002$1=$6999$1 ^ $7001$1;
      var $7003$0=$6997$0 & $7002$0;
      var $7003$1=$6997$1 & $7002$1;
      var $7004$0=$6995$0 ^ $7003$0;
      var $7004$1=$6995$1 ^ $7003$1;
      var $7005$0 = _i64Add($6993$0,$6993$1,$7004$0,$7004$1); var $7005$1 = tempRet0;
      var $$etemp$4966$0=987167468;
      var $$etemp$4966$1=1607167915;
      var $7006$0 = _i64Add($7005$0,$7005$1,$$etemp$4966$0,$$etemp$4966$1); var $7006$1 = tempRet0;
      var $7007=(($W+624)|0);
      var $ld$4967$0=(($7007)|0);
      var $7008$0=HEAP32[(($ld$4967$0)>>2)];
      var $ld$4968$1=(($7007+4)|0);
      var $7008$1=HEAP32[(($ld$4968$1)>>2)];
      var $7009$0 = _i64Add($7006$0,$7006$1,$7008$0,$7008$1); var $7009$1 = tempRet0;
      var $st$4969$0=(($t0)|0);
      HEAP32[(($st$4969$0)>>2)]=$7009$0;
      var $st$4970$1=(($t0+4)|0);
      HEAP32[(($st$4970$1)>>2)]=$7009$1;
      var $7010=(($S+16)|0);
      var $ld$4971$0=(($7010)|0);
      var $7011$0=HEAP32[(($ld$4971$0)>>2)];
      var $ld$4972$1=(($7010+4)|0);
      var $7011$1=HEAP32[(($ld$4972$1)>>2)];
      var $7012$0=($7011$0 >>> 28) | ($7011$1 << 4);
      var $7012$1=($7011$1 >>> 28) | (0 << 4);
      var $7013=(($S+16)|0);
      var $ld$4973$0=(($7013)|0);
      var $7014$0=HEAP32[(($ld$4973$0)>>2)];
      var $ld$4974$1=(($7013+4)|0);
      var $7014$1=HEAP32[(($ld$4974$1)>>2)];
      var $7015$0=(0 << 4) | (0 >>> 28);
      var $7015$1=($7014$0 << 4) | (0 >>> 28);
      var $7016$0=$7012$0 | $7015$0;
      var $7016$1=$7012$1 | $7015$1;
      var $7017=(($S+16)|0);
      var $ld$4975$0=(($7017)|0);
      var $7018$0=HEAP32[(($ld$4975$0)>>2)];
      var $ld$4976$1=(($7017+4)|0);
      var $7018$1=HEAP32[(($ld$4976$1)>>2)];
      var $7019$0=($7018$1 >>> 2) | (0 << 30);
      var $7019$1=(0 >>> 2) | (0 << 30);
      var $7020=(($S+16)|0);
      var $ld$4977$0=(($7020)|0);
      var $7021$0=HEAP32[(($ld$4977$0)>>2)];
      var $ld$4978$1=(($7020+4)|0);
      var $7021$1=HEAP32[(($ld$4978$1)>>2)];
      var $7022$0=($7021$0 << 30) | (0 >>> 2);
      var $7022$1=($7021$1 << 30) | ($7021$0 >>> 2);
      var $7023$0=$7019$0 | $7022$0;
      var $7023$1=$7019$1 | $7022$1;
      var $7024$0=$7016$0 ^ $7023$0;
      var $7024$1=$7016$1 ^ $7023$1;
      var $7025=(($S+16)|0);
      var $ld$4979$0=(($7025)|0);
      var $7026$0=HEAP32[(($ld$4979$0)>>2)];
      var $ld$4980$1=(($7025+4)|0);
      var $7026$1=HEAP32[(($ld$4980$1)>>2)];
      var $7027$0=($7026$1 >>> 7) | (0 << 25);
      var $7027$1=(0 >>> 7) | (0 << 25);
      var $7028=(($S+16)|0);
      var $ld$4981$0=(($7028)|0);
      var $7029$0=HEAP32[(($ld$4981$0)>>2)];
      var $ld$4982$1=(($7028+4)|0);
      var $7029$1=HEAP32[(($ld$4982$1)>>2)];
      var $7030$0=($7029$0 << 25) | (0 >>> 7);
      var $7030$1=($7029$1 << 25) | ($7029$0 >>> 7);
      var $7031$0=$7027$0 | $7030$0;
      var $7031$1=$7027$1 | $7030$1;
      var $7032$0=$7024$0 ^ $7031$0;
      var $7032$1=$7024$1 ^ $7031$1;
      var $7033=(($S+16)|0);
      var $ld$4983$0=(($7033)|0);
      var $7034$0=HEAP32[(($ld$4983$0)>>2)];
      var $ld$4984$1=(($7033+4)|0);
      var $7034$1=HEAP32[(($ld$4984$1)>>2)];
      var $7035=(($S+24)|0);
      var $ld$4985$0=(($7035)|0);
      var $7036$0=HEAP32[(($ld$4985$0)>>2)];
      var $ld$4986$1=(($7035+4)|0);
      var $7036$1=HEAP32[(($ld$4986$1)>>2)];
      var $7037$0=$7034$0 | $7036$0;
      var $7037$1=$7034$1 | $7036$1;
      var $7038=(($S+32)|0);
      var $ld$4987$0=(($7038)|0);
      var $7039$0=HEAP32[(($ld$4987$0)>>2)];
      var $ld$4988$1=(($7038+4)|0);
      var $7039$1=HEAP32[(($ld$4988$1)>>2)];
      var $7040$0=$7037$0 & $7039$0;
      var $7040$1=$7037$1 & $7039$1;
      var $7041=(($S+16)|0);
      var $ld$4989$0=(($7041)|0);
      var $7042$0=HEAP32[(($ld$4989$0)>>2)];
      var $ld$4990$1=(($7041+4)|0);
      var $7042$1=HEAP32[(($ld$4990$1)>>2)];
      var $7043=(($S+24)|0);
      var $ld$4991$0=(($7043)|0);
      var $7044$0=HEAP32[(($ld$4991$0)>>2)];
      var $ld$4992$1=(($7043+4)|0);
      var $7044$1=HEAP32[(($ld$4992$1)>>2)];
      var $7045$0=$7042$0 & $7044$0;
      var $7045$1=$7042$1 & $7044$1;
      var $7046$0=$7040$0 | $7045$0;
      var $7046$1=$7040$1 | $7045$1;
      var $7047$0 = _i64Add($7032$0,$7032$1,$7046$0,$7046$1); var $7047$1 = tempRet0;
      var $st$4993$0=(($t1)|0);
      HEAP32[(($st$4993$0)>>2)]=$7047$0;
      var $st$4994$1=(($t1+4)|0);
      HEAP32[(($st$4994$1)>>2)]=$7047$1;
      var $ld$4995$0=(($t0)|0);
      var $7048$0=HEAP32[(($ld$4995$0)>>2)];
      var $ld$4996$1=(($t0+4)|0);
      var $7048$1=HEAP32[(($ld$4996$1)>>2)];
      var $7049=(($S+40)|0);
      var $ld$4997$0=(($7049)|0);
      var $7050$0=HEAP32[(($ld$4997$0)>>2)];
      var $ld$4998$1=(($7049+4)|0);
      var $7050$1=HEAP32[(($ld$4998$1)>>2)];
      var $7051$0 = _i64Add($7050$0,$7050$1,$7048$0,$7048$1); var $7051$1 = tempRet0;
      var $st$4999$0=(($7049)|0);
      HEAP32[(($st$4999$0)>>2)]=$7051$0;
      var $st$5000$1=(($7049+4)|0);
      HEAP32[(($st$5000$1)>>2)]=$7051$1;
      var $ld$5001$0=(($t0)|0);
      var $7052$0=HEAP32[(($ld$5001$0)>>2)];
      var $ld$5002$1=(($t0+4)|0);
      var $7052$1=HEAP32[(($ld$5002$1)>>2)];
      var $ld$5003$0=(($t1)|0);
      var $7053$0=HEAP32[(($ld$5003$0)>>2)];
      var $ld$5004$1=(($t1+4)|0);
      var $7053$1=HEAP32[(($ld$5004$1)>>2)];
      var $7054$0 = _i64Add($7052$0,$7052$1,$7053$0,$7053$1); var $7054$1 = tempRet0;
      var $7055=(($S+8)|0);
      var $st$5005$0=(($7055)|0);
      HEAP32[(($st$5005$0)>>2)]=$7054$0;
      var $st$5006$1=(($7055+4)|0);
      HEAP32[(($st$5006$1)>>2)]=$7054$1;
      var $7056=(($S)|0);
      var $ld$5007$0=(($7056)|0);
      var $7057$0=HEAP32[(($ld$5007$0)>>2)];
      var $ld$5008$1=(($7056+4)|0);
      var $7057$1=HEAP32[(($ld$5008$1)>>2)];
      var $7058=(($S+40)|0);
      var $ld$5009$0=(($7058)|0);
      var $7059$0=HEAP32[(($ld$5009$0)>>2)];
      var $ld$5010$1=(($7058+4)|0);
      var $7059$1=HEAP32[(($ld$5010$1)>>2)];
      var $7060$0=($7059$0 >>> 14) | ($7059$1 << 18);
      var $7060$1=($7059$1 >>> 14) | (0 << 18);
      var $7061=(($S+40)|0);
      var $ld$5011$0=(($7061)|0);
      var $7062$0=HEAP32[(($ld$5011$0)>>2)];
      var $ld$5012$1=(($7061+4)|0);
      var $7062$1=HEAP32[(($ld$5012$1)>>2)];
      var $7063$0=(0 << 18) | (0 >>> 14);
      var $7063$1=($7062$0 << 18) | (0 >>> 14);
      var $7064$0=$7060$0 | $7063$0;
      var $7064$1=$7060$1 | $7063$1;
      var $7065=(($S+40)|0);
      var $ld$5013$0=(($7065)|0);
      var $7066$0=HEAP32[(($ld$5013$0)>>2)];
      var $ld$5014$1=(($7065+4)|0);
      var $7066$1=HEAP32[(($ld$5014$1)>>2)];
      var $7067$0=($7066$0 >>> 18) | ($7066$1 << 14);
      var $7067$1=($7066$1 >>> 18) | (0 << 14);
      var $7068=(($S+40)|0);
      var $ld$5015$0=(($7068)|0);
      var $7069$0=HEAP32[(($ld$5015$0)>>2)];
      var $ld$5016$1=(($7068+4)|0);
      var $7069$1=HEAP32[(($ld$5016$1)>>2)];
      var $7070$0=(0 << 14) | (0 >>> 18);
      var $7070$1=($7069$0 << 14) | (0 >>> 18);
      var $7071$0=$7067$0 | $7070$0;
      var $7071$1=$7067$1 | $7070$1;
      var $7072$0=$7064$0 ^ $7071$0;
      var $7072$1=$7064$1 ^ $7071$1;
      var $7073=(($S+40)|0);
      var $ld$5017$0=(($7073)|0);
      var $7074$0=HEAP32[(($ld$5017$0)>>2)];
      var $ld$5018$1=(($7073+4)|0);
      var $7074$1=HEAP32[(($ld$5018$1)>>2)];
      var $7075$0=($7074$1 >>> 9) | (0 << 23);
      var $7075$1=(0 >>> 9) | (0 << 23);
      var $7076=(($S+40)|0);
      var $ld$5019$0=(($7076)|0);
      var $7077$0=HEAP32[(($ld$5019$0)>>2)];
      var $ld$5020$1=(($7076+4)|0);
      var $7077$1=HEAP32[(($ld$5020$1)>>2)];
      var $7078$0=($7077$0 << 23) | (0 >>> 9);
      var $7078$1=($7077$1 << 23) | ($7077$0 >>> 9);
      var $7079$0=$7075$0 | $7078$0;
      var $7079$1=$7075$1 | $7078$1;
      var $7080$0=$7072$0 ^ $7079$0;
      var $7080$1=$7072$1 ^ $7079$1;
      var $7081$0 = _i64Add($7057$0,$7057$1,$7080$0,$7080$1); var $7081$1 = tempRet0;
      var $7082=(($S+56)|0);
      var $ld$5021$0=(($7082)|0);
      var $7083$0=HEAP32[(($ld$5021$0)>>2)];
      var $ld$5022$1=(($7082+4)|0);
      var $7083$1=HEAP32[(($ld$5022$1)>>2)];
      var $7084=(($S+40)|0);
      var $ld$5023$0=(($7084)|0);
      var $7085$0=HEAP32[(($ld$5023$0)>>2)];
      var $ld$5024$1=(($7084+4)|0);
      var $7085$1=HEAP32[(($ld$5024$1)>>2)];
      var $7086=(($S+48)|0);
      var $ld$5025$0=(($7086)|0);
      var $7087$0=HEAP32[(($ld$5025$0)>>2)];
      var $ld$5026$1=(($7086+4)|0);
      var $7087$1=HEAP32[(($ld$5026$1)>>2)];
      var $7088=(($S+56)|0);
      var $ld$5027$0=(($7088)|0);
      var $7089$0=HEAP32[(($ld$5027$0)>>2)];
      var $ld$5028$1=(($7088+4)|0);
      var $7089$1=HEAP32[(($ld$5028$1)>>2)];
      var $7090$0=$7087$0 ^ $7089$0;
      var $7090$1=$7087$1 ^ $7089$1;
      var $7091$0=$7085$0 & $7090$0;
      var $7091$1=$7085$1 & $7090$1;
      var $7092$0=$7083$0 ^ $7091$0;
      var $7092$1=$7083$1 ^ $7091$1;
      var $7093$0 = _i64Add($7081$0,$7081$1,$7092$0,$7092$1); var $7093$1 = tempRet0;
      var $$etemp$5029$0=1246189591;
      var $$etemp$5029$1=1816402316;
      var $7094$0 = _i64Add($7093$0,$7093$1,$$etemp$5029$0,$$etemp$5029$1); var $7094$1 = tempRet0;
      var $7095=(($W+632)|0);
      var $ld$5030$0=(($7095)|0);
      var $7096$0=HEAP32[(($ld$5030$0)>>2)];
      var $ld$5031$1=(($7095+4)|0);
      var $7096$1=HEAP32[(($ld$5031$1)>>2)];
      var $7097$0 = _i64Add($7094$0,$7094$1,$7096$0,$7096$1); var $7097$1 = tempRet0;
      var $st$5032$0=(($t0)|0);
      HEAP32[(($st$5032$0)>>2)]=$7097$0;
      var $st$5033$1=(($t0+4)|0);
      HEAP32[(($st$5033$1)>>2)]=$7097$1;
      var $7098=(($S+8)|0);
      var $ld$5034$0=(($7098)|0);
      var $7099$0=HEAP32[(($ld$5034$0)>>2)];
      var $ld$5035$1=(($7098+4)|0);
      var $7099$1=HEAP32[(($ld$5035$1)>>2)];
      var $7100$0=($7099$0 >>> 28) | ($7099$1 << 4);
      var $7100$1=($7099$1 >>> 28) | (0 << 4);
      var $7101=(($S+8)|0);
      var $ld$5036$0=(($7101)|0);
      var $7102$0=HEAP32[(($ld$5036$0)>>2)];
      var $ld$5037$1=(($7101+4)|0);
      var $7102$1=HEAP32[(($ld$5037$1)>>2)];
      var $7103$0=(0 << 4) | (0 >>> 28);
      var $7103$1=($7102$0 << 4) | (0 >>> 28);
      var $7104$0=$7100$0 | $7103$0;
      var $7104$1=$7100$1 | $7103$1;
      var $7105=(($S+8)|0);
      var $ld$5038$0=(($7105)|0);
      var $7106$0=HEAP32[(($ld$5038$0)>>2)];
      var $ld$5039$1=(($7105+4)|0);
      var $7106$1=HEAP32[(($ld$5039$1)>>2)];
      var $7107$0=($7106$1 >>> 2) | (0 << 30);
      var $7107$1=(0 >>> 2) | (0 << 30);
      var $7108=(($S+8)|0);
      var $ld$5040$0=(($7108)|0);
      var $7109$0=HEAP32[(($ld$5040$0)>>2)];
      var $ld$5041$1=(($7108+4)|0);
      var $7109$1=HEAP32[(($ld$5041$1)>>2)];
      var $7110$0=($7109$0 << 30) | (0 >>> 2);
      var $7110$1=($7109$1 << 30) | ($7109$0 >>> 2);
      var $7111$0=$7107$0 | $7110$0;
      var $7111$1=$7107$1 | $7110$1;
      var $7112$0=$7104$0 ^ $7111$0;
      var $7112$1=$7104$1 ^ $7111$1;
      var $7113=(($S+8)|0);
      var $ld$5042$0=(($7113)|0);
      var $7114$0=HEAP32[(($ld$5042$0)>>2)];
      var $ld$5043$1=(($7113+4)|0);
      var $7114$1=HEAP32[(($ld$5043$1)>>2)];
      var $7115$0=($7114$1 >>> 7) | (0 << 25);
      var $7115$1=(0 >>> 7) | (0 << 25);
      var $7116=(($S+8)|0);
      var $ld$5044$0=(($7116)|0);
      var $7117$0=HEAP32[(($ld$5044$0)>>2)];
      var $ld$5045$1=(($7116+4)|0);
      var $7117$1=HEAP32[(($ld$5045$1)>>2)];
      var $7118$0=($7117$0 << 25) | (0 >>> 7);
      var $7118$1=($7117$1 << 25) | ($7117$0 >>> 7);
      var $7119$0=$7115$0 | $7118$0;
      var $7119$1=$7115$1 | $7118$1;
      var $7120$0=$7112$0 ^ $7119$0;
      var $7120$1=$7112$1 ^ $7119$1;
      var $7121=(($S+8)|0);
      var $ld$5046$0=(($7121)|0);
      var $7122$0=HEAP32[(($ld$5046$0)>>2)];
      var $ld$5047$1=(($7121+4)|0);
      var $7122$1=HEAP32[(($ld$5047$1)>>2)];
      var $7123=(($S+16)|0);
      var $ld$5048$0=(($7123)|0);
      var $7124$0=HEAP32[(($ld$5048$0)>>2)];
      var $ld$5049$1=(($7123+4)|0);
      var $7124$1=HEAP32[(($ld$5049$1)>>2)];
      var $7125$0=$7122$0 | $7124$0;
      var $7125$1=$7122$1 | $7124$1;
      var $7126=(($S+24)|0);
      var $ld$5050$0=(($7126)|0);
      var $7127$0=HEAP32[(($ld$5050$0)>>2)];
      var $ld$5051$1=(($7126+4)|0);
      var $7127$1=HEAP32[(($ld$5051$1)>>2)];
      var $7128$0=$7125$0 & $7127$0;
      var $7128$1=$7125$1 & $7127$1;
      var $7129=(($S+8)|0);
      var $ld$5052$0=(($7129)|0);
      var $7130$0=HEAP32[(($ld$5052$0)>>2)];
      var $ld$5053$1=(($7129+4)|0);
      var $7130$1=HEAP32[(($ld$5053$1)>>2)];
      var $7131=(($S+16)|0);
      var $ld$5054$0=(($7131)|0);
      var $7132$0=HEAP32[(($ld$5054$0)>>2)];
      var $ld$5055$1=(($7131+4)|0);
      var $7132$1=HEAP32[(($ld$5055$1)>>2)];
      var $7133$0=$7130$0 & $7132$0;
      var $7133$1=$7130$1 & $7132$1;
      var $7134$0=$7128$0 | $7133$0;
      var $7134$1=$7128$1 | $7133$1;
      var $7135$0 = _i64Add($7120$0,$7120$1,$7134$0,$7134$1); var $7135$1 = tempRet0;
      var $st$5056$0=(($t1)|0);
      HEAP32[(($st$5056$0)>>2)]=$7135$0;
      var $st$5057$1=(($t1+4)|0);
      HEAP32[(($st$5057$1)>>2)]=$7135$1;
      var $ld$5058$0=(($t0)|0);
      var $7136$0=HEAP32[(($ld$5058$0)>>2)];
      var $ld$5059$1=(($t0+4)|0);
      var $7136$1=HEAP32[(($ld$5059$1)>>2)];
      var $7137=(($S+32)|0);
      var $ld$5060$0=(($7137)|0);
      var $7138$0=HEAP32[(($ld$5060$0)>>2)];
      var $ld$5061$1=(($7137+4)|0);
      var $7138$1=HEAP32[(($ld$5061$1)>>2)];
      var $7139$0 = _i64Add($7138$0,$7138$1,$7136$0,$7136$1); var $7139$1 = tempRet0;
      var $st$5062$0=(($7137)|0);
      HEAP32[(($st$5062$0)>>2)]=$7139$0;
      var $st$5063$1=(($7137+4)|0);
      HEAP32[(($st$5063$1)>>2)]=$7139$1;
      var $ld$5064$0=(($t0)|0);
      var $7140$0=HEAP32[(($ld$5064$0)>>2)];
      var $ld$5065$1=(($t0+4)|0);
      var $7140$1=HEAP32[(($ld$5065$1)>>2)];
      var $ld$5066$0=(($t1)|0);
      var $7141$0=HEAP32[(($ld$5066$0)>>2)];
      var $ld$5067$1=(($t1+4)|0);
      var $7141$1=HEAP32[(($ld$5067$1)>>2)];
      var $7142$0 = _i64Add($7140$0,$7140$1,$7141$0,$7141$1); var $7142$1 = tempRet0;
      var $7143=(($S)|0);
      var $st$5068$0=(($7143)|0);
      HEAP32[(($st$5068$0)>>2)]=$7142$0;
      var $st$5069$1=(($7143+4)|0);
      HEAP32[(($st$5069$1)>>2)]=$7142$1;
      $i=0;
      label = 10; break;
    case 10: 
      var $7145=$i;
      var $7146=(($7145)|(0)) < 8;
      if ($7146) { label = 11; break; } else { label = 13; break; }
    case 11: 
      var $7148=$i;
      var $7149=$1;
      var $7150=(($7149+8)|0);
      var $7151=(($7150+($7148<<3))|0);
      var $ld$5070$0=(($7151)|0);
      var $7152$0=HEAP32[(($ld$5070$0)>>2)];
      var $ld$5071$1=(($7151+4)|0);
      var $7152$1=HEAP32[(($ld$5071$1)>>2)];
      var $7153=$i;
      var $7154=(($S+($7153<<3))|0);
      var $ld$5072$0=(($7154)|0);
      var $7155$0=HEAP32[(($ld$5072$0)>>2)];
      var $ld$5073$1=(($7154+4)|0);
      var $7155$1=HEAP32[(($ld$5073$1)>>2)];
      var $7156$0 = _i64Add($7152$0,$7152$1,$7155$0,$7155$1); var $7156$1 = tempRet0;
      var $7157=$i;
      var $7158=$1;
      var $7159=(($7158+8)|0);
      var $7160=(($7159+($7157<<3))|0);
      var $st$5074$0=(($7160)|0);
      HEAP32[(($st$5074$0)>>2)]=$7156$0;
      var $st$5075$1=(($7160+4)|0);
      HEAP32[(($st$5075$1)>>2)]=$7156$1;
      label = 12; break;
    case 12: 
      var $7162=$i;
      var $7163=((($7162)+(1))|0);
      $i=$7163;
      label = 10; break;
    case 13: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _longReverse($buffer, $byteCount, $Endianness) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 8)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $value=__stackBase__;
      $1=$buffer;
      $2=$byteCount;
      $3=$Endianness;
      var $4=$3;
      var $5=(($4)|(0))==0;
      if ($5) { label = 2; break; } else { label = 3; break; }
    case 2: 
      label = 6; break;
    case 3: 
      var $8=$2;
      var $9=Math.floor(((($8)>>>(0)))/(8));
      $2=$9;
      label = 4; break;
    case 4: 
      var $11=$2;
      var $12=((($11)-(1))|0);
      $2=$12;
      var $13=(($11)|(0))!=0;
      if ($13) { label = 5; break; } else { label = 6; break; }
    case 5: 
      var $15=$1;
      var $ld$0$0=(($15)|0);
      var $16$0=HEAP32[(($ld$0$0)>>2)];
      var $ld$1$1=(($15+4)|0);
      var $16$1=HEAP32[(($ld$1$1)>>2)];
      var $st$2$0=(($value)|0);
      HEAP32[(($st$2$0)>>2)]=$16$0;
      var $st$3$1=(($value+4)|0);
      HEAP32[(($st$3$1)>>2)]=$16$1;
      var $ld$4$0=(($value)|0);
      var $17$0=HEAP32[(($ld$4$0)>>2)];
      var $ld$5$1=(($value+4)|0);
      var $17$1=HEAP32[(($ld$5$1)>>2)];
      var $18$0=($17$1 >>> 24) | (0 << 8);
      var $18$1=(0 >>> 24) | (0 << 8);
      var $19$0=$18$0;
      var $19=$19$0&255;
      var $20=(($19)&(255));
      var $21=$20 & 255;
      var $22=(($21) & 255);
      var $23=$1;
      var $24=$23;
      var $25=(($24)|0);
      HEAP8[($25)]=$22;
      var $ld$6$0=(($value)|0);
      var $26$0=HEAP32[(($ld$6$0)>>2)];
      var $ld$7$1=(($value+4)|0);
      var $26$1=HEAP32[(($ld$7$1)>>2)];
      var $27$0=($26$1 >>> 16) | (0 << 16);
      var $27$1=(0 >>> 16) | (0 << 16);
      var $28$0=$27$0;
      var $28=$28$0&255;
      var $29=(($28)&(255));
      var $30=$29 & 255;
      var $31=(($30) & 255);
      var $32=$1;
      var $33=$32;
      var $34=(($33+1)|0);
      HEAP8[($34)]=$31;
      var $ld$8$0=(($value)|0);
      var $35$0=HEAP32[(($ld$8$0)>>2)];
      var $ld$9$1=(($value+4)|0);
      var $35$1=HEAP32[(($ld$9$1)>>2)];
      var $36$0=($35$1 >>> 8) | (0 << 24);
      var $36$1=(0 >>> 8) | (0 << 24);
      var $37$0=$36$0;
      var $37=$37$0&255;
      var $38=(($37)&(255));
      var $39=$38 & 255;
      var $40=(($39) & 255);
      var $41=$1;
      var $42=$41;
      var $43=(($42+2)|0);
      HEAP8[($43)]=$40;
      var $ld$10$0=(($value)|0);
      var $44$0=HEAP32[(($ld$10$0)>>2)];
      var $ld$11$1=(($value+4)|0);
      var $44$1=HEAP32[(($ld$11$1)>>2)];
      var $45$0=$44$1;
      var $45$1=0;
      var $46$0=$45$0;
      var $46=$46$0&255;
      var $47=(($46)&(255));
      var $48=$47 & 255;
      var $49=(($48) & 255);
      var $50=$1;
      var $51=$50;
      var $52=(($51+3)|0);
      HEAP8[($52)]=$49;
      var $ld$12$0=(($value)|0);
      var $53$0=HEAP32[(($ld$12$0)>>2)];
      var $ld$13$1=(($value+4)|0);
      var $53$1=HEAP32[(($ld$13$1)>>2)];
      var $54$0=($53$0 >>> 24) | ($53$1 << 8);
      var $54$1=($53$1 >>> 24) | (0 << 8);
      var $55$0=$54$0;
      var $55=$55$0&255;
      var $56=(($55)&(255));
      var $57=$56 & 255;
      var $58=(($57) & 255);
      var $59=$1;
      var $60=$59;
      var $61=(($60+4)|0);
      HEAP8[($61)]=$58;
      var $ld$14$0=(($value)|0);
      var $62$0=HEAP32[(($ld$14$0)>>2)];
      var $ld$15$1=(($value+4)|0);
      var $62$1=HEAP32[(($ld$15$1)>>2)];
      var $63$0=($62$0 >>> 16) | ($62$1 << 16);
      var $63$1=($62$1 >>> 16) | (0 << 16);
      var $64$0=$63$0;
      var $64=$64$0&255;
      var $65=(($64)&(255));
      var $66=$65 & 255;
      var $67=(($66) & 255);
      var $68=$1;
      var $69=$68;
      var $70=(($69+5)|0);
      HEAP8[($70)]=$67;
      var $ld$16$0=(($value)|0);
      var $71$0=HEAP32[(($ld$16$0)>>2)];
      var $ld$17$1=(($value+4)|0);
      var $71$1=HEAP32[(($ld$17$1)>>2)];
      var $72$0=($71$0 >>> 8) | ($71$1 << 24);
      var $72$1=($71$1 >>> 8) | (0 << 24);
      var $73$0=$72$0;
      var $73=$73$0&255;
      var $74=(($73)&(255));
      var $75=$74 & 255;
      var $76=(($75) & 255);
      var $77=$1;
      var $78=$77;
      var $79=(($78+6)|0);
      HEAP8[($79)]=$76;
      var $ld$18$0=(($value)|0);
      var $80$0=HEAP32[(($ld$18$0)>>2)];
      var $ld$19$1=(($value+4)|0);
      var $80$1=HEAP32[(($ld$19$1)>>2)];
      var $81$0=$80$0;
      var $81=$81$0&255;
      var $82=(($81)&(255));
      var $83=$82 & 255;
      var $84=(($83) & 255);
      var $85=$1;
      var $86=$85;
      var $87=(($86+7)|0);
      HEAP8[($87)]=$84;
      var $88=$1;
      var $89=(($88+8)|0);
      $1=$89;
      label = 4; break;
    case 6: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _sha512_init($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 4)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i=__stackBase__;
      $1=$sha_info;
      HEAP32[(($i)>>2)]=1;
      var $2=$1;
      var $3=(($2+208)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=$i;
      var $5=HEAP8[($4)];
      var $6=(($5 << 24) >> 24);
      var $7=(($6)|(0))==1;
      if ($7) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $9=$1;
      var $10=(($9+208)|0);
      HEAP32[(($10)>>2)]=1;
      label = 3; break;
    case 3: 
      var $12=$1;
      var $13=(($12+8)|0);
      var $14=(($13)|0);
      var $$etemp$0$0=-205731576;
      var $$etemp$0$1=1779033703;
      var $st$1$0=(($14)|0);
      HEAP32[(($st$1$0)>>2)]=$$etemp$0$0;
      var $st$2$1=(($14+4)|0);
      HEAP32[(($st$2$1)>>2)]=$$etemp$0$1;
      var $15=$1;
      var $16=(($15+8)|0);
      var $17=(($16+8)|0);
      var $$etemp$3$0=-2067093701;
      var $$etemp$3$1=-1150833019;
      var $st$4$0=(($17)|0);
      HEAP32[(($st$4$0)>>2)]=$$etemp$3$0;
      var $st$5$1=(($17+4)|0);
      HEAP32[(($st$5$1)>>2)]=$$etemp$3$1;
      var $18=$1;
      var $19=(($18+8)|0);
      var $20=(($19+16)|0);
      var $$etemp$6$0=-23791573;
      var $$etemp$6$1=1013904242;
      var $st$7$0=(($20)|0);
      HEAP32[(($st$7$0)>>2)]=$$etemp$6$0;
      var $st$8$1=(($20+4)|0);
      HEAP32[(($st$8$1)>>2)]=$$etemp$6$1;
      var $21=$1;
      var $22=(($21+8)|0);
      var $23=(($22+24)|0);
      var $$etemp$9$0=1595750129;
      var $$etemp$9$1=-1521486534;
      var $st$10$0=(($23)|0);
      HEAP32[(($st$10$0)>>2)]=$$etemp$9$0;
      var $st$11$1=(($23+4)|0);
      HEAP32[(($st$11$1)>>2)]=$$etemp$9$1;
      var $24=$1;
      var $25=(($24+8)|0);
      var $26=(($25+32)|0);
      var $$etemp$12$0=-1377402159;
      var $$etemp$12$1=1359893119;
      var $st$13$0=(($26)|0);
      HEAP32[(($st$13$0)>>2)]=$$etemp$12$0;
      var $st$14$1=(($26+4)|0);
      HEAP32[(($st$14$1)>>2)]=$$etemp$12$1;
      var $27=$1;
      var $28=(($27+8)|0);
      var $29=(($28+40)|0);
      var $$etemp$15$0=725511199;
      var $$etemp$15$1=-1694144372;
      var $st$16$0=(($29)|0);
      HEAP32[(($st$16$0)>>2)]=$$etemp$15$0;
      var $st$17$1=(($29+4)|0);
      HEAP32[(($st$17$1)>>2)]=$$etemp$15$1;
      var $30=$1;
      var $31=(($30+8)|0);
      var $32=(($31+48)|0);
      var $$etemp$18$0=-79577749;
      var $$etemp$18$1=528734635;
      var $st$19$0=(($32)|0);
      HEAP32[(($st$19$0)>>2)]=$$etemp$18$0;
      var $st$20$1=(($32+4)|0);
      HEAP32[(($st$20$1)>>2)]=$$etemp$18$1;
      var $33=$1;
      var $34=(($33+8)|0);
      var $35=(($34+56)|0);
      var $$etemp$21$0=327033209;
      var $$etemp$21$1=1541459225;
      var $st$22$0=(($35)|0);
      HEAP32[(($st$22$0)>>2)]=$$etemp$21$0;
      var $st$23$1=(($35+4)|0);
      HEAP32[(($st$23$1)>>2)]=$$etemp$21$1;
      var $36=$1;
      var $37=(($36+72)|0);
      HEAP32[(($37)>>2)]=0;
      var $38=$1;
      var $39=(($38+76)|0);
      HEAP32[(($39)>>2)]=0;
      var $40=$1;
      var $41=(($40+212)|0);
      HEAP32[(($41)>>2)]=0;
      var $42=$1;
      var $43=(($42+216)|0);
      HEAP32[(($43)>>2)]=64;
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _newSHA512object() {
  var label = 0;
  var $1=__PyObject_New(_SHA512type);
  var $2=$1;
  return $2;
}
function _SHA512_dealloc($ptr) {
  var label = 0;
  var $1;
  $1=$ptr;
  var $2=$1;
  var $3=$2;
  _PyObject_Free($3);
  return;
}
function _SHA512_get_block_size($self, $closure) {
  var label = 0;
  var $1;
  var $2;
  $1=$self;
  $2=$closure;
  var $3=_PyInt_FromLong(128);
  return $3;
}
function _SHA512_get_name($self, $closure) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      $2=$self;
      $3=$closure;
      var $4=$2;
      var $5=$4;
      var $6=(($5+216)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|(0))==64;
      if ($8) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $10=_PyString_FromStringAndSize(((__str8)|0), 6);
      $1=$10;
      label = 4; break;
    case 3: 
      var $12=_PyString_FromStringAndSize(((__str9)|0), 6);
      $1=$12;
      label = 4; break;
    case 4: 
      var $14=$1;
      return $14;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA512_copy($self, $unused) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $newobj;
      $2=$self;
      $3=$unused;
      var $4=$2;
      var $5=$4;
      var $6=(($5+4)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|(0))==((_SHA512type)|(0));
      if ($8) { label = 2; break; } else { label = 5; break; }
    case 2: 
      var $10=_newSHA512object();
      $newobj=$10;
      var $11=(($10)|(0))==0;
      if ($11) { label = 3; break; } else { label = 4; break; }
    case 3: 
      $1=0;
      label = 9; break;
    case 4: 
      label = 8; break;
    case 5: 
      var $15=_newSHA384object();
      $newobj=$15;
      var $16=(($15)|(0))==0;
      if ($16) { label = 6; break; } else { label = 7; break; }
    case 6: 
      $1=0;
      label = 9; break;
    case 7: 
      label = 8; break;
    case 8: 
      var $20=$2;
      var $21=$newobj;
      _SHAcopy($20, $21);
      var $22=$newobj;
      var $23=$22;
      $1=$23;
      label = 9; break;
    case 9: 
      var $25=$1;
      return $25;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA512_digest($self, $unused) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 284)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  var $1;
  var $2;
  var $digest=__stackBase__;
  var $temp=(__stackBase__)+(64);
  $1=$self;
  $2=$unused;
  var $3=$1;
  _SHAcopy($3, $temp);
  var $4=(($digest)|0);
  _sha512_final($4, $temp);
  var $5=(($digest)|0);
  var $6=$1;
  var $7=(($6+216)|0);
  var $8=HEAP32[(($7)>>2)];
  var $9=_PyString_FromStringAndSize($5, $8);
  STACKTOP = __stackBase__;
  return $9;
}
function _SHA512_hexdigest($self, $unused) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 284)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $digest=__stackBase__;
      var $temp=(__stackBase__)+(64);
      var $retval;
      var $hex_digest;
      var $i;
      var $j;
      var $c;
      $2=$self;
      $3=$unused;
      var $4=$2;
      _SHAcopy($4, $temp);
      var $5=(($digest)|0);
      _sha512_final($5, $temp);
      var $6=$2;
      var $7=(($6+216)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=($8<<1);
      var $10=_PyString_FromStringAndSize(0, $9);
      $retval=$10;
      var $11=$retval;
      var $12=(($11)|(0))!=0;
      if ($12) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 21; break;
    case 3: 
      var $15=$retval;
      var $16=_PyString_AsString($15);
      $hex_digest=$16;
      var $17=$hex_digest;
      var $18=(($17)|(0))!=0;
      if ($18) { label = 10; break; } else { label = 4; break; }
    case 4: 
      label = 5; break;
    case 5: 
      var $21=$retval;
      var $22=(($21)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=((($23)-(1))|0);
      HEAP32[(($22)>>2)]=$24;
      var $25=(($24)|(0))!=0;
      if ($25) { label = 6; break; } else { label = 7; break; }
    case 6: 
      label = 8; break;
    case 7: 
      var $28=$retval;
      var $29=(($28+4)|0);
      var $30=HEAP32[(($29)>>2)];
      var $31=(($30+24)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=$retval;
      FUNCTION_TABLE[$32]($33);
      label = 8; break;
    case 8: 
      label = 9; break;
    case 9: 
      $1=0;
      label = 21; break;
    case 10: 
      $j=0;
      $i=0;
      label = 11; break;
    case 11: 
      var $38=$i;
      var $39=$2;
      var $40=(($39+216)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($38)|(0)) < (($41)|(0));
      if ($42) { label = 12; break; } else { label = 20; break; }
    case 12: 
      var $44=$i;
      var $45=(($digest+$44)|0);
      var $46=HEAP8[($45)];
      var $47=(($46)&(255));
      var $48=$47 >> 4;
      var $49=$48 & 15;
      var $50=(($49) & 255);
      $c=$50;
      var $51=$c;
      var $52=(($51 << 24) >> 24);
      var $53=(($52)|(0)) > 9;
      if ($53) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $55=$c;
      var $56=(($55 << 24) >> 24);
      var $57=((($56)+(97))|0);
      var $58=((($57)-(10))|0);
      var $64 = $58;label = 15; break;
    case 14: 
      var $60=$c;
      var $61=(($60 << 24) >> 24);
      var $62=((($61)+(48))|0);
      var $64 = $62;label = 15; break;
    case 15: 
      var $64;
      var $65=(($64) & 255);
      $c=$65;
      var $66=$c;
      var $67=$j;
      var $68=((($67)+(1))|0);
      $j=$68;
      var $69=$hex_digest;
      var $70=(($69+$67)|0);
      HEAP8[($70)]=$66;
      var $71=$i;
      var $72=(($digest+$71)|0);
      var $73=HEAP8[($72)];
      var $74=(($73)&(255));
      var $75=$74 & 15;
      var $76=(($75) & 255);
      $c=$76;
      var $77=$c;
      var $78=(($77 << 24) >> 24);
      var $79=(($78)|(0)) > 9;
      if ($79) { label = 16; break; } else { label = 17; break; }
    case 16: 
      var $81=$c;
      var $82=(($81 << 24) >> 24);
      var $83=((($82)+(97))|0);
      var $84=((($83)-(10))|0);
      var $90 = $84;label = 18; break;
    case 17: 
      var $86=$c;
      var $87=(($86 << 24) >> 24);
      var $88=((($87)+(48))|0);
      var $90 = $88;label = 18; break;
    case 18: 
      var $90;
      var $91=(($90) & 255);
      $c=$91;
      var $92=$c;
      var $93=$j;
      var $94=((($93)+(1))|0);
      $j=$94;
      var $95=$hex_digest;
      var $96=(($95+$93)|0);
      HEAP8[($96)]=$92;
      label = 19; break;
    case 19: 
      var $98=$i;
      var $99=((($98)+(1))|0);
      $i=$99;
      label = 11; break;
    case 20: 
      var $101=$retval;
      $1=$101;
      label = 21; break;
    case 21: 
      var $103=$1;
      STACKTOP = __stackBase__;
      return $103;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA512_update($self, $args) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      var $4=$3;
      var $5=_PyArg_ParseTuple($4, ((__str16)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $6=(($5)|(0))!=0;
      if ($6) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 4; break;
    case 3: 
      var $9=$2;
      var $10=(($buf)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=(($buf+8)|0);
      var $13=HEAP32[(($12)>>2)];
      _sha512_update($9, $11, $13);
      _PyBuffer_Release($buf);
      var $14=HEAP32[((((__Py_NoneStruct)|0))>>2)];
      var $15=((($14)+(1))|0);
      HEAP32[((((__Py_NoneStruct)|0))>>2)]=$15;
      $1=__Py_NoneStruct;
      label = 4; break;
    case 4: 
      var $17=$1;
      STACKTOP = __stackBase__;
      return $17;
    default: assert(0, "bad label: " + label);
  }
}
function _SHAcopy($src, $dest) {
  var label = 0;
  var $1;
  var $2;
  $1=$src;
  $2=$dest;
  var $3=$1;
  var $4=(($3+208)|0);
  var $5=HEAP32[(($4)>>2)];
  var $6=$2;
  var $7=(($6+208)|0);
  HEAP32[(($7)>>2)]=$5;
  var $8=$1;
  var $9=(($8+212)|0);
  var $10=HEAP32[(($9)>>2)];
  var $11=$2;
  var $12=(($11+212)|0);
  HEAP32[(($12)>>2)]=$10;
  var $13=$1;
  var $14=(($13+216)|0);
  var $15=HEAP32[(($14)>>2)];
  var $16=$2;
  var $17=(($16+216)|0);
  HEAP32[(($17)>>2)]=$15;
  var $18=$1;
  var $19=(($18+72)|0);
  var $20=HEAP32[(($19)>>2)];
  var $21=$2;
  var $22=(($21+72)|0);
  HEAP32[(($22)>>2)]=$20;
  var $23=$1;
  var $24=(($23+76)|0);
  var $25=HEAP32[(($24)>>2)];
  var $26=$2;
  var $27=(($26+76)|0);
  HEAP32[(($27)>>2)]=$25;
  var $28=$2;
  var $29=(($28+8)|0);
  var $30=$29;
  var $31=$1;
  var $32=(($31+8)|0);
  var $33=$32;
  assert(64 % 1 === 0);_memcpy($30, $33, 64);
  var $34=$2;
  var $35=(($34+80)|0);
  var $36=$35;
  var $37=$1;
  var $38=(($37+80)|0);
  var $39=$38;
  assert(128 % 1 === 0);_memcpy($36, $39, 128);
  return;
}
function _sha512_final($digest, $sha_info) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $count;
      var $lo_bit_count;
      var $hi_bit_count;
      $1=$digest;
      $2=$sha_info;
      var $3=$2;
      var $4=(($3+72)|0);
      var $5=HEAP32[(($4)>>2)];
      $lo_bit_count=$5;
      var $6=$2;
      var $7=(($6+76)|0);
      var $8=HEAP32[(($7)>>2)];
      $hi_bit_count=$8;
      var $9=$lo_bit_count;
      var $10=$9 >>> 3;
      var $11=$10 & 127;
      $count=$11;
      var $12=$count;
      var $13=((($12)+(1))|0);
      $count=$13;
      var $14=$2;
      var $15=(($14+80)|0);
      var $16=(($15)|0);
      var $17=(($16+$12)|0);
      HEAP8[($17)]=-128;
      var $18=$count;
      var $19=(($18)|(0)) > 112;
      if ($19) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $21=$2;
      var $22=(($21+80)|0);
      var $23=(($22)|0);
      var $24=$count;
      var $25=(($23+$24)|0);
      var $26=$count;
      var $27=(((128)-($26))|0);
      _memset($25, 0, $27);
      var $28=$2;
      _sha512_transform($28);
      var $29=$2;
      var $30=(($29+80)|0);
      var $31=(($30)|0);
      _memset($31, 0, 112);
      label = 4; break;
    case 3: 
      var $33=$2;
      var $34=(($33+80)|0);
      var $35=(($34)|0);
      var $36=$count;
      var $37=(($35+$36)|0);
      var $38=$count;
      var $39=(((112)-($38))|0);
      _memset($37, 0, $39);
      label = 4; break;
    case 4: 
      var $41=$2;
      var $42=(($41+80)|0);
      var $43=(($42+112)|0);
      HEAP8[($43)]=0;
      var $44=$2;
      var $45=(($44+80)|0);
      var $46=(($45+113)|0);
      HEAP8[($46)]=0;
      var $47=$2;
      var $48=(($47+80)|0);
      var $49=(($48+114)|0);
      HEAP8[($49)]=0;
      var $50=$2;
      var $51=(($50+80)|0);
      var $52=(($51+115)|0);
      HEAP8[($52)]=0;
      var $53=$2;
      var $54=(($53+80)|0);
      var $55=(($54+116)|0);
      HEAP8[($55)]=0;
      var $56=$2;
      var $57=(($56+80)|0);
      var $58=(($57+117)|0);
      HEAP8[($58)]=0;
      var $59=$2;
      var $60=(($59+80)|0);
      var $61=(($60+118)|0);
      HEAP8[($61)]=0;
      var $62=$2;
      var $63=(($62+80)|0);
      var $64=(($63+119)|0);
      HEAP8[($64)]=0;
      var $65=$hi_bit_count;
      var $66=$65 >>> 24;
      var $67=$66 & 255;
      var $68=(($67) & 255);
      var $69=$2;
      var $70=(($69+80)|0);
      var $71=(($70+120)|0);
      HEAP8[($71)]=$68;
      var $72=$hi_bit_count;
      var $73=$72 >>> 16;
      var $74=$73 & 255;
      var $75=(($74) & 255);
      var $76=$2;
      var $77=(($76+80)|0);
      var $78=(($77+121)|0);
      HEAP8[($78)]=$75;
      var $79=$hi_bit_count;
      var $80=$79 >>> 8;
      var $81=$80 & 255;
      var $82=(($81) & 255);
      var $83=$2;
      var $84=(($83+80)|0);
      var $85=(($84+122)|0);
      HEAP8[($85)]=$82;
      var $86=$hi_bit_count;
      var $87=$86 >>> 0;
      var $88=$87 & 255;
      var $89=(($88) & 255);
      var $90=$2;
      var $91=(($90+80)|0);
      var $92=(($91+123)|0);
      HEAP8[($92)]=$89;
      var $93=$lo_bit_count;
      var $94=$93 >>> 24;
      var $95=$94 & 255;
      var $96=(($95) & 255);
      var $97=$2;
      var $98=(($97+80)|0);
      var $99=(($98+124)|0);
      HEAP8[($99)]=$96;
      var $100=$lo_bit_count;
      var $101=$100 >>> 16;
      var $102=$101 & 255;
      var $103=(($102) & 255);
      var $104=$2;
      var $105=(($104+80)|0);
      var $106=(($105+125)|0);
      HEAP8[($106)]=$103;
      var $107=$lo_bit_count;
      var $108=$107 >>> 8;
      var $109=$108 & 255;
      var $110=(($109) & 255);
      var $111=$2;
      var $112=(($111+80)|0);
      var $113=(($112+126)|0);
      HEAP8[($113)]=$110;
      var $114=$lo_bit_count;
      var $115=$114 >>> 0;
      var $116=$115 & 255;
      var $117=(($116) & 255);
      var $118=$2;
      var $119=(($118+80)|0);
      var $120=(($119+127)|0);
      HEAP8[($120)]=$117;
      var $121=$2;
      _sha512_transform($121);
      var $122=$2;
      var $123=(($122+8)|0);
      var $124=(($123)|0);
      var $ld$0$0=(($124)|0);
      var $125$0=HEAP32[(($ld$0$0)>>2)];
      var $ld$1$1=(($124+4)|0);
      var $125$1=HEAP32[(($ld$1$1)>>2)];
      var $126$0=($125$1 >>> 24) | (0 << 8);
      var $126$1=(0 >>> 24) | (0 << 8);
      var $$etemp$2$0=255;
      var $$etemp$2$1=0;
      var $127$0=$126$0 & $$etemp$2$0;
      var $127$1=$126$1 & $$etemp$2$1;
      var $128$0=$127$0;
      var $128=$128$0&255;
      var $129=$1;
      var $130=(($129)|0);
      HEAP8[($130)]=$128;
      var $131=$2;
      var $132=(($131+8)|0);
      var $133=(($132)|0);
      var $ld$3$0=(($133)|0);
      var $134$0=HEAP32[(($ld$3$0)>>2)];
      var $ld$4$1=(($133+4)|0);
      var $134$1=HEAP32[(($ld$4$1)>>2)];
      var $135$0=($134$1 >>> 16) | (0 << 16);
      var $135$1=(0 >>> 16) | (0 << 16);
      var $$etemp$5$0=255;
      var $$etemp$5$1=0;
      var $136$0=$135$0 & $$etemp$5$0;
      var $136$1=$135$1 & $$etemp$5$1;
      var $137$0=$136$0;
      var $137=$137$0&255;
      var $138=$1;
      var $139=(($138+1)|0);
      HEAP8[($139)]=$137;
      var $140=$2;
      var $141=(($140+8)|0);
      var $142=(($141)|0);
      var $ld$6$0=(($142)|0);
      var $143$0=HEAP32[(($ld$6$0)>>2)];
      var $ld$7$1=(($142+4)|0);
      var $143$1=HEAP32[(($ld$7$1)>>2)];
      var $144$0=($143$1 >>> 8) | (0 << 24);
      var $144$1=(0 >>> 8) | (0 << 24);
      var $$etemp$8$0=255;
      var $$etemp$8$1=0;
      var $145$0=$144$0 & $$etemp$8$0;
      var $145$1=$144$1 & $$etemp$8$1;
      var $146$0=$145$0;
      var $146=$146$0&255;
      var $147=$1;
      var $148=(($147+2)|0);
      HEAP8[($148)]=$146;
      var $149=$2;
      var $150=(($149+8)|0);
      var $151=(($150)|0);
      var $ld$9$0=(($151)|0);
      var $152$0=HEAP32[(($ld$9$0)>>2)];
      var $ld$10$1=(($151+4)|0);
      var $152$1=HEAP32[(($ld$10$1)>>2)];
      var $153$0=$152$1;
      var $153$1=0;
      var $$etemp$11$0=255;
      var $$etemp$11$1=0;
      var $154$0=$153$0 & $$etemp$11$0;
      var $154$1=$153$1 & $$etemp$11$1;
      var $155$0=$154$0;
      var $155=$155$0&255;
      var $156=$1;
      var $157=(($156+3)|0);
      HEAP8[($157)]=$155;
      var $158=$2;
      var $159=(($158+8)|0);
      var $160=(($159)|0);
      var $ld$12$0=(($160)|0);
      var $161$0=HEAP32[(($ld$12$0)>>2)];
      var $ld$13$1=(($160+4)|0);
      var $161$1=HEAP32[(($ld$13$1)>>2)];
      var $162$0=($161$0 >>> 24) | ($161$1 << 8);
      var $162$1=($161$1 >>> 24) | (0 << 8);
      var $$etemp$14$0=255;
      var $$etemp$14$1=0;
      var $163$0=$162$0 & $$etemp$14$0;
      var $163$1=$162$1 & $$etemp$14$1;
      var $164$0=$163$0;
      var $164=$164$0&255;
      var $165=$1;
      var $166=(($165+4)|0);
      HEAP8[($166)]=$164;
      var $167=$2;
      var $168=(($167+8)|0);
      var $169=(($168)|0);
      var $ld$15$0=(($169)|0);
      var $170$0=HEAP32[(($ld$15$0)>>2)];
      var $ld$16$1=(($169+4)|0);
      var $170$1=HEAP32[(($ld$16$1)>>2)];
      var $171$0=($170$0 >>> 16) | ($170$1 << 16);
      var $171$1=($170$1 >>> 16) | (0 << 16);
      var $$etemp$17$0=255;
      var $$etemp$17$1=0;
      var $172$0=$171$0 & $$etemp$17$0;
      var $172$1=$171$1 & $$etemp$17$1;
      var $173$0=$172$0;
      var $173=$173$0&255;
      var $174=$1;
      var $175=(($174+5)|0);
      HEAP8[($175)]=$173;
      var $176=$2;
      var $177=(($176+8)|0);
      var $178=(($177)|0);
      var $ld$18$0=(($178)|0);
      var $179$0=HEAP32[(($ld$18$0)>>2)];
      var $ld$19$1=(($178+4)|0);
      var $179$1=HEAP32[(($ld$19$1)>>2)];
      var $180$0=($179$0 >>> 8) | ($179$1 << 24);
      var $180$1=($179$1 >>> 8) | (0 << 24);
      var $$etemp$20$0=255;
      var $$etemp$20$1=0;
      var $181$0=$180$0 & $$etemp$20$0;
      var $181$1=$180$1 & $$etemp$20$1;
      var $182$0=$181$0;
      var $182=$182$0&255;
      var $183=$1;
      var $184=(($183+6)|0);
      HEAP8[($184)]=$182;
      var $185=$2;
      var $186=(($185+8)|0);
      var $187=(($186)|0);
      var $ld$21$0=(($187)|0);
      var $188$0=HEAP32[(($ld$21$0)>>2)];
      var $ld$22$1=(($187+4)|0);
      var $188$1=HEAP32[(($ld$22$1)>>2)];
      var $$etemp$23$0=255;
      var $$etemp$23$1=0;
      var $189$0=$188$0 & $$etemp$23$0;
      var $189$1=$188$1 & $$etemp$23$1;
      var $190$0=$189$0;
      var $190=$190$0&255;
      var $191=$1;
      var $192=(($191+7)|0);
      HEAP8[($192)]=$190;
      var $193=$2;
      var $194=(($193+8)|0);
      var $195=(($194+8)|0);
      var $ld$24$0=(($195)|0);
      var $196$0=HEAP32[(($ld$24$0)>>2)];
      var $ld$25$1=(($195+4)|0);
      var $196$1=HEAP32[(($ld$25$1)>>2)];
      var $197$0=($196$1 >>> 24) | (0 << 8);
      var $197$1=(0 >>> 24) | (0 << 8);
      var $$etemp$26$0=255;
      var $$etemp$26$1=0;
      var $198$0=$197$0 & $$etemp$26$0;
      var $198$1=$197$1 & $$etemp$26$1;
      var $199$0=$198$0;
      var $199=$199$0&255;
      var $200=$1;
      var $201=(($200+8)|0);
      HEAP8[($201)]=$199;
      var $202=$2;
      var $203=(($202+8)|0);
      var $204=(($203+8)|0);
      var $ld$27$0=(($204)|0);
      var $205$0=HEAP32[(($ld$27$0)>>2)];
      var $ld$28$1=(($204+4)|0);
      var $205$1=HEAP32[(($ld$28$1)>>2)];
      var $206$0=($205$1 >>> 16) | (0 << 16);
      var $206$1=(0 >>> 16) | (0 << 16);
      var $$etemp$29$0=255;
      var $$etemp$29$1=0;
      var $207$0=$206$0 & $$etemp$29$0;
      var $207$1=$206$1 & $$etemp$29$1;
      var $208$0=$207$0;
      var $208=$208$0&255;
      var $209=$1;
      var $210=(($209+9)|0);
      HEAP8[($210)]=$208;
      var $211=$2;
      var $212=(($211+8)|0);
      var $213=(($212+8)|0);
      var $ld$30$0=(($213)|0);
      var $214$0=HEAP32[(($ld$30$0)>>2)];
      var $ld$31$1=(($213+4)|0);
      var $214$1=HEAP32[(($ld$31$1)>>2)];
      var $215$0=($214$1 >>> 8) | (0 << 24);
      var $215$1=(0 >>> 8) | (0 << 24);
      var $$etemp$32$0=255;
      var $$etemp$32$1=0;
      var $216$0=$215$0 & $$etemp$32$0;
      var $216$1=$215$1 & $$etemp$32$1;
      var $217$0=$216$0;
      var $217=$217$0&255;
      var $218=$1;
      var $219=(($218+10)|0);
      HEAP8[($219)]=$217;
      var $220=$2;
      var $221=(($220+8)|0);
      var $222=(($221+8)|0);
      var $ld$33$0=(($222)|0);
      var $223$0=HEAP32[(($ld$33$0)>>2)];
      var $ld$34$1=(($222+4)|0);
      var $223$1=HEAP32[(($ld$34$1)>>2)];
      var $224$0=$223$1;
      var $224$1=0;
      var $$etemp$35$0=255;
      var $$etemp$35$1=0;
      var $225$0=$224$0 & $$etemp$35$0;
      var $225$1=$224$1 & $$etemp$35$1;
      var $226$0=$225$0;
      var $226=$226$0&255;
      var $227=$1;
      var $228=(($227+11)|0);
      HEAP8[($228)]=$226;
      var $229=$2;
      var $230=(($229+8)|0);
      var $231=(($230+8)|0);
      var $ld$36$0=(($231)|0);
      var $232$0=HEAP32[(($ld$36$0)>>2)];
      var $ld$37$1=(($231+4)|0);
      var $232$1=HEAP32[(($ld$37$1)>>2)];
      var $233$0=($232$0 >>> 24) | ($232$1 << 8);
      var $233$1=($232$1 >>> 24) | (0 << 8);
      var $$etemp$38$0=255;
      var $$etemp$38$1=0;
      var $234$0=$233$0 & $$etemp$38$0;
      var $234$1=$233$1 & $$etemp$38$1;
      var $235$0=$234$0;
      var $235=$235$0&255;
      var $236=$1;
      var $237=(($236+12)|0);
      HEAP8[($237)]=$235;
      var $238=$2;
      var $239=(($238+8)|0);
      var $240=(($239+8)|0);
      var $ld$39$0=(($240)|0);
      var $241$0=HEAP32[(($ld$39$0)>>2)];
      var $ld$40$1=(($240+4)|0);
      var $241$1=HEAP32[(($ld$40$1)>>2)];
      var $242$0=($241$0 >>> 16) | ($241$1 << 16);
      var $242$1=($241$1 >>> 16) | (0 << 16);
      var $$etemp$41$0=255;
      var $$etemp$41$1=0;
      var $243$0=$242$0 & $$etemp$41$0;
      var $243$1=$242$1 & $$etemp$41$1;
      var $244$0=$243$0;
      var $244=$244$0&255;
      var $245=$1;
      var $246=(($245+13)|0);
      HEAP8[($246)]=$244;
      var $247=$2;
      var $248=(($247+8)|0);
      var $249=(($248+8)|0);
      var $ld$42$0=(($249)|0);
      var $250$0=HEAP32[(($ld$42$0)>>2)];
      var $ld$43$1=(($249+4)|0);
      var $250$1=HEAP32[(($ld$43$1)>>2)];
      var $251$0=($250$0 >>> 8) | ($250$1 << 24);
      var $251$1=($250$1 >>> 8) | (0 << 24);
      var $$etemp$44$0=255;
      var $$etemp$44$1=0;
      var $252$0=$251$0 & $$etemp$44$0;
      var $252$1=$251$1 & $$etemp$44$1;
      var $253$0=$252$0;
      var $253=$253$0&255;
      var $254=$1;
      var $255=(($254+14)|0);
      HEAP8[($255)]=$253;
      var $256=$2;
      var $257=(($256+8)|0);
      var $258=(($257+8)|0);
      var $ld$45$0=(($258)|0);
      var $259$0=HEAP32[(($ld$45$0)>>2)];
      var $ld$46$1=(($258+4)|0);
      var $259$1=HEAP32[(($ld$46$1)>>2)];
      var $$etemp$47$0=255;
      var $$etemp$47$1=0;
      var $260$0=$259$0 & $$etemp$47$0;
      var $260$1=$259$1 & $$etemp$47$1;
      var $261$0=$260$0;
      var $261=$261$0&255;
      var $262=$1;
      var $263=(($262+15)|0);
      HEAP8[($263)]=$261;
      var $264=$2;
      var $265=(($264+8)|0);
      var $266=(($265+16)|0);
      var $ld$48$0=(($266)|0);
      var $267$0=HEAP32[(($ld$48$0)>>2)];
      var $ld$49$1=(($266+4)|0);
      var $267$1=HEAP32[(($ld$49$1)>>2)];
      var $268$0=($267$1 >>> 24) | (0 << 8);
      var $268$1=(0 >>> 24) | (0 << 8);
      var $$etemp$50$0=255;
      var $$etemp$50$1=0;
      var $269$0=$268$0 & $$etemp$50$0;
      var $269$1=$268$1 & $$etemp$50$1;
      var $270$0=$269$0;
      var $270=$270$0&255;
      var $271=$1;
      var $272=(($271+16)|0);
      HEAP8[($272)]=$270;
      var $273=$2;
      var $274=(($273+8)|0);
      var $275=(($274+16)|0);
      var $ld$51$0=(($275)|0);
      var $276$0=HEAP32[(($ld$51$0)>>2)];
      var $ld$52$1=(($275+4)|0);
      var $276$1=HEAP32[(($ld$52$1)>>2)];
      var $277$0=($276$1 >>> 16) | (0 << 16);
      var $277$1=(0 >>> 16) | (0 << 16);
      var $$etemp$53$0=255;
      var $$etemp$53$1=0;
      var $278$0=$277$0 & $$etemp$53$0;
      var $278$1=$277$1 & $$etemp$53$1;
      var $279$0=$278$0;
      var $279=$279$0&255;
      var $280=$1;
      var $281=(($280+17)|0);
      HEAP8[($281)]=$279;
      var $282=$2;
      var $283=(($282+8)|0);
      var $284=(($283+16)|0);
      var $ld$54$0=(($284)|0);
      var $285$0=HEAP32[(($ld$54$0)>>2)];
      var $ld$55$1=(($284+4)|0);
      var $285$1=HEAP32[(($ld$55$1)>>2)];
      var $286$0=($285$1 >>> 8) | (0 << 24);
      var $286$1=(0 >>> 8) | (0 << 24);
      var $$etemp$56$0=255;
      var $$etemp$56$1=0;
      var $287$0=$286$0 & $$etemp$56$0;
      var $287$1=$286$1 & $$etemp$56$1;
      var $288$0=$287$0;
      var $288=$288$0&255;
      var $289=$1;
      var $290=(($289+18)|0);
      HEAP8[($290)]=$288;
      var $291=$2;
      var $292=(($291+8)|0);
      var $293=(($292+16)|0);
      var $ld$57$0=(($293)|0);
      var $294$0=HEAP32[(($ld$57$0)>>2)];
      var $ld$58$1=(($293+4)|0);
      var $294$1=HEAP32[(($ld$58$1)>>2)];
      var $295$0=$294$1;
      var $295$1=0;
      var $$etemp$59$0=255;
      var $$etemp$59$1=0;
      var $296$0=$295$0 & $$etemp$59$0;
      var $296$1=$295$1 & $$etemp$59$1;
      var $297$0=$296$0;
      var $297=$297$0&255;
      var $298=$1;
      var $299=(($298+19)|0);
      HEAP8[($299)]=$297;
      var $300=$2;
      var $301=(($300+8)|0);
      var $302=(($301+16)|0);
      var $ld$60$0=(($302)|0);
      var $303$0=HEAP32[(($ld$60$0)>>2)];
      var $ld$61$1=(($302+4)|0);
      var $303$1=HEAP32[(($ld$61$1)>>2)];
      var $304$0=($303$0 >>> 24) | ($303$1 << 8);
      var $304$1=($303$1 >>> 24) | (0 << 8);
      var $$etemp$62$0=255;
      var $$etemp$62$1=0;
      var $305$0=$304$0 & $$etemp$62$0;
      var $305$1=$304$1 & $$etemp$62$1;
      var $306$0=$305$0;
      var $306=$306$0&255;
      var $307=$1;
      var $308=(($307+20)|0);
      HEAP8[($308)]=$306;
      var $309=$2;
      var $310=(($309+8)|0);
      var $311=(($310+16)|0);
      var $ld$63$0=(($311)|0);
      var $312$0=HEAP32[(($ld$63$0)>>2)];
      var $ld$64$1=(($311+4)|0);
      var $312$1=HEAP32[(($ld$64$1)>>2)];
      var $313$0=($312$0 >>> 16) | ($312$1 << 16);
      var $313$1=($312$1 >>> 16) | (0 << 16);
      var $$etemp$65$0=255;
      var $$etemp$65$1=0;
      var $314$0=$313$0 & $$etemp$65$0;
      var $314$1=$313$1 & $$etemp$65$1;
      var $315$0=$314$0;
      var $315=$315$0&255;
      var $316=$1;
      var $317=(($316+21)|0);
      HEAP8[($317)]=$315;
      var $318=$2;
      var $319=(($318+8)|0);
      var $320=(($319+16)|0);
      var $ld$66$0=(($320)|0);
      var $321$0=HEAP32[(($ld$66$0)>>2)];
      var $ld$67$1=(($320+4)|0);
      var $321$1=HEAP32[(($ld$67$1)>>2)];
      var $322$0=($321$0 >>> 8) | ($321$1 << 24);
      var $322$1=($321$1 >>> 8) | (0 << 24);
      var $$etemp$68$0=255;
      var $$etemp$68$1=0;
      var $323$0=$322$0 & $$etemp$68$0;
      var $323$1=$322$1 & $$etemp$68$1;
      var $324$0=$323$0;
      var $324=$324$0&255;
      var $325=$1;
      var $326=(($325+22)|0);
      HEAP8[($326)]=$324;
      var $327=$2;
      var $328=(($327+8)|0);
      var $329=(($328+16)|0);
      var $ld$69$0=(($329)|0);
      var $330$0=HEAP32[(($ld$69$0)>>2)];
      var $ld$70$1=(($329+4)|0);
      var $330$1=HEAP32[(($ld$70$1)>>2)];
      var $$etemp$71$0=255;
      var $$etemp$71$1=0;
      var $331$0=$330$0 & $$etemp$71$0;
      var $331$1=$330$1 & $$etemp$71$1;
      var $332$0=$331$0;
      var $332=$332$0&255;
      var $333=$1;
      var $334=(($333+23)|0);
      HEAP8[($334)]=$332;
      var $335=$2;
      var $336=(($335+8)|0);
      var $337=(($336+24)|0);
      var $ld$72$0=(($337)|0);
      var $338$0=HEAP32[(($ld$72$0)>>2)];
      var $ld$73$1=(($337+4)|0);
      var $338$1=HEAP32[(($ld$73$1)>>2)];
      var $339$0=($338$1 >>> 24) | (0 << 8);
      var $339$1=(0 >>> 24) | (0 << 8);
      var $$etemp$74$0=255;
      var $$etemp$74$1=0;
      var $340$0=$339$0 & $$etemp$74$0;
      var $340$1=$339$1 & $$etemp$74$1;
      var $341$0=$340$0;
      var $341=$341$0&255;
      var $342=$1;
      var $343=(($342+24)|0);
      HEAP8[($343)]=$341;
      var $344=$2;
      var $345=(($344+8)|0);
      var $346=(($345+24)|0);
      var $ld$75$0=(($346)|0);
      var $347$0=HEAP32[(($ld$75$0)>>2)];
      var $ld$76$1=(($346+4)|0);
      var $347$1=HEAP32[(($ld$76$1)>>2)];
      var $348$0=($347$1 >>> 16) | (0 << 16);
      var $348$1=(0 >>> 16) | (0 << 16);
      var $$etemp$77$0=255;
      var $$etemp$77$1=0;
      var $349$0=$348$0 & $$etemp$77$0;
      var $349$1=$348$1 & $$etemp$77$1;
      var $350$0=$349$0;
      var $350=$350$0&255;
      var $351=$1;
      var $352=(($351+25)|0);
      HEAP8[($352)]=$350;
      var $353=$2;
      var $354=(($353+8)|0);
      var $355=(($354+24)|0);
      var $ld$78$0=(($355)|0);
      var $356$0=HEAP32[(($ld$78$0)>>2)];
      var $ld$79$1=(($355+4)|0);
      var $356$1=HEAP32[(($ld$79$1)>>2)];
      var $357$0=($356$1 >>> 8) | (0 << 24);
      var $357$1=(0 >>> 8) | (0 << 24);
      var $$etemp$80$0=255;
      var $$etemp$80$1=0;
      var $358$0=$357$0 & $$etemp$80$0;
      var $358$1=$357$1 & $$etemp$80$1;
      var $359$0=$358$0;
      var $359=$359$0&255;
      var $360=$1;
      var $361=(($360+26)|0);
      HEAP8[($361)]=$359;
      var $362=$2;
      var $363=(($362+8)|0);
      var $364=(($363+24)|0);
      var $ld$81$0=(($364)|0);
      var $365$0=HEAP32[(($ld$81$0)>>2)];
      var $ld$82$1=(($364+4)|0);
      var $365$1=HEAP32[(($ld$82$1)>>2)];
      var $366$0=$365$1;
      var $366$1=0;
      var $$etemp$83$0=255;
      var $$etemp$83$1=0;
      var $367$0=$366$0 & $$etemp$83$0;
      var $367$1=$366$1 & $$etemp$83$1;
      var $368$0=$367$0;
      var $368=$368$0&255;
      var $369=$1;
      var $370=(($369+27)|0);
      HEAP8[($370)]=$368;
      var $371=$2;
      var $372=(($371+8)|0);
      var $373=(($372+24)|0);
      var $ld$84$0=(($373)|0);
      var $374$0=HEAP32[(($ld$84$0)>>2)];
      var $ld$85$1=(($373+4)|0);
      var $374$1=HEAP32[(($ld$85$1)>>2)];
      var $375$0=($374$0 >>> 24) | ($374$1 << 8);
      var $375$1=($374$1 >>> 24) | (0 << 8);
      var $$etemp$86$0=255;
      var $$etemp$86$1=0;
      var $376$0=$375$0 & $$etemp$86$0;
      var $376$1=$375$1 & $$etemp$86$1;
      var $377$0=$376$0;
      var $377=$377$0&255;
      var $378=$1;
      var $379=(($378+28)|0);
      HEAP8[($379)]=$377;
      var $380=$2;
      var $381=(($380+8)|0);
      var $382=(($381+24)|0);
      var $ld$87$0=(($382)|0);
      var $383$0=HEAP32[(($ld$87$0)>>2)];
      var $ld$88$1=(($382+4)|0);
      var $383$1=HEAP32[(($ld$88$1)>>2)];
      var $384$0=($383$0 >>> 16) | ($383$1 << 16);
      var $384$1=($383$1 >>> 16) | (0 << 16);
      var $$etemp$89$0=255;
      var $$etemp$89$1=0;
      var $385$0=$384$0 & $$etemp$89$0;
      var $385$1=$384$1 & $$etemp$89$1;
      var $386$0=$385$0;
      var $386=$386$0&255;
      var $387=$1;
      var $388=(($387+29)|0);
      HEAP8[($388)]=$386;
      var $389=$2;
      var $390=(($389+8)|0);
      var $391=(($390+24)|0);
      var $ld$90$0=(($391)|0);
      var $392$0=HEAP32[(($ld$90$0)>>2)];
      var $ld$91$1=(($391+4)|0);
      var $392$1=HEAP32[(($ld$91$1)>>2)];
      var $393$0=($392$0 >>> 8) | ($392$1 << 24);
      var $393$1=($392$1 >>> 8) | (0 << 24);
      var $$etemp$92$0=255;
      var $$etemp$92$1=0;
      var $394$0=$393$0 & $$etemp$92$0;
      var $394$1=$393$1 & $$etemp$92$1;
      var $395$0=$394$0;
      var $395=$395$0&255;
      var $396=$1;
      var $397=(($396+30)|0);
      HEAP8[($397)]=$395;
      var $398=$2;
      var $399=(($398+8)|0);
      var $400=(($399+24)|0);
      var $ld$93$0=(($400)|0);
      var $401$0=HEAP32[(($ld$93$0)>>2)];
      var $ld$94$1=(($400+4)|0);
      var $401$1=HEAP32[(($ld$94$1)>>2)];
      var $$etemp$95$0=255;
      var $$etemp$95$1=0;
      var $402$0=$401$0 & $$etemp$95$0;
      var $402$1=$401$1 & $$etemp$95$1;
      var $403$0=$402$0;
      var $403=$403$0&255;
      var $404=$1;
      var $405=(($404+31)|0);
      HEAP8[($405)]=$403;
      var $406=$2;
      var $407=(($406+8)|0);
      var $408=(($407+32)|0);
      var $ld$96$0=(($408)|0);
      var $409$0=HEAP32[(($ld$96$0)>>2)];
      var $ld$97$1=(($408+4)|0);
      var $409$1=HEAP32[(($ld$97$1)>>2)];
      var $410$0=($409$1 >>> 24) | (0 << 8);
      var $410$1=(0 >>> 24) | (0 << 8);
      var $$etemp$98$0=255;
      var $$etemp$98$1=0;
      var $411$0=$410$0 & $$etemp$98$0;
      var $411$1=$410$1 & $$etemp$98$1;
      var $412$0=$411$0;
      var $412=$412$0&255;
      var $413=$1;
      var $414=(($413+32)|0);
      HEAP8[($414)]=$412;
      var $415=$2;
      var $416=(($415+8)|0);
      var $417=(($416+32)|0);
      var $ld$99$0=(($417)|0);
      var $418$0=HEAP32[(($ld$99$0)>>2)];
      var $ld$100$1=(($417+4)|0);
      var $418$1=HEAP32[(($ld$100$1)>>2)];
      var $419$0=($418$1 >>> 16) | (0 << 16);
      var $419$1=(0 >>> 16) | (0 << 16);
      var $$etemp$101$0=255;
      var $$etemp$101$1=0;
      var $420$0=$419$0 & $$etemp$101$0;
      var $420$1=$419$1 & $$etemp$101$1;
      var $421$0=$420$0;
      var $421=$421$0&255;
      var $422=$1;
      var $423=(($422+33)|0);
      HEAP8[($423)]=$421;
      var $424=$2;
      var $425=(($424+8)|0);
      var $426=(($425+32)|0);
      var $ld$102$0=(($426)|0);
      var $427$0=HEAP32[(($ld$102$0)>>2)];
      var $ld$103$1=(($426+4)|0);
      var $427$1=HEAP32[(($ld$103$1)>>2)];
      var $428$0=($427$1 >>> 8) | (0 << 24);
      var $428$1=(0 >>> 8) | (0 << 24);
      var $$etemp$104$0=255;
      var $$etemp$104$1=0;
      var $429$0=$428$0 & $$etemp$104$0;
      var $429$1=$428$1 & $$etemp$104$1;
      var $430$0=$429$0;
      var $430=$430$0&255;
      var $431=$1;
      var $432=(($431+34)|0);
      HEAP8[($432)]=$430;
      var $433=$2;
      var $434=(($433+8)|0);
      var $435=(($434+32)|0);
      var $ld$105$0=(($435)|0);
      var $436$0=HEAP32[(($ld$105$0)>>2)];
      var $ld$106$1=(($435+4)|0);
      var $436$1=HEAP32[(($ld$106$1)>>2)];
      var $437$0=$436$1;
      var $437$1=0;
      var $$etemp$107$0=255;
      var $$etemp$107$1=0;
      var $438$0=$437$0 & $$etemp$107$0;
      var $438$1=$437$1 & $$etemp$107$1;
      var $439$0=$438$0;
      var $439=$439$0&255;
      var $440=$1;
      var $441=(($440+35)|0);
      HEAP8[($441)]=$439;
      var $442=$2;
      var $443=(($442+8)|0);
      var $444=(($443+32)|0);
      var $ld$108$0=(($444)|0);
      var $445$0=HEAP32[(($ld$108$0)>>2)];
      var $ld$109$1=(($444+4)|0);
      var $445$1=HEAP32[(($ld$109$1)>>2)];
      var $446$0=($445$0 >>> 24) | ($445$1 << 8);
      var $446$1=($445$1 >>> 24) | (0 << 8);
      var $$etemp$110$0=255;
      var $$etemp$110$1=0;
      var $447$0=$446$0 & $$etemp$110$0;
      var $447$1=$446$1 & $$etemp$110$1;
      var $448$0=$447$0;
      var $448=$448$0&255;
      var $449=$1;
      var $450=(($449+36)|0);
      HEAP8[($450)]=$448;
      var $451=$2;
      var $452=(($451+8)|0);
      var $453=(($452+32)|0);
      var $ld$111$0=(($453)|0);
      var $454$0=HEAP32[(($ld$111$0)>>2)];
      var $ld$112$1=(($453+4)|0);
      var $454$1=HEAP32[(($ld$112$1)>>2)];
      var $455$0=($454$0 >>> 16) | ($454$1 << 16);
      var $455$1=($454$1 >>> 16) | (0 << 16);
      var $$etemp$113$0=255;
      var $$etemp$113$1=0;
      var $456$0=$455$0 & $$etemp$113$0;
      var $456$1=$455$1 & $$etemp$113$1;
      var $457$0=$456$0;
      var $457=$457$0&255;
      var $458=$1;
      var $459=(($458+37)|0);
      HEAP8[($459)]=$457;
      var $460=$2;
      var $461=(($460+8)|0);
      var $462=(($461+32)|0);
      var $ld$114$0=(($462)|0);
      var $463$0=HEAP32[(($ld$114$0)>>2)];
      var $ld$115$1=(($462+4)|0);
      var $463$1=HEAP32[(($ld$115$1)>>2)];
      var $464$0=($463$0 >>> 8) | ($463$1 << 24);
      var $464$1=($463$1 >>> 8) | (0 << 24);
      var $$etemp$116$0=255;
      var $$etemp$116$1=0;
      var $465$0=$464$0 & $$etemp$116$0;
      var $465$1=$464$1 & $$etemp$116$1;
      var $466$0=$465$0;
      var $466=$466$0&255;
      var $467=$1;
      var $468=(($467+38)|0);
      HEAP8[($468)]=$466;
      var $469=$2;
      var $470=(($469+8)|0);
      var $471=(($470+32)|0);
      var $ld$117$0=(($471)|0);
      var $472$0=HEAP32[(($ld$117$0)>>2)];
      var $ld$118$1=(($471+4)|0);
      var $472$1=HEAP32[(($ld$118$1)>>2)];
      var $$etemp$119$0=255;
      var $$etemp$119$1=0;
      var $473$0=$472$0 & $$etemp$119$0;
      var $473$1=$472$1 & $$etemp$119$1;
      var $474$0=$473$0;
      var $474=$474$0&255;
      var $475=$1;
      var $476=(($475+39)|0);
      HEAP8[($476)]=$474;
      var $477=$2;
      var $478=(($477+8)|0);
      var $479=(($478+40)|0);
      var $ld$120$0=(($479)|0);
      var $480$0=HEAP32[(($ld$120$0)>>2)];
      var $ld$121$1=(($479+4)|0);
      var $480$1=HEAP32[(($ld$121$1)>>2)];
      var $481$0=($480$1 >>> 24) | (0 << 8);
      var $481$1=(0 >>> 24) | (0 << 8);
      var $$etemp$122$0=255;
      var $$etemp$122$1=0;
      var $482$0=$481$0 & $$etemp$122$0;
      var $482$1=$481$1 & $$etemp$122$1;
      var $483$0=$482$0;
      var $483=$483$0&255;
      var $484=$1;
      var $485=(($484+40)|0);
      HEAP8[($485)]=$483;
      var $486=$2;
      var $487=(($486+8)|0);
      var $488=(($487+40)|0);
      var $ld$123$0=(($488)|0);
      var $489$0=HEAP32[(($ld$123$0)>>2)];
      var $ld$124$1=(($488+4)|0);
      var $489$1=HEAP32[(($ld$124$1)>>2)];
      var $490$0=($489$1 >>> 16) | (0 << 16);
      var $490$1=(0 >>> 16) | (0 << 16);
      var $$etemp$125$0=255;
      var $$etemp$125$1=0;
      var $491$0=$490$0 & $$etemp$125$0;
      var $491$1=$490$1 & $$etemp$125$1;
      var $492$0=$491$0;
      var $492=$492$0&255;
      var $493=$1;
      var $494=(($493+41)|0);
      HEAP8[($494)]=$492;
      var $495=$2;
      var $496=(($495+8)|0);
      var $497=(($496+40)|0);
      var $ld$126$0=(($497)|0);
      var $498$0=HEAP32[(($ld$126$0)>>2)];
      var $ld$127$1=(($497+4)|0);
      var $498$1=HEAP32[(($ld$127$1)>>2)];
      var $499$0=($498$1 >>> 8) | (0 << 24);
      var $499$1=(0 >>> 8) | (0 << 24);
      var $$etemp$128$0=255;
      var $$etemp$128$1=0;
      var $500$0=$499$0 & $$etemp$128$0;
      var $500$1=$499$1 & $$etemp$128$1;
      var $501$0=$500$0;
      var $501=$501$0&255;
      var $502=$1;
      var $503=(($502+42)|0);
      HEAP8[($503)]=$501;
      var $504=$2;
      var $505=(($504+8)|0);
      var $506=(($505+40)|0);
      var $ld$129$0=(($506)|0);
      var $507$0=HEAP32[(($ld$129$0)>>2)];
      var $ld$130$1=(($506+4)|0);
      var $507$1=HEAP32[(($ld$130$1)>>2)];
      var $508$0=$507$1;
      var $508$1=0;
      var $$etemp$131$0=255;
      var $$etemp$131$1=0;
      var $509$0=$508$0 & $$etemp$131$0;
      var $509$1=$508$1 & $$etemp$131$1;
      var $510$0=$509$0;
      var $510=$510$0&255;
      var $511=$1;
      var $512=(($511+43)|0);
      HEAP8[($512)]=$510;
      var $513=$2;
      var $514=(($513+8)|0);
      var $515=(($514+40)|0);
      var $ld$132$0=(($515)|0);
      var $516$0=HEAP32[(($ld$132$0)>>2)];
      var $ld$133$1=(($515+4)|0);
      var $516$1=HEAP32[(($ld$133$1)>>2)];
      var $517$0=($516$0 >>> 24) | ($516$1 << 8);
      var $517$1=($516$1 >>> 24) | (0 << 8);
      var $$etemp$134$0=255;
      var $$etemp$134$1=0;
      var $518$0=$517$0 & $$etemp$134$0;
      var $518$1=$517$1 & $$etemp$134$1;
      var $519$0=$518$0;
      var $519=$519$0&255;
      var $520=$1;
      var $521=(($520+44)|0);
      HEAP8[($521)]=$519;
      var $522=$2;
      var $523=(($522+8)|0);
      var $524=(($523+40)|0);
      var $ld$135$0=(($524)|0);
      var $525$0=HEAP32[(($ld$135$0)>>2)];
      var $ld$136$1=(($524+4)|0);
      var $525$1=HEAP32[(($ld$136$1)>>2)];
      var $526$0=($525$0 >>> 16) | ($525$1 << 16);
      var $526$1=($525$1 >>> 16) | (0 << 16);
      var $$etemp$137$0=255;
      var $$etemp$137$1=0;
      var $527$0=$526$0 & $$etemp$137$0;
      var $527$1=$526$1 & $$etemp$137$1;
      var $528$0=$527$0;
      var $528=$528$0&255;
      var $529=$1;
      var $530=(($529+45)|0);
      HEAP8[($530)]=$528;
      var $531=$2;
      var $532=(($531+8)|0);
      var $533=(($532+40)|0);
      var $ld$138$0=(($533)|0);
      var $534$0=HEAP32[(($ld$138$0)>>2)];
      var $ld$139$1=(($533+4)|0);
      var $534$1=HEAP32[(($ld$139$1)>>2)];
      var $535$0=($534$0 >>> 8) | ($534$1 << 24);
      var $535$1=($534$1 >>> 8) | (0 << 24);
      var $$etemp$140$0=255;
      var $$etemp$140$1=0;
      var $536$0=$535$0 & $$etemp$140$0;
      var $536$1=$535$1 & $$etemp$140$1;
      var $537$0=$536$0;
      var $537=$537$0&255;
      var $538=$1;
      var $539=(($538+46)|0);
      HEAP8[($539)]=$537;
      var $540=$2;
      var $541=(($540+8)|0);
      var $542=(($541+40)|0);
      var $ld$141$0=(($542)|0);
      var $543$0=HEAP32[(($ld$141$0)>>2)];
      var $ld$142$1=(($542+4)|0);
      var $543$1=HEAP32[(($ld$142$1)>>2)];
      var $$etemp$143$0=255;
      var $$etemp$143$1=0;
      var $544$0=$543$0 & $$etemp$143$0;
      var $544$1=$543$1 & $$etemp$143$1;
      var $545$0=$544$0;
      var $545=$545$0&255;
      var $546=$1;
      var $547=(($546+47)|0);
      HEAP8[($547)]=$545;
      var $548=$2;
      var $549=(($548+8)|0);
      var $550=(($549+48)|0);
      var $ld$144$0=(($550)|0);
      var $551$0=HEAP32[(($ld$144$0)>>2)];
      var $ld$145$1=(($550+4)|0);
      var $551$1=HEAP32[(($ld$145$1)>>2)];
      var $552$0=($551$1 >>> 24) | (0 << 8);
      var $552$1=(0 >>> 24) | (0 << 8);
      var $$etemp$146$0=255;
      var $$etemp$146$1=0;
      var $553$0=$552$0 & $$etemp$146$0;
      var $553$1=$552$1 & $$etemp$146$1;
      var $554$0=$553$0;
      var $554=$554$0&255;
      var $555=$1;
      var $556=(($555+48)|0);
      HEAP8[($556)]=$554;
      var $557=$2;
      var $558=(($557+8)|0);
      var $559=(($558+48)|0);
      var $ld$147$0=(($559)|0);
      var $560$0=HEAP32[(($ld$147$0)>>2)];
      var $ld$148$1=(($559+4)|0);
      var $560$1=HEAP32[(($ld$148$1)>>2)];
      var $561$0=($560$1 >>> 16) | (0 << 16);
      var $561$1=(0 >>> 16) | (0 << 16);
      var $$etemp$149$0=255;
      var $$etemp$149$1=0;
      var $562$0=$561$0 & $$etemp$149$0;
      var $562$1=$561$1 & $$etemp$149$1;
      var $563$0=$562$0;
      var $563=$563$0&255;
      var $564=$1;
      var $565=(($564+49)|0);
      HEAP8[($565)]=$563;
      var $566=$2;
      var $567=(($566+8)|0);
      var $568=(($567+48)|0);
      var $ld$150$0=(($568)|0);
      var $569$0=HEAP32[(($ld$150$0)>>2)];
      var $ld$151$1=(($568+4)|0);
      var $569$1=HEAP32[(($ld$151$1)>>2)];
      var $570$0=($569$1 >>> 8) | (0 << 24);
      var $570$1=(0 >>> 8) | (0 << 24);
      var $$etemp$152$0=255;
      var $$etemp$152$1=0;
      var $571$0=$570$0 & $$etemp$152$0;
      var $571$1=$570$1 & $$etemp$152$1;
      var $572$0=$571$0;
      var $572=$572$0&255;
      var $573=$1;
      var $574=(($573+50)|0);
      HEAP8[($574)]=$572;
      var $575=$2;
      var $576=(($575+8)|0);
      var $577=(($576+48)|0);
      var $ld$153$0=(($577)|0);
      var $578$0=HEAP32[(($ld$153$0)>>2)];
      var $ld$154$1=(($577+4)|0);
      var $578$1=HEAP32[(($ld$154$1)>>2)];
      var $579$0=$578$1;
      var $579$1=0;
      var $$etemp$155$0=255;
      var $$etemp$155$1=0;
      var $580$0=$579$0 & $$etemp$155$0;
      var $580$1=$579$1 & $$etemp$155$1;
      var $581$0=$580$0;
      var $581=$581$0&255;
      var $582=$1;
      var $583=(($582+51)|0);
      HEAP8[($583)]=$581;
      var $584=$2;
      var $585=(($584+8)|0);
      var $586=(($585+48)|0);
      var $ld$156$0=(($586)|0);
      var $587$0=HEAP32[(($ld$156$0)>>2)];
      var $ld$157$1=(($586+4)|0);
      var $587$1=HEAP32[(($ld$157$1)>>2)];
      var $588$0=($587$0 >>> 24) | ($587$1 << 8);
      var $588$1=($587$1 >>> 24) | (0 << 8);
      var $$etemp$158$0=255;
      var $$etemp$158$1=0;
      var $589$0=$588$0 & $$etemp$158$0;
      var $589$1=$588$1 & $$etemp$158$1;
      var $590$0=$589$0;
      var $590=$590$0&255;
      var $591=$1;
      var $592=(($591+52)|0);
      HEAP8[($592)]=$590;
      var $593=$2;
      var $594=(($593+8)|0);
      var $595=(($594+48)|0);
      var $ld$159$0=(($595)|0);
      var $596$0=HEAP32[(($ld$159$0)>>2)];
      var $ld$160$1=(($595+4)|0);
      var $596$1=HEAP32[(($ld$160$1)>>2)];
      var $597$0=($596$0 >>> 16) | ($596$1 << 16);
      var $597$1=($596$1 >>> 16) | (0 << 16);
      var $$etemp$161$0=255;
      var $$etemp$161$1=0;
      var $598$0=$597$0 & $$etemp$161$0;
      var $598$1=$597$1 & $$etemp$161$1;
      var $599$0=$598$0;
      var $599=$599$0&255;
      var $600=$1;
      var $601=(($600+53)|0);
      HEAP8[($601)]=$599;
      var $602=$2;
      var $603=(($602+8)|0);
      var $604=(($603+48)|0);
      var $ld$162$0=(($604)|0);
      var $605$0=HEAP32[(($ld$162$0)>>2)];
      var $ld$163$1=(($604+4)|0);
      var $605$1=HEAP32[(($ld$163$1)>>2)];
      var $606$0=($605$0 >>> 8) | ($605$1 << 24);
      var $606$1=($605$1 >>> 8) | (0 << 24);
      var $$etemp$164$0=255;
      var $$etemp$164$1=0;
      var $607$0=$606$0 & $$etemp$164$0;
      var $607$1=$606$1 & $$etemp$164$1;
      var $608$0=$607$0;
      var $608=$608$0&255;
      var $609=$1;
      var $610=(($609+54)|0);
      HEAP8[($610)]=$608;
      var $611=$2;
      var $612=(($611+8)|0);
      var $613=(($612+48)|0);
      var $ld$165$0=(($613)|0);
      var $614$0=HEAP32[(($ld$165$0)>>2)];
      var $ld$166$1=(($613+4)|0);
      var $614$1=HEAP32[(($ld$166$1)>>2)];
      var $$etemp$167$0=255;
      var $$etemp$167$1=0;
      var $615$0=$614$0 & $$etemp$167$0;
      var $615$1=$614$1 & $$etemp$167$1;
      var $616$0=$615$0;
      var $616=$616$0&255;
      var $617=$1;
      var $618=(($617+55)|0);
      HEAP8[($618)]=$616;
      var $619=$2;
      var $620=(($619+8)|0);
      var $621=(($620+56)|0);
      var $ld$168$0=(($621)|0);
      var $622$0=HEAP32[(($ld$168$0)>>2)];
      var $ld$169$1=(($621+4)|0);
      var $622$1=HEAP32[(($ld$169$1)>>2)];
      var $623$0=($622$1 >>> 24) | (0 << 8);
      var $623$1=(0 >>> 24) | (0 << 8);
      var $$etemp$170$0=255;
      var $$etemp$170$1=0;
      var $624$0=$623$0 & $$etemp$170$0;
      var $624$1=$623$1 & $$etemp$170$1;
      var $625$0=$624$0;
      var $625=$625$0&255;
      var $626=$1;
      var $627=(($626+56)|0);
      HEAP8[($627)]=$625;
      var $628=$2;
      var $629=(($628+8)|0);
      var $630=(($629+56)|0);
      var $ld$171$0=(($630)|0);
      var $631$0=HEAP32[(($ld$171$0)>>2)];
      var $ld$172$1=(($630+4)|0);
      var $631$1=HEAP32[(($ld$172$1)>>2)];
      var $632$0=($631$1 >>> 16) | (0 << 16);
      var $632$1=(0 >>> 16) | (0 << 16);
      var $$etemp$173$0=255;
      var $$etemp$173$1=0;
      var $633$0=$632$0 & $$etemp$173$0;
      var $633$1=$632$1 & $$etemp$173$1;
      var $634$0=$633$0;
      var $634=$634$0&255;
      var $635=$1;
      var $636=(($635+57)|0);
      HEAP8[($636)]=$634;
      var $637=$2;
      var $638=(($637+8)|0);
      var $639=(($638+56)|0);
      var $ld$174$0=(($639)|0);
      var $640$0=HEAP32[(($ld$174$0)>>2)];
      var $ld$175$1=(($639+4)|0);
      var $640$1=HEAP32[(($ld$175$1)>>2)];
      var $641$0=($640$1 >>> 8) | (0 << 24);
      var $641$1=(0 >>> 8) | (0 << 24);
      var $$etemp$176$0=255;
      var $$etemp$176$1=0;
      var $642$0=$641$0 & $$etemp$176$0;
      var $642$1=$641$1 & $$etemp$176$1;
      var $643$0=$642$0;
      var $643=$643$0&255;
      var $644=$1;
      var $645=(($644+58)|0);
      HEAP8[($645)]=$643;
      var $646=$2;
      var $647=(($646+8)|0);
      var $648=(($647+56)|0);
      var $ld$177$0=(($648)|0);
      var $649$0=HEAP32[(($ld$177$0)>>2)];
      var $ld$178$1=(($648+4)|0);
      var $649$1=HEAP32[(($ld$178$1)>>2)];
      var $650$0=$649$1;
      var $650$1=0;
      var $$etemp$179$0=255;
      var $$etemp$179$1=0;
      var $651$0=$650$0 & $$etemp$179$0;
      var $651$1=$650$1 & $$etemp$179$1;
      var $652$0=$651$0;
      var $652=$652$0&255;
      var $653=$1;
      var $654=(($653+59)|0);
      HEAP8[($654)]=$652;
      var $655=$2;
      var $656=(($655+8)|0);
      var $657=(($656+56)|0);
      var $ld$180$0=(($657)|0);
      var $658$0=HEAP32[(($ld$180$0)>>2)];
      var $ld$181$1=(($657+4)|0);
      var $658$1=HEAP32[(($ld$181$1)>>2)];
      var $659$0=($658$0 >>> 24) | ($658$1 << 8);
      var $659$1=($658$1 >>> 24) | (0 << 8);
      var $$etemp$182$0=255;
      var $$etemp$182$1=0;
      var $660$0=$659$0 & $$etemp$182$0;
      var $660$1=$659$1 & $$etemp$182$1;
      var $661$0=$660$0;
      var $661=$661$0&255;
      var $662=$1;
      var $663=(($662+60)|0);
      HEAP8[($663)]=$661;
      var $664=$2;
      var $665=(($664+8)|0);
      var $666=(($665+56)|0);
      var $ld$183$0=(($666)|0);
      var $667$0=HEAP32[(($ld$183$0)>>2)];
      var $ld$184$1=(($666+4)|0);
      var $667$1=HEAP32[(($ld$184$1)>>2)];
      var $668$0=($667$0 >>> 16) | ($667$1 << 16);
      var $668$1=($667$1 >>> 16) | (0 << 16);
      var $$etemp$185$0=255;
      var $$etemp$185$1=0;
      var $669$0=$668$0 & $$etemp$185$0;
      var $669$1=$668$1 & $$etemp$185$1;
      var $670$0=$669$0;
      var $670=$670$0&255;
      var $671=$1;
      var $672=(($671+61)|0);
      HEAP8[($672)]=$670;
      var $673=$2;
      var $674=(($673+8)|0);
      var $675=(($674+56)|0);
      var $ld$186$0=(($675)|0);
      var $676$0=HEAP32[(($ld$186$0)>>2)];
      var $ld$187$1=(($675+4)|0);
      var $676$1=HEAP32[(($ld$187$1)>>2)];
      var $677$0=($676$0 >>> 8) | ($676$1 << 24);
      var $677$1=($676$1 >>> 8) | (0 << 24);
      var $$etemp$188$0=255;
      var $$etemp$188$1=0;
      var $678$0=$677$0 & $$etemp$188$0;
      var $678$1=$677$1 & $$etemp$188$1;
      var $679$0=$678$0;
      var $679=$679$0&255;
      var $680=$1;
      var $681=(($680+62)|0);
      HEAP8[($681)]=$679;
      var $682=$2;
      var $683=(($682+8)|0);
      var $684=(($683+56)|0);
      var $ld$189$0=(($684)|0);
      var $685$0=HEAP32[(($ld$189$0)>>2)];
      var $ld$190$1=(($684+4)|0);
      var $685$1=HEAP32[(($ld$190$1)>>2)];
      var $$etemp$191$0=255;
      var $$etemp$191$1=0;
      var $686$0=$685$0 & $$etemp$191$0;
      var $686$1=$685$1 & $$etemp$191$1;
      var $687$0=$686$0;
      var $687=$687$0&255;
      var $688=$1;
      var $689=(($688+63)|0);
      HEAP8[($689)]=$687;
      return;
    default: assert(0, "bad label: " + label);
  }
}
// EMSCRIPTEN_END_FUNCS
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return tempRet0 = h,l|0;
  }
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return tempRet0 = h,l|0;
  }
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
  }
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
  }
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_ctlz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((ctlz_i8)+(x >>> 24))|0)];
    if ((ret|0) < 8) return ret|0;
    var ret = HEAP8[(((ctlz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    var ret = HEAP8[(((ctlz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((ctlz_i8)+(x&0xff))|0)] + 24)|0;
  }
/* PRE_ASM */ var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STACK);
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = HEAP8[(((cttz_i8)+(x & 0xff))|0)];
    if ((ret|0) < 8) return ret|0;
    var ret = HEAP8[(((cttz_i8)+((x >> 8)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 8)|0;
    var ret = HEAP8[(((cttz_i8)+((x >> 16)&0xff))|0)];
    if ((ret|0) < 8) return (ret + 16)|0;
    return (HEAP8[(((cttz_i8)+(x >>> 24))|0)] + 24)|0;
  }
/* PRE_ASM */ var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STACK);
// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math.imul($2, $1);
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + Math.imul($2, $6) | 0;
  $11 = $b >>> 16;
  $12 = Math.imul($11, $1);
  return (tempRet0 = (($8 >>> 16) + Math.imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem);
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math.imul($a$1, $y_sroa_0_0_extract_trunc);
  return (tempRet0 = (Math.imul($b$1, $x_sroa_0_0_extract_trunc) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem);
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1);
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================
// EMSCRIPTEN_END_FUNCS
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
function run(args) {
  initRuntime();
}
Module['run'] = run;
// {{PRE_RUN_ADDITIONS}}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
  return Module;
});
