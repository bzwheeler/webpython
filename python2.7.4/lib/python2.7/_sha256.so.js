// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// Capture the output of this into a variable, if you want
(function(FUNCTION_TABLE_OFFSET, globalScope) {
  var Module = {};
  var args = [];
  Module.arguments = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime essentials
//========================================
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.pop();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}
var __ATINIT__ = []; // functions called during startup
function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}
// === Body ===
var __str9;
var __str8;
var __str7;
var __str6;
var __str5;
var __str4;
var __str3;
var __str2;
var __str17;
var __str16;
var __str15;
var __str14;
var __str13;
var __str12;
var __str11;
var __str10;
var __str1;
var __str;
var _SHA_methods;
var _SHA_members;
var _SHA_getseters;
var _SHA_functions;
var _SHA256type;
var _SHA256_update__doc__;
var _SHA256_new_kwlist;
var _SHA256_new__doc__;
var _SHA256_hexdigest__doc__;
var _SHA256_digest__doc__;
var _SHA256_copy__doc__;
var _SHA224type;
var _SHA224_new_kwlist;
var _SHA224_new__doc__;
__str9=allocate([83,72,65,50,50,52,0,0], "i8", ALLOC_NORMAL);
__str8=allocate([83,72,65,50,53,54,0,0], "i8", ALLOC_NORMAL);
__str7=allocate([110,97,109,101,0,0,0,0], "i8", ALLOC_NORMAL);
__str6=allocate([98,108,111,99,107,95,115,105,122,101,0,0], "i8", ALLOC_NORMAL);
__str5=allocate([95,115,104,97,50,53,54,46,115,104,97,50,53,54,0,0], "i8", ALLOC_NORMAL);
__str4=allocate([124,115,42,58,110,101,119,0], "i8", ALLOC_NORMAL);
__str3=allocate([115,116,114,105,110,103,0,0], "i8", ALLOC_NORMAL);
__str2=allocate([115,104,97,50,50,52,0,0], "i8", ALLOC_NORMAL);
__str17=allocate([95,115,104,97,50,53,54,46,115,104,97,50,50,52,0,0], "i8", ALLOC_NORMAL);
__str16=allocate([115,42,58,117,112,100,97,116,101,0,0,0], "i8", ALLOC_NORMAL);
__str15=allocate([117,112,100,97,116,101,0,0], "i8", ALLOC_NORMAL);
__str14=allocate([104,101,120,100,105,103,101,115,116,0,0,0], "i8", ALLOC_NORMAL);
__str13=allocate([100,105,103,101,115,116,0,0], "i8", ALLOC_NORMAL);
__str12=allocate([99,111,112,121,0,0,0,0], "i8", ALLOC_NORMAL);
__str11=allocate([100,105,103,101,115,116,115,105,122,101,0,0], "i8", ALLOC_NORMAL);
__str10=allocate([100,105,103,101,115,116,95,115,105,122,101,0], "i8", ALLOC_NORMAL);
__str1=allocate([115,104,97,50,53,54,0,0], "i8", ALLOC_NORMAL);
__str=allocate([95,115,104,97,50,53,54,0], "i8", ALLOC_NORMAL);
_SHA_methods=allocate([0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_members=allocate([0,0,0,0,1,0,0,0,120,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,120,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_getseters=allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA_functions=allocate([0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA256type=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA256_update__doc__=allocate([85,112,100,97,116,101,32,116,104,105,115,32,104,97,115,104,32,111,98,106,101,99,116,39,115,32,115,116,97,116,101,32,119,105,116,104,32,116,104,101,32,112,114,111,118,105,100,101,100,32,115,116,114,105,110,103,46,0,0,0], "i8", ALLOC_NORMAL);
_SHA256_new_kwlist=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA256_new__doc__=allocate([82,101,116,117,114,110,32,97,32,110,101,119,32,83,72,65,45,50,53,54,32,104,97,115,104,32,111,98,106,101,99,116,59,32,111,112,116,105,111,110,97,108,108,121,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,97,32,115,116,114,105,110,103,46,0], "i8", ALLOC_NORMAL);
_SHA256_hexdigest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,104,101,120,97,100,101,99,105,109,97,108,32,100,105,103,105,116,115,46,0,0], "i8", ALLOC_NORMAL);
_SHA256_digest__doc__=allocate([82,101,116,117,114,110,32,116,104,101,32,100,105,103,101,115,116,32,118,97,108,117,101,32,97,115,32,97,32,115,116,114,105,110,103,32,111,102,32,98,105,110,97,114,121,32,100,97,116,97,46,0], "i8", ALLOC_NORMAL);
_SHA256_copy__doc__=allocate([82,101,116,117,114,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,104,97,115,104,32,111,98,106,101,99,116,46,0,0,0], "i8", ALLOC_NORMAL);
_SHA224type=allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,235,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA224_new_kwlist=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_NORMAL);
_SHA224_new__doc__=allocate([82,101,116,117,114,110,32,97,32,110,101,119,32,83,72,65,45,50,50,52,32,104,97,115,104,32,111,98,106,101,99,116,59,32,111,112,116,105,111,110,97,108,108,121,32,105,110,105,116,105,97,108,105,122,101,100,32,119,105,116,104,32,97,32,115,116,114,105,110,103,46,0], "i8", ALLOC_NORMAL);
/* no memory initializer */
function runPostSets() {
HEAP32[((_SHA_methods)>>2)]=((__str12)|0);
HEAP32[(((_SHA_methods)+(4))>>2)]=((FUNCTION_TABLE_OFFSET + 10));
HEAP32[(((_SHA_methods)+(12))>>2)]=((_SHA256_copy__doc__)|0);
HEAP32[(((_SHA_methods)+(16))>>2)]=((__str13)|0);
HEAP32[(((_SHA_methods)+(20))>>2)]=((FUNCTION_TABLE_OFFSET + 2));
HEAP32[(((_SHA_methods)+(28))>>2)]=((_SHA256_digest__doc__)|0);
HEAP32[(((_SHA_methods)+(32))>>2)]=((__str14)|0);
HEAP32[(((_SHA_methods)+(36))>>2)]=((FUNCTION_TABLE_OFFSET + 14));
HEAP32[(((_SHA_methods)+(44))>>2)]=((_SHA256_hexdigest__doc__)|0);
HEAP32[(((_SHA_methods)+(48))>>2)]=((__str15)|0);
HEAP32[(((_SHA_methods)+(52))>>2)]=((FUNCTION_TABLE_OFFSET + 6));
HEAP32[(((_SHA_methods)+(60))>>2)]=((_SHA256_update__doc__)|0);
HEAP32[((_SHA_members)>>2)]=((__str10)|0);
HEAP32[(((_SHA_members)+(20))>>2)]=((__str11)|0);
HEAP32[((_SHA_getseters)>>2)]=((__str6)|0);
HEAP32[(((_SHA_getseters)+(4))>>2)]=(FUNCTION_TABLE_OFFSET + 8);
HEAP32[(((_SHA_getseters)+(20))>>2)]=((__str7)|0);
HEAP32[(((_SHA_getseters)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 16);
HEAP32[((_SHA_functions)>>2)]=((__str1)|0);
HEAP32[(((_SHA_functions)+(4))>>2)]=((FUNCTION_TABLE_OFFSET + 12));
HEAP32[(((_SHA_functions)+(12))>>2)]=((_SHA256_new__doc__)|0);
HEAP32[(((_SHA_functions)+(16))>>2)]=((__str2)|0);
HEAP32[(((_SHA_functions)+(20))>>2)]=((FUNCTION_TABLE_OFFSET + 18));
HEAP32[(((_SHA_functions)+(28))>>2)]=((_SHA224_new__doc__)|0);
HEAP32[(((_SHA256type)+(12))>>2)]=((__str5)|0);
HEAP32[(((_SHA256type)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 4);
HEAP32[(((_SHA256type)+(116))>>2)]=((_SHA_methods)|0);
HEAP32[(((_SHA256type)+(120))>>2)]=((_SHA_members)|0);
HEAP32[(((_SHA256type)+(124))>>2)]=((_SHA_getseters)|0);
HEAP32[((_SHA256_new_kwlist)>>2)]=((__str3)|0);
HEAP32[(((_SHA224type)+(12))>>2)]=((__str17)|0);
HEAP32[(((_SHA224type)+(24))>>2)]=(FUNCTION_TABLE_OFFSET + 4);
HEAP32[(((_SHA224type)+(116))>>2)]=((_SHA_methods)|0);
HEAP32[(((_SHA224type)+(120))>>2)]=((_SHA_members)|0);
HEAP32[(((_SHA224type)+(124))>>2)]=((_SHA_getseters)|0);
HEAP32[((_SHA224_new_kwlist)>>2)]=((__str3)|0);
}
if (!awaitingMemoryInitializer) runPostSets();
FUNCTION_TABLE.push.apply(FUNCTION_TABLE, [0,0,_SHA256_digest,0,_SHA_dealloc,0,_SHA256_update,0,_SHA256_get_block_size,0,_SHA256_copy,0,_SHA256_new,0,_SHA256_hexdigest,0,_SHA256_get_name,0,_SHA224_new,0]);
// EMSCRIPTEN_START_FUNCS
function _sha224_init($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 4)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i=__stackBase__;
      $1=$sha_info;
      HEAP32[(($i)>>2)]=1;
      var $2=$1;
      var $3=(($2+112)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=$i;
      var $5=HEAP8[($4)];
      var $6=(($5 << 24) >> 24);
      var $7=(($6)|(0))==1;
      if ($7) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $9=$1;
      var $10=(($9+112)|0);
      HEAP32[(($10)>>2)]=1;
      label = 3; break;
    case 3: 
      var $12=$1;
      var $13=(($12+8)|0);
      var $14=(($13)|0);
      HEAP32[(($14)>>2)]=-1056596264;
      var $15=$1;
      var $16=(($15+8)|0);
      var $17=(($16+4)|0);
      HEAP32[(($17)>>2)]=914150663;
      var $18=$1;
      var $19=(($18+8)|0);
      var $20=(($19+8)|0);
      HEAP32[(($20)>>2)]=812702999;
      var $21=$1;
      var $22=(($21+8)|0);
      var $23=(($22+12)|0);
      HEAP32[(($23)>>2)]=-150054599;
      var $24=$1;
      var $25=(($24+8)|0);
      var $26=(($25+16)|0);
      HEAP32[(($26)>>2)]=-4191439;
      var $27=$1;
      var $28=(($27+8)|0);
      var $29=(($28+20)|0);
      HEAP32[(($29)>>2)]=1750603025;
      var $30=$1;
      var $31=(($30+8)|0);
      var $32=(($31+24)|0);
      HEAP32[(($32)>>2)]=1694076839;
      var $33=$1;
      var $34=(($33+8)|0);
      var $35=(($34+28)|0);
      HEAP32[(($35)>>2)]=-1090891868;
      var $36=$1;
      var $37=(($36+40)|0);
      HEAP32[(($37)>>2)]=0;
      var $38=$1;
      var $39=(($38+44)|0);
      HEAP32[(($39)>>2)]=0;
      var $40=$1;
      var $41=(($40+116)|0);
      HEAP32[(($41)>>2)]=0;
      var $42=$1;
      var $43=(($42+120)|0);
      HEAP32[(($43)>>2)]=28;
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _init_sha256() {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $m;
      HEAP32[((((_SHA224type+4)|0))>>2)]=_PyType_Type;
      var $1=_PyType_Ready(_SHA224type);
      var $2=(($1)|(0)) < 0;
      if ($2) { label = 2; break; } else { label = 3; break; }
    case 2: 
      label = 7; break;
    case 3: 
      HEAP32[((((_SHA256type+4)|0))>>2)]=_PyType_Type;
      var $5=_PyType_Ready(_SHA256type);
      var $6=(($5)|(0)) < 0;
      if ($6) { label = 4; break; } else { label = 5; break; }
    case 4: 
      label = 7; break;
    case 5: 
      var $9=_Py_InitModule4(((__str)|0), ((_SHA_functions)|0), 0, 0, 1013);
      $m=$9;
      var $10=$m;
      var $11=(($10)|(0))==0;
      if ($11) { label = 6; break; } else { label = 7; break; }
    case 6: 
      label = 7; break;
    case 7: 
      return;
    default: assert(0, "bad label: " + label);
  }
}
Module["_init_sha256"] = _init_sha256;
function _SHA256_new($self, $args, $kwdict) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $new;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      $4=$kwdict;
      var $5=$buf;
      _memset($5, 0, 52);
      var $6=$3;
      var $7=$4;
      var $8=_PyArg_ParseTupleAndKeywords($6, $7, ((__str4)|0), ((_SHA256_new_kwlist)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $9=(($8)|(0))!=0;
      if ($9) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 15; break;
    case 3: 
      var $12=_newSHA256object();
      $new=$12;
      var $13=(($12)|(0))==0;
      if ($13) { label = 4; break; } else { label = 5; break; }
    case 4: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 5: 
      var $16=$new;
      _sha_init($16);
      var $17=_PyErr_Occurred();
      var $18=(($17)|(0))!=0;
      if ($18) { label = 6; break; } else { label = 12; break; }
    case 6: 
      label = 7; break;
    case 7: 
      var $21=$new;
      var $22=$21;
      var $23=(($22)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=((($24)-(1))|0);
      HEAP32[(($23)>>2)]=$25;
      var $26=(($25)|(0))!=0;
      if ($26) { label = 8; break; } else { label = 9; break; }
    case 8: 
      label = 10; break;
    case 9: 
      var $29=$new;
      var $30=$29;
      var $31=(($30+4)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32+24)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=$new;
      var $36=$35;
      FUNCTION_TABLE[$34]($36);
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 12: 
      var $40=(($buf+8)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($41)|(0)) > 0;
      if ($42) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $44=$new;
      var $45=(($buf)|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=(($buf+8)|0);
      var $48=HEAP32[(($47)>>2)];
      _sha_update($44, $46, $48);
      label = 14; break;
    case 14: 
      _PyBuffer_Release($buf);
      var $50=$new;
      var $51=$50;
      $1=$51;
      label = 15; break;
    case 15: 
      var $53=$1;
      STACKTOP = __stackBase__;
      return $53;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA224_new($self, $args, $kwdict) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $4;
      var $new;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      $4=$kwdict;
      var $5=$buf;
      _memset($5, 0, 52);
      var $6=$3;
      var $7=$4;
      var $8=_PyArg_ParseTupleAndKeywords($6, $7, ((__str4)|0), ((_SHA224_new_kwlist)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $9=(($8)|(0))!=0;
      if ($9) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 15; break;
    case 3: 
      var $12=_newSHA224object();
      $new=$12;
      var $13=(($12)|(0))==0;
      if ($13) { label = 4; break; } else { label = 5; break; }
    case 4: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 5: 
      var $16=$new;
      _sha224_init($16);
      var $17=_PyErr_Occurred();
      var $18=(($17)|(0))!=0;
      if ($18) { label = 6; break; } else { label = 12; break; }
    case 6: 
      label = 7; break;
    case 7: 
      var $21=$new;
      var $22=$21;
      var $23=(($22)|0);
      var $24=HEAP32[(($23)>>2)];
      var $25=((($24)-(1))|0);
      HEAP32[(($23)>>2)]=$25;
      var $26=(($25)|(0))!=0;
      if ($26) { label = 8; break; } else { label = 9; break; }
    case 8: 
      label = 10; break;
    case 9: 
      var $29=$new;
      var $30=$29;
      var $31=(($30+4)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32+24)|0);
      var $34=HEAP32[(($33)>>2)];
      var $35=$new;
      var $36=$35;
      FUNCTION_TABLE[$34]($36);
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      _PyBuffer_Release($buf);
      $1=0;
      label = 15; break;
    case 12: 
      var $40=(($buf+8)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($41)|(0)) > 0;
      if ($42) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $44=$new;
      var $45=(($buf)|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=(($buf+8)|0);
      var $48=HEAP32[(($47)>>2)];
      _sha_update($44, $46, $48);
      label = 14; break;
    case 14: 
      _PyBuffer_Release($buf);
      var $50=$new;
      var $51=$50;
      $1=$51;
      label = 15; break;
    case 15: 
      var $53=$1;
      STACKTOP = __stackBase__;
      return $53;
    default: assert(0, "bad label: " + label);
  }
}
function _newSHA224object() {
  var label = 0;
  var $1=__PyObject_New(_SHA224type);
  var $2=$1;
  return $2;
}
function _sha_update($sha_info, $buffer, $count) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $i;
      var $clo;
      $1=$sha_info;
      $2=$buffer;
      $3=$count;
      var $4=$1;
      var $5=(($4+40)|0);
      var $6=HEAP32[(($5)>>2)];
      var $7=$3;
      var $8=$7 << 3;
      var $9=((($6)+($8))|0);
      $clo=$9;
      var $10=$clo;
      var $11=$1;
      var $12=(($11+40)|0);
      var $13=HEAP32[(($12)>>2)];
      var $14=(($10)>>>(0)) < (($13)>>>(0));
      if ($14) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $16=$1;
      var $17=(($16+44)|0);
      var $18=HEAP32[(($17)>>2)];
      var $19=((($18)+(1))|0);
      HEAP32[(($17)>>2)]=$19;
      label = 3; break;
    case 3: 
      var $21=$clo;
      var $22=$1;
      var $23=(($22+40)|0);
      HEAP32[(($23)>>2)]=$21;
      var $24=$3;
      var $25=$24 >>> 29;
      var $26=$1;
      var $27=(($26+44)|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=((($28)+($25))|0);
      HEAP32[(($27)>>2)]=$29;
      var $30=$1;
      var $31=(($30+116)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=(($32)|(0))!=0;
      if ($33) { label = 4; break; } else { label = 10; break; }
    case 4: 
      var $35=$1;
      var $36=(($35+116)|0);
      var $37=HEAP32[(($36)>>2)];
      var $38=(((64)-($37))|0);
      $i=$38;
      var $39=$i;
      var $40=$3;
      var $41=(($39)|(0)) > (($40)|(0));
      if ($41) { label = 5; break; } else { label = 6; break; }
    case 5: 
      var $43=$3;
      $i=$43;
      label = 6; break;
    case 6: 
      var $45=$1;
      var $46=(($45+48)|0);
      var $47=(($46)|0);
      var $48=$1;
      var $49=(($48+116)|0);
      var $50=HEAP32[(($49)>>2)];
      var $51=(($47+$50)|0);
      var $52=$2;
      var $53=$i;
      assert($53 % 1 === 0);_memcpy($51, $52, $53);
      var $54=$i;
      var $55=$3;
      var $56=((($55)-($54))|0);
      $3=$56;
      var $57=$i;
      var $58=$2;
      var $59=(($58+$57)|0);
      $2=$59;
      var $60=$i;
      var $61=$1;
      var $62=(($61+116)|0);
      var $63=HEAP32[(($62)>>2)];
      var $64=((($63)+($60))|0);
      HEAP32[(($62)>>2)]=$64;
      var $65=$1;
      var $66=(($65+116)|0);
      var $67=HEAP32[(($66)>>2)];
      var $68=(($67)|(0))==64;
      if ($68) { label = 7; break; } else { label = 8; break; }
    case 7: 
      var $70=$1;
      _sha_transform($70);
      label = 9; break;
    case 8: 
      label = 14; break;
    case 9: 
      label = 10; break;
    case 10: 
      label = 11; break;
    case 11: 
      var $75=$3;
      var $76=(($75)|(0)) >= 64;
      if ($76) { label = 12; break; } else { label = 13; break; }
    case 12: 
      var $78=$1;
      var $79=(($78+48)|0);
      var $80=$79;
      var $81=$2;
      assert(64 % 1 === 0);_memcpy($80, $81, 64);
      var $82=$2;
      var $83=(($82+64)|0);
      $2=$83;
      var $84=$3;
      var $85=((($84)-(64))|0);
      $3=$85;
      var $86=$1;
      _sha_transform($86);
      label = 11; break;
    case 13: 
      var $88=$1;
      var $89=(($88+48)|0);
      var $90=$89;
      var $91=$2;
      var $92=$3;
      assert($92 % 1 === 0);_memcpy($90, $91, $92);
      var $93=$3;
      var $94=$1;
      var $95=(($94+116)|0);
      HEAP32[(($95)>>2)]=$93;
      label = 14; break;
    case 14: 
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _sha_transform($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 288)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i;
      var $S=__stackBase__;
      var $W=(__stackBase__)+(32);
      var $t0;
      var $t1;
      $1=$sha_info;
      var $2=$W;
      var $3=$1;
      var $4=(($3+48)|0);
      var $5=$4;
      assert(64 % 1 === 0);_memcpy($2, $5, 64);
      var $6=(($W)|0);
      var $7=$1;
      var $8=(($7+112)|0);
      var $9=HEAP32[(($8)>>2)];
      _longReverse($6, 64, $9);
      $i=16;
      label = 2; break;
    case 2: 
      var $11=$i;
      var $12=(($11)|(0)) < 64;
      if ($12) { label = 3; break; } else { label = 5; break; }
    case 3: 
      var $14=$i;
      var $15=((($14)-(2))|0);
      var $16=(($W+($15<<2))|0);
      var $17=HEAP32[(($16)>>2)];
      var $18=$17 >>> 17;
      var $19=$i;
      var $20=((($19)-(2))|0);
      var $21=(($W+($20<<2))|0);
      var $22=HEAP32[(($21)>>2)];
      var $23=$22 << 15;
      var $24=$18 | $23;
      var $25=$i;
      var $26=((($25)-(2))|0);
      var $27=(($W+($26<<2))|0);
      var $28=HEAP32[(($27)>>2)];
      var $29=$28 >>> 19;
      var $30=$i;
      var $31=((($30)-(2))|0);
      var $32=(($W+($31<<2))|0);
      var $33=HEAP32[(($32)>>2)];
      var $34=$33 << 13;
      var $35=$29 | $34;
      var $36=$24 ^ $35;
      var $37=$i;
      var $38=((($37)-(2))|0);
      var $39=(($W+($38<<2))|0);
      var $40=HEAP32[(($39)>>2)];
      var $41=$40 >>> 10;
      var $42=$36 ^ $41;
      var $43=$i;
      var $44=((($43)-(7))|0);
      var $45=(($W+($44<<2))|0);
      var $46=HEAP32[(($45)>>2)];
      var $47=((($42)+($46))|0);
      var $48=$i;
      var $49=((($48)-(15))|0);
      var $50=(($W+($49<<2))|0);
      var $51=HEAP32[(($50)>>2)];
      var $52=$51 >>> 7;
      var $53=$i;
      var $54=((($53)-(15))|0);
      var $55=(($W+($54<<2))|0);
      var $56=HEAP32[(($55)>>2)];
      var $57=$56 << 25;
      var $58=$52 | $57;
      var $59=$i;
      var $60=((($59)-(15))|0);
      var $61=(($W+($60<<2))|0);
      var $62=HEAP32[(($61)>>2)];
      var $63=$62 >>> 18;
      var $64=$i;
      var $65=((($64)-(15))|0);
      var $66=(($W+($65<<2))|0);
      var $67=HEAP32[(($66)>>2)];
      var $68=$67 << 14;
      var $69=$63 | $68;
      var $70=$58 ^ $69;
      var $71=$i;
      var $72=((($71)-(15))|0);
      var $73=(($W+($72<<2))|0);
      var $74=HEAP32[(($73)>>2)];
      var $75=$74 >>> 3;
      var $76=$70 ^ $75;
      var $77=((($47)+($76))|0);
      var $78=$i;
      var $79=((($78)-(16))|0);
      var $80=(($W+($79<<2))|0);
      var $81=HEAP32[(($80)>>2)];
      var $82=((($77)+($81))|0);
      var $83=$i;
      var $84=(($W+($83<<2))|0);
      HEAP32[(($84)>>2)]=$82;
      label = 4; break;
    case 4: 
      var $86=$i;
      var $87=((($86)+(1))|0);
      $i=$87;
      label = 2; break;
    case 5: 
      $i=0;
      label = 6; break;
    case 6: 
      var $90=$i;
      var $91=(($90)|(0)) < 8;
      if ($91) { label = 7; break; } else { label = 9; break; }
    case 7: 
      var $93=$i;
      var $94=$1;
      var $95=(($94+8)|0);
      var $96=(($95+($93<<2))|0);
      var $97=HEAP32[(($96)>>2)];
      var $98=$i;
      var $99=(($S+($98<<2))|0);
      HEAP32[(($99)>>2)]=$97;
      label = 8; break;
    case 8: 
      var $101=$i;
      var $102=((($101)+(1))|0);
      $i=$102;
      label = 6; break;
    case 9: 
      var $104=(($S+28)|0);
      var $105=HEAP32[(($104)>>2)];
      var $106=(($S+16)|0);
      var $107=HEAP32[(($106)>>2)];
      var $108=$107 >>> 6;
      var $109=(($S+16)|0);
      var $110=HEAP32[(($109)>>2)];
      var $111=$110 << 26;
      var $112=$108 | $111;
      var $113=(($S+16)|0);
      var $114=HEAP32[(($113)>>2)];
      var $115=$114 >>> 11;
      var $116=(($S+16)|0);
      var $117=HEAP32[(($116)>>2)];
      var $118=$117 << 21;
      var $119=$115 | $118;
      var $120=$112 ^ $119;
      var $121=(($S+16)|0);
      var $122=HEAP32[(($121)>>2)];
      var $123=$122 >>> 25;
      var $124=(($S+16)|0);
      var $125=HEAP32[(($124)>>2)];
      var $126=$125 << 7;
      var $127=$123 | $126;
      var $128=$120 ^ $127;
      var $129=((($105)+($128))|0);
      var $130=(($S+24)|0);
      var $131=HEAP32[(($130)>>2)];
      var $132=(($S+16)|0);
      var $133=HEAP32[(($132)>>2)];
      var $134=(($S+20)|0);
      var $135=HEAP32[(($134)>>2)];
      var $136=(($S+24)|0);
      var $137=HEAP32[(($136)>>2)];
      var $138=$135 ^ $137;
      var $139=$133 & $138;
      var $140=$131 ^ $139;
      var $141=((($129)+($140))|0);
      var $142=((($141)+(1116352408))|0);
      var $143=(($W)|0);
      var $144=HEAP32[(($143)>>2)];
      var $145=((($142)+($144))|0);
      $t0=$145;
      var $146=(($S)|0);
      var $147=HEAP32[(($146)>>2)];
      var $148=$147 >>> 2;
      var $149=(($S)|0);
      var $150=HEAP32[(($149)>>2)];
      var $151=$150 << 30;
      var $152=$148 | $151;
      var $153=(($S)|0);
      var $154=HEAP32[(($153)>>2)];
      var $155=$154 >>> 13;
      var $156=(($S)|0);
      var $157=HEAP32[(($156)>>2)];
      var $158=$157 << 19;
      var $159=$155 | $158;
      var $160=$152 ^ $159;
      var $161=(($S)|0);
      var $162=HEAP32[(($161)>>2)];
      var $163=$162 >>> 22;
      var $164=(($S)|0);
      var $165=HEAP32[(($164)>>2)];
      var $166=$165 << 10;
      var $167=$163 | $166;
      var $168=$160 ^ $167;
      var $169=(($S)|0);
      var $170=HEAP32[(($169)>>2)];
      var $171=(($S+4)|0);
      var $172=HEAP32[(($171)>>2)];
      var $173=$170 | $172;
      var $174=(($S+8)|0);
      var $175=HEAP32[(($174)>>2)];
      var $176=$173 & $175;
      var $177=(($S)|0);
      var $178=HEAP32[(($177)>>2)];
      var $179=(($S+4)|0);
      var $180=HEAP32[(($179)>>2)];
      var $181=$178 & $180;
      var $182=$176 | $181;
      var $183=((($168)+($182))|0);
      $t1=$183;
      var $184=$t0;
      var $185=(($S+12)|0);
      var $186=HEAP32[(($185)>>2)];
      var $187=((($186)+($184))|0);
      HEAP32[(($185)>>2)]=$187;
      var $188=$t0;
      var $189=$t1;
      var $190=((($188)+($189))|0);
      var $191=(($S+28)|0);
      HEAP32[(($191)>>2)]=$190;
      var $192=(($S+24)|0);
      var $193=HEAP32[(($192)>>2)];
      var $194=(($S+12)|0);
      var $195=HEAP32[(($194)>>2)];
      var $196=$195 >>> 6;
      var $197=(($S+12)|0);
      var $198=HEAP32[(($197)>>2)];
      var $199=$198 << 26;
      var $200=$196 | $199;
      var $201=(($S+12)|0);
      var $202=HEAP32[(($201)>>2)];
      var $203=$202 >>> 11;
      var $204=(($S+12)|0);
      var $205=HEAP32[(($204)>>2)];
      var $206=$205 << 21;
      var $207=$203 | $206;
      var $208=$200 ^ $207;
      var $209=(($S+12)|0);
      var $210=HEAP32[(($209)>>2)];
      var $211=$210 >>> 25;
      var $212=(($S+12)|0);
      var $213=HEAP32[(($212)>>2)];
      var $214=$213 << 7;
      var $215=$211 | $214;
      var $216=$208 ^ $215;
      var $217=((($193)+($216))|0);
      var $218=(($S+20)|0);
      var $219=HEAP32[(($218)>>2)];
      var $220=(($S+12)|0);
      var $221=HEAP32[(($220)>>2)];
      var $222=(($S+16)|0);
      var $223=HEAP32[(($222)>>2)];
      var $224=(($S+20)|0);
      var $225=HEAP32[(($224)>>2)];
      var $226=$223 ^ $225;
      var $227=$221 & $226;
      var $228=$219 ^ $227;
      var $229=((($217)+($228))|0);
      var $230=((($229)+(1899447441))|0);
      var $231=(($W+4)|0);
      var $232=HEAP32[(($231)>>2)];
      var $233=((($230)+($232))|0);
      $t0=$233;
      var $234=(($S+28)|0);
      var $235=HEAP32[(($234)>>2)];
      var $236=$235 >>> 2;
      var $237=(($S+28)|0);
      var $238=HEAP32[(($237)>>2)];
      var $239=$238 << 30;
      var $240=$236 | $239;
      var $241=(($S+28)|0);
      var $242=HEAP32[(($241)>>2)];
      var $243=$242 >>> 13;
      var $244=(($S+28)|0);
      var $245=HEAP32[(($244)>>2)];
      var $246=$245 << 19;
      var $247=$243 | $246;
      var $248=$240 ^ $247;
      var $249=(($S+28)|0);
      var $250=HEAP32[(($249)>>2)];
      var $251=$250 >>> 22;
      var $252=(($S+28)|0);
      var $253=HEAP32[(($252)>>2)];
      var $254=$253 << 10;
      var $255=$251 | $254;
      var $256=$248 ^ $255;
      var $257=(($S+28)|0);
      var $258=HEAP32[(($257)>>2)];
      var $259=(($S)|0);
      var $260=HEAP32[(($259)>>2)];
      var $261=$258 | $260;
      var $262=(($S+4)|0);
      var $263=HEAP32[(($262)>>2)];
      var $264=$261 & $263;
      var $265=(($S+28)|0);
      var $266=HEAP32[(($265)>>2)];
      var $267=(($S)|0);
      var $268=HEAP32[(($267)>>2)];
      var $269=$266 & $268;
      var $270=$264 | $269;
      var $271=((($256)+($270))|0);
      $t1=$271;
      var $272=$t0;
      var $273=(($S+8)|0);
      var $274=HEAP32[(($273)>>2)];
      var $275=((($274)+($272))|0);
      HEAP32[(($273)>>2)]=$275;
      var $276=$t0;
      var $277=$t1;
      var $278=((($276)+($277))|0);
      var $279=(($S+24)|0);
      HEAP32[(($279)>>2)]=$278;
      var $280=(($S+20)|0);
      var $281=HEAP32[(($280)>>2)];
      var $282=(($S+8)|0);
      var $283=HEAP32[(($282)>>2)];
      var $284=$283 >>> 6;
      var $285=(($S+8)|0);
      var $286=HEAP32[(($285)>>2)];
      var $287=$286 << 26;
      var $288=$284 | $287;
      var $289=(($S+8)|0);
      var $290=HEAP32[(($289)>>2)];
      var $291=$290 >>> 11;
      var $292=(($S+8)|0);
      var $293=HEAP32[(($292)>>2)];
      var $294=$293 << 21;
      var $295=$291 | $294;
      var $296=$288 ^ $295;
      var $297=(($S+8)|0);
      var $298=HEAP32[(($297)>>2)];
      var $299=$298 >>> 25;
      var $300=(($S+8)|0);
      var $301=HEAP32[(($300)>>2)];
      var $302=$301 << 7;
      var $303=$299 | $302;
      var $304=$296 ^ $303;
      var $305=((($281)+($304))|0);
      var $306=(($S+16)|0);
      var $307=HEAP32[(($306)>>2)];
      var $308=(($S+8)|0);
      var $309=HEAP32[(($308)>>2)];
      var $310=(($S+12)|0);
      var $311=HEAP32[(($310)>>2)];
      var $312=(($S+16)|0);
      var $313=HEAP32[(($312)>>2)];
      var $314=$311 ^ $313;
      var $315=$309 & $314;
      var $316=$307 ^ $315;
      var $317=((($305)+($316))|0);
      var $318=((($317)-(1245643825))|0);
      var $319=(($W+8)|0);
      var $320=HEAP32[(($319)>>2)];
      var $321=((($318)+($320))|0);
      $t0=$321;
      var $322=(($S+24)|0);
      var $323=HEAP32[(($322)>>2)];
      var $324=$323 >>> 2;
      var $325=(($S+24)|0);
      var $326=HEAP32[(($325)>>2)];
      var $327=$326 << 30;
      var $328=$324 | $327;
      var $329=(($S+24)|0);
      var $330=HEAP32[(($329)>>2)];
      var $331=$330 >>> 13;
      var $332=(($S+24)|0);
      var $333=HEAP32[(($332)>>2)];
      var $334=$333 << 19;
      var $335=$331 | $334;
      var $336=$328 ^ $335;
      var $337=(($S+24)|0);
      var $338=HEAP32[(($337)>>2)];
      var $339=$338 >>> 22;
      var $340=(($S+24)|0);
      var $341=HEAP32[(($340)>>2)];
      var $342=$341 << 10;
      var $343=$339 | $342;
      var $344=$336 ^ $343;
      var $345=(($S+24)|0);
      var $346=HEAP32[(($345)>>2)];
      var $347=(($S+28)|0);
      var $348=HEAP32[(($347)>>2)];
      var $349=$346 | $348;
      var $350=(($S)|0);
      var $351=HEAP32[(($350)>>2)];
      var $352=$349 & $351;
      var $353=(($S+24)|0);
      var $354=HEAP32[(($353)>>2)];
      var $355=(($S+28)|0);
      var $356=HEAP32[(($355)>>2)];
      var $357=$354 & $356;
      var $358=$352 | $357;
      var $359=((($344)+($358))|0);
      $t1=$359;
      var $360=$t0;
      var $361=(($S+4)|0);
      var $362=HEAP32[(($361)>>2)];
      var $363=((($362)+($360))|0);
      HEAP32[(($361)>>2)]=$363;
      var $364=$t0;
      var $365=$t1;
      var $366=((($364)+($365))|0);
      var $367=(($S+20)|0);
      HEAP32[(($367)>>2)]=$366;
      var $368=(($S+16)|0);
      var $369=HEAP32[(($368)>>2)];
      var $370=(($S+4)|0);
      var $371=HEAP32[(($370)>>2)];
      var $372=$371 >>> 6;
      var $373=(($S+4)|0);
      var $374=HEAP32[(($373)>>2)];
      var $375=$374 << 26;
      var $376=$372 | $375;
      var $377=(($S+4)|0);
      var $378=HEAP32[(($377)>>2)];
      var $379=$378 >>> 11;
      var $380=(($S+4)|0);
      var $381=HEAP32[(($380)>>2)];
      var $382=$381 << 21;
      var $383=$379 | $382;
      var $384=$376 ^ $383;
      var $385=(($S+4)|0);
      var $386=HEAP32[(($385)>>2)];
      var $387=$386 >>> 25;
      var $388=(($S+4)|0);
      var $389=HEAP32[(($388)>>2)];
      var $390=$389 << 7;
      var $391=$387 | $390;
      var $392=$384 ^ $391;
      var $393=((($369)+($392))|0);
      var $394=(($S+12)|0);
      var $395=HEAP32[(($394)>>2)];
      var $396=(($S+4)|0);
      var $397=HEAP32[(($396)>>2)];
      var $398=(($S+8)|0);
      var $399=HEAP32[(($398)>>2)];
      var $400=(($S+12)|0);
      var $401=HEAP32[(($400)>>2)];
      var $402=$399 ^ $401;
      var $403=$397 & $402;
      var $404=$395 ^ $403;
      var $405=((($393)+($404))|0);
      var $406=((($405)-(373957723))|0);
      var $407=(($W+12)|0);
      var $408=HEAP32[(($407)>>2)];
      var $409=((($406)+($408))|0);
      $t0=$409;
      var $410=(($S+20)|0);
      var $411=HEAP32[(($410)>>2)];
      var $412=$411 >>> 2;
      var $413=(($S+20)|0);
      var $414=HEAP32[(($413)>>2)];
      var $415=$414 << 30;
      var $416=$412 | $415;
      var $417=(($S+20)|0);
      var $418=HEAP32[(($417)>>2)];
      var $419=$418 >>> 13;
      var $420=(($S+20)|0);
      var $421=HEAP32[(($420)>>2)];
      var $422=$421 << 19;
      var $423=$419 | $422;
      var $424=$416 ^ $423;
      var $425=(($S+20)|0);
      var $426=HEAP32[(($425)>>2)];
      var $427=$426 >>> 22;
      var $428=(($S+20)|0);
      var $429=HEAP32[(($428)>>2)];
      var $430=$429 << 10;
      var $431=$427 | $430;
      var $432=$424 ^ $431;
      var $433=(($S+20)|0);
      var $434=HEAP32[(($433)>>2)];
      var $435=(($S+24)|0);
      var $436=HEAP32[(($435)>>2)];
      var $437=$434 | $436;
      var $438=(($S+28)|0);
      var $439=HEAP32[(($438)>>2)];
      var $440=$437 & $439;
      var $441=(($S+20)|0);
      var $442=HEAP32[(($441)>>2)];
      var $443=(($S+24)|0);
      var $444=HEAP32[(($443)>>2)];
      var $445=$442 & $444;
      var $446=$440 | $445;
      var $447=((($432)+($446))|0);
      $t1=$447;
      var $448=$t0;
      var $449=(($S)|0);
      var $450=HEAP32[(($449)>>2)];
      var $451=((($450)+($448))|0);
      HEAP32[(($449)>>2)]=$451;
      var $452=$t0;
      var $453=$t1;
      var $454=((($452)+($453))|0);
      var $455=(($S+16)|0);
      HEAP32[(($455)>>2)]=$454;
      var $456=(($S+12)|0);
      var $457=HEAP32[(($456)>>2)];
      var $458=(($S)|0);
      var $459=HEAP32[(($458)>>2)];
      var $460=$459 >>> 6;
      var $461=(($S)|0);
      var $462=HEAP32[(($461)>>2)];
      var $463=$462 << 26;
      var $464=$460 | $463;
      var $465=(($S)|0);
      var $466=HEAP32[(($465)>>2)];
      var $467=$466 >>> 11;
      var $468=(($S)|0);
      var $469=HEAP32[(($468)>>2)];
      var $470=$469 << 21;
      var $471=$467 | $470;
      var $472=$464 ^ $471;
      var $473=(($S)|0);
      var $474=HEAP32[(($473)>>2)];
      var $475=$474 >>> 25;
      var $476=(($S)|0);
      var $477=HEAP32[(($476)>>2)];
      var $478=$477 << 7;
      var $479=$475 | $478;
      var $480=$472 ^ $479;
      var $481=((($457)+($480))|0);
      var $482=(($S+8)|0);
      var $483=HEAP32[(($482)>>2)];
      var $484=(($S)|0);
      var $485=HEAP32[(($484)>>2)];
      var $486=(($S+4)|0);
      var $487=HEAP32[(($486)>>2)];
      var $488=(($S+8)|0);
      var $489=HEAP32[(($488)>>2)];
      var $490=$487 ^ $489;
      var $491=$485 & $490;
      var $492=$483 ^ $491;
      var $493=((($481)+($492))|0);
      var $494=((($493)+(961987163))|0);
      var $495=(($W+16)|0);
      var $496=HEAP32[(($495)>>2)];
      var $497=((($494)+($496))|0);
      $t0=$497;
      var $498=(($S+16)|0);
      var $499=HEAP32[(($498)>>2)];
      var $500=$499 >>> 2;
      var $501=(($S+16)|0);
      var $502=HEAP32[(($501)>>2)];
      var $503=$502 << 30;
      var $504=$500 | $503;
      var $505=(($S+16)|0);
      var $506=HEAP32[(($505)>>2)];
      var $507=$506 >>> 13;
      var $508=(($S+16)|0);
      var $509=HEAP32[(($508)>>2)];
      var $510=$509 << 19;
      var $511=$507 | $510;
      var $512=$504 ^ $511;
      var $513=(($S+16)|0);
      var $514=HEAP32[(($513)>>2)];
      var $515=$514 >>> 22;
      var $516=(($S+16)|0);
      var $517=HEAP32[(($516)>>2)];
      var $518=$517 << 10;
      var $519=$515 | $518;
      var $520=$512 ^ $519;
      var $521=(($S+16)|0);
      var $522=HEAP32[(($521)>>2)];
      var $523=(($S+20)|0);
      var $524=HEAP32[(($523)>>2)];
      var $525=$522 | $524;
      var $526=(($S+24)|0);
      var $527=HEAP32[(($526)>>2)];
      var $528=$525 & $527;
      var $529=(($S+16)|0);
      var $530=HEAP32[(($529)>>2)];
      var $531=(($S+20)|0);
      var $532=HEAP32[(($531)>>2)];
      var $533=$530 & $532;
      var $534=$528 | $533;
      var $535=((($520)+($534))|0);
      $t1=$535;
      var $536=$t0;
      var $537=(($S+28)|0);
      var $538=HEAP32[(($537)>>2)];
      var $539=((($538)+($536))|0);
      HEAP32[(($537)>>2)]=$539;
      var $540=$t0;
      var $541=$t1;
      var $542=((($540)+($541))|0);
      var $543=(($S+12)|0);
      HEAP32[(($543)>>2)]=$542;
      var $544=(($S+8)|0);
      var $545=HEAP32[(($544)>>2)];
      var $546=(($S+28)|0);
      var $547=HEAP32[(($546)>>2)];
      var $548=$547 >>> 6;
      var $549=(($S+28)|0);
      var $550=HEAP32[(($549)>>2)];
      var $551=$550 << 26;
      var $552=$548 | $551;
      var $553=(($S+28)|0);
      var $554=HEAP32[(($553)>>2)];
      var $555=$554 >>> 11;
      var $556=(($S+28)|0);
      var $557=HEAP32[(($556)>>2)];
      var $558=$557 << 21;
      var $559=$555 | $558;
      var $560=$552 ^ $559;
      var $561=(($S+28)|0);
      var $562=HEAP32[(($561)>>2)];
      var $563=$562 >>> 25;
      var $564=(($S+28)|0);
      var $565=HEAP32[(($564)>>2)];
      var $566=$565 << 7;
      var $567=$563 | $566;
      var $568=$560 ^ $567;
      var $569=((($545)+($568))|0);
      var $570=(($S+4)|0);
      var $571=HEAP32[(($570)>>2)];
      var $572=(($S+28)|0);
      var $573=HEAP32[(($572)>>2)];
      var $574=(($S)|0);
      var $575=HEAP32[(($574)>>2)];
      var $576=(($S+4)|0);
      var $577=HEAP32[(($576)>>2)];
      var $578=$575 ^ $577;
      var $579=$573 & $578;
      var $580=$571 ^ $579;
      var $581=((($569)+($580))|0);
      var $582=((($581)+(1508970993))|0);
      var $583=(($W+20)|0);
      var $584=HEAP32[(($583)>>2)];
      var $585=((($582)+($584))|0);
      $t0=$585;
      var $586=(($S+12)|0);
      var $587=HEAP32[(($586)>>2)];
      var $588=$587 >>> 2;
      var $589=(($S+12)|0);
      var $590=HEAP32[(($589)>>2)];
      var $591=$590 << 30;
      var $592=$588 | $591;
      var $593=(($S+12)|0);
      var $594=HEAP32[(($593)>>2)];
      var $595=$594 >>> 13;
      var $596=(($S+12)|0);
      var $597=HEAP32[(($596)>>2)];
      var $598=$597 << 19;
      var $599=$595 | $598;
      var $600=$592 ^ $599;
      var $601=(($S+12)|0);
      var $602=HEAP32[(($601)>>2)];
      var $603=$602 >>> 22;
      var $604=(($S+12)|0);
      var $605=HEAP32[(($604)>>2)];
      var $606=$605 << 10;
      var $607=$603 | $606;
      var $608=$600 ^ $607;
      var $609=(($S+12)|0);
      var $610=HEAP32[(($609)>>2)];
      var $611=(($S+16)|0);
      var $612=HEAP32[(($611)>>2)];
      var $613=$610 | $612;
      var $614=(($S+20)|0);
      var $615=HEAP32[(($614)>>2)];
      var $616=$613 & $615;
      var $617=(($S+12)|0);
      var $618=HEAP32[(($617)>>2)];
      var $619=(($S+16)|0);
      var $620=HEAP32[(($619)>>2)];
      var $621=$618 & $620;
      var $622=$616 | $621;
      var $623=((($608)+($622))|0);
      $t1=$623;
      var $624=$t0;
      var $625=(($S+24)|0);
      var $626=HEAP32[(($625)>>2)];
      var $627=((($626)+($624))|0);
      HEAP32[(($625)>>2)]=$627;
      var $628=$t0;
      var $629=$t1;
      var $630=((($628)+($629))|0);
      var $631=(($S+8)|0);
      HEAP32[(($631)>>2)]=$630;
      var $632=(($S+4)|0);
      var $633=HEAP32[(($632)>>2)];
      var $634=(($S+24)|0);
      var $635=HEAP32[(($634)>>2)];
      var $636=$635 >>> 6;
      var $637=(($S+24)|0);
      var $638=HEAP32[(($637)>>2)];
      var $639=$638 << 26;
      var $640=$636 | $639;
      var $641=(($S+24)|0);
      var $642=HEAP32[(($641)>>2)];
      var $643=$642 >>> 11;
      var $644=(($S+24)|0);
      var $645=HEAP32[(($644)>>2)];
      var $646=$645 << 21;
      var $647=$643 | $646;
      var $648=$640 ^ $647;
      var $649=(($S+24)|0);
      var $650=HEAP32[(($649)>>2)];
      var $651=$650 >>> 25;
      var $652=(($S+24)|0);
      var $653=HEAP32[(($652)>>2)];
      var $654=$653 << 7;
      var $655=$651 | $654;
      var $656=$648 ^ $655;
      var $657=((($633)+($656))|0);
      var $658=(($S)|0);
      var $659=HEAP32[(($658)>>2)];
      var $660=(($S+24)|0);
      var $661=HEAP32[(($660)>>2)];
      var $662=(($S+28)|0);
      var $663=HEAP32[(($662)>>2)];
      var $664=(($S)|0);
      var $665=HEAP32[(($664)>>2)];
      var $666=$663 ^ $665;
      var $667=$661 & $666;
      var $668=$659 ^ $667;
      var $669=((($657)+($668))|0);
      var $670=((($669)-(1841331548))|0);
      var $671=(($W+24)|0);
      var $672=HEAP32[(($671)>>2)];
      var $673=((($670)+($672))|0);
      $t0=$673;
      var $674=(($S+8)|0);
      var $675=HEAP32[(($674)>>2)];
      var $676=$675 >>> 2;
      var $677=(($S+8)|0);
      var $678=HEAP32[(($677)>>2)];
      var $679=$678 << 30;
      var $680=$676 | $679;
      var $681=(($S+8)|0);
      var $682=HEAP32[(($681)>>2)];
      var $683=$682 >>> 13;
      var $684=(($S+8)|0);
      var $685=HEAP32[(($684)>>2)];
      var $686=$685 << 19;
      var $687=$683 | $686;
      var $688=$680 ^ $687;
      var $689=(($S+8)|0);
      var $690=HEAP32[(($689)>>2)];
      var $691=$690 >>> 22;
      var $692=(($S+8)|0);
      var $693=HEAP32[(($692)>>2)];
      var $694=$693 << 10;
      var $695=$691 | $694;
      var $696=$688 ^ $695;
      var $697=(($S+8)|0);
      var $698=HEAP32[(($697)>>2)];
      var $699=(($S+12)|0);
      var $700=HEAP32[(($699)>>2)];
      var $701=$698 | $700;
      var $702=(($S+16)|0);
      var $703=HEAP32[(($702)>>2)];
      var $704=$701 & $703;
      var $705=(($S+8)|0);
      var $706=HEAP32[(($705)>>2)];
      var $707=(($S+12)|0);
      var $708=HEAP32[(($707)>>2)];
      var $709=$706 & $708;
      var $710=$704 | $709;
      var $711=((($696)+($710))|0);
      $t1=$711;
      var $712=$t0;
      var $713=(($S+20)|0);
      var $714=HEAP32[(($713)>>2)];
      var $715=((($714)+($712))|0);
      HEAP32[(($713)>>2)]=$715;
      var $716=$t0;
      var $717=$t1;
      var $718=((($716)+($717))|0);
      var $719=(($S+4)|0);
      HEAP32[(($719)>>2)]=$718;
      var $720=(($S)|0);
      var $721=HEAP32[(($720)>>2)];
      var $722=(($S+20)|0);
      var $723=HEAP32[(($722)>>2)];
      var $724=$723 >>> 6;
      var $725=(($S+20)|0);
      var $726=HEAP32[(($725)>>2)];
      var $727=$726 << 26;
      var $728=$724 | $727;
      var $729=(($S+20)|0);
      var $730=HEAP32[(($729)>>2)];
      var $731=$730 >>> 11;
      var $732=(($S+20)|0);
      var $733=HEAP32[(($732)>>2)];
      var $734=$733 << 21;
      var $735=$731 | $734;
      var $736=$728 ^ $735;
      var $737=(($S+20)|0);
      var $738=HEAP32[(($737)>>2)];
      var $739=$738 >>> 25;
      var $740=(($S+20)|0);
      var $741=HEAP32[(($740)>>2)];
      var $742=$741 << 7;
      var $743=$739 | $742;
      var $744=$736 ^ $743;
      var $745=((($721)+($744))|0);
      var $746=(($S+28)|0);
      var $747=HEAP32[(($746)>>2)];
      var $748=(($S+20)|0);
      var $749=HEAP32[(($748)>>2)];
      var $750=(($S+24)|0);
      var $751=HEAP32[(($750)>>2)];
      var $752=(($S+28)|0);
      var $753=HEAP32[(($752)>>2)];
      var $754=$751 ^ $753;
      var $755=$749 & $754;
      var $756=$747 ^ $755;
      var $757=((($745)+($756))|0);
      var $758=((($757)-(1424204075))|0);
      var $759=(($W+28)|0);
      var $760=HEAP32[(($759)>>2)];
      var $761=((($758)+($760))|0);
      $t0=$761;
      var $762=(($S+4)|0);
      var $763=HEAP32[(($762)>>2)];
      var $764=$763 >>> 2;
      var $765=(($S+4)|0);
      var $766=HEAP32[(($765)>>2)];
      var $767=$766 << 30;
      var $768=$764 | $767;
      var $769=(($S+4)|0);
      var $770=HEAP32[(($769)>>2)];
      var $771=$770 >>> 13;
      var $772=(($S+4)|0);
      var $773=HEAP32[(($772)>>2)];
      var $774=$773 << 19;
      var $775=$771 | $774;
      var $776=$768 ^ $775;
      var $777=(($S+4)|0);
      var $778=HEAP32[(($777)>>2)];
      var $779=$778 >>> 22;
      var $780=(($S+4)|0);
      var $781=HEAP32[(($780)>>2)];
      var $782=$781 << 10;
      var $783=$779 | $782;
      var $784=$776 ^ $783;
      var $785=(($S+4)|0);
      var $786=HEAP32[(($785)>>2)];
      var $787=(($S+8)|0);
      var $788=HEAP32[(($787)>>2)];
      var $789=$786 | $788;
      var $790=(($S+12)|0);
      var $791=HEAP32[(($790)>>2)];
      var $792=$789 & $791;
      var $793=(($S+4)|0);
      var $794=HEAP32[(($793)>>2)];
      var $795=(($S+8)|0);
      var $796=HEAP32[(($795)>>2)];
      var $797=$794 & $796;
      var $798=$792 | $797;
      var $799=((($784)+($798))|0);
      $t1=$799;
      var $800=$t0;
      var $801=(($S+16)|0);
      var $802=HEAP32[(($801)>>2)];
      var $803=((($802)+($800))|0);
      HEAP32[(($801)>>2)]=$803;
      var $804=$t0;
      var $805=$t1;
      var $806=((($804)+($805))|0);
      var $807=(($S)|0);
      HEAP32[(($807)>>2)]=$806;
      var $808=(($S+28)|0);
      var $809=HEAP32[(($808)>>2)];
      var $810=(($S+16)|0);
      var $811=HEAP32[(($810)>>2)];
      var $812=$811 >>> 6;
      var $813=(($S+16)|0);
      var $814=HEAP32[(($813)>>2)];
      var $815=$814 << 26;
      var $816=$812 | $815;
      var $817=(($S+16)|0);
      var $818=HEAP32[(($817)>>2)];
      var $819=$818 >>> 11;
      var $820=(($S+16)|0);
      var $821=HEAP32[(($820)>>2)];
      var $822=$821 << 21;
      var $823=$819 | $822;
      var $824=$816 ^ $823;
      var $825=(($S+16)|0);
      var $826=HEAP32[(($825)>>2)];
      var $827=$826 >>> 25;
      var $828=(($S+16)|0);
      var $829=HEAP32[(($828)>>2)];
      var $830=$829 << 7;
      var $831=$827 | $830;
      var $832=$824 ^ $831;
      var $833=((($809)+($832))|0);
      var $834=(($S+24)|0);
      var $835=HEAP32[(($834)>>2)];
      var $836=(($S+16)|0);
      var $837=HEAP32[(($836)>>2)];
      var $838=(($S+20)|0);
      var $839=HEAP32[(($838)>>2)];
      var $840=(($S+24)|0);
      var $841=HEAP32[(($840)>>2)];
      var $842=$839 ^ $841;
      var $843=$837 & $842;
      var $844=$835 ^ $843;
      var $845=((($833)+($844))|0);
      var $846=((($845)-(670586216))|0);
      var $847=(($W+32)|0);
      var $848=HEAP32[(($847)>>2)];
      var $849=((($846)+($848))|0);
      $t0=$849;
      var $850=(($S)|0);
      var $851=HEAP32[(($850)>>2)];
      var $852=$851 >>> 2;
      var $853=(($S)|0);
      var $854=HEAP32[(($853)>>2)];
      var $855=$854 << 30;
      var $856=$852 | $855;
      var $857=(($S)|0);
      var $858=HEAP32[(($857)>>2)];
      var $859=$858 >>> 13;
      var $860=(($S)|0);
      var $861=HEAP32[(($860)>>2)];
      var $862=$861 << 19;
      var $863=$859 | $862;
      var $864=$856 ^ $863;
      var $865=(($S)|0);
      var $866=HEAP32[(($865)>>2)];
      var $867=$866 >>> 22;
      var $868=(($S)|0);
      var $869=HEAP32[(($868)>>2)];
      var $870=$869 << 10;
      var $871=$867 | $870;
      var $872=$864 ^ $871;
      var $873=(($S)|0);
      var $874=HEAP32[(($873)>>2)];
      var $875=(($S+4)|0);
      var $876=HEAP32[(($875)>>2)];
      var $877=$874 | $876;
      var $878=(($S+8)|0);
      var $879=HEAP32[(($878)>>2)];
      var $880=$877 & $879;
      var $881=(($S)|0);
      var $882=HEAP32[(($881)>>2)];
      var $883=(($S+4)|0);
      var $884=HEAP32[(($883)>>2)];
      var $885=$882 & $884;
      var $886=$880 | $885;
      var $887=((($872)+($886))|0);
      $t1=$887;
      var $888=$t0;
      var $889=(($S+12)|0);
      var $890=HEAP32[(($889)>>2)];
      var $891=((($890)+($888))|0);
      HEAP32[(($889)>>2)]=$891;
      var $892=$t0;
      var $893=$t1;
      var $894=((($892)+($893))|0);
      var $895=(($S+28)|0);
      HEAP32[(($895)>>2)]=$894;
      var $896=(($S+24)|0);
      var $897=HEAP32[(($896)>>2)];
      var $898=(($S+12)|0);
      var $899=HEAP32[(($898)>>2)];
      var $900=$899 >>> 6;
      var $901=(($S+12)|0);
      var $902=HEAP32[(($901)>>2)];
      var $903=$902 << 26;
      var $904=$900 | $903;
      var $905=(($S+12)|0);
      var $906=HEAP32[(($905)>>2)];
      var $907=$906 >>> 11;
      var $908=(($S+12)|0);
      var $909=HEAP32[(($908)>>2)];
      var $910=$909 << 21;
      var $911=$907 | $910;
      var $912=$904 ^ $911;
      var $913=(($S+12)|0);
      var $914=HEAP32[(($913)>>2)];
      var $915=$914 >>> 25;
      var $916=(($S+12)|0);
      var $917=HEAP32[(($916)>>2)];
      var $918=$917 << 7;
      var $919=$915 | $918;
      var $920=$912 ^ $919;
      var $921=((($897)+($920))|0);
      var $922=(($S+20)|0);
      var $923=HEAP32[(($922)>>2)];
      var $924=(($S+12)|0);
      var $925=HEAP32[(($924)>>2)];
      var $926=(($S+16)|0);
      var $927=HEAP32[(($926)>>2)];
      var $928=(($S+20)|0);
      var $929=HEAP32[(($928)>>2)];
      var $930=$927 ^ $929;
      var $931=$925 & $930;
      var $932=$923 ^ $931;
      var $933=((($921)+($932))|0);
      var $934=((($933)+(310598401))|0);
      var $935=(($W+36)|0);
      var $936=HEAP32[(($935)>>2)];
      var $937=((($934)+($936))|0);
      $t0=$937;
      var $938=(($S+28)|0);
      var $939=HEAP32[(($938)>>2)];
      var $940=$939 >>> 2;
      var $941=(($S+28)|0);
      var $942=HEAP32[(($941)>>2)];
      var $943=$942 << 30;
      var $944=$940 | $943;
      var $945=(($S+28)|0);
      var $946=HEAP32[(($945)>>2)];
      var $947=$946 >>> 13;
      var $948=(($S+28)|0);
      var $949=HEAP32[(($948)>>2)];
      var $950=$949 << 19;
      var $951=$947 | $950;
      var $952=$944 ^ $951;
      var $953=(($S+28)|0);
      var $954=HEAP32[(($953)>>2)];
      var $955=$954 >>> 22;
      var $956=(($S+28)|0);
      var $957=HEAP32[(($956)>>2)];
      var $958=$957 << 10;
      var $959=$955 | $958;
      var $960=$952 ^ $959;
      var $961=(($S+28)|0);
      var $962=HEAP32[(($961)>>2)];
      var $963=(($S)|0);
      var $964=HEAP32[(($963)>>2)];
      var $965=$962 | $964;
      var $966=(($S+4)|0);
      var $967=HEAP32[(($966)>>2)];
      var $968=$965 & $967;
      var $969=(($S+28)|0);
      var $970=HEAP32[(($969)>>2)];
      var $971=(($S)|0);
      var $972=HEAP32[(($971)>>2)];
      var $973=$970 & $972;
      var $974=$968 | $973;
      var $975=((($960)+($974))|0);
      $t1=$975;
      var $976=$t0;
      var $977=(($S+8)|0);
      var $978=HEAP32[(($977)>>2)];
      var $979=((($978)+($976))|0);
      HEAP32[(($977)>>2)]=$979;
      var $980=$t0;
      var $981=$t1;
      var $982=((($980)+($981))|0);
      var $983=(($S+24)|0);
      HEAP32[(($983)>>2)]=$982;
      var $984=(($S+20)|0);
      var $985=HEAP32[(($984)>>2)];
      var $986=(($S+8)|0);
      var $987=HEAP32[(($986)>>2)];
      var $988=$987 >>> 6;
      var $989=(($S+8)|0);
      var $990=HEAP32[(($989)>>2)];
      var $991=$990 << 26;
      var $992=$988 | $991;
      var $993=(($S+8)|0);
      var $994=HEAP32[(($993)>>2)];
      var $995=$994 >>> 11;
      var $996=(($S+8)|0);
      var $997=HEAP32[(($996)>>2)];
      var $998=$997 << 21;
      var $999=$995 | $998;
      var $1000=$992 ^ $999;
      var $1001=(($S+8)|0);
      var $1002=HEAP32[(($1001)>>2)];
      var $1003=$1002 >>> 25;
      var $1004=(($S+8)|0);
      var $1005=HEAP32[(($1004)>>2)];
      var $1006=$1005 << 7;
      var $1007=$1003 | $1006;
      var $1008=$1000 ^ $1007;
      var $1009=((($985)+($1008))|0);
      var $1010=(($S+16)|0);
      var $1011=HEAP32[(($1010)>>2)];
      var $1012=(($S+8)|0);
      var $1013=HEAP32[(($1012)>>2)];
      var $1014=(($S+12)|0);
      var $1015=HEAP32[(($1014)>>2)];
      var $1016=(($S+16)|0);
      var $1017=HEAP32[(($1016)>>2)];
      var $1018=$1015 ^ $1017;
      var $1019=$1013 & $1018;
      var $1020=$1011 ^ $1019;
      var $1021=((($1009)+($1020))|0);
      var $1022=((($1021)+(607225278))|0);
      var $1023=(($W+40)|0);
      var $1024=HEAP32[(($1023)>>2)];
      var $1025=((($1022)+($1024))|0);
      $t0=$1025;
      var $1026=(($S+24)|0);
      var $1027=HEAP32[(($1026)>>2)];
      var $1028=$1027 >>> 2;
      var $1029=(($S+24)|0);
      var $1030=HEAP32[(($1029)>>2)];
      var $1031=$1030 << 30;
      var $1032=$1028 | $1031;
      var $1033=(($S+24)|0);
      var $1034=HEAP32[(($1033)>>2)];
      var $1035=$1034 >>> 13;
      var $1036=(($S+24)|0);
      var $1037=HEAP32[(($1036)>>2)];
      var $1038=$1037 << 19;
      var $1039=$1035 | $1038;
      var $1040=$1032 ^ $1039;
      var $1041=(($S+24)|0);
      var $1042=HEAP32[(($1041)>>2)];
      var $1043=$1042 >>> 22;
      var $1044=(($S+24)|0);
      var $1045=HEAP32[(($1044)>>2)];
      var $1046=$1045 << 10;
      var $1047=$1043 | $1046;
      var $1048=$1040 ^ $1047;
      var $1049=(($S+24)|0);
      var $1050=HEAP32[(($1049)>>2)];
      var $1051=(($S+28)|0);
      var $1052=HEAP32[(($1051)>>2)];
      var $1053=$1050 | $1052;
      var $1054=(($S)|0);
      var $1055=HEAP32[(($1054)>>2)];
      var $1056=$1053 & $1055;
      var $1057=(($S+24)|0);
      var $1058=HEAP32[(($1057)>>2)];
      var $1059=(($S+28)|0);
      var $1060=HEAP32[(($1059)>>2)];
      var $1061=$1058 & $1060;
      var $1062=$1056 | $1061;
      var $1063=((($1048)+($1062))|0);
      $t1=$1063;
      var $1064=$t0;
      var $1065=(($S+4)|0);
      var $1066=HEAP32[(($1065)>>2)];
      var $1067=((($1066)+($1064))|0);
      HEAP32[(($1065)>>2)]=$1067;
      var $1068=$t0;
      var $1069=$t1;
      var $1070=((($1068)+($1069))|0);
      var $1071=(($S+20)|0);
      HEAP32[(($1071)>>2)]=$1070;
      var $1072=(($S+16)|0);
      var $1073=HEAP32[(($1072)>>2)];
      var $1074=(($S+4)|0);
      var $1075=HEAP32[(($1074)>>2)];
      var $1076=$1075 >>> 6;
      var $1077=(($S+4)|0);
      var $1078=HEAP32[(($1077)>>2)];
      var $1079=$1078 << 26;
      var $1080=$1076 | $1079;
      var $1081=(($S+4)|0);
      var $1082=HEAP32[(($1081)>>2)];
      var $1083=$1082 >>> 11;
      var $1084=(($S+4)|0);
      var $1085=HEAP32[(($1084)>>2)];
      var $1086=$1085 << 21;
      var $1087=$1083 | $1086;
      var $1088=$1080 ^ $1087;
      var $1089=(($S+4)|0);
      var $1090=HEAP32[(($1089)>>2)];
      var $1091=$1090 >>> 25;
      var $1092=(($S+4)|0);
      var $1093=HEAP32[(($1092)>>2)];
      var $1094=$1093 << 7;
      var $1095=$1091 | $1094;
      var $1096=$1088 ^ $1095;
      var $1097=((($1073)+($1096))|0);
      var $1098=(($S+12)|0);
      var $1099=HEAP32[(($1098)>>2)];
      var $1100=(($S+4)|0);
      var $1101=HEAP32[(($1100)>>2)];
      var $1102=(($S+8)|0);
      var $1103=HEAP32[(($1102)>>2)];
      var $1104=(($S+12)|0);
      var $1105=HEAP32[(($1104)>>2)];
      var $1106=$1103 ^ $1105;
      var $1107=$1101 & $1106;
      var $1108=$1099 ^ $1107;
      var $1109=((($1097)+($1108))|0);
      var $1110=((($1109)+(1426881987))|0);
      var $1111=(($W+44)|0);
      var $1112=HEAP32[(($1111)>>2)];
      var $1113=((($1110)+($1112))|0);
      $t0=$1113;
      var $1114=(($S+20)|0);
      var $1115=HEAP32[(($1114)>>2)];
      var $1116=$1115 >>> 2;
      var $1117=(($S+20)|0);
      var $1118=HEAP32[(($1117)>>2)];
      var $1119=$1118 << 30;
      var $1120=$1116 | $1119;
      var $1121=(($S+20)|0);
      var $1122=HEAP32[(($1121)>>2)];
      var $1123=$1122 >>> 13;
      var $1124=(($S+20)|0);
      var $1125=HEAP32[(($1124)>>2)];
      var $1126=$1125 << 19;
      var $1127=$1123 | $1126;
      var $1128=$1120 ^ $1127;
      var $1129=(($S+20)|0);
      var $1130=HEAP32[(($1129)>>2)];
      var $1131=$1130 >>> 22;
      var $1132=(($S+20)|0);
      var $1133=HEAP32[(($1132)>>2)];
      var $1134=$1133 << 10;
      var $1135=$1131 | $1134;
      var $1136=$1128 ^ $1135;
      var $1137=(($S+20)|0);
      var $1138=HEAP32[(($1137)>>2)];
      var $1139=(($S+24)|0);
      var $1140=HEAP32[(($1139)>>2)];
      var $1141=$1138 | $1140;
      var $1142=(($S+28)|0);
      var $1143=HEAP32[(($1142)>>2)];
      var $1144=$1141 & $1143;
      var $1145=(($S+20)|0);
      var $1146=HEAP32[(($1145)>>2)];
      var $1147=(($S+24)|0);
      var $1148=HEAP32[(($1147)>>2)];
      var $1149=$1146 & $1148;
      var $1150=$1144 | $1149;
      var $1151=((($1136)+($1150))|0);
      $t1=$1151;
      var $1152=$t0;
      var $1153=(($S)|0);
      var $1154=HEAP32[(($1153)>>2)];
      var $1155=((($1154)+($1152))|0);
      HEAP32[(($1153)>>2)]=$1155;
      var $1156=$t0;
      var $1157=$t1;
      var $1158=((($1156)+($1157))|0);
      var $1159=(($S+16)|0);
      HEAP32[(($1159)>>2)]=$1158;
      var $1160=(($S+12)|0);
      var $1161=HEAP32[(($1160)>>2)];
      var $1162=(($S)|0);
      var $1163=HEAP32[(($1162)>>2)];
      var $1164=$1163 >>> 6;
      var $1165=(($S)|0);
      var $1166=HEAP32[(($1165)>>2)];
      var $1167=$1166 << 26;
      var $1168=$1164 | $1167;
      var $1169=(($S)|0);
      var $1170=HEAP32[(($1169)>>2)];
      var $1171=$1170 >>> 11;
      var $1172=(($S)|0);
      var $1173=HEAP32[(($1172)>>2)];
      var $1174=$1173 << 21;
      var $1175=$1171 | $1174;
      var $1176=$1168 ^ $1175;
      var $1177=(($S)|0);
      var $1178=HEAP32[(($1177)>>2)];
      var $1179=$1178 >>> 25;
      var $1180=(($S)|0);
      var $1181=HEAP32[(($1180)>>2)];
      var $1182=$1181 << 7;
      var $1183=$1179 | $1182;
      var $1184=$1176 ^ $1183;
      var $1185=((($1161)+($1184))|0);
      var $1186=(($S+8)|0);
      var $1187=HEAP32[(($1186)>>2)];
      var $1188=(($S)|0);
      var $1189=HEAP32[(($1188)>>2)];
      var $1190=(($S+4)|0);
      var $1191=HEAP32[(($1190)>>2)];
      var $1192=(($S+8)|0);
      var $1193=HEAP32[(($1192)>>2)];
      var $1194=$1191 ^ $1193;
      var $1195=$1189 & $1194;
      var $1196=$1187 ^ $1195;
      var $1197=((($1185)+($1196))|0);
      var $1198=((($1197)+(1925078388))|0);
      var $1199=(($W+48)|0);
      var $1200=HEAP32[(($1199)>>2)];
      var $1201=((($1198)+($1200))|0);
      $t0=$1201;
      var $1202=(($S+16)|0);
      var $1203=HEAP32[(($1202)>>2)];
      var $1204=$1203 >>> 2;
      var $1205=(($S+16)|0);
      var $1206=HEAP32[(($1205)>>2)];
      var $1207=$1206 << 30;
      var $1208=$1204 | $1207;
      var $1209=(($S+16)|0);
      var $1210=HEAP32[(($1209)>>2)];
      var $1211=$1210 >>> 13;
      var $1212=(($S+16)|0);
      var $1213=HEAP32[(($1212)>>2)];
      var $1214=$1213 << 19;
      var $1215=$1211 | $1214;
      var $1216=$1208 ^ $1215;
      var $1217=(($S+16)|0);
      var $1218=HEAP32[(($1217)>>2)];
      var $1219=$1218 >>> 22;
      var $1220=(($S+16)|0);
      var $1221=HEAP32[(($1220)>>2)];
      var $1222=$1221 << 10;
      var $1223=$1219 | $1222;
      var $1224=$1216 ^ $1223;
      var $1225=(($S+16)|0);
      var $1226=HEAP32[(($1225)>>2)];
      var $1227=(($S+20)|0);
      var $1228=HEAP32[(($1227)>>2)];
      var $1229=$1226 | $1228;
      var $1230=(($S+24)|0);
      var $1231=HEAP32[(($1230)>>2)];
      var $1232=$1229 & $1231;
      var $1233=(($S+16)|0);
      var $1234=HEAP32[(($1233)>>2)];
      var $1235=(($S+20)|0);
      var $1236=HEAP32[(($1235)>>2)];
      var $1237=$1234 & $1236;
      var $1238=$1232 | $1237;
      var $1239=((($1224)+($1238))|0);
      $t1=$1239;
      var $1240=$t0;
      var $1241=(($S+28)|0);
      var $1242=HEAP32[(($1241)>>2)];
      var $1243=((($1242)+($1240))|0);
      HEAP32[(($1241)>>2)]=$1243;
      var $1244=$t0;
      var $1245=$t1;
      var $1246=((($1244)+($1245))|0);
      var $1247=(($S+12)|0);
      HEAP32[(($1247)>>2)]=$1246;
      var $1248=(($S+8)|0);
      var $1249=HEAP32[(($1248)>>2)];
      var $1250=(($S+28)|0);
      var $1251=HEAP32[(($1250)>>2)];
      var $1252=$1251 >>> 6;
      var $1253=(($S+28)|0);
      var $1254=HEAP32[(($1253)>>2)];
      var $1255=$1254 << 26;
      var $1256=$1252 | $1255;
      var $1257=(($S+28)|0);
      var $1258=HEAP32[(($1257)>>2)];
      var $1259=$1258 >>> 11;
      var $1260=(($S+28)|0);
      var $1261=HEAP32[(($1260)>>2)];
      var $1262=$1261 << 21;
      var $1263=$1259 | $1262;
      var $1264=$1256 ^ $1263;
      var $1265=(($S+28)|0);
      var $1266=HEAP32[(($1265)>>2)];
      var $1267=$1266 >>> 25;
      var $1268=(($S+28)|0);
      var $1269=HEAP32[(($1268)>>2)];
      var $1270=$1269 << 7;
      var $1271=$1267 | $1270;
      var $1272=$1264 ^ $1271;
      var $1273=((($1249)+($1272))|0);
      var $1274=(($S+4)|0);
      var $1275=HEAP32[(($1274)>>2)];
      var $1276=(($S+28)|0);
      var $1277=HEAP32[(($1276)>>2)];
      var $1278=(($S)|0);
      var $1279=HEAP32[(($1278)>>2)];
      var $1280=(($S+4)|0);
      var $1281=HEAP32[(($1280)>>2)];
      var $1282=$1279 ^ $1281;
      var $1283=$1277 & $1282;
      var $1284=$1275 ^ $1283;
      var $1285=((($1273)+($1284))|0);
      var $1286=((($1285)-(2132889090))|0);
      var $1287=(($W+52)|0);
      var $1288=HEAP32[(($1287)>>2)];
      var $1289=((($1286)+($1288))|0);
      $t0=$1289;
      var $1290=(($S+12)|0);
      var $1291=HEAP32[(($1290)>>2)];
      var $1292=$1291 >>> 2;
      var $1293=(($S+12)|0);
      var $1294=HEAP32[(($1293)>>2)];
      var $1295=$1294 << 30;
      var $1296=$1292 | $1295;
      var $1297=(($S+12)|0);
      var $1298=HEAP32[(($1297)>>2)];
      var $1299=$1298 >>> 13;
      var $1300=(($S+12)|0);
      var $1301=HEAP32[(($1300)>>2)];
      var $1302=$1301 << 19;
      var $1303=$1299 | $1302;
      var $1304=$1296 ^ $1303;
      var $1305=(($S+12)|0);
      var $1306=HEAP32[(($1305)>>2)];
      var $1307=$1306 >>> 22;
      var $1308=(($S+12)|0);
      var $1309=HEAP32[(($1308)>>2)];
      var $1310=$1309 << 10;
      var $1311=$1307 | $1310;
      var $1312=$1304 ^ $1311;
      var $1313=(($S+12)|0);
      var $1314=HEAP32[(($1313)>>2)];
      var $1315=(($S+16)|0);
      var $1316=HEAP32[(($1315)>>2)];
      var $1317=$1314 | $1316;
      var $1318=(($S+20)|0);
      var $1319=HEAP32[(($1318)>>2)];
      var $1320=$1317 & $1319;
      var $1321=(($S+12)|0);
      var $1322=HEAP32[(($1321)>>2)];
      var $1323=(($S+16)|0);
      var $1324=HEAP32[(($1323)>>2)];
      var $1325=$1322 & $1324;
      var $1326=$1320 | $1325;
      var $1327=((($1312)+($1326))|0);
      $t1=$1327;
      var $1328=$t0;
      var $1329=(($S+24)|0);
      var $1330=HEAP32[(($1329)>>2)];
      var $1331=((($1330)+($1328))|0);
      HEAP32[(($1329)>>2)]=$1331;
      var $1332=$t0;
      var $1333=$t1;
      var $1334=((($1332)+($1333))|0);
      var $1335=(($S+8)|0);
      HEAP32[(($1335)>>2)]=$1334;
      var $1336=(($S+4)|0);
      var $1337=HEAP32[(($1336)>>2)];
      var $1338=(($S+24)|0);
      var $1339=HEAP32[(($1338)>>2)];
      var $1340=$1339 >>> 6;
      var $1341=(($S+24)|0);
      var $1342=HEAP32[(($1341)>>2)];
      var $1343=$1342 << 26;
      var $1344=$1340 | $1343;
      var $1345=(($S+24)|0);
      var $1346=HEAP32[(($1345)>>2)];
      var $1347=$1346 >>> 11;
      var $1348=(($S+24)|0);
      var $1349=HEAP32[(($1348)>>2)];
      var $1350=$1349 << 21;
      var $1351=$1347 | $1350;
      var $1352=$1344 ^ $1351;
      var $1353=(($S+24)|0);
      var $1354=HEAP32[(($1353)>>2)];
      var $1355=$1354 >>> 25;
      var $1356=(($S+24)|0);
      var $1357=HEAP32[(($1356)>>2)];
      var $1358=$1357 << 7;
      var $1359=$1355 | $1358;
      var $1360=$1352 ^ $1359;
      var $1361=((($1337)+($1360))|0);
      var $1362=(($S)|0);
      var $1363=HEAP32[(($1362)>>2)];
      var $1364=(($S+24)|0);
      var $1365=HEAP32[(($1364)>>2)];
      var $1366=(($S+28)|0);
      var $1367=HEAP32[(($1366)>>2)];
      var $1368=(($S)|0);
      var $1369=HEAP32[(($1368)>>2)];
      var $1370=$1367 ^ $1369;
      var $1371=$1365 & $1370;
      var $1372=$1363 ^ $1371;
      var $1373=((($1361)+($1372))|0);
      var $1374=((($1373)-(1680079193))|0);
      var $1375=(($W+56)|0);
      var $1376=HEAP32[(($1375)>>2)];
      var $1377=((($1374)+($1376))|0);
      $t0=$1377;
      var $1378=(($S+8)|0);
      var $1379=HEAP32[(($1378)>>2)];
      var $1380=$1379 >>> 2;
      var $1381=(($S+8)|0);
      var $1382=HEAP32[(($1381)>>2)];
      var $1383=$1382 << 30;
      var $1384=$1380 | $1383;
      var $1385=(($S+8)|0);
      var $1386=HEAP32[(($1385)>>2)];
      var $1387=$1386 >>> 13;
      var $1388=(($S+8)|0);
      var $1389=HEAP32[(($1388)>>2)];
      var $1390=$1389 << 19;
      var $1391=$1387 | $1390;
      var $1392=$1384 ^ $1391;
      var $1393=(($S+8)|0);
      var $1394=HEAP32[(($1393)>>2)];
      var $1395=$1394 >>> 22;
      var $1396=(($S+8)|0);
      var $1397=HEAP32[(($1396)>>2)];
      var $1398=$1397 << 10;
      var $1399=$1395 | $1398;
      var $1400=$1392 ^ $1399;
      var $1401=(($S+8)|0);
      var $1402=HEAP32[(($1401)>>2)];
      var $1403=(($S+12)|0);
      var $1404=HEAP32[(($1403)>>2)];
      var $1405=$1402 | $1404;
      var $1406=(($S+16)|0);
      var $1407=HEAP32[(($1406)>>2)];
      var $1408=$1405 & $1407;
      var $1409=(($S+8)|0);
      var $1410=HEAP32[(($1409)>>2)];
      var $1411=(($S+12)|0);
      var $1412=HEAP32[(($1411)>>2)];
      var $1413=$1410 & $1412;
      var $1414=$1408 | $1413;
      var $1415=((($1400)+($1414))|0);
      $t1=$1415;
      var $1416=$t0;
      var $1417=(($S+20)|0);
      var $1418=HEAP32[(($1417)>>2)];
      var $1419=((($1418)+($1416))|0);
      HEAP32[(($1417)>>2)]=$1419;
      var $1420=$t0;
      var $1421=$t1;
      var $1422=((($1420)+($1421))|0);
      var $1423=(($S+4)|0);
      HEAP32[(($1423)>>2)]=$1422;
      var $1424=(($S)|0);
      var $1425=HEAP32[(($1424)>>2)];
      var $1426=(($S+20)|0);
      var $1427=HEAP32[(($1426)>>2)];
      var $1428=$1427 >>> 6;
      var $1429=(($S+20)|0);
      var $1430=HEAP32[(($1429)>>2)];
      var $1431=$1430 << 26;
      var $1432=$1428 | $1431;
      var $1433=(($S+20)|0);
      var $1434=HEAP32[(($1433)>>2)];
      var $1435=$1434 >>> 11;
      var $1436=(($S+20)|0);
      var $1437=HEAP32[(($1436)>>2)];
      var $1438=$1437 << 21;
      var $1439=$1435 | $1438;
      var $1440=$1432 ^ $1439;
      var $1441=(($S+20)|0);
      var $1442=HEAP32[(($1441)>>2)];
      var $1443=$1442 >>> 25;
      var $1444=(($S+20)|0);
      var $1445=HEAP32[(($1444)>>2)];
      var $1446=$1445 << 7;
      var $1447=$1443 | $1446;
      var $1448=$1440 ^ $1447;
      var $1449=((($1425)+($1448))|0);
      var $1450=(($S+28)|0);
      var $1451=HEAP32[(($1450)>>2)];
      var $1452=(($S+20)|0);
      var $1453=HEAP32[(($1452)>>2)];
      var $1454=(($S+24)|0);
      var $1455=HEAP32[(($1454)>>2)];
      var $1456=(($S+28)|0);
      var $1457=HEAP32[(($1456)>>2)];
      var $1458=$1455 ^ $1457;
      var $1459=$1453 & $1458;
      var $1460=$1451 ^ $1459;
      var $1461=((($1449)+($1460))|0);
      var $1462=((($1461)-(1046744716))|0);
      var $1463=(($W+60)|0);
      var $1464=HEAP32[(($1463)>>2)];
      var $1465=((($1462)+($1464))|0);
      $t0=$1465;
      var $1466=(($S+4)|0);
      var $1467=HEAP32[(($1466)>>2)];
      var $1468=$1467 >>> 2;
      var $1469=(($S+4)|0);
      var $1470=HEAP32[(($1469)>>2)];
      var $1471=$1470 << 30;
      var $1472=$1468 | $1471;
      var $1473=(($S+4)|0);
      var $1474=HEAP32[(($1473)>>2)];
      var $1475=$1474 >>> 13;
      var $1476=(($S+4)|0);
      var $1477=HEAP32[(($1476)>>2)];
      var $1478=$1477 << 19;
      var $1479=$1475 | $1478;
      var $1480=$1472 ^ $1479;
      var $1481=(($S+4)|0);
      var $1482=HEAP32[(($1481)>>2)];
      var $1483=$1482 >>> 22;
      var $1484=(($S+4)|0);
      var $1485=HEAP32[(($1484)>>2)];
      var $1486=$1485 << 10;
      var $1487=$1483 | $1486;
      var $1488=$1480 ^ $1487;
      var $1489=(($S+4)|0);
      var $1490=HEAP32[(($1489)>>2)];
      var $1491=(($S+8)|0);
      var $1492=HEAP32[(($1491)>>2)];
      var $1493=$1490 | $1492;
      var $1494=(($S+12)|0);
      var $1495=HEAP32[(($1494)>>2)];
      var $1496=$1493 & $1495;
      var $1497=(($S+4)|0);
      var $1498=HEAP32[(($1497)>>2)];
      var $1499=(($S+8)|0);
      var $1500=HEAP32[(($1499)>>2)];
      var $1501=$1498 & $1500;
      var $1502=$1496 | $1501;
      var $1503=((($1488)+($1502))|0);
      $t1=$1503;
      var $1504=$t0;
      var $1505=(($S+16)|0);
      var $1506=HEAP32[(($1505)>>2)];
      var $1507=((($1506)+($1504))|0);
      HEAP32[(($1505)>>2)]=$1507;
      var $1508=$t0;
      var $1509=$t1;
      var $1510=((($1508)+($1509))|0);
      var $1511=(($S)|0);
      HEAP32[(($1511)>>2)]=$1510;
      var $1512=(($S+28)|0);
      var $1513=HEAP32[(($1512)>>2)];
      var $1514=(($S+16)|0);
      var $1515=HEAP32[(($1514)>>2)];
      var $1516=$1515 >>> 6;
      var $1517=(($S+16)|0);
      var $1518=HEAP32[(($1517)>>2)];
      var $1519=$1518 << 26;
      var $1520=$1516 | $1519;
      var $1521=(($S+16)|0);
      var $1522=HEAP32[(($1521)>>2)];
      var $1523=$1522 >>> 11;
      var $1524=(($S+16)|0);
      var $1525=HEAP32[(($1524)>>2)];
      var $1526=$1525 << 21;
      var $1527=$1523 | $1526;
      var $1528=$1520 ^ $1527;
      var $1529=(($S+16)|0);
      var $1530=HEAP32[(($1529)>>2)];
      var $1531=$1530 >>> 25;
      var $1532=(($S+16)|0);
      var $1533=HEAP32[(($1532)>>2)];
      var $1534=$1533 << 7;
      var $1535=$1531 | $1534;
      var $1536=$1528 ^ $1535;
      var $1537=((($1513)+($1536))|0);
      var $1538=(($S+24)|0);
      var $1539=HEAP32[(($1538)>>2)];
      var $1540=(($S+16)|0);
      var $1541=HEAP32[(($1540)>>2)];
      var $1542=(($S+20)|0);
      var $1543=HEAP32[(($1542)>>2)];
      var $1544=(($S+24)|0);
      var $1545=HEAP32[(($1544)>>2)];
      var $1546=$1543 ^ $1545;
      var $1547=$1541 & $1546;
      var $1548=$1539 ^ $1547;
      var $1549=((($1537)+($1548))|0);
      var $1550=((($1549)-(459576895))|0);
      var $1551=(($W+64)|0);
      var $1552=HEAP32[(($1551)>>2)];
      var $1553=((($1550)+($1552))|0);
      $t0=$1553;
      var $1554=(($S)|0);
      var $1555=HEAP32[(($1554)>>2)];
      var $1556=$1555 >>> 2;
      var $1557=(($S)|0);
      var $1558=HEAP32[(($1557)>>2)];
      var $1559=$1558 << 30;
      var $1560=$1556 | $1559;
      var $1561=(($S)|0);
      var $1562=HEAP32[(($1561)>>2)];
      var $1563=$1562 >>> 13;
      var $1564=(($S)|0);
      var $1565=HEAP32[(($1564)>>2)];
      var $1566=$1565 << 19;
      var $1567=$1563 | $1566;
      var $1568=$1560 ^ $1567;
      var $1569=(($S)|0);
      var $1570=HEAP32[(($1569)>>2)];
      var $1571=$1570 >>> 22;
      var $1572=(($S)|0);
      var $1573=HEAP32[(($1572)>>2)];
      var $1574=$1573 << 10;
      var $1575=$1571 | $1574;
      var $1576=$1568 ^ $1575;
      var $1577=(($S)|0);
      var $1578=HEAP32[(($1577)>>2)];
      var $1579=(($S+4)|0);
      var $1580=HEAP32[(($1579)>>2)];
      var $1581=$1578 | $1580;
      var $1582=(($S+8)|0);
      var $1583=HEAP32[(($1582)>>2)];
      var $1584=$1581 & $1583;
      var $1585=(($S)|0);
      var $1586=HEAP32[(($1585)>>2)];
      var $1587=(($S+4)|0);
      var $1588=HEAP32[(($1587)>>2)];
      var $1589=$1586 & $1588;
      var $1590=$1584 | $1589;
      var $1591=((($1576)+($1590))|0);
      $t1=$1591;
      var $1592=$t0;
      var $1593=(($S+12)|0);
      var $1594=HEAP32[(($1593)>>2)];
      var $1595=((($1594)+($1592))|0);
      HEAP32[(($1593)>>2)]=$1595;
      var $1596=$t0;
      var $1597=$t1;
      var $1598=((($1596)+($1597))|0);
      var $1599=(($S+28)|0);
      HEAP32[(($1599)>>2)]=$1598;
      var $1600=(($S+24)|0);
      var $1601=HEAP32[(($1600)>>2)];
      var $1602=(($S+12)|0);
      var $1603=HEAP32[(($1602)>>2)];
      var $1604=$1603 >>> 6;
      var $1605=(($S+12)|0);
      var $1606=HEAP32[(($1605)>>2)];
      var $1607=$1606 << 26;
      var $1608=$1604 | $1607;
      var $1609=(($S+12)|0);
      var $1610=HEAP32[(($1609)>>2)];
      var $1611=$1610 >>> 11;
      var $1612=(($S+12)|0);
      var $1613=HEAP32[(($1612)>>2)];
      var $1614=$1613 << 21;
      var $1615=$1611 | $1614;
      var $1616=$1608 ^ $1615;
      var $1617=(($S+12)|0);
      var $1618=HEAP32[(($1617)>>2)];
      var $1619=$1618 >>> 25;
      var $1620=(($S+12)|0);
      var $1621=HEAP32[(($1620)>>2)];
      var $1622=$1621 << 7;
      var $1623=$1619 | $1622;
      var $1624=$1616 ^ $1623;
      var $1625=((($1601)+($1624))|0);
      var $1626=(($S+20)|0);
      var $1627=HEAP32[(($1626)>>2)];
      var $1628=(($S+12)|0);
      var $1629=HEAP32[(($1628)>>2)];
      var $1630=(($S+16)|0);
      var $1631=HEAP32[(($1630)>>2)];
      var $1632=(($S+20)|0);
      var $1633=HEAP32[(($1632)>>2)];
      var $1634=$1631 ^ $1633;
      var $1635=$1629 & $1634;
      var $1636=$1627 ^ $1635;
      var $1637=((($1625)+($1636))|0);
      var $1638=((($1637)-(272742522))|0);
      var $1639=(($W+68)|0);
      var $1640=HEAP32[(($1639)>>2)];
      var $1641=((($1638)+($1640))|0);
      $t0=$1641;
      var $1642=(($S+28)|0);
      var $1643=HEAP32[(($1642)>>2)];
      var $1644=$1643 >>> 2;
      var $1645=(($S+28)|0);
      var $1646=HEAP32[(($1645)>>2)];
      var $1647=$1646 << 30;
      var $1648=$1644 | $1647;
      var $1649=(($S+28)|0);
      var $1650=HEAP32[(($1649)>>2)];
      var $1651=$1650 >>> 13;
      var $1652=(($S+28)|0);
      var $1653=HEAP32[(($1652)>>2)];
      var $1654=$1653 << 19;
      var $1655=$1651 | $1654;
      var $1656=$1648 ^ $1655;
      var $1657=(($S+28)|0);
      var $1658=HEAP32[(($1657)>>2)];
      var $1659=$1658 >>> 22;
      var $1660=(($S+28)|0);
      var $1661=HEAP32[(($1660)>>2)];
      var $1662=$1661 << 10;
      var $1663=$1659 | $1662;
      var $1664=$1656 ^ $1663;
      var $1665=(($S+28)|0);
      var $1666=HEAP32[(($1665)>>2)];
      var $1667=(($S)|0);
      var $1668=HEAP32[(($1667)>>2)];
      var $1669=$1666 | $1668;
      var $1670=(($S+4)|0);
      var $1671=HEAP32[(($1670)>>2)];
      var $1672=$1669 & $1671;
      var $1673=(($S+28)|0);
      var $1674=HEAP32[(($1673)>>2)];
      var $1675=(($S)|0);
      var $1676=HEAP32[(($1675)>>2)];
      var $1677=$1674 & $1676;
      var $1678=$1672 | $1677;
      var $1679=((($1664)+($1678))|0);
      $t1=$1679;
      var $1680=$t0;
      var $1681=(($S+8)|0);
      var $1682=HEAP32[(($1681)>>2)];
      var $1683=((($1682)+($1680))|0);
      HEAP32[(($1681)>>2)]=$1683;
      var $1684=$t0;
      var $1685=$t1;
      var $1686=((($1684)+($1685))|0);
      var $1687=(($S+24)|0);
      HEAP32[(($1687)>>2)]=$1686;
      var $1688=(($S+20)|0);
      var $1689=HEAP32[(($1688)>>2)];
      var $1690=(($S+8)|0);
      var $1691=HEAP32[(($1690)>>2)];
      var $1692=$1691 >>> 6;
      var $1693=(($S+8)|0);
      var $1694=HEAP32[(($1693)>>2)];
      var $1695=$1694 << 26;
      var $1696=$1692 | $1695;
      var $1697=(($S+8)|0);
      var $1698=HEAP32[(($1697)>>2)];
      var $1699=$1698 >>> 11;
      var $1700=(($S+8)|0);
      var $1701=HEAP32[(($1700)>>2)];
      var $1702=$1701 << 21;
      var $1703=$1699 | $1702;
      var $1704=$1696 ^ $1703;
      var $1705=(($S+8)|0);
      var $1706=HEAP32[(($1705)>>2)];
      var $1707=$1706 >>> 25;
      var $1708=(($S+8)|0);
      var $1709=HEAP32[(($1708)>>2)];
      var $1710=$1709 << 7;
      var $1711=$1707 | $1710;
      var $1712=$1704 ^ $1711;
      var $1713=((($1689)+($1712))|0);
      var $1714=(($S+16)|0);
      var $1715=HEAP32[(($1714)>>2)];
      var $1716=(($S+8)|0);
      var $1717=HEAP32[(($1716)>>2)];
      var $1718=(($S+12)|0);
      var $1719=HEAP32[(($1718)>>2)];
      var $1720=(($S+16)|0);
      var $1721=HEAP32[(($1720)>>2)];
      var $1722=$1719 ^ $1721;
      var $1723=$1717 & $1722;
      var $1724=$1715 ^ $1723;
      var $1725=((($1713)+($1724))|0);
      var $1726=((($1725)+(264347078))|0);
      var $1727=(($W+72)|0);
      var $1728=HEAP32[(($1727)>>2)];
      var $1729=((($1726)+($1728))|0);
      $t0=$1729;
      var $1730=(($S+24)|0);
      var $1731=HEAP32[(($1730)>>2)];
      var $1732=$1731 >>> 2;
      var $1733=(($S+24)|0);
      var $1734=HEAP32[(($1733)>>2)];
      var $1735=$1734 << 30;
      var $1736=$1732 | $1735;
      var $1737=(($S+24)|0);
      var $1738=HEAP32[(($1737)>>2)];
      var $1739=$1738 >>> 13;
      var $1740=(($S+24)|0);
      var $1741=HEAP32[(($1740)>>2)];
      var $1742=$1741 << 19;
      var $1743=$1739 | $1742;
      var $1744=$1736 ^ $1743;
      var $1745=(($S+24)|0);
      var $1746=HEAP32[(($1745)>>2)];
      var $1747=$1746 >>> 22;
      var $1748=(($S+24)|0);
      var $1749=HEAP32[(($1748)>>2)];
      var $1750=$1749 << 10;
      var $1751=$1747 | $1750;
      var $1752=$1744 ^ $1751;
      var $1753=(($S+24)|0);
      var $1754=HEAP32[(($1753)>>2)];
      var $1755=(($S+28)|0);
      var $1756=HEAP32[(($1755)>>2)];
      var $1757=$1754 | $1756;
      var $1758=(($S)|0);
      var $1759=HEAP32[(($1758)>>2)];
      var $1760=$1757 & $1759;
      var $1761=(($S+24)|0);
      var $1762=HEAP32[(($1761)>>2)];
      var $1763=(($S+28)|0);
      var $1764=HEAP32[(($1763)>>2)];
      var $1765=$1762 & $1764;
      var $1766=$1760 | $1765;
      var $1767=((($1752)+($1766))|0);
      $t1=$1767;
      var $1768=$t0;
      var $1769=(($S+4)|0);
      var $1770=HEAP32[(($1769)>>2)];
      var $1771=((($1770)+($1768))|0);
      HEAP32[(($1769)>>2)]=$1771;
      var $1772=$t0;
      var $1773=$t1;
      var $1774=((($1772)+($1773))|0);
      var $1775=(($S+20)|0);
      HEAP32[(($1775)>>2)]=$1774;
      var $1776=(($S+16)|0);
      var $1777=HEAP32[(($1776)>>2)];
      var $1778=(($S+4)|0);
      var $1779=HEAP32[(($1778)>>2)];
      var $1780=$1779 >>> 6;
      var $1781=(($S+4)|0);
      var $1782=HEAP32[(($1781)>>2)];
      var $1783=$1782 << 26;
      var $1784=$1780 | $1783;
      var $1785=(($S+4)|0);
      var $1786=HEAP32[(($1785)>>2)];
      var $1787=$1786 >>> 11;
      var $1788=(($S+4)|0);
      var $1789=HEAP32[(($1788)>>2)];
      var $1790=$1789 << 21;
      var $1791=$1787 | $1790;
      var $1792=$1784 ^ $1791;
      var $1793=(($S+4)|0);
      var $1794=HEAP32[(($1793)>>2)];
      var $1795=$1794 >>> 25;
      var $1796=(($S+4)|0);
      var $1797=HEAP32[(($1796)>>2)];
      var $1798=$1797 << 7;
      var $1799=$1795 | $1798;
      var $1800=$1792 ^ $1799;
      var $1801=((($1777)+($1800))|0);
      var $1802=(($S+12)|0);
      var $1803=HEAP32[(($1802)>>2)];
      var $1804=(($S+4)|0);
      var $1805=HEAP32[(($1804)>>2)];
      var $1806=(($S+8)|0);
      var $1807=HEAP32[(($1806)>>2)];
      var $1808=(($S+12)|0);
      var $1809=HEAP32[(($1808)>>2)];
      var $1810=$1807 ^ $1809;
      var $1811=$1805 & $1810;
      var $1812=$1803 ^ $1811;
      var $1813=((($1801)+($1812))|0);
      var $1814=((($1813)+(604807628))|0);
      var $1815=(($W+76)|0);
      var $1816=HEAP32[(($1815)>>2)];
      var $1817=((($1814)+($1816))|0);
      $t0=$1817;
      var $1818=(($S+20)|0);
      var $1819=HEAP32[(($1818)>>2)];
      var $1820=$1819 >>> 2;
      var $1821=(($S+20)|0);
      var $1822=HEAP32[(($1821)>>2)];
      var $1823=$1822 << 30;
      var $1824=$1820 | $1823;
      var $1825=(($S+20)|0);
      var $1826=HEAP32[(($1825)>>2)];
      var $1827=$1826 >>> 13;
      var $1828=(($S+20)|0);
      var $1829=HEAP32[(($1828)>>2)];
      var $1830=$1829 << 19;
      var $1831=$1827 | $1830;
      var $1832=$1824 ^ $1831;
      var $1833=(($S+20)|0);
      var $1834=HEAP32[(($1833)>>2)];
      var $1835=$1834 >>> 22;
      var $1836=(($S+20)|0);
      var $1837=HEAP32[(($1836)>>2)];
      var $1838=$1837 << 10;
      var $1839=$1835 | $1838;
      var $1840=$1832 ^ $1839;
      var $1841=(($S+20)|0);
      var $1842=HEAP32[(($1841)>>2)];
      var $1843=(($S+24)|0);
      var $1844=HEAP32[(($1843)>>2)];
      var $1845=$1842 | $1844;
      var $1846=(($S+28)|0);
      var $1847=HEAP32[(($1846)>>2)];
      var $1848=$1845 & $1847;
      var $1849=(($S+20)|0);
      var $1850=HEAP32[(($1849)>>2)];
      var $1851=(($S+24)|0);
      var $1852=HEAP32[(($1851)>>2)];
      var $1853=$1850 & $1852;
      var $1854=$1848 | $1853;
      var $1855=((($1840)+($1854))|0);
      $t1=$1855;
      var $1856=$t0;
      var $1857=(($S)|0);
      var $1858=HEAP32[(($1857)>>2)];
      var $1859=((($1858)+($1856))|0);
      HEAP32[(($1857)>>2)]=$1859;
      var $1860=$t0;
      var $1861=$t1;
      var $1862=((($1860)+($1861))|0);
      var $1863=(($S+16)|0);
      HEAP32[(($1863)>>2)]=$1862;
      var $1864=(($S+12)|0);
      var $1865=HEAP32[(($1864)>>2)];
      var $1866=(($S)|0);
      var $1867=HEAP32[(($1866)>>2)];
      var $1868=$1867 >>> 6;
      var $1869=(($S)|0);
      var $1870=HEAP32[(($1869)>>2)];
      var $1871=$1870 << 26;
      var $1872=$1868 | $1871;
      var $1873=(($S)|0);
      var $1874=HEAP32[(($1873)>>2)];
      var $1875=$1874 >>> 11;
      var $1876=(($S)|0);
      var $1877=HEAP32[(($1876)>>2)];
      var $1878=$1877 << 21;
      var $1879=$1875 | $1878;
      var $1880=$1872 ^ $1879;
      var $1881=(($S)|0);
      var $1882=HEAP32[(($1881)>>2)];
      var $1883=$1882 >>> 25;
      var $1884=(($S)|0);
      var $1885=HEAP32[(($1884)>>2)];
      var $1886=$1885 << 7;
      var $1887=$1883 | $1886;
      var $1888=$1880 ^ $1887;
      var $1889=((($1865)+($1888))|0);
      var $1890=(($S+8)|0);
      var $1891=HEAP32[(($1890)>>2)];
      var $1892=(($S)|0);
      var $1893=HEAP32[(($1892)>>2)];
      var $1894=(($S+4)|0);
      var $1895=HEAP32[(($1894)>>2)];
      var $1896=(($S+8)|0);
      var $1897=HEAP32[(($1896)>>2)];
      var $1898=$1895 ^ $1897;
      var $1899=$1893 & $1898;
      var $1900=$1891 ^ $1899;
      var $1901=((($1889)+($1900))|0);
      var $1902=((($1901)+(770255983))|0);
      var $1903=(($W+80)|0);
      var $1904=HEAP32[(($1903)>>2)];
      var $1905=((($1902)+($1904))|0);
      $t0=$1905;
      var $1906=(($S+16)|0);
      var $1907=HEAP32[(($1906)>>2)];
      var $1908=$1907 >>> 2;
      var $1909=(($S+16)|0);
      var $1910=HEAP32[(($1909)>>2)];
      var $1911=$1910 << 30;
      var $1912=$1908 | $1911;
      var $1913=(($S+16)|0);
      var $1914=HEAP32[(($1913)>>2)];
      var $1915=$1914 >>> 13;
      var $1916=(($S+16)|0);
      var $1917=HEAP32[(($1916)>>2)];
      var $1918=$1917 << 19;
      var $1919=$1915 | $1918;
      var $1920=$1912 ^ $1919;
      var $1921=(($S+16)|0);
      var $1922=HEAP32[(($1921)>>2)];
      var $1923=$1922 >>> 22;
      var $1924=(($S+16)|0);
      var $1925=HEAP32[(($1924)>>2)];
      var $1926=$1925 << 10;
      var $1927=$1923 | $1926;
      var $1928=$1920 ^ $1927;
      var $1929=(($S+16)|0);
      var $1930=HEAP32[(($1929)>>2)];
      var $1931=(($S+20)|0);
      var $1932=HEAP32[(($1931)>>2)];
      var $1933=$1930 | $1932;
      var $1934=(($S+24)|0);
      var $1935=HEAP32[(($1934)>>2)];
      var $1936=$1933 & $1935;
      var $1937=(($S+16)|0);
      var $1938=HEAP32[(($1937)>>2)];
      var $1939=(($S+20)|0);
      var $1940=HEAP32[(($1939)>>2)];
      var $1941=$1938 & $1940;
      var $1942=$1936 | $1941;
      var $1943=((($1928)+($1942))|0);
      $t1=$1943;
      var $1944=$t0;
      var $1945=(($S+28)|0);
      var $1946=HEAP32[(($1945)>>2)];
      var $1947=((($1946)+($1944))|0);
      HEAP32[(($1945)>>2)]=$1947;
      var $1948=$t0;
      var $1949=$t1;
      var $1950=((($1948)+($1949))|0);
      var $1951=(($S+12)|0);
      HEAP32[(($1951)>>2)]=$1950;
      var $1952=(($S+8)|0);
      var $1953=HEAP32[(($1952)>>2)];
      var $1954=(($S+28)|0);
      var $1955=HEAP32[(($1954)>>2)];
      var $1956=$1955 >>> 6;
      var $1957=(($S+28)|0);
      var $1958=HEAP32[(($1957)>>2)];
      var $1959=$1958 << 26;
      var $1960=$1956 | $1959;
      var $1961=(($S+28)|0);
      var $1962=HEAP32[(($1961)>>2)];
      var $1963=$1962 >>> 11;
      var $1964=(($S+28)|0);
      var $1965=HEAP32[(($1964)>>2)];
      var $1966=$1965 << 21;
      var $1967=$1963 | $1966;
      var $1968=$1960 ^ $1967;
      var $1969=(($S+28)|0);
      var $1970=HEAP32[(($1969)>>2)];
      var $1971=$1970 >>> 25;
      var $1972=(($S+28)|0);
      var $1973=HEAP32[(($1972)>>2)];
      var $1974=$1973 << 7;
      var $1975=$1971 | $1974;
      var $1976=$1968 ^ $1975;
      var $1977=((($1953)+($1976))|0);
      var $1978=(($S+4)|0);
      var $1979=HEAP32[(($1978)>>2)];
      var $1980=(($S+28)|0);
      var $1981=HEAP32[(($1980)>>2)];
      var $1982=(($S)|0);
      var $1983=HEAP32[(($1982)>>2)];
      var $1984=(($S+4)|0);
      var $1985=HEAP32[(($1984)>>2)];
      var $1986=$1983 ^ $1985;
      var $1987=$1981 & $1986;
      var $1988=$1979 ^ $1987;
      var $1989=((($1977)+($1988))|0);
      var $1990=((($1989)+(1249150122))|0);
      var $1991=(($W+84)|0);
      var $1992=HEAP32[(($1991)>>2)];
      var $1993=((($1990)+($1992))|0);
      $t0=$1993;
      var $1994=(($S+12)|0);
      var $1995=HEAP32[(($1994)>>2)];
      var $1996=$1995 >>> 2;
      var $1997=(($S+12)|0);
      var $1998=HEAP32[(($1997)>>2)];
      var $1999=$1998 << 30;
      var $2000=$1996 | $1999;
      var $2001=(($S+12)|0);
      var $2002=HEAP32[(($2001)>>2)];
      var $2003=$2002 >>> 13;
      var $2004=(($S+12)|0);
      var $2005=HEAP32[(($2004)>>2)];
      var $2006=$2005 << 19;
      var $2007=$2003 | $2006;
      var $2008=$2000 ^ $2007;
      var $2009=(($S+12)|0);
      var $2010=HEAP32[(($2009)>>2)];
      var $2011=$2010 >>> 22;
      var $2012=(($S+12)|0);
      var $2013=HEAP32[(($2012)>>2)];
      var $2014=$2013 << 10;
      var $2015=$2011 | $2014;
      var $2016=$2008 ^ $2015;
      var $2017=(($S+12)|0);
      var $2018=HEAP32[(($2017)>>2)];
      var $2019=(($S+16)|0);
      var $2020=HEAP32[(($2019)>>2)];
      var $2021=$2018 | $2020;
      var $2022=(($S+20)|0);
      var $2023=HEAP32[(($2022)>>2)];
      var $2024=$2021 & $2023;
      var $2025=(($S+12)|0);
      var $2026=HEAP32[(($2025)>>2)];
      var $2027=(($S+16)|0);
      var $2028=HEAP32[(($2027)>>2)];
      var $2029=$2026 & $2028;
      var $2030=$2024 | $2029;
      var $2031=((($2016)+($2030))|0);
      $t1=$2031;
      var $2032=$t0;
      var $2033=(($S+24)|0);
      var $2034=HEAP32[(($2033)>>2)];
      var $2035=((($2034)+($2032))|0);
      HEAP32[(($2033)>>2)]=$2035;
      var $2036=$t0;
      var $2037=$t1;
      var $2038=((($2036)+($2037))|0);
      var $2039=(($S+8)|0);
      HEAP32[(($2039)>>2)]=$2038;
      var $2040=(($S+4)|0);
      var $2041=HEAP32[(($2040)>>2)];
      var $2042=(($S+24)|0);
      var $2043=HEAP32[(($2042)>>2)];
      var $2044=$2043 >>> 6;
      var $2045=(($S+24)|0);
      var $2046=HEAP32[(($2045)>>2)];
      var $2047=$2046 << 26;
      var $2048=$2044 | $2047;
      var $2049=(($S+24)|0);
      var $2050=HEAP32[(($2049)>>2)];
      var $2051=$2050 >>> 11;
      var $2052=(($S+24)|0);
      var $2053=HEAP32[(($2052)>>2)];
      var $2054=$2053 << 21;
      var $2055=$2051 | $2054;
      var $2056=$2048 ^ $2055;
      var $2057=(($S+24)|0);
      var $2058=HEAP32[(($2057)>>2)];
      var $2059=$2058 >>> 25;
      var $2060=(($S+24)|0);
      var $2061=HEAP32[(($2060)>>2)];
      var $2062=$2061 << 7;
      var $2063=$2059 | $2062;
      var $2064=$2056 ^ $2063;
      var $2065=((($2041)+($2064))|0);
      var $2066=(($S)|0);
      var $2067=HEAP32[(($2066)>>2)];
      var $2068=(($S+24)|0);
      var $2069=HEAP32[(($2068)>>2)];
      var $2070=(($S+28)|0);
      var $2071=HEAP32[(($2070)>>2)];
      var $2072=(($S)|0);
      var $2073=HEAP32[(($2072)>>2)];
      var $2074=$2071 ^ $2073;
      var $2075=$2069 & $2074;
      var $2076=$2067 ^ $2075;
      var $2077=((($2065)+($2076))|0);
      var $2078=((($2077)+(1555081692))|0);
      var $2079=(($W+88)|0);
      var $2080=HEAP32[(($2079)>>2)];
      var $2081=((($2078)+($2080))|0);
      $t0=$2081;
      var $2082=(($S+8)|0);
      var $2083=HEAP32[(($2082)>>2)];
      var $2084=$2083 >>> 2;
      var $2085=(($S+8)|0);
      var $2086=HEAP32[(($2085)>>2)];
      var $2087=$2086 << 30;
      var $2088=$2084 | $2087;
      var $2089=(($S+8)|0);
      var $2090=HEAP32[(($2089)>>2)];
      var $2091=$2090 >>> 13;
      var $2092=(($S+8)|0);
      var $2093=HEAP32[(($2092)>>2)];
      var $2094=$2093 << 19;
      var $2095=$2091 | $2094;
      var $2096=$2088 ^ $2095;
      var $2097=(($S+8)|0);
      var $2098=HEAP32[(($2097)>>2)];
      var $2099=$2098 >>> 22;
      var $2100=(($S+8)|0);
      var $2101=HEAP32[(($2100)>>2)];
      var $2102=$2101 << 10;
      var $2103=$2099 | $2102;
      var $2104=$2096 ^ $2103;
      var $2105=(($S+8)|0);
      var $2106=HEAP32[(($2105)>>2)];
      var $2107=(($S+12)|0);
      var $2108=HEAP32[(($2107)>>2)];
      var $2109=$2106 | $2108;
      var $2110=(($S+16)|0);
      var $2111=HEAP32[(($2110)>>2)];
      var $2112=$2109 & $2111;
      var $2113=(($S+8)|0);
      var $2114=HEAP32[(($2113)>>2)];
      var $2115=(($S+12)|0);
      var $2116=HEAP32[(($2115)>>2)];
      var $2117=$2114 & $2116;
      var $2118=$2112 | $2117;
      var $2119=((($2104)+($2118))|0);
      $t1=$2119;
      var $2120=$t0;
      var $2121=(($S+20)|0);
      var $2122=HEAP32[(($2121)>>2)];
      var $2123=((($2122)+($2120))|0);
      HEAP32[(($2121)>>2)]=$2123;
      var $2124=$t0;
      var $2125=$t1;
      var $2126=((($2124)+($2125))|0);
      var $2127=(($S+4)|0);
      HEAP32[(($2127)>>2)]=$2126;
      var $2128=(($S)|0);
      var $2129=HEAP32[(($2128)>>2)];
      var $2130=(($S+20)|0);
      var $2131=HEAP32[(($2130)>>2)];
      var $2132=$2131 >>> 6;
      var $2133=(($S+20)|0);
      var $2134=HEAP32[(($2133)>>2)];
      var $2135=$2134 << 26;
      var $2136=$2132 | $2135;
      var $2137=(($S+20)|0);
      var $2138=HEAP32[(($2137)>>2)];
      var $2139=$2138 >>> 11;
      var $2140=(($S+20)|0);
      var $2141=HEAP32[(($2140)>>2)];
      var $2142=$2141 << 21;
      var $2143=$2139 | $2142;
      var $2144=$2136 ^ $2143;
      var $2145=(($S+20)|0);
      var $2146=HEAP32[(($2145)>>2)];
      var $2147=$2146 >>> 25;
      var $2148=(($S+20)|0);
      var $2149=HEAP32[(($2148)>>2)];
      var $2150=$2149 << 7;
      var $2151=$2147 | $2150;
      var $2152=$2144 ^ $2151;
      var $2153=((($2129)+($2152))|0);
      var $2154=(($S+28)|0);
      var $2155=HEAP32[(($2154)>>2)];
      var $2156=(($S+20)|0);
      var $2157=HEAP32[(($2156)>>2)];
      var $2158=(($S+24)|0);
      var $2159=HEAP32[(($2158)>>2)];
      var $2160=(($S+28)|0);
      var $2161=HEAP32[(($2160)>>2)];
      var $2162=$2159 ^ $2161;
      var $2163=$2157 & $2162;
      var $2164=$2155 ^ $2163;
      var $2165=((($2153)+($2164))|0);
      var $2166=((($2165)+(1996064986))|0);
      var $2167=(($W+92)|0);
      var $2168=HEAP32[(($2167)>>2)];
      var $2169=((($2166)+($2168))|0);
      $t0=$2169;
      var $2170=(($S+4)|0);
      var $2171=HEAP32[(($2170)>>2)];
      var $2172=$2171 >>> 2;
      var $2173=(($S+4)|0);
      var $2174=HEAP32[(($2173)>>2)];
      var $2175=$2174 << 30;
      var $2176=$2172 | $2175;
      var $2177=(($S+4)|0);
      var $2178=HEAP32[(($2177)>>2)];
      var $2179=$2178 >>> 13;
      var $2180=(($S+4)|0);
      var $2181=HEAP32[(($2180)>>2)];
      var $2182=$2181 << 19;
      var $2183=$2179 | $2182;
      var $2184=$2176 ^ $2183;
      var $2185=(($S+4)|0);
      var $2186=HEAP32[(($2185)>>2)];
      var $2187=$2186 >>> 22;
      var $2188=(($S+4)|0);
      var $2189=HEAP32[(($2188)>>2)];
      var $2190=$2189 << 10;
      var $2191=$2187 | $2190;
      var $2192=$2184 ^ $2191;
      var $2193=(($S+4)|0);
      var $2194=HEAP32[(($2193)>>2)];
      var $2195=(($S+8)|0);
      var $2196=HEAP32[(($2195)>>2)];
      var $2197=$2194 | $2196;
      var $2198=(($S+12)|0);
      var $2199=HEAP32[(($2198)>>2)];
      var $2200=$2197 & $2199;
      var $2201=(($S+4)|0);
      var $2202=HEAP32[(($2201)>>2)];
      var $2203=(($S+8)|0);
      var $2204=HEAP32[(($2203)>>2)];
      var $2205=$2202 & $2204;
      var $2206=$2200 | $2205;
      var $2207=((($2192)+($2206))|0);
      $t1=$2207;
      var $2208=$t0;
      var $2209=(($S+16)|0);
      var $2210=HEAP32[(($2209)>>2)];
      var $2211=((($2210)+($2208))|0);
      HEAP32[(($2209)>>2)]=$2211;
      var $2212=$t0;
      var $2213=$t1;
      var $2214=((($2212)+($2213))|0);
      var $2215=(($S)|0);
      HEAP32[(($2215)>>2)]=$2214;
      var $2216=(($S+28)|0);
      var $2217=HEAP32[(($2216)>>2)];
      var $2218=(($S+16)|0);
      var $2219=HEAP32[(($2218)>>2)];
      var $2220=$2219 >>> 6;
      var $2221=(($S+16)|0);
      var $2222=HEAP32[(($2221)>>2)];
      var $2223=$2222 << 26;
      var $2224=$2220 | $2223;
      var $2225=(($S+16)|0);
      var $2226=HEAP32[(($2225)>>2)];
      var $2227=$2226 >>> 11;
      var $2228=(($S+16)|0);
      var $2229=HEAP32[(($2228)>>2)];
      var $2230=$2229 << 21;
      var $2231=$2227 | $2230;
      var $2232=$2224 ^ $2231;
      var $2233=(($S+16)|0);
      var $2234=HEAP32[(($2233)>>2)];
      var $2235=$2234 >>> 25;
      var $2236=(($S+16)|0);
      var $2237=HEAP32[(($2236)>>2)];
      var $2238=$2237 << 7;
      var $2239=$2235 | $2238;
      var $2240=$2232 ^ $2239;
      var $2241=((($2217)+($2240))|0);
      var $2242=(($S+24)|0);
      var $2243=HEAP32[(($2242)>>2)];
      var $2244=(($S+16)|0);
      var $2245=HEAP32[(($2244)>>2)];
      var $2246=(($S+20)|0);
      var $2247=HEAP32[(($2246)>>2)];
      var $2248=(($S+24)|0);
      var $2249=HEAP32[(($2248)>>2)];
      var $2250=$2247 ^ $2249;
      var $2251=$2245 & $2250;
      var $2252=$2243 ^ $2251;
      var $2253=((($2241)+($2252))|0);
      var $2254=((($2253)-(1740746414))|0);
      var $2255=(($W+96)|0);
      var $2256=HEAP32[(($2255)>>2)];
      var $2257=((($2254)+($2256))|0);
      $t0=$2257;
      var $2258=(($S)|0);
      var $2259=HEAP32[(($2258)>>2)];
      var $2260=$2259 >>> 2;
      var $2261=(($S)|0);
      var $2262=HEAP32[(($2261)>>2)];
      var $2263=$2262 << 30;
      var $2264=$2260 | $2263;
      var $2265=(($S)|0);
      var $2266=HEAP32[(($2265)>>2)];
      var $2267=$2266 >>> 13;
      var $2268=(($S)|0);
      var $2269=HEAP32[(($2268)>>2)];
      var $2270=$2269 << 19;
      var $2271=$2267 | $2270;
      var $2272=$2264 ^ $2271;
      var $2273=(($S)|0);
      var $2274=HEAP32[(($2273)>>2)];
      var $2275=$2274 >>> 22;
      var $2276=(($S)|0);
      var $2277=HEAP32[(($2276)>>2)];
      var $2278=$2277 << 10;
      var $2279=$2275 | $2278;
      var $2280=$2272 ^ $2279;
      var $2281=(($S)|0);
      var $2282=HEAP32[(($2281)>>2)];
      var $2283=(($S+4)|0);
      var $2284=HEAP32[(($2283)>>2)];
      var $2285=$2282 | $2284;
      var $2286=(($S+8)|0);
      var $2287=HEAP32[(($2286)>>2)];
      var $2288=$2285 & $2287;
      var $2289=(($S)|0);
      var $2290=HEAP32[(($2289)>>2)];
      var $2291=(($S+4)|0);
      var $2292=HEAP32[(($2291)>>2)];
      var $2293=$2290 & $2292;
      var $2294=$2288 | $2293;
      var $2295=((($2280)+($2294))|0);
      $t1=$2295;
      var $2296=$t0;
      var $2297=(($S+12)|0);
      var $2298=HEAP32[(($2297)>>2)];
      var $2299=((($2298)+($2296))|0);
      HEAP32[(($2297)>>2)]=$2299;
      var $2300=$t0;
      var $2301=$t1;
      var $2302=((($2300)+($2301))|0);
      var $2303=(($S+28)|0);
      HEAP32[(($2303)>>2)]=$2302;
      var $2304=(($S+24)|0);
      var $2305=HEAP32[(($2304)>>2)];
      var $2306=(($S+12)|0);
      var $2307=HEAP32[(($2306)>>2)];
      var $2308=$2307 >>> 6;
      var $2309=(($S+12)|0);
      var $2310=HEAP32[(($2309)>>2)];
      var $2311=$2310 << 26;
      var $2312=$2308 | $2311;
      var $2313=(($S+12)|0);
      var $2314=HEAP32[(($2313)>>2)];
      var $2315=$2314 >>> 11;
      var $2316=(($S+12)|0);
      var $2317=HEAP32[(($2316)>>2)];
      var $2318=$2317 << 21;
      var $2319=$2315 | $2318;
      var $2320=$2312 ^ $2319;
      var $2321=(($S+12)|0);
      var $2322=HEAP32[(($2321)>>2)];
      var $2323=$2322 >>> 25;
      var $2324=(($S+12)|0);
      var $2325=HEAP32[(($2324)>>2)];
      var $2326=$2325 << 7;
      var $2327=$2323 | $2326;
      var $2328=$2320 ^ $2327;
      var $2329=((($2305)+($2328))|0);
      var $2330=(($S+20)|0);
      var $2331=HEAP32[(($2330)>>2)];
      var $2332=(($S+12)|0);
      var $2333=HEAP32[(($2332)>>2)];
      var $2334=(($S+16)|0);
      var $2335=HEAP32[(($2334)>>2)];
      var $2336=(($S+20)|0);
      var $2337=HEAP32[(($2336)>>2)];
      var $2338=$2335 ^ $2337;
      var $2339=$2333 & $2338;
      var $2340=$2331 ^ $2339;
      var $2341=((($2329)+($2340))|0);
      var $2342=((($2341)-(1473132947))|0);
      var $2343=(($W+100)|0);
      var $2344=HEAP32[(($2343)>>2)];
      var $2345=((($2342)+($2344))|0);
      $t0=$2345;
      var $2346=(($S+28)|0);
      var $2347=HEAP32[(($2346)>>2)];
      var $2348=$2347 >>> 2;
      var $2349=(($S+28)|0);
      var $2350=HEAP32[(($2349)>>2)];
      var $2351=$2350 << 30;
      var $2352=$2348 | $2351;
      var $2353=(($S+28)|0);
      var $2354=HEAP32[(($2353)>>2)];
      var $2355=$2354 >>> 13;
      var $2356=(($S+28)|0);
      var $2357=HEAP32[(($2356)>>2)];
      var $2358=$2357 << 19;
      var $2359=$2355 | $2358;
      var $2360=$2352 ^ $2359;
      var $2361=(($S+28)|0);
      var $2362=HEAP32[(($2361)>>2)];
      var $2363=$2362 >>> 22;
      var $2364=(($S+28)|0);
      var $2365=HEAP32[(($2364)>>2)];
      var $2366=$2365 << 10;
      var $2367=$2363 | $2366;
      var $2368=$2360 ^ $2367;
      var $2369=(($S+28)|0);
      var $2370=HEAP32[(($2369)>>2)];
      var $2371=(($S)|0);
      var $2372=HEAP32[(($2371)>>2)];
      var $2373=$2370 | $2372;
      var $2374=(($S+4)|0);
      var $2375=HEAP32[(($2374)>>2)];
      var $2376=$2373 & $2375;
      var $2377=(($S+28)|0);
      var $2378=HEAP32[(($2377)>>2)];
      var $2379=(($S)|0);
      var $2380=HEAP32[(($2379)>>2)];
      var $2381=$2378 & $2380;
      var $2382=$2376 | $2381;
      var $2383=((($2368)+($2382))|0);
      $t1=$2383;
      var $2384=$t0;
      var $2385=(($S+8)|0);
      var $2386=HEAP32[(($2385)>>2)];
      var $2387=((($2386)+($2384))|0);
      HEAP32[(($2385)>>2)]=$2387;
      var $2388=$t0;
      var $2389=$t1;
      var $2390=((($2388)+($2389))|0);
      var $2391=(($S+24)|0);
      HEAP32[(($2391)>>2)]=$2390;
      var $2392=(($S+20)|0);
      var $2393=HEAP32[(($2392)>>2)];
      var $2394=(($S+8)|0);
      var $2395=HEAP32[(($2394)>>2)];
      var $2396=$2395 >>> 6;
      var $2397=(($S+8)|0);
      var $2398=HEAP32[(($2397)>>2)];
      var $2399=$2398 << 26;
      var $2400=$2396 | $2399;
      var $2401=(($S+8)|0);
      var $2402=HEAP32[(($2401)>>2)];
      var $2403=$2402 >>> 11;
      var $2404=(($S+8)|0);
      var $2405=HEAP32[(($2404)>>2)];
      var $2406=$2405 << 21;
      var $2407=$2403 | $2406;
      var $2408=$2400 ^ $2407;
      var $2409=(($S+8)|0);
      var $2410=HEAP32[(($2409)>>2)];
      var $2411=$2410 >>> 25;
      var $2412=(($S+8)|0);
      var $2413=HEAP32[(($2412)>>2)];
      var $2414=$2413 << 7;
      var $2415=$2411 | $2414;
      var $2416=$2408 ^ $2415;
      var $2417=((($2393)+($2416))|0);
      var $2418=(($S+16)|0);
      var $2419=HEAP32[(($2418)>>2)];
      var $2420=(($S+8)|0);
      var $2421=HEAP32[(($2420)>>2)];
      var $2422=(($S+12)|0);
      var $2423=HEAP32[(($2422)>>2)];
      var $2424=(($S+16)|0);
      var $2425=HEAP32[(($2424)>>2)];
      var $2426=$2423 ^ $2425;
      var $2427=$2421 & $2426;
      var $2428=$2419 ^ $2427;
      var $2429=((($2417)+($2428))|0);
      var $2430=((($2429)-(1341970488))|0);
      var $2431=(($W+104)|0);
      var $2432=HEAP32[(($2431)>>2)];
      var $2433=((($2430)+($2432))|0);
      $t0=$2433;
      var $2434=(($S+24)|0);
      var $2435=HEAP32[(($2434)>>2)];
      var $2436=$2435 >>> 2;
      var $2437=(($S+24)|0);
      var $2438=HEAP32[(($2437)>>2)];
      var $2439=$2438 << 30;
      var $2440=$2436 | $2439;
      var $2441=(($S+24)|0);
      var $2442=HEAP32[(($2441)>>2)];
      var $2443=$2442 >>> 13;
      var $2444=(($S+24)|0);
      var $2445=HEAP32[(($2444)>>2)];
      var $2446=$2445 << 19;
      var $2447=$2443 | $2446;
      var $2448=$2440 ^ $2447;
      var $2449=(($S+24)|0);
      var $2450=HEAP32[(($2449)>>2)];
      var $2451=$2450 >>> 22;
      var $2452=(($S+24)|0);
      var $2453=HEAP32[(($2452)>>2)];
      var $2454=$2453 << 10;
      var $2455=$2451 | $2454;
      var $2456=$2448 ^ $2455;
      var $2457=(($S+24)|0);
      var $2458=HEAP32[(($2457)>>2)];
      var $2459=(($S+28)|0);
      var $2460=HEAP32[(($2459)>>2)];
      var $2461=$2458 | $2460;
      var $2462=(($S)|0);
      var $2463=HEAP32[(($2462)>>2)];
      var $2464=$2461 & $2463;
      var $2465=(($S+24)|0);
      var $2466=HEAP32[(($2465)>>2)];
      var $2467=(($S+28)|0);
      var $2468=HEAP32[(($2467)>>2)];
      var $2469=$2466 & $2468;
      var $2470=$2464 | $2469;
      var $2471=((($2456)+($2470))|0);
      $t1=$2471;
      var $2472=$t0;
      var $2473=(($S+4)|0);
      var $2474=HEAP32[(($2473)>>2)];
      var $2475=((($2474)+($2472))|0);
      HEAP32[(($2473)>>2)]=$2475;
      var $2476=$t0;
      var $2477=$t1;
      var $2478=((($2476)+($2477))|0);
      var $2479=(($S+20)|0);
      HEAP32[(($2479)>>2)]=$2478;
      var $2480=(($S+16)|0);
      var $2481=HEAP32[(($2480)>>2)];
      var $2482=(($S+4)|0);
      var $2483=HEAP32[(($2482)>>2)];
      var $2484=$2483 >>> 6;
      var $2485=(($S+4)|0);
      var $2486=HEAP32[(($2485)>>2)];
      var $2487=$2486 << 26;
      var $2488=$2484 | $2487;
      var $2489=(($S+4)|0);
      var $2490=HEAP32[(($2489)>>2)];
      var $2491=$2490 >>> 11;
      var $2492=(($S+4)|0);
      var $2493=HEAP32[(($2492)>>2)];
      var $2494=$2493 << 21;
      var $2495=$2491 | $2494;
      var $2496=$2488 ^ $2495;
      var $2497=(($S+4)|0);
      var $2498=HEAP32[(($2497)>>2)];
      var $2499=$2498 >>> 25;
      var $2500=(($S+4)|0);
      var $2501=HEAP32[(($2500)>>2)];
      var $2502=$2501 << 7;
      var $2503=$2499 | $2502;
      var $2504=$2496 ^ $2503;
      var $2505=((($2481)+($2504))|0);
      var $2506=(($S+12)|0);
      var $2507=HEAP32[(($2506)>>2)];
      var $2508=(($S+4)|0);
      var $2509=HEAP32[(($2508)>>2)];
      var $2510=(($S+8)|0);
      var $2511=HEAP32[(($2510)>>2)];
      var $2512=(($S+12)|0);
      var $2513=HEAP32[(($2512)>>2)];
      var $2514=$2511 ^ $2513;
      var $2515=$2509 & $2514;
      var $2516=$2507 ^ $2515;
      var $2517=((($2505)+($2516))|0);
      var $2518=((($2517)-(1084653625))|0);
      var $2519=(($W+108)|0);
      var $2520=HEAP32[(($2519)>>2)];
      var $2521=((($2518)+($2520))|0);
      $t0=$2521;
      var $2522=(($S+20)|0);
      var $2523=HEAP32[(($2522)>>2)];
      var $2524=$2523 >>> 2;
      var $2525=(($S+20)|0);
      var $2526=HEAP32[(($2525)>>2)];
      var $2527=$2526 << 30;
      var $2528=$2524 | $2527;
      var $2529=(($S+20)|0);
      var $2530=HEAP32[(($2529)>>2)];
      var $2531=$2530 >>> 13;
      var $2532=(($S+20)|0);
      var $2533=HEAP32[(($2532)>>2)];
      var $2534=$2533 << 19;
      var $2535=$2531 | $2534;
      var $2536=$2528 ^ $2535;
      var $2537=(($S+20)|0);
      var $2538=HEAP32[(($2537)>>2)];
      var $2539=$2538 >>> 22;
      var $2540=(($S+20)|0);
      var $2541=HEAP32[(($2540)>>2)];
      var $2542=$2541 << 10;
      var $2543=$2539 | $2542;
      var $2544=$2536 ^ $2543;
      var $2545=(($S+20)|0);
      var $2546=HEAP32[(($2545)>>2)];
      var $2547=(($S+24)|0);
      var $2548=HEAP32[(($2547)>>2)];
      var $2549=$2546 | $2548;
      var $2550=(($S+28)|0);
      var $2551=HEAP32[(($2550)>>2)];
      var $2552=$2549 & $2551;
      var $2553=(($S+20)|0);
      var $2554=HEAP32[(($2553)>>2)];
      var $2555=(($S+24)|0);
      var $2556=HEAP32[(($2555)>>2)];
      var $2557=$2554 & $2556;
      var $2558=$2552 | $2557;
      var $2559=((($2544)+($2558))|0);
      $t1=$2559;
      var $2560=$t0;
      var $2561=(($S)|0);
      var $2562=HEAP32[(($2561)>>2)];
      var $2563=((($2562)+($2560))|0);
      HEAP32[(($2561)>>2)]=$2563;
      var $2564=$t0;
      var $2565=$t1;
      var $2566=((($2564)+($2565))|0);
      var $2567=(($S+16)|0);
      HEAP32[(($2567)>>2)]=$2566;
      var $2568=(($S+12)|0);
      var $2569=HEAP32[(($2568)>>2)];
      var $2570=(($S)|0);
      var $2571=HEAP32[(($2570)>>2)];
      var $2572=$2571 >>> 6;
      var $2573=(($S)|0);
      var $2574=HEAP32[(($2573)>>2)];
      var $2575=$2574 << 26;
      var $2576=$2572 | $2575;
      var $2577=(($S)|0);
      var $2578=HEAP32[(($2577)>>2)];
      var $2579=$2578 >>> 11;
      var $2580=(($S)|0);
      var $2581=HEAP32[(($2580)>>2)];
      var $2582=$2581 << 21;
      var $2583=$2579 | $2582;
      var $2584=$2576 ^ $2583;
      var $2585=(($S)|0);
      var $2586=HEAP32[(($2585)>>2)];
      var $2587=$2586 >>> 25;
      var $2588=(($S)|0);
      var $2589=HEAP32[(($2588)>>2)];
      var $2590=$2589 << 7;
      var $2591=$2587 | $2590;
      var $2592=$2584 ^ $2591;
      var $2593=((($2569)+($2592))|0);
      var $2594=(($S+8)|0);
      var $2595=HEAP32[(($2594)>>2)];
      var $2596=(($S)|0);
      var $2597=HEAP32[(($2596)>>2)];
      var $2598=(($S+4)|0);
      var $2599=HEAP32[(($2598)>>2)];
      var $2600=(($S+8)|0);
      var $2601=HEAP32[(($2600)>>2)];
      var $2602=$2599 ^ $2601;
      var $2603=$2597 & $2602;
      var $2604=$2595 ^ $2603;
      var $2605=((($2593)+($2604))|0);
      var $2606=((($2605)-(958395405))|0);
      var $2607=(($W+112)|0);
      var $2608=HEAP32[(($2607)>>2)];
      var $2609=((($2606)+($2608))|0);
      $t0=$2609;
      var $2610=(($S+16)|0);
      var $2611=HEAP32[(($2610)>>2)];
      var $2612=$2611 >>> 2;
      var $2613=(($S+16)|0);
      var $2614=HEAP32[(($2613)>>2)];
      var $2615=$2614 << 30;
      var $2616=$2612 | $2615;
      var $2617=(($S+16)|0);
      var $2618=HEAP32[(($2617)>>2)];
      var $2619=$2618 >>> 13;
      var $2620=(($S+16)|0);
      var $2621=HEAP32[(($2620)>>2)];
      var $2622=$2621 << 19;
      var $2623=$2619 | $2622;
      var $2624=$2616 ^ $2623;
      var $2625=(($S+16)|0);
      var $2626=HEAP32[(($2625)>>2)];
      var $2627=$2626 >>> 22;
      var $2628=(($S+16)|0);
      var $2629=HEAP32[(($2628)>>2)];
      var $2630=$2629 << 10;
      var $2631=$2627 | $2630;
      var $2632=$2624 ^ $2631;
      var $2633=(($S+16)|0);
      var $2634=HEAP32[(($2633)>>2)];
      var $2635=(($S+20)|0);
      var $2636=HEAP32[(($2635)>>2)];
      var $2637=$2634 | $2636;
      var $2638=(($S+24)|0);
      var $2639=HEAP32[(($2638)>>2)];
      var $2640=$2637 & $2639;
      var $2641=(($S+16)|0);
      var $2642=HEAP32[(($2641)>>2)];
      var $2643=(($S+20)|0);
      var $2644=HEAP32[(($2643)>>2)];
      var $2645=$2642 & $2644;
      var $2646=$2640 | $2645;
      var $2647=((($2632)+($2646))|0);
      $t1=$2647;
      var $2648=$t0;
      var $2649=(($S+28)|0);
      var $2650=HEAP32[(($2649)>>2)];
      var $2651=((($2650)+($2648))|0);
      HEAP32[(($2649)>>2)]=$2651;
      var $2652=$t0;
      var $2653=$t1;
      var $2654=((($2652)+($2653))|0);
      var $2655=(($S+12)|0);
      HEAP32[(($2655)>>2)]=$2654;
      var $2656=(($S+8)|0);
      var $2657=HEAP32[(($2656)>>2)];
      var $2658=(($S+28)|0);
      var $2659=HEAP32[(($2658)>>2)];
      var $2660=$2659 >>> 6;
      var $2661=(($S+28)|0);
      var $2662=HEAP32[(($2661)>>2)];
      var $2663=$2662 << 26;
      var $2664=$2660 | $2663;
      var $2665=(($S+28)|0);
      var $2666=HEAP32[(($2665)>>2)];
      var $2667=$2666 >>> 11;
      var $2668=(($S+28)|0);
      var $2669=HEAP32[(($2668)>>2)];
      var $2670=$2669 << 21;
      var $2671=$2667 | $2670;
      var $2672=$2664 ^ $2671;
      var $2673=(($S+28)|0);
      var $2674=HEAP32[(($2673)>>2)];
      var $2675=$2674 >>> 25;
      var $2676=(($S+28)|0);
      var $2677=HEAP32[(($2676)>>2)];
      var $2678=$2677 << 7;
      var $2679=$2675 | $2678;
      var $2680=$2672 ^ $2679;
      var $2681=((($2657)+($2680))|0);
      var $2682=(($S+4)|0);
      var $2683=HEAP32[(($2682)>>2)];
      var $2684=(($S+28)|0);
      var $2685=HEAP32[(($2684)>>2)];
      var $2686=(($S)|0);
      var $2687=HEAP32[(($2686)>>2)];
      var $2688=(($S+4)|0);
      var $2689=HEAP32[(($2688)>>2)];
      var $2690=$2687 ^ $2689;
      var $2691=$2685 & $2690;
      var $2692=$2683 ^ $2691;
      var $2693=((($2681)+($2692))|0);
      var $2694=((($2693)-(710438585))|0);
      var $2695=(($W+116)|0);
      var $2696=HEAP32[(($2695)>>2)];
      var $2697=((($2694)+($2696))|0);
      $t0=$2697;
      var $2698=(($S+12)|0);
      var $2699=HEAP32[(($2698)>>2)];
      var $2700=$2699 >>> 2;
      var $2701=(($S+12)|0);
      var $2702=HEAP32[(($2701)>>2)];
      var $2703=$2702 << 30;
      var $2704=$2700 | $2703;
      var $2705=(($S+12)|0);
      var $2706=HEAP32[(($2705)>>2)];
      var $2707=$2706 >>> 13;
      var $2708=(($S+12)|0);
      var $2709=HEAP32[(($2708)>>2)];
      var $2710=$2709 << 19;
      var $2711=$2707 | $2710;
      var $2712=$2704 ^ $2711;
      var $2713=(($S+12)|0);
      var $2714=HEAP32[(($2713)>>2)];
      var $2715=$2714 >>> 22;
      var $2716=(($S+12)|0);
      var $2717=HEAP32[(($2716)>>2)];
      var $2718=$2717 << 10;
      var $2719=$2715 | $2718;
      var $2720=$2712 ^ $2719;
      var $2721=(($S+12)|0);
      var $2722=HEAP32[(($2721)>>2)];
      var $2723=(($S+16)|0);
      var $2724=HEAP32[(($2723)>>2)];
      var $2725=$2722 | $2724;
      var $2726=(($S+20)|0);
      var $2727=HEAP32[(($2726)>>2)];
      var $2728=$2725 & $2727;
      var $2729=(($S+12)|0);
      var $2730=HEAP32[(($2729)>>2)];
      var $2731=(($S+16)|0);
      var $2732=HEAP32[(($2731)>>2)];
      var $2733=$2730 & $2732;
      var $2734=$2728 | $2733;
      var $2735=((($2720)+($2734))|0);
      $t1=$2735;
      var $2736=$t0;
      var $2737=(($S+24)|0);
      var $2738=HEAP32[(($2737)>>2)];
      var $2739=((($2738)+($2736))|0);
      HEAP32[(($2737)>>2)]=$2739;
      var $2740=$t0;
      var $2741=$t1;
      var $2742=((($2740)+($2741))|0);
      var $2743=(($S+8)|0);
      HEAP32[(($2743)>>2)]=$2742;
      var $2744=(($S+4)|0);
      var $2745=HEAP32[(($2744)>>2)];
      var $2746=(($S+24)|0);
      var $2747=HEAP32[(($2746)>>2)];
      var $2748=$2747 >>> 6;
      var $2749=(($S+24)|0);
      var $2750=HEAP32[(($2749)>>2)];
      var $2751=$2750 << 26;
      var $2752=$2748 | $2751;
      var $2753=(($S+24)|0);
      var $2754=HEAP32[(($2753)>>2)];
      var $2755=$2754 >>> 11;
      var $2756=(($S+24)|0);
      var $2757=HEAP32[(($2756)>>2)];
      var $2758=$2757 << 21;
      var $2759=$2755 | $2758;
      var $2760=$2752 ^ $2759;
      var $2761=(($S+24)|0);
      var $2762=HEAP32[(($2761)>>2)];
      var $2763=$2762 >>> 25;
      var $2764=(($S+24)|0);
      var $2765=HEAP32[(($2764)>>2)];
      var $2766=$2765 << 7;
      var $2767=$2763 | $2766;
      var $2768=$2760 ^ $2767;
      var $2769=((($2745)+($2768))|0);
      var $2770=(($S)|0);
      var $2771=HEAP32[(($2770)>>2)];
      var $2772=(($S+24)|0);
      var $2773=HEAP32[(($2772)>>2)];
      var $2774=(($S+28)|0);
      var $2775=HEAP32[(($2774)>>2)];
      var $2776=(($S)|0);
      var $2777=HEAP32[(($2776)>>2)];
      var $2778=$2775 ^ $2777;
      var $2779=$2773 & $2778;
      var $2780=$2771 ^ $2779;
      var $2781=((($2769)+($2780))|0);
      var $2782=((($2781)+(113926993))|0);
      var $2783=(($W+120)|0);
      var $2784=HEAP32[(($2783)>>2)];
      var $2785=((($2782)+($2784))|0);
      $t0=$2785;
      var $2786=(($S+8)|0);
      var $2787=HEAP32[(($2786)>>2)];
      var $2788=$2787 >>> 2;
      var $2789=(($S+8)|0);
      var $2790=HEAP32[(($2789)>>2)];
      var $2791=$2790 << 30;
      var $2792=$2788 | $2791;
      var $2793=(($S+8)|0);
      var $2794=HEAP32[(($2793)>>2)];
      var $2795=$2794 >>> 13;
      var $2796=(($S+8)|0);
      var $2797=HEAP32[(($2796)>>2)];
      var $2798=$2797 << 19;
      var $2799=$2795 | $2798;
      var $2800=$2792 ^ $2799;
      var $2801=(($S+8)|0);
      var $2802=HEAP32[(($2801)>>2)];
      var $2803=$2802 >>> 22;
      var $2804=(($S+8)|0);
      var $2805=HEAP32[(($2804)>>2)];
      var $2806=$2805 << 10;
      var $2807=$2803 | $2806;
      var $2808=$2800 ^ $2807;
      var $2809=(($S+8)|0);
      var $2810=HEAP32[(($2809)>>2)];
      var $2811=(($S+12)|0);
      var $2812=HEAP32[(($2811)>>2)];
      var $2813=$2810 | $2812;
      var $2814=(($S+16)|0);
      var $2815=HEAP32[(($2814)>>2)];
      var $2816=$2813 & $2815;
      var $2817=(($S+8)|0);
      var $2818=HEAP32[(($2817)>>2)];
      var $2819=(($S+12)|0);
      var $2820=HEAP32[(($2819)>>2)];
      var $2821=$2818 & $2820;
      var $2822=$2816 | $2821;
      var $2823=((($2808)+($2822))|0);
      $t1=$2823;
      var $2824=$t0;
      var $2825=(($S+20)|0);
      var $2826=HEAP32[(($2825)>>2)];
      var $2827=((($2826)+($2824))|0);
      HEAP32[(($2825)>>2)]=$2827;
      var $2828=$t0;
      var $2829=$t1;
      var $2830=((($2828)+($2829))|0);
      var $2831=(($S+4)|0);
      HEAP32[(($2831)>>2)]=$2830;
      var $2832=(($S)|0);
      var $2833=HEAP32[(($2832)>>2)];
      var $2834=(($S+20)|0);
      var $2835=HEAP32[(($2834)>>2)];
      var $2836=$2835 >>> 6;
      var $2837=(($S+20)|0);
      var $2838=HEAP32[(($2837)>>2)];
      var $2839=$2838 << 26;
      var $2840=$2836 | $2839;
      var $2841=(($S+20)|0);
      var $2842=HEAP32[(($2841)>>2)];
      var $2843=$2842 >>> 11;
      var $2844=(($S+20)|0);
      var $2845=HEAP32[(($2844)>>2)];
      var $2846=$2845 << 21;
      var $2847=$2843 | $2846;
      var $2848=$2840 ^ $2847;
      var $2849=(($S+20)|0);
      var $2850=HEAP32[(($2849)>>2)];
      var $2851=$2850 >>> 25;
      var $2852=(($S+20)|0);
      var $2853=HEAP32[(($2852)>>2)];
      var $2854=$2853 << 7;
      var $2855=$2851 | $2854;
      var $2856=$2848 ^ $2855;
      var $2857=((($2833)+($2856))|0);
      var $2858=(($S+28)|0);
      var $2859=HEAP32[(($2858)>>2)];
      var $2860=(($S+20)|0);
      var $2861=HEAP32[(($2860)>>2)];
      var $2862=(($S+24)|0);
      var $2863=HEAP32[(($2862)>>2)];
      var $2864=(($S+28)|0);
      var $2865=HEAP32[(($2864)>>2)];
      var $2866=$2863 ^ $2865;
      var $2867=$2861 & $2866;
      var $2868=$2859 ^ $2867;
      var $2869=((($2857)+($2868))|0);
      var $2870=((($2869)+(338241895))|0);
      var $2871=(($W+124)|0);
      var $2872=HEAP32[(($2871)>>2)];
      var $2873=((($2870)+($2872))|0);
      $t0=$2873;
      var $2874=(($S+4)|0);
      var $2875=HEAP32[(($2874)>>2)];
      var $2876=$2875 >>> 2;
      var $2877=(($S+4)|0);
      var $2878=HEAP32[(($2877)>>2)];
      var $2879=$2878 << 30;
      var $2880=$2876 | $2879;
      var $2881=(($S+4)|0);
      var $2882=HEAP32[(($2881)>>2)];
      var $2883=$2882 >>> 13;
      var $2884=(($S+4)|0);
      var $2885=HEAP32[(($2884)>>2)];
      var $2886=$2885 << 19;
      var $2887=$2883 | $2886;
      var $2888=$2880 ^ $2887;
      var $2889=(($S+4)|0);
      var $2890=HEAP32[(($2889)>>2)];
      var $2891=$2890 >>> 22;
      var $2892=(($S+4)|0);
      var $2893=HEAP32[(($2892)>>2)];
      var $2894=$2893 << 10;
      var $2895=$2891 | $2894;
      var $2896=$2888 ^ $2895;
      var $2897=(($S+4)|0);
      var $2898=HEAP32[(($2897)>>2)];
      var $2899=(($S+8)|0);
      var $2900=HEAP32[(($2899)>>2)];
      var $2901=$2898 | $2900;
      var $2902=(($S+12)|0);
      var $2903=HEAP32[(($2902)>>2)];
      var $2904=$2901 & $2903;
      var $2905=(($S+4)|0);
      var $2906=HEAP32[(($2905)>>2)];
      var $2907=(($S+8)|0);
      var $2908=HEAP32[(($2907)>>2)];
      var $2909=$2906 & $2908;
      var $2910=$2904 | $2909;
      var $2911=((($2896)+($2910))|0);
      $t1=$2911;
      var $2912=$t0;
      var $2913=(($S+16)|0);
      var $2914=HEAP32[(($2913)>>2)];
      var $2915=((($2914)+($2912))|0);
      HEAP32[(($2913)>>2)]=$2915;
      var $2916=$t0;
      var $2917=$t1;
      var $2918=((($2916)+($2917))|0);
      var $2919=(($S)|0);
      HEAP32[(($2919)>>2)]=$2918;
      var $2920=(($S+28)|0);
      var $2921=HEAP32[(($2920)>>2)];
      var $2922=(($S+16)|0);
      var $2923=HEAP32[(($2922)>>2)];
      var $2924=$2923 >>> 6;
      var $2925=(($S+16)|0);
      var $2926=HEAP32[(($2925)>>2)];
      var $2927=$2926 << 26;
      var $2928=$2924 | $2927;
      var $2929=(($S+16)|0);
      var $2930=HEAP32[(($2929)>>2)];
      var $2931=$2930 >>> 11;
      var $2932=(($S+16)|0);
      var $2933=HEAP32[(($2932)>>2)];
      var $2934=$2933 << 21;
      var $2935=$2931 | $2934;
      var $2936=$2928 ^ $2935;
      var $2937=(($S+16)|0);
      var $2938=HEAP32[(($2937)>>2)];
      var $2939=$2938 >>> 25;
      var $2940=(($S+16)|0);
      var $2941=HEAP32[(($2940)>>2)];
      var $2942=$2941 << 7;
      var $2943=$2939 | $2942;
      var $2944=$2936 ^ $2943;
      var $2945=((($2921)+($2944))|0);
      var $2946=(($S+24)|0);
      var $2947=HEAP32[(($2946)>>2)];
      var $2948=(($S+16)|0);
      var $2949=HEAP32[(($2948)>>2)];
      var $2950=(($S+20)|0);
      var $2951=HEAP32[(($2950)>>2)];
      var $2952=(($S+24)|0);
      var $2953=HEAP32[(($2952)>>2)];
      var $2954=$2951 ^ $2953;
      var $2955=$2949 & $2954;
      var $2956=$2947 ^ $2955;
      var $2957=((($2945)+($2956))|0);
      var $2958=((($2957)+(666307205))|0);
      var $2959=(($W+128)|0);
      var $2960=HEAP32[(($2959)>>2)];
      var $2961=((($2958)+($2960))|0);
      $t0=$2961;
      var $2962=(($S)|0);
      var $2963=HEAP32[(($2962)>>2)];
      var $2964=$2963 >>> 2;
      var $2965=(($S)|0);
      var $2966=HEAP32[(($2965)>>2)];
      var $2967=$2966 << 30;
      var $2968=$2964 | $2967;
      var $2969=(($S)|0);
      var $2970=HEAP32[(($2969)>>2)];
      var $2971=$2970 >>> 13;
      var $2972=(($S)|0);
      var $2973=HEAP32[(($2972)>>2)];
      var $2974=$2973 << 19;
      var $2975=$2971 | $2974;
      var $2976=$2968 ^ $2975;
      var $2977=(($S)|0);
      var $2978=HEAP32[(($2977)>>2)];
      var $2979=$2978 >>> 22;
      var $2980=(($S)|0);
      var $2981=HEAP32[(($2980)>>2)];
      var $2982=$2981 << 10;
      var $2983=$2979 | $2982;
      var $2984=$2976 ^ $2983;
      var $2985=(($S)|0);
      var $2986=HEAP32[(($2985)>>2)];
      var $2987=(($S+4)|0);
      var $2988=HEAP32[(($2987)>>2)];
      var $2989=$2986 | $2988;
      var $2990=(($S+8)|0);
      var $2991=HEAP32[(($2990)>>2)];
      var $2992=$2989 & $2991;
      var $2993=(($S)|0);
      var $2994=HEAP32[(($2993)>>2)];
      var $2995=(($S+4)|0);
      var $2996=HEAP32[(($2995)>>2)];
      var $2997=$2994 & $2996;
      var $2998=$2992 | $2997;
      var $2999=((($2984)+($2998))|0);
      $t1=$2999;
      var $3000=$t0;
      var $3001=(($S+12)|0);
      var $3002=HEAP32[(($3001)>>2)];
      var $3003=((($3002)+($3000))|0);
      HEAP32[(($3001)>>2)]=$3003;
      var $3004=$t0;
      var $3005=$t1;
      var $3006=((($3004)+($3005))|0);
      var $3007=(($S+28)|0);
      HEAP32[(($3007)>>2)]=$3006;
      var $3008=(($S+24)|0);
      var $3009=HEAP32[(($3008)>>2)];
      var $3010=(($S+12)|0);
      var $3011=HEAP32[(($3010)>>2)];
      var $3012=$3011 >>> 6;
      var $3013=(($S+12)|0);
      var $3014=HEAP32[(($3013)>>2)];
      var $3015=$3014 << 26;
      var $3016=$3012 | $3015;
      var $3017=(($S+12)|0);
      var $3018=HEAP32[(($3017)>>2)];
      var $3019=$3018 >>> 11;
      var $3020=(($S+12)|0);
      var $3021=HEAP32[(($3020)>>2)];
      var $3022=$3021 << 21;
      var $3023=$3019 | $3022;
      var $3024=$3016 ^ $3023;
      var $3025=(($S+12)|0);
      var $3026=HEAP32[(($3025)>>2)];
      var $3027=$3026 >>> 25;
      var $3028=(($S+12)|0);
      var $3029=HEAP32[(($3028)>>2)];
      var $3030=$3029 << 7;
      var $3031=$3027 | $3030;
      var $3032=$3024 ^ $3031;
      var $3033=((($3009)+($3032))|0);
      var $3034=(($S+20)|0);
      var $3035=HEAP32[(($3034)>>2)];
      var $3036=(($S+12)|0);
      var $3037=HEAP32[(($3036)>>2)];
      var $3038=(($S+16)|0);
      var $3039=HEAP32[(($3038)>>2)];
      var $3040=(($S+20)|0);
      var $3041=HEAP32[(($3040)>>2)];
      var $3042=$3039 ^ $3041;
      var $3043=$3037 & $3042;
      var $3044=$3035 ^ $3043;
      var $3045=((($3033)+($3044))|0);
      var $3046=((($3045)+(773529912))|0);
      var $3047=(($W+132)|0);
      var $3048=HEAP32[(($3047)>>2)];
      var $3049=((($3046)+($3048))|0);
      $t0=$3049;
      var $3050=(($S+28)|0);
      var $3051=HEAP32[(($3050)>>2)];
      var $3052=$3051 >>> 2;
      var $3053=(($S+28)|0);
      var $3054=HEAP32[(($3053)>>2)];
      var $3055=$3054 << 30;
      var $3056=$3052 | $3055;
      var $3057=(($S+28)|0);
      var $3058=HEAP32[(($3057)>>2)];
      var $3059=$3058 >>> 13;
      var $3060=(($S+28)|0);
      var $3061=HEAP32[(($3060)>>2)];
      var $3062=$3061 << 19;
      var $3063=$3059 | $3062;
      var $3064=$3056 ^ $3063;
      var $3065=(($S+28)|0);
      var $3066=HEAP32[(($3065)>>2)];
      var $3067=$3066 >>> 22;
      var $3068=(($S+28)|0);
      var $3069=HEAP32[(($3068)>>2)];
      var $3070=$3069 << 10;
      var $3071=$3067 | $3070;
      var $3072=$3064 ^ $3071;
      var $3073=(($S+28)|0);
      var $3074=HEAP32[(($3073)>>2)];
      var $3075=(($S)|0);
      var $3076=HEAP32[(($3075)>>2)];
      var $3077=$3074 | $3076;
      var $3078=(($S+4)|0);
      var $3079=HEAP32[(($3078)>>2)];
      var $3080=$3077 & $3079;
      var $3081=(($S+28)|0);
      var $3082=HEAP32[(($3081)>>2)];
      var $3083=(($S)|0);
      var $3084=HEAP32[(($3083)>>2)];
      var $3085=$3082 & $3084;
      var $3086=$3080 | $3085;
      var $3087=((($3072)+($3086))|0);
      $t1=$3087;
      var $3088=$t0;
      var $3089=(($S+8)|0);
      var $3090=HEAP32[(($3089)>>2)];
      var $3091=((($3090)+($3088))|0);
      HEAP32[(($3089)>>2)]=$3091;
      var $3092=$t0;
      var $3093=$t1;
      var $3094=((($3092)+($3093))|0);
      var $3095=(($S+24)|0);
      HEAP32[(($3095)>>2)]=$3094;
      var $3096=(($S+20)|0);
      var $3097=HEAP32[(($3096)>>2)];
      var $3098=(($S+8)|0);
      var $3099=HEAP32[(($3098)>>2)];
      var $3100=$3099 >>> 6;
      var $3101=(($S+8)|0);
      var $3102=HEAP32[(($3101)>>2)];
      var $3103=$3102 << 26;
      var $3104=$3100 | $3103;
      var $3105=(($S+8)|0);
      var $3106=HEAP32[(($3105)>>2)];
      var $3107=$3106 >>> 11;
      var $3108=(($S+8)|0);
      var $3109=HEAP32[(($3108)>>2)];
      var $3110=$3109 << 21;
      var $3111=$3107 | $3110;
      var $3112=$3104 ^ $3111;
      var $3113=(($S+8)|0);
      var $3114=HEAP32[(($3113)>>2)];
      var $3115=$3114 >>> 25;
      var $3116=(($S+8)|0);
      var $3117=HEAP32[(($3116)>>2)];
      var $3118=$3117 << 7;
      var $3119=$3115 | $3118;
      var $3120=$3112 ^ $3119;
      var $3121=((($3097)+($3120))|0);
      var $3122=(($S+16)|0);
      var $3123=HEAP32[(($3122)>>2)];
      var $3124=(($S+8)|0);
      var $3125=HEAP32[(($3124)>>2)];
      var $3126=(($S+12)|0);
      var $3127=HEAP32[(($3126)>>2)];
      var $3128=(($S+16)|0);
      var $3129=HEAP32[(($3128)>>2)];
      var $3130=$3127 ^ $3129;
      var $3131=$3125 & $3130;
      var $3132=$3123 ^ $3131;
      var $3133=((($3121)+($3132))|0);
      var $3134=((($3133)+(1294757372))|0);
      var $3135=(($W+136)|0);
      var $3136=HEAP32[(($3135)>>2)];
      var $3137=((($3134)+($3136))|0);
      $t0=$3137;
      var $3138=(($S+24)|0);
      var $3139=HEAP32[(($3138)>>2)];
      var $3140=$3139 >>> 2;
      var $3141=(($S+24)|0);
      var $3142=HEAP32[(($3141)>>2)];
      var $3143=$3142 << 30;
      var $3144=$3140 | $3143;
      var $3145=(($S+24)|0);
      var $3146=HEAP32[(($3145)>>2)];
      var $3147=$3146 >>> 13;
      var $3148=(($S+24)|0);
      var $3149=HEAP32[(($3148)>>2)];
      var $3150=$3149 << 19;
      var $3151=$3147 | $3150;
      var $3152=$3144 ^ $3151;
      var $3153=(($S+24)|0);
      var $3154=HEAP32[(($3153)>>2)];
      var $3155=$3154 >>> 22;
      var $3156=(($S+24)|0);
      var $3157=HEAP32[(($3156)>>2)];
      var $3158=$3157 << 10;
      var $3159=$3155 | $3158;
      var $3160=$3152 ^ $3159;
      var $3161=(($S+24)|0);
      var $3162=HEAP32[(($3161)>>2)];
      var $3163=(($S+28)|0);
      var $3164=HEAP32[(($3163)>>2)];
      var $3165=$3162 | $3164;
      var $3166=(($S)|0);
      var $3167=HEAP32[(($3166)>>2)];
      var $3168=$3165 & $3167;
      var $3169=(($S+24)|0);
      var $3170=HEAP32[(($3169)>>2)];
      var $3171=(($S+28)|0);
      var $3172=HEAP32[(($3171)>>2)];
      var $3173=$3170 & $3172;
      var $3174=$3168 | $3173;
      var $3175=((($3160)+($3174))|0);
      $t1=$3175;
      var $3176=$t0;
      var $3177=(($S+4)|0);
      var $3178=HEAP32[(($3177)>>2)];
      var $3179=((($3178)+($3176))|0);
      HEAP32[(($3177)>>2)]=$3179;
      var $3180=$t0;
      var $3181=$t1;
      var $3182=((($3180)+($3181))|0);
      var $3183=(($S+20)|0);
      HEAP32[(($3183)>>2)]=$3182;
      var $3184=(($S+16)|0);
      var $3185=HEAP32[(($3184)>>2)];
      var $3186=(($S+4)|0);
      var $3187=HEAP32[(($3186)>>2)];
      var $3188=$3187 >>> 6;
      var $3189=(($S+4)|0);
      var $3190=HEAP32[(($3189)>>2)];
      var $3191=$3190 << 26;
      var $3192=$3188 | $3191;
      var $3193=(($S+4)|0);
      var $3194=HEAP32[(($3193)>>2)];
      var $3195=$3194 >>> 11;
      var $3196=(($S+4)|0);
      var $3197=HEAP32[(($3196)>>2)];
      var $3198=$3197 << 21;
      var $3199=$3195 | $3198;
      var $3200=$3192 ^ $3199;
      var $3201=(($S+4)|0);
      var $3202=HEAP32[(($3201)>>2)];
      var $3203=$3202 >>> 25;
      var $3204=(($S+4)|0);
      var $3205=HEAP32[(($3204)>>2)];
      var $3206=$3205 << 7;
      var $3207=$3203 | $3206;
      var $3208=$3200 ^ $3207;
      var $3209=((($3185)+($3208))|0);
      var $3210=(($S+12)|0);
      var $3211=HEAP32[(($3210)>>2)];
      var $3212=(($S+4)|0);
      var $3213=HEAP32[(($3212)>>2)];
      var $3214=(($S+8)|0);
      var $3215=HEAP32[(($3214)>>2)];
      var $3216=(($S+12)|0);
      var $3217=HEAP32[(($3216)>>2)];
      var $3218=$3215 ^ $3217;
      var $3219=$3213 & $3218;
      var $3220=$3211 ^ $3219;
      var $3221=((($3209)+($3220))|0);
      var $3222=((($3221)+(1396182291))|0);
      var $3223=(($W+140)|0);
      var $3224=HEAP32[(($3223)>>2)];
      var $3225=((($3222)+($3224))|0);
      $t0=$3225;
      var $3226=(($S+20)|0);
      var $3227=HEAP32[(($3226)>>2)];
      var $3228=$3227 >>> 2;
      var $3229=(($S+20)|0);
      var $3230=HEAP32[(($3229)>>2)];
      var $3231=$3230 << 30;
      var $3232=$3228 | $3231;
      var $3233=(($S+20)|0);
      var $3234=HEAP32[(($3233)>>2)];
      var $3235=$3234 >>> 13;
      var $3236=(($S+20)|0);
      var $3237=HEAP32[(($3236)>>2)];
      var $3238=$3237 << 19;
      var $3239=$3235 | $3238;
      var $3240=$3232 ^ $3239;
      var $3241=(($S+20)|0);
      var $3242=HEAP32[(($3241)>>2)];
      var $3243=$3242 >>> 22;
      var $3244=(($S+20)|0);
      var $3245=HEAP32[(($3244)>>2)];
      var $3246=$3245 << 10;
      var $3247=$3243 | $3246;
      var $3248=$3240 ^ $3247;
      var $3249=(($S+20)|0);
      var $3250=HEAP32[(($3249)>>2)];
      var $3251=(($S+24)|0);
      var $3252=HEAP32[(($3251)>>2)];
      var $3253=$3250 | $3252;
      var $3254=(($S+28)|0);
      var $3255=HEAP32[(($3254)>>2)];
      var $3256=$3253 & $3255;
      var $3257=(($S+20)|0);
      var $3258=HEAP32[(($3257)>>2)];
      var $3259=(($S+24)|0);
      var $3260=HEAP32[(($3259)>>2)];
      var $3261=$3258 & $3260;
      var $3262=$3256 | $3261;
      var $3263=((($3248)+($3262))|0);
      $t1=$3263;
      var $3264=$t0;
      var $3265=(($S)|0);
      var $3266=HEAP32[(($3265)>>2)];
      var $3267=((($3266)+($3264))|0);
      HEAP32[(($3265)>>2)]=$3267;
      var $3268=$t0;
      var $3269=$t1;
      var $3270=((($3268)+($3269))|0);
      var $3271=(($S+16)|0);
      HEAP32[(($3271)>>2)]=$3270;
      var $3272=(($S+12)|0);
      var $3273=HEAP32[(($3272)>>2)];
      var $3274=(($S)|0);
      var $3275=HEAP32[(($3274)>>2)];
      var $3276=$3275 >>> 6;
      var $3277=(($S)|0);
      var $3278=HEAP32[(($3277)>>2)];
      var $3279=$3278 << 26;
      var $3280=$3276 | $3279;
      var $3281=(($S)|0);
      var $3282=HEAP32[(($3281)>>2)];
      var $3283=$3282 >>> 11;
      var $3284=(($S)|0);
      var $3285=HEAP32[(($3284)>>2)];
      var $3286=$3285 << 21;
      var $3287=$3283 | $3286;
      var $3288=$3280 ^ $3287;
      var $3289=(($S)|0);
      var $3290=HEAP32[(($3289)>>2)];
      var $3291=$3290 >>> 25;
      var $3292=(($S)|0);
      var $3293=HEAP32[(($3292)>>2)];
      var $3294=$3293 << 7;
      var $3295=$3291 | $3294;
      var $3296=$3288 ^ $3295;
      var $3297=((($3273)+($3296))|0);
      var $3298=(($S+8)|0);
      var $3299=HEAP32[(($3298)>>2)];
      var $3300=(($S)|0);
      var $3301=HEAP32[(($3300)>>2)];
      var $3302=(($S+4)|0);
      var $3303=HEAP32[(($3302)>>2)];
      var $3304=(($S+8)|0);
      var $3305=HEAP32[(($3304)>>2)];
      var $3306=$3303 ^ $3305;
      var $3307=$3301 & $3306;
      var $3308=$3299 ^ $3307;
      var $3309=((($3297)+($3308))|0);
      var $3310=((($3309)+(1695183700))|0);
      var $3311=(($W+144)|0);
      var $3312=HEAP32[(($3311)>>2)];
      var $3313=((($3310)+($3312))|0);
      $t0=$3313;
      var $3314=(($S+16)|0);
      var $3315=HEAP32[(($3314)>>2)];
      var $3316=$3315 >>> 2;
      var $3317=(($S+16)|0);
      var $3318=HEAP32[(($3317)>>2)];
      var $3319=$3318 << 30;
      var $3320=$3316 | $3319;
      var $3321=(($S+16)|0);
      var $3322=HEAP32[(($3321)>>2)];
      var $3323=$3322 >>> 13;
      var $3324=(($S+16)|0);
      var $3325=HEAP32[(($3324)>>2)];
      var $3326=$3325 << 19;
      var $3327=$3323 | $3326;
      var $3328=$3320 ^ $3327;
      var $3329=(($S+16)|0);
      var $3330=HEAP32[(($3329)>>2)];
      var $3331=$3330 >>> 22;
      var $3332=(($S+16)|0);
      var $3333=HEAP32[(($3332)>>2)];
      var $3334=$3333 << 10;
      var $3335=$3331 | $3334;
      var $3336=$3328 ^ $3335;
      var $3337=(($S+16)|0);
      var $3338=HEAP32[(($3337)>>2)];
      var $3339=(($S+20)|0);
      var $3340=HEAP32[(($3339)>>2)];
      var $3341=$3338 | $3340;
      var $3342=(($S+24)|0);
      var $3343=HEAP32[(($3342)>>2)];
      var $3344=$3341 & $3343;
      var $3345=(($S+16)|0);
      var $3346=HEAP32[(($3345)>>2)];
      var $3347=(($S+20)|0);
      var $3348=HEAP32[(($3347)>>2)];
      var $3349=$3346 & $3348;
      var $3350=$3344 | $3349;
      var $3351=((($3336)+($3350))|0);
      $t1=$3351;
      var $3352=$t0;
      var $3353=(($S+28)|0);
      var $3354=HEAP32[(($3353)>>2)];
      var $3355=((($3354)+($3352))|0);
      HEAP32[(($3353)>>2)]=$3355;
      var $3356=$t0;
      var $3357=$t1;
      var $3358=((($3356)+($3357))|0);
      var $3359=(($S+12)|0);
      HEAP32[(($3359)>>2)]=$3358;
      var $3360=(($S+8)|0);
      var $3361=HEAP32[(($3360)>>2)];
      var $3362=(($S+28)|0);
      var $3363=HEAP32[(($3362)>>2)];
      var $3364=$3363 >>> 6;
      var $3365=(($S+28)|0);
      var $3366=HEAP32[(($3365)>>2)];
      var $3367=$3366 << 26;
      var $3368=$3364 | $3367;
      var $3369=(($S+28)|0);
      var $3370=HEAP32[(($3369)>>2)];
      var $3371=$3370 >>> 11;
      var $3372=(($S+28)|0);
      var $3373=HEAP32[(($3372)>>2)];
      var $3374=$3373 << 21;
      var $3375=$3371 | $3374;
      var $3376=$3368 ^ $3375;
      var $3377=(($S+28)|0);
      var $3378=HEAP32[(($3377)>>2)];
      var $3379=$3378 >>> 25;
      var $3380=(($S+28)|0);
      var $3381=HEAP32[(($3380)>>2)];
      var $3382=$3381 << 7;
      var $3383=$3379 | $3382;
      var $3384=$3376 ^ $3383;
      var $3385=((($3361)+($3384))|0);
      var $3386=(($S+4)|0);
      var $3387=HEAP32[(($3386)>>2)];
      var $3388=(($S+28)|0);
      var $3389=HEAP32[(($3388)>>2)];
      var $3390=(($S)|0);
      var $3391=HEAP32[(($3390)>>2)];
      var $3392=(($S+4)|0);
      var $3393=HEAP32[(($3392)>>2)];
      var $3394=$3391 ^ $3393;
      var $3395=$3389 & $3394;
      var $3396=$3387 ^ $3395;
      var $3397=((($3385)+($3396))|0);
      var $3398=((($3397)+(1986661051))|0);
      var $3399=(($W+148)|0);
      var $3400=HEAP32[(($3399)>>2)];
      var $3401=((($3398)+($3400))|0);
      $t0=$3401;
      var $3402=(($S+12)|0);
      var $3403=HEAP32[(($3402)>>2)];
      var $3404=$3403 >>> 2;
      var $3405=(($S+12)|0);
      var $3406=HEAP32[(($3405)>>2)];
      var $3407=$3406 << 30;
      var $3408=$3404 | $3407;
      var $3409=(($S+12)|0);
      var $3410=HEAP32[(($3409)>>2)];
      var $3411=$3410 >>> 13;
      var $3412=(($S+12)|0);
      var $3413=HEAP32[(($3412)>>2)];
      var $3414=$3413 << 19;
      var $3415=$3411 | $3414;
      var $3416=$3408 ^ $3415;
      var $3417=(($S+12)|0);
      var $3418=HEAP32[(($3417)>>2)];
      var $3419=$3418 >>> 22;
      var $3420=(($S+12)|0);
      var $3421=HEAP32[(($3420)>>2)];
      var $3422=$3421 << 10;
      var $3423=$3419 | $3422;
      var $3424=$3416 ^ $3423;
      var $3425=(($S+12)|0);
      var $3426=HEAP32[(($3425)>>2)];
      var $3427=(($S+16)|0);
      var $3428=HEAP32[(($3427)>>2)];
      var $3429=$3426 | $3428;
      var $3430=(($S+20)|0);
      var $3431=HEAP32[(($3430)>>2)];
      var $3432=$3429 & $3431;
      var $3433=(($S+12)|0);
      var $3434=HEAP32[(($3433)>>2)];
      var $3435=(($S+16)|0);
      var $3436=HEAP32[(($3435)>>2)];
      var $3437=$3434 & $3436;
      var $3438=$3432 | $3437;
      var $3439=((($3424)+($3438))|0);
      $t1=$3439;
      var $3440=$t0;
      var $3441=(($S+24)|0);
      var $3442=HEAP32[(($3441)>>2)];
      var $3443=((($3442)+($3440))|0);
      HEAP32[(($3441)>>2)]=$3443;
      var $3444=$t0;
      var $3445=$t1;
      var $3446=((($3444)+($3445))|0);
      var $3447=(($S+8)|0);
      HEAP32[(($3447)>>2)]=$3446;
      var $3448=(($S+4)|0);
      var $3449=HEAP32[(($3448)>>2)];
      var $3450=(($S+24)|0);
      var $3451=HEAP32[(($3450)>>2)];
      var $3452=$3451 >>> 6;
      var $3453=(($S+24)|0);
      var $3454=HEAP32[(($3453)>>2)];
      var $3455=$3454 << 26;
      var $3456=$3452 | $3455;
      var $3457=(($S+24)|0);
      var $3458=HEAP32[(($3457)>>2)];
      var $3459=$3458 >>> 11;
      var $3460=(($S+24)|0);
      var $3461=HEAP32[(($3460)>>2)];
      var $3462=$3461 << 21;
      var $3463=$3459 | $3462;
      var $3464=$3456 ^ $3463;
      var $3465=(($S+24)|0);
      var $3466=HEAP32[(($3465)>>2)];
      var $3467=$3466 >>> 25;
      var $3468=(($S+24)|0);
      var $3469=HEAP32[(($3468)>>2)];
      var $3470=$3469 << 7;
      var $3471=$3467 | $3470;
      var $3472=$3464 ^ $3471;
      var $3473=((($3449)+($3472))|0);
      var $3474=(($S)|0);
      var $3475=HEAP32[(($3474)>>2)];
      var $3476=(($S+24)|0);
      var $3477=HEAP32[(($3476)>>2)];
      var $3478=(($S+28)|0);
      var $3479=HEAP32[(($3478)>>2)];
      var $3480=(($S)|0);
      var $3481=HEAP32[(($3480)>>2)];
      var $3482=$3479 ^ $3481;
      var $3483=$3477 & $3482;
      var $3484=$3475 ^ $3483;
      var $3485=((($3473)+($3484))|0);
      var $3486=((($3485)-(2117940946))|0);
      var $3487=(($W+152)|0);
      var $3488=HEAP32[(($3487)>>2)];
      var $3489=((($3486)+($3488))|0);
      $t0=$3489;
      var $3490=(($S+8)|0);
      var $3491=HEAP32[(($3490)>>2)];
      var $3492=$3491 >>> 2;
      var $3493=(($S+8)|0);
      var $3494=HEAP32[(($3493)>>2)];
      var $3495=$3494 << 30;
      var $3496=$3492 | $3495;
      var $3497=(($S+8)|0);
      var $3498=HEAP32[(($3497)>>2)];
      var $3499=$3498 >>> 13;
      var $3500=(($S+8)|0);
      var $3501=HEAP32[(($3500)>>2)];
      var $3502=$3501 << 19;
      var $3503=$3499 | $3502;
      var $3504=$3496 ^ $3503;
      var $3505=(($S+8)|0);
      var $3506=HEAP32[(($3505)>>2)];
      var $3507=$3506 >>> 22;
      var $3508=(($S+8)|0);
      var $3509=HEAP32[(($3508)>>2)];
      var $3510=$3509 << 10;
      var $3511=$3507 | $3510;
      var $3512=$3504 ^ $3511;
      var $3513=(($S+8)|0);
      var $3514=HEAP32[(($3513)>>2)];
      var $3515=(($S+12)|0);
      var $3516=HEAP32[(($3515)>>2)];
      var $3517=$3514 | $3516;
      var $3518=(($S+16)|0);
      var $3519=HEAP32[(($3518)>>2)];
      var $3520=$3517 & $3519;
      var $3521=(($S+8)|0);
      var $3522=HEAP32[(($3521)>>2)];
      var $3523=(($S+12)|0);
      var $3524=HEAP32[(($3523)>>2)];
      var $3525=$3522 & $3524;
      var $3526=$3520 | $3525;
      var $3527=((($3512)+($3526))|0);
      $t1=$3527;
      var $3528=$t0;
      var $3529=(($S+20)|0);
      var $3530=HEAP32[(($3529)>>2)];
      var $3531=((($3530)+($3528))|0);
      HEAP32[(($3529)>>2)]=$3531;
      var $3532=$t0;
      var $3533=$t1;
      var $3534=((($3532)+($3533))|0);
      var $3535=(($S+4)|0);
      HEAP32[(($3535)>>2)]=$3534;
      var $3536=(($S)|0);
      var $3537=HEAP32[(($3536)>>2)];
      var $3538=(($S+20)|0);
      var $3539=HEAP32[(($3538)>>2)];
      var $3540=$3539 >>> 6;
      var $3541=(($S+20)|0);
      var $3542=HEAP32[(($3541)>>2)];
      var $3543=$3542 << 26;
      var $3544=$3540 | $3543;
      var $3545=(($S+20)|0);
      var $3546=HEAP32[(($3545)>>2)];
      var $3547=$3546 >>> 11;
      var $3548=(($S+20)|0);
      var $3549=HEAP32[(($3548)>>2)];
      var $3550=$3549 << 21;
      var $3551=$3547 | $3550;
      var $3552=$3544 ^ $3551;
      var $3553=(($S+20)|0);
      var $3554=HEAP32[(($3553)>>2)];
      var $3555=$3554 >>> 25;
      var $3556=(($S+20)|0);
      var $3557=HEAP32[(($3556)>>2)];
      var $3558=$3557 << 7;
      var $3559=$3555 | $3558;
      var $3560=$3552 ^ $3559;
      var $3561=((($3537)+($3560))|0);
      var $3562=(($S+28)|0);
      var $3563=HEAP32[(($3562)>>2)];
      var $3564=(($S+20)|0);
      var $3565=HEAP32[(($3564)>>2)];
      var $3566=(($S+24)|0);
      var $3567=HEAP32[(($3566)>>2)];
      var $3568=(($S+28)|0);
      var $3569=HEAP32[(($3568)>>2)];
      var $3570=$3567 ^ $3569;
      var $3571=$3565 & $3570;
      var $3572=$3563 ^ $3571;
      var $3573=((($3561)+($3572))|0);
      var $3574=((($3573)-(1838011259))|0);
      var $3575=(($W+156)|0);
      var $3576=HEAP32[(($3575)>>2)];
      var $3577=((($3574)+($3576))|0);
      $t0=$3577;
      var $3578=(($S+4)|0);
      var $3579=HEAP32[(($3578)>>2)];
      var $3580=$3579 >>> 2;
      var $3581=(($S+4)|0);
      var $3582=HEAP32[(($3581)>>2)];
      var $3583=$3582 << 30;
      var $3584=$3580 | $3583;
      var $3585=(($S+4)|0);
      var $3586=HEAP32[(($3585)>>2)];
      var $3587=$3586 >>> 13;
      var $3588=(($S+4)|0);
      var $3589=HEAP32[(($3588)>>2)];
      var $3590=$3589 << 19;
      var $3591=$3587 | $3590;
      var $3592=$3584 ^ $3591;
      var $3593=(($S+4)|0);
      var $3594=HEAP32[(($3593)>>2)];
      var $3595=$3594 >>> 22;
      var $3596=(($S+4)|0);
      var $3597=HEAP32[(($3596)>>2)];
      var $3598=$3597 << 10;
      var $3599=$3595 | $3598;
      var $3600=$3592 ^ $3599;
      var $3601=(($S+4)|0);
      var $3602=HEAP32[(($3601)>>2)];
      var $3603=(($S+8)|0);
      var $3604=HEAP32[(($3603)>>2)];
      var $3605=$3602 | $3604;
      var $3606=(($S+12)|0);
      var $3607=HEAP32[(($3606)>>2)];
      var $3608=$3605 & $3607;
      var $3609=(($S+4)|0);
      var $3610=HEAP32[(($3609)>>2)];
      var $3611=(($S+8)|0);
      var $3612=HEAP32[(($3611)>>2)];
      var $3613=$3610 & $3612;
      var $3614=$3608 | $3613;
      var $3615=((($3600)+($3614))|0);
      $t1=$3615;
      var $3616=$t0;
      var $3617=(($S+16)|0);
      var $3618=HEAP32[(($3617)>>2)];
      var $3619=((($3618)+($3616))|0);
      HEAP32[(($3617)>>2)]=$3619;
      var $3620=$t0;
      var $3621=$t1;
      var $3622=((($3620)+($3621))|0);
      var $3623=(($S)|0);
      HEAP32[(($3623)>>2)]=$3622;
      var $3624=(($S+28)|0);
      var $3625=HEAP32[(($3624)>>2)];
      var $3626=(($S+16)|0);
      var $3627=HEAP32[(($3626)>>2)];
      var $3628=$3627 >>> 6;
      var $3629=(($S+16)|0);
      var $3630=HEAP32[(($3629)>>2)];
      var $3631=$3630 << 26;
      var $3632=$3628 | $3631;
      var $3633=(($S+16)|0);
      var $3634=HEAP32[(($3633)>>2)];
      var $3635=$3634 >>> 11;
      var $3636=(($S+16)|0);
      var $3637=HEAP32[(($3636)>>2)];
      var $3638=$3637 << 21;
      var $3639=$3635 | $3638;
      var $3640=$3632 ^ $3639;
      var $3641=(($S+16)|0);
      var $3642=HEAP32[(($3641)>>2)];
      var $3643=$3642 >>> 25;
      var $3644=(($S+16)|0);
      var $3645=HEAP32[(($3644)>>2)];
      var $3646=$3645 << 7;
      var $3647=$3643 | $3646;
      var $3648=$3640 ^ $3647;
      var $3649=((($3625)+($3648))|0);
      var $3650=(($S+24)|0);
      var $3651=HEAP32[(($3650)>>2)];
      var $3652=(($S+16)|0);
      var $3653=HEAP32[(($3652)>>2)];
      var $3654=(($S+20)|0);
      var $3655=HEAP32[(($3654)>>2)];
      var $3656=(($S+24)|0);
      var $3657=HEAP32[(($3656)>>2)];
      var $3658=$3655 ^ $3657;
      var $3659=$3653 & $3658;
      var $3660=$3651 ^ $3659;
      var $3661=((($3649)+($3660))|0);
      var $3662=((($3661)-(1564481375))|0);
      var $3663=(($W+160)|0);
      var $3664=HEAP32[(($3663)>>2)];
      var $3665=((($3662)+($3664))|0);
      $t0=$3665;
      var $3666=(($S)|0);
      var $3667=HEAP32[(($3666)>>2)];
      var $3668=$3667 >>> 2;
      var $3669=(($S)|0);
      var $3670=HEAP32[(($3669)>>2)];
      var $3671=$3670 << 30;
      var $3672=$3668 | $3671;
      var $3673=(($S)|0);
      var $3674=HEAP32[(($3673)>>2)];
      var $3675=$3674 >>> 13;
      var $3676=(($S)|0);
      var $3677=HEAP32[(($3676)>>2)];
      var $3678=$3677 << 19;
      var $3679=$3675 | $3678;
      var $3680=$3672 ^ $3679;
      var $3681=(($S)|0);
      var $3682=HEAP32[(($3681)>>2)];
      var $3683=$3682 >>> 22;
      var $3684=(($S)|0);
      var $3685=HEAP32[(($3684)>>2)];
      var $3686=$3685 << 10;
      var $3687=$3683 | $3686;
      var $3688=$3680 ^ $3687;
      var $3689=(($S)|0);
      var $3690=HEAP32[(($3689)>>2)];
      var $3691=(($S+4)|0);
      var $3692=HEAP32[(($3691)>>2)];
      var $3693=$3690 | $3692;
      var $3694=(($S+8)|0);
      var $3695=HEAP32[(($3694)>>2)];
      var $3696=$3693 & $3695;
      var $3697=(($S)|0);
      var $3698=HEAP32[(($3697)>>2)];
      var $3699=(($S+4)|0);
      var $3700=HEAP32[(($3699)>>2)];
      var $3701=$3698 & $3700;
      var $3702=$3696 | $3701;
      var $3703=((($3688)+($3702))|0);
      $t1=$3703;
      var $3704=$t0;
      var $3705=(($S+12)|0);
      var $3706=HEAP32[(($3705)>>2)];
      var $3707=((($3706)+($3704))|0);
      HEAP32[(($3705)>>2)]=$3707;
      var $3708=$t0;
      var $3709=$t1;
      var $3710=((($3708)+($3709))|0);
      var $3711=(($S+28)|0);
      HEAP32[(($3711)>>2)]=$3710;
      var $3712=(($S+24)|0);
      var $3713=HEAP32[(($3712)>>2)];
      var $3714=(($S+12)|0);
      var $3715=HEAP32[(($3714)>>2)];
      var $3716=$3715 >>> 6;
      var $3717=(($S+12)|0);
      var $3718=HEAP32[(($3717)>>2)];
      var $3719=$3718 << 26;
      var $3720=$3716 | $3719;
      var $3721=(($S+12)|0);
      var $3722=HEAP32[(($3721)>>2)];
      var $3723=$3722 >>> 11;
      var $3724=(($S+12)|0);
      var $3725=HEAP32[(($3724)>>2)];
      var $3726=$3725 << 21;
      var $3727=$3723 | $3726;
      var $3728=$3720 ^ $3727;
      var $3729=(($S+12)|0);
      var $3730=HEAP32[(($3729)>>2)];
      var $3731=$3730 >>> 25;
      var $3732=(($S+12)|0);
      var $3733=HEAP32[(($3732)>>2)];
      var $3734=$3733 << 7;
      var $3735=$3731 | $3734;
      var $3736=$3728 ^ $3735;
      var $3737=((($3713)+($3736))|0);
      var $3738=(($S+20)|0);
      var $3739=HEAP32[(($3738)>>2)];
      var $3740=(($S+12)|0);
      var $3741=HEAP32[(($3740)>>2)];
      var $3742=(($S+16)|0);
      var $3743=HEAP32[(($3742)>>2)];
      var $3744=(($S+20)|0);
      var $3745=HEAP32[(($3744)>>2)];
      var $3746=$3743 ^ $3745;
      var $3747=$3741 & $3746;
      var $3748=$3739 ^ $3747;
      var $3749=((($3737)+($3748))|0);
      var $3750=((($3749)-(1474664885))|0);
      var $3751=(($W+164)|0);
      var $3752=HEAP32[(($3751)>>2)];
      var $3753=((($3750)+($3752))|0);
      $t0=$3753;
      var $3754=(($S+28)|0);
      var $3755=HEAP32[(($3754)>>2)];
      var $3756=$3755 >>> 2;
      var $3757=(($S+28)|0);
      var $3758=HEAP32[(($3757)>>2)];
      var $3759=$3758 << 30;
      var $3760=$3756 | $3759;
      var $3761=(($S+28)|0);
      var $3762=HEAP32[(($3761)>>2)];
      var $3763=$3762 >>> 13;
      var $3764=(($S+28)|0);
      var $3765=HEAP32[(($3764)>>2)];
      var $3766=$3765 << 19;
      var $3767=$3763 | $3766;
      var $3768=$3760 ^ $3767;
      var $3769=(($S+28)|0);
      var $3770=HEAP32[(($3769)>>2)];
      var $3771=$3770 >>> 22;
      var $3772=(($S+28)|0);
      var $3773=HEAP32[(($3772)>>2)];
      var $3774=$3773 << 10;
      var $3775=$3771 | $3774;
      var $3776=$3768 ^ $3775;
      var $3777=(($S+28)|0);
      var $3778=HEAP32[(($3777)>>2)];
      var $3779=(($S)|0);
      var $3780=HEAP32[(($3779)>>2)];
      var $3781=$3778 | $3780;
      var $3782=(($S+4)|0);
      var $3783=HEAP32[(($3782)>>2)];
      var $3784=$3781 & $3783;
      var $3785=(($S+28)|0);
      var $3786=HEAP32[(($3785)>>2)];
      var $3787=(($S)|0);
      var $3788=HEAP32[(($3787)>>2)];
      var $3789=$3786 & $3788;
      var $3790=$3784 | $3789;
      var $3791=((($3776)+($3790))|0);
      $t1=$3791;
      var $3792=$t0;
      var $3793=(($S+8)|0);
      var $3794=HEAP32[(($3793)>>2)];
      var $3795=((($3794)+($3792))|0);
      HEAP32[(($3793)>>2)]=$3795;
      var $3796=$t0;
      var $3797=$t1;
      var $3798=((($3796)+($3797))|0);
      var $3799=(($S+24)|0);
      HEAP32[(($3799)>>2)]=$3798;
      var $3800=(($S+20)|0);
      var $3801=HEAP32[(($3800)>>2)];
      var $3802=(($S+8)|0);
      var $3803=HEAP32[(($3802)>>2)];
      var $3804=$3803 >>> 6;
      var $3805=(($S+8)|0);
      var $3806=HEAP32[(($3805)>>2)];
      var $3807=$3806 << 26;
      var $3808=$3804 | $3807;
      var $3809=(($S+8)|0);
      var $3810=HEAP32[(($3809)>>2)];
      var $3811=$3810 >>> 11;
      var $3812=(($S+8)|0);
      var $3813=HEAP32[(($3812)>>2)];
      var $3814=$3813 << 21;
      var $3815=$3811 | $3814;
      var $3816=$3808 ^ $3815;
      var $3817=(($S+8)|0);
      var $3818=HEAP32[(($3817)>>2)];
      var $3819=$3818 >>> 25;
      var $3820=(($S+8)|0);
      var $3821=HEAP32[(($3820)>>2)];
      var $3822=$3821 << 7;
      var $3823=$3819 | $3822;
      var $3824=$3816 ^ $3823;
      var $3825=((($3801)+($3824))|0);
      var $3826=(($S+16)|0);
      var $3827=HEAP32[(($3826)>>2)];
      var $3828=(($S+8)|0);
      var $3829=HEAP32[(($3828)>>2)];
      var $3830=(($S+12)|0);
      var $3831=HEAP32[(($3830)>>2)];
      var $3832=(($S+16)|0);
      var $3833=HEAP32[(($3832)>>2)];
      var $3834=$3831 ^ $3833;
      var $3835=$3829 & $3834;
      var $3836=$3827 ^ $3835;
      var $3837=((($3825)+($3836))|0);
      var $3838=((($3837)-(1035236496))|0);
      var $3839=(($W+168)|0);
      var $3840=HEAP32[(($3839)>>2)];
      var $3841=((($3838)+($3840))|0);
      $t0=$3841;
      var $3842=(($S+24)|0);
      var $3843=HEAP32[(($3842)>>2)];
      var $3844=$3843 >>> 2;
      var $3845=(($S+24)|0);
      var $3846=HEAP32[(($3845)>>2)];
      var $3847=$3846 << 30;
      var $3848=$3844 | $3847;
      var $3849=(($S+24)|0);
      var $3850=HEAP32[(($3849)>>2)];
      var $3851=$3850 >>> 13;
      var $3852=(($S+24)|0);
      var $3853=HEAP32[(($3852)>>2)];
      var $3854=$3853 << 19;
      var $3855=$3851 | $3854;
      var $3856=$3848 ^ $3855;
      var $3857=(($S+24)|0);
      var $3858=HEAP32[(($3857)>>2)];
      var $3859=$3858 >>> 22;
      var $3860=(($S+24)|0);
      var $3861=HEAP32[(($3860)>>2)];
      var $3862=$3861 << 10;
      var $3863=$3859 | $3862;
      var $3864=$3856 ^ $3863;
      var $3865=(($S+24)|0);
      var $3866=HEAP32[(($3865)>>2)];
      var $3867=(($S+28)|0);
      var $3868=HEAP32[(($3867)>>2)];
      var $3869=$3866 | $3868;
      var $3870=(($S)|0);
      var $3871=HEAP32[(($3870)>>2)];
      var $3872=$3869 & $3871;
      var $3873=(($S+24)|0);
      var $3874=HEAP32[(($3873)>>2)];
      var $3875=(($S+28)|0);
      var $3876=HEAP32[(($3875)>>2)];
      var $3877=$3874 & $3876;
      var $3878=$3872 | $3877;
      var $3879=((($3864)+($3878))|0);
      $t1=$3879;
      var $3880=$t0;
      var $3881=(($S+4)|0);
      var $3882=HEAP32[(($3881)>>2)];
      var $3883=((($3882)+($3880))|0);
      HEAP32[(($3881)>>2)]=$3883;
      var $3884=$t0;
      var $3885=$t1;
      var $3886=((($3884)+($3885))|0);
      var $3887=(($S+20)|0);
      HEAP32[(($3887)>>2)]=$3886;
      var $3888=(($S+16)|0);
      var $3889=HEAP32[(($3888)>>2)];
      var $3890=(($S+4)|0);
      var $3891=HEAP32[(($3890)>>2)];
      var $3892=$3891 >>> 6;
      var $3893=(($S+4)|0);
      var $3894=HEAP32[(($3893)>>2)];
      var $3895=$3894 << 26;
      var $3896=$3892 | $3895;
      var $3897=(($S+4)|0);
      var $3898=HEAP32[(($3897)>>2)];
      var $3899=$3898 >>> 11;
      var $3900=(($S+4)|0);
      var $3901=HEAP32[(($3900)>>2)];
      var $3902=$3901 << 21;
      var $3903=$3899 | $3902;
      var $3904=$3896 ^ $3903;
      var $3905=(($S+4)|0);
      var $3906=HEAP32[(($3905)>>2)];
      var $3907=$3906 >>> 25;
      var $3908=(($S+4)|0);
      var $3909=HEAP32[(($3908)>>2)];
      var $3910=$3909 << 7;
      var $3911=$3907 | $3910;
      var $3912=$3904 ^ $3911;
      var $3913=((($3889)+($3912))|0);
      var $3914=(($S+12)|0);
      var $3915=HEAP32[(($3914)>>2)];
      var $3916=(($S+4)|0);
      var $3917=HEAP32[(($3916)>>2)];
      var $3918=(($S+8)|0);
      var $3919=HEAP32[(($3918)>>2)];
      var $3920=(($S+12)|0);
      var $3921=HEAP32[(($3920)>>2)];
      var $3922=$3919 ^ $3921;
      var $3923=$3917 & $3922;
      var $3924=$3915 ^ $3923;
      var $3925=((($3913)+($3924))|0);
      var $3926=((($3925)-(949202525))|0);
      var $3927=(($W+172)|0);
      var $3928=HEAP32[(($3927)>>2)];
      var $3929=((($3926)+($3928))|0);
      $t0=$3929;
      var $3930=(($S+20)|0);
      var $3931=HEAP32[(($3930)>>2)];
      var $3932=$3931 >>> 2;
      var $3933=(($S+20)|0);
      var $3934=HEAP32[(($3933)>>2)];
      var $3935=$3934 << 30;
      var $3936=$3932 | $3935;
      var $3937=(($S+20)|0);
      var $3938=HEAP32[(($3937)>>2)];
      var $3939=$3938 >>> 13;
      var $3940=(($S+20)|0);
      var $3941=HEAP32[(($3940)>>2)];
      var $3942=$3941 << 19;
      var $3943=$3939 | $3942;
      var $3944=$3936 ^ $3943;
      var $3945=(($S+20)|0);
      var $3946=HEAP32[(($3945)>>2)];
      var $3947=$3946 >>> 22;
      var $3948=(($S+20)|0);
      var $3949=HEAP32[(($3948)>>2)];
      var $3950=$3949 << 10;
      var $3951=$3947 | $3950;
      var $3952=$3944 ^ $3951;
      var $3953=(($S+20)|0);
      var $3954=HEAP32[(($3953)>>2)];
      var $3955=(($S+24)|0);
      var $3956=HEAP32[(($3955)>>2)];
      var $3957=$3954 | $3956;
      var $3958=(($S+28)|0);
      var $3959=HEAP32[(($3958)>>2)];
      var $3960=$3957 & $3959;
      var $3961=(($S+20)|0);
      var $3962=HEAP32[(($3961)>>2)];
      var $3963=(($S+24)|0);
      var $3964=HEAP32[(($3963)>>2)];
      var $3965=$3962 & $3964;
      var $3966=$3960 | $3965;
      var $3967=((($3952)+($3966))|0);
      $t1=$3967;
      var $3968=$t0;
      var $3969=(($S)|0);
      var $3970=HEAP32[(($3969)>>2)];
      var $3971=((($3970)+($3968))|0);
      HEAP32[(($3969)>>2)]=$3971;
      var $3972=$t0;
      var $3973=$t1;
      var $3974=((($3972)+($3973))|0);
      var $3975=(($S+16)|0);
      HEAP32[(($3975)>>2)]=$3974;
      var $3976=(($S+12)|0);
      var $3977=HEAP32[(($3976)>>2)];
      var $3978=(($S)|0);
      var $3979=HEAP32[(($3978)>>2)];
      var $3980=$3979 >>> 6;
      var $3981=(($S)|0);
      var $3982=HEAP32[(($3981)>>2)];
      var $3983=$3982 << 26;
      var $3984=$3980 | $3983;
      var $3985=(($S)|0);
      var $3986=HEAP32[(($3985)>>2)];
      var $3987=$3986 >>> 11;
      var $3988=(($S)|0);
      var $3989=HEAP32[(($3988)>>2)];
      var $3990=$3989 << 21;
      var $3991=$3987 | $3990;
      var $3992=$3984 ^ $3991;
      var $3993=(($S)|0);
      var $3994=HEAP32[(($3993)>>2)];
      var $3995=$3994 >>> 25;
      var $3996=(($S)|0);
      var $3997=HEAP32[(($3996)>>2)];
      var $3998=$3997 << 7;
      var $3999=$3995 | $3998;
      var $4000=$3992 ^ $3999;
      var $4001=((($3977)+($4000))|0);
      var $4002=(($S+8)|0);
      var $4003=HEAP32[(($4002)>>2)];
      var $4004=(($S)|0);
      var $4005=HEAP32[(($4004)>>2)];
      var $4006=(($S+4)|0);
      var $4007=HEAP32[(($4006)>>2)];
      var $4008=(($S+8)|0);
      var $4009=HEAP32[(($4008)>>2)];
      var $4010=$4007 ^ $4009;
      var $4011=$4005 & $4010;
      var $4012=$4003 ^ $4011;
      var $4013=((($4001)+($4012))|0);
      var $4014=((($4013)-(778901479))|0);
      var $4015=(($W+176)|0);
      var $4016=HEAP32[(($4015)>>2)];
      var $4017=((($4014)+($4016))|0);
      $t0=$4017;
      var $4018=(($S+16)|0);
      var $4019=HEAP32[(($4018)>>2)];
      var $4020=$4019 >>> 2;
      var $4021=(($S+16)|0);
      var $4022=HEAP32[(($4021)>>2)];
      var $4023=$4022 << 30;
      var $4024=$4020 | $4023;
      var $4025=(($S+16)|0);
      var $4026=HEAP32[(($4025)>>2)];
      var $4027=$4026 >>> 13;
      var $4028=(($S+16)|0);
      var $4029=HEAP32[(($4028)>>2)];
      var $4030=$4029 << 19;
      var $4031=$4027 | $4030;
      var $4032=$4024 ^ $4031;
      var $4033=(($S+16)|0);
      var $4034=HEAP32[(($4033)>>2)];
      var $4035=$4034 >>> 22;
      var $4036=(($S+16)|0);
      var $4037=HEAP32[(($4036)>>2)];
      var $4038=$4037 << 10;
      var $4039=$4035 | $4038;
      var $4040=$4032 ^ $4039;
      var $4041=(($S+16)|0);
      var $4042=HEAP32[(($4041)>>2)];
      var $4043=(($S+20)|0);
      var $4044=HEAP32[(($4043)>>2)];
      var $4045=$4042 | $4044;
      var $4046=(($S+24)|0);
      var $4047=HEAP32[(($4046)>>2)];
      var $4048=$4045 & $4047;
      var $4049=(($S+16)|0);
      var $4050=HEAP32[(($4049)>>2)];
      var $4051=(($S+20)|0);
      var $4052=HEAP32[(($4051)>>2)];
      var $4053=$4050 & $4052;
      var $4054=$4048 | $4053;
      var $4055=((($4040)+($4054))|0);
      $t1=$4055;
      var $4056=$t0;
      var $4057=(($S+28)|0);
      var $4058=HEAP32[(($4057)>>2)];
      var $4059=((($4058)+($4056))|0);
      HEAP32[(($4057)>>2)]=$4059;
      var $4060=$t0;
      var $4061=$t1;
      var $4062=((($4060)+($4061))|0);
      var $4063=(($S+12)|0);
      HEAP32[(($4063)>>2)]=$4062;
      var $4064=(($S+8)|0);
      var $4065=HEAP32[(($4064)>>2)];
      var $4066=(($S+28)|0);
      var $4067=HEAP32[(($4066)>>2)];
      var $4068=$4067 >>> 6;
      var $4069=(($S+28)|0);
      var $4070=HEAP32[(($4069)>>2)];
      var $4071=$4070 << 26;
      var $4072=$4068 | $4071;
      var $4073=(($S+28)|0);
      var $4074=HEAP32[(($4073)>>2)];
      var $4075=$4074 >>> 11;
      var $4076=(($S+28)|0);
      var $4077=HEAP32[(($4076)>>2)];
      var $4078=$4077 << 21;
      var $4079=$4075 | $4078;
      var $4080=$4072 ^ $4079;
      var $4081=(($S+28)|0);
      var $4082=HEAP32[(($4081)>>2)];
      var $4083=$4082 >>> 25;
      var $4084=(($S+28)|0);
      var $4085=HEAP32[(($4084)>>2)];
      var $4086=$4085 << 7;
      var $4087=$4083 | $4086;
      var $4088=$4080 ^ $4087;
      var $4089=((($4065)+($4088))|0);
      var $4090=(($S+4)|0);
      var $4091=HEAP32[(($4090)>>2)];
      var $4092=(($S+28)|0);
      var $4093=HEAP32[(($4092)>>2)];
      var $4094=(($S)|0);
      var $4095=HEAP32[(($4094)>>2)];
      var $4096=(($S+4)|0);
      var $4097=HEAP32[(($4096)>>2)];
      var $4098=$4095 ^ $4097;
      var $4099=$4093 & $4098;
      var $4100=$4091 ^ $4099;
      var $4101=((($4089)+($4100))|0);
      var $4102=((($4101)-(694614492))|0);
      var $4103=(($W+180)|0);
      var $4104=HEAP32[(($4103)>>2)];
      var $4105=((($4102)+($4104))|0);
      $t0=$4105;
      var $4106=(($S+12)|0);
      var $4107=HEAP32[(($4106)>>2)];
      var $4108=$4107 >>> 2;
      var $4109=(($S+12)|0);
      var $4110=HEAP32[(($4109)>>2)];
      var $4111=$4110 << 30;
      var $4112=$4108 | $4111;
      var $4113=(($S+12)|0);
      var $4114=HEAP32[(($4113)>>2)];
      var $4115=$4114 >>> 13;
      var $4116=(($S+12)|0);
      var $4117=HEAP32[(($4116)>>2)];
      var $4118=$4117 << 19;
      var $4119=$4115 | $4118;
      var $4120=$4112 ^ $4119;
      var $4121=(($S+12)|0);
      var $4122=HEAP32[(($4121)>>2)];
      var $4123=$4122 >>> 22;
      var $4124=(($S+12)|0);
      var $4125=HEAP32[(($4124)>>2)];
      var $4126=$4125 << 10;
      var $4127=$4123 | $4126;
      var $4128=$4120 ^ $4127;
      var $4129=(($S+12)|0);
      var $4130=HEAP32[(($4129)>>2)];
      var $4131=(($S+16)|0);
      var $4132=HEAP32[(($4131)>>2)];
      var $4133=$4130 | $4132;
      var $4134=(($S+20)|0);
      var $4135=HEAP32[(($4134)>>2)];
      var $4136=$4133 & $4135;
      var $4137=(($S+12)|0);
      var $4138=HEAP32[(($4137)>>2)];
      var $4139=(($S+16)|0);
      var $4140=HEAP32[(($4139)>>2)];
      var $4141=$4138 & $4140;
      var $4142=$4136 | $4141;
      var $4143=((($4128)+($4142))|0);
      $t1=$4143;
      var $4144=$t0;
      var $4145=(($S+24)|0);
      var $4146=HEAP32[(($4145)>>2)];
      var $4147=((($4146)+($4144))|0);
      HEAP32[(($4145)>>2)]=$4147;
      var $4148=$t0;
      var $4149=$t1;
      var $4150=((($4148)+($4149))|0);
      var $4151=(($S+8)|0);
      HEAP32[(($4151)>>2)]=$4150;
      var $4152=(($S+4)|0);
      var $4153=HEAP32[(($4152)>>2)];
      var $4154=(($S+24)|0);
      var $4155=HEAP32[(($4154)>>2)];
      var $4156=$4155 >>> 6;
      var $4157=(($S+24)|0);
      var $4158=HEAP32[(($4157)>>2)];
      var $4159=$4158 << 26;
      var $4160=$4156 | $4159;
      var $4161=(($S+24)|0);
      var $4162=HEAP32[(($4161)>>2)];
      var $4163=$4162 >>> 11;
      var $4164=(($S+24)|0);
      var $4165=HEAP32[(($4164)>>2)];
      var $4166=$4165 << 21;
      var $4167=$4163 | $4166;
      var $4168=$4160 ^ $4167;
      var $4169=(($S+24)|0);
      var $4170=HEAP32[(($4169)>>2)];
      var $4171=$4170 >>> 25;
      var $4172=(($S+24)|0);
      var $4173=HEAP32[(($4172)>>2)];
      var $4174=$4173 << 7;
      var $4175=$4171 | $4174;
      var $4176=$4168 ^ $4175;
      var $4177=((($4153)+($4176))|0);
      var $4178=(($S)|0);
      var $4179=HEAP32[(($4178)>>2)];
      var $4180=(($S+24)|0);
      var $4181=HEAP32[(($4180)>>2)];
      var $4182=(($S+28)|0);
      var $4183=HEAP32[(($4182)>>2)];
      var $4184=(($S)|0);
      var $4185=HEAP32[(($4184)>>2)];
      var $4186=$4183 ^ $4185;
      var $4187=$4181 & $4186;
      var $4188=$4179 ^ $4187;
      var $4189=((($4177)+($4188))|0);
      var $4190=((($4189)-(200395387))|0);
      var $4191=(($W+184)|0);
      var $4192=HEAP32[(($4191)>>2)];
      var $4193=((($4190)+($4192))|0);
      $t0=$4193;
      var $4194=(($S+8)|0);
      var $4195=HEAP32[(($4194)>>2)];
      var $4196=$4195 >>> 2;
      var $4197=(($S+8)|0);
      var $4198=HEAP32[(($4197)>>2)];
      var $4199=$4198 << 30;
      var $4200=$4196 | $4199;
      var $4201=(($S+8)|0);
      var $4202=HEAP32[(($4201)>>2)];
      var $4203=$4202 >>> 13;
      var $4204=(($S+8)|0);
      var $4205=HEAP32[(($4204)>>2)];
      var $4206=$4205 << 19;
      var $4207=$4203 | $4206;
      var $4208=$4200 ^ $4207;
      var $4209=(($S+8)|0);
      var $4210=HEAP32[(($4209)>>2)];
      var $4211=$4210 >>> 22;
      var $4212=(($S+8)|0);
      var $4213=HEAP32[(($4212)>>2)];
      var $4214=$4213 << 10;
      var $4215=$4211 | $4214;
      var $4216=$4208 ^ $4215;
      var $4217=(($S+8)|0);
      var $4218=HEAP32[(($4217)>>2)];
      var $4219=(($S+12)|0);
      var $4220=HEAP32[(($4219)>>2)];
      var $4221=$4218 | $4220;
      var $4222=(($S+16)|0);
      var $4223=HEAP32[(($4222)>>2)];
      var $4224=$4221 & $4223;
      var $4225=(($S+8)|0);
      var $4226=HEAP32[(($4225)>>2)];
      var $4227=(($S+12)|0);
      var $4228=HEAP32[(($4227)>>2)];
      var $4229=$4226 & $4228;
      var $4230=$4224 | $4229;
      var $4231=((($4216)+($4230))|0);
      $t1=$4231;
      var $4232=$t0;
      var $4233=(($S+20)|0);
      var $4234=HEAP32[(($4233)>>2)];
      var $4235=((($4234)+($4232))|0);
      HEAP32[(($4233)>>2)]=$4235;
      var $4236=$t0;
      var $4237=$t1;
      var $4238=((($4236)+($4237))|0);
      var $4239=(($S+4)|0);
      HEAP32[(($4239)>>2)]=$4238;
      var $4240=(($S)|0);
      var $4241=HEAP32[(($4240)>>2)];
      var $4242=(($S+20)|0);
      var $4243=HEAP32[(($4242)>>2)];
      var $4244=$4243 >>> 6;
      var $4245=(($S+20)|0);
      var $4246=HEAP32[(($4245)>>2)];
      var $4247=$4246 << 26;
      var $4248=$4244 | $4247;
      var $4249=(($S+20)|0);
      var $4250=HEAP32[(($4249)>>2)];
      var $4251=$4250 >>> 11;
      var $4252=(($S+20)|0);
      var $4253=HEAP32[(($4252)>>2)];
      var $4254=$4253 << 21;
      var $4255=$4251 | $4254;
      var $4256=$4248 ^ $4255;
      var $4257=(($S+20)|0);
      var $4258=HEAP32[(($4257)>>2)];
      var $4259=$4258 >>> 25;
      var $4260=(($S+20)|0);
      var $4261=HEAP32[(($4260)>>2)];
      var $4262=$4261 << 7;
      var $4263=$4259 | $4262;
      var $4264=$4256 ^ $4263;
      var $4265=((($4241)+($4264))|0);
      var $4266=(($S+28)|0);
      var $4267=HEAP32[(($4266)>>2)];
      var $4268=(($S+20)|0);
      var $4269=HEAP32[(($4268)>>2)];
      var $4270=(($S+24)|0);
      var $4271=HEAP32[(($4270)>>2)];
      var $4272=(($S+28)|0);
      var $4273=HEAP32[(($4272)>>2)];
      var $4274=$4271 ^ $4273;
      var $4275=$4269 & $4274;
      var $4276=$4267 ^ $4275;
      var $4277=((($4265)+($4276))|0);
      var $4278=((($4277)+(275423344))|0);
      var $4279=(($W+188)|0);
      var $4280=HEAP32[(($4279)>>2)];
      var $4281=((($4278)+($4280))|0);
      $t0=$4281;
      var $4282=(($S+4)|0);
      var $4283=HEAP32[(($4282)>>2)];
      var $4284=$4283 >>> 2;
      var $4285=(($S+4)|0);
      var $4286=HEAP32[(($4285)>>2)];
      var $4287=$4286 << 30;
      var $4288=$4284 | $4287;
      var $4289=(($S+4)|0);
      var $4290=HEAP32[(($4289)>>2)];
      var $4291=$4290 >>> 13;
      var $4292=(($S+4)|0);
      var $4293=HEAP32[(($4292)>>2)];
      var $4294=$4293 << 19;
      var $4295=$4291 | $4294;
      var $4296=$4288 ^ $4295;
      var $4297=(($S+4)|0);
      var $4298=HEAP32[(($4297)>>2)];
      var $4299=$4298 >>> 22;
      var $4300=(($S+4)|0);
      var $4301=HEAP32[(($4300)>>2)];
      var $4302=$4301 << 10;
      var $4303=$4299 | $4302;
      var $4304=$4296 ^ $4303;
      var $4305=(($S+4)|0);
      var $4306=HEAP32[(($4305)>>2)];
      var $4307=(($S+8)|0);
      var $4308=HEAP32[(($4307)>>2)];
      var $4309=$4306 | $4308;
      var $4310=(($S+12)|0);
      var $4311=HEAP32[(($4310)>>2)];
      var $4312=$4309 & $4311;
      var $4313=(($S+4)|0);
      var $4314=HEAP32[(($4313)>>2)];
      var $4315=(($S+8)|0);
      var $4316=HEAP32[(($4315)>>2)];
      var $4317=$4314 & $4316;
      var $4318=$4312 | $4317;
      var $4319=((($4304)+($4318))|0);
      $t1=$4319;
      var $4320=$t0;
      var $4321=(($S+16)|0);
      var $4322=HEAP32[(($4321)>>2)];
      var $4323=((($4322)+($4320))|0);
      HEAP32[(($4321)>>2)]=$4323;
      var $4324=$t0;
      var $4325=$t1;
      var $4326=((($4324)+($4325))|0);
      var $4327=(($S)|0);
      HEAP32[(($4327)>>2)]=$4326;
      var $4328=(($S+28)|0);
      var $4329=HEAP32[(($4328)>>2)];
      var $4330=(($S+16)|0);
      var $4331=HEAP32[(($4330)>>2)];
      var $4332=$4331 >>> 6;
      var $4333=(($S+16)|0);
      var $4334=HEAP32[(($4333)>>2)];
      var $4335=$4334 << 26;
      var $4336=$4332 | $4335;
      var $4337=(($S+16)|0);
      var $4338=HEAP32[(($4337)>>2)];
      var $4339=$4338 >>> 11;
      var $4340=(($S+16)|0);
      var $4341=HEAP32[(($4340)>>2)];
      var $4342=$4341 << 21;
      var $4343=$4339 | $4342;
      var $4344=$4336 ^ $4343;
      var $4345=(($S+16)|0);
      var $4346=HEAP32[(($4345)>>2)];
      var $4347=$4346 >>> 25;
      var $4348=(($S+16)|0);
      var $4349=HEAP32[(($4348)>>2)];
      var $4350=$4349 << 7;
      var $4351=$4347 | $4350;
      var $4352=$4344 ^ $4351;
      var $4353=((($4329)+($4352))|0);
      var $4354=(($S+24)|0);
      var $4355=HEAP32[(($4354)>>2)];
      var $4356=(($S+16)|0);
      var $4357=HEAP32[(($4356)>>2)];
      var $4358=(($S+20)|0);
      var $4359=HEAP32[(($4358)>>2)];
      var $4360=(($S+24)|0);
      var $4361=HEAP32[(($4360)>>2)];
      var $4362=$4359 ^ $4361;
      var $4363=$4357 & $4362;
      var $4364=$4355 ^ $4363;
      var $4365=((($4353)+($4364))|0);
      var $4366=((($4365)+(430227734))|0);
      var $4367=(($W+192)|0);
      var $4368=HEAP32[(($4367)>>2)];
      var $4369=((($4366)+($4368))|0);
      $t0=$4369;
      var $4370=(($S)|0);
      var $4371=HEAP32[(($4370)>>2)];
      var $4372=$4371 >>> 2;
      var $4373=(($S)|0);
      var $4374=HEAP32[(($4373)>>2)];
      var $4375=$4374 << 30;
      var $4376=$4372 | $4375;
      var $4377=(($S)|0);
      var $4378=HEAP32[(($4377)>>2)];
      var $4379=$4378 >>> 13;
      var $4380=(($S)|0);
      var $4381=HEAP32[(($4380)>>2)];
      var $4382=$4381 << 19;
      var $4383=$4379 | $4382;
      var $4384=$4376 ^ $4383;
      var $4385=(($S)|0);
      var $4386=HEAP32[(($4385)>>2)];
      var $4387=$4386 >>> 22;
      var $4388=(($S)|0);
      var $4389=HEAP32[(($4388)>>2)];
      var $4390=$4389 << 10;
      var $4391=$4387 | $4390;
      var $4392=$4384 ^ $4391;
      var $4393=(($S)|0);
      var $4394=HEAP32[(($4393)>>2)];
      var $4395=(($S+4)|0);
      var $4396=HEAP32[(($4395)>>2)];
      var $4397=$4394 | $4396;
      var $4398=(($S+8)|0);
      var $4399=HEAP32[(($4398)>>2)];
      var $4400=$4397 & $4399;
      var $4401=(($S)|0);
      var $4402=HEAP32[(($4401)>>2)];
      var $4403=(($S+4)|0);
      var $4404=HEAP32[(($4403)>>2)];
      var $4405=$4402 & $4404;
      var $4406=$4400 | $4405;
      var $4407=((($4392)+($4406))|0);
      $t1=$4407;
      var $4408=$t0;
      var $4409=(($S+12)|0);
      var $4410=HEAP32[(($4409)>>2)];
      var $4411=((($4410)+($4408))|0);
      HEAP32[(($4409)>>2)]=$4411;
      var $4412=$t0;
      var $4413=$t1;
      var $4414=((($4412)+($4413))|0);
      var $4415=(($S+28)|0);
      HEAP32[(($4415)>>2)]=$4414;
      var $4416=(($S+24)|0);
      var $4417=HEAP32[(($4416)>>2)];
      var $4418=(($S+12)|0);
      var $4419=HEAP32[(($4418)>>2)];
      var $4420=$4419 >>> 6;
      var $4421=(($S+12)|0);
      var $4422=HEAP32[(($4421)>>2)];
      var $4423=$4422 << 26;
      var $4424=$4420 | $4423;
      var $4425=(($S+12)|0);
      var $4426=HEAP32[(($4425)>>2)];
      var $4427=$4426 >>> 11;
      var $4428=(($S+12)|0);
      var $4429=HEAP32[(($4428)>>2)];
      var $4430=$4429 << 21;
      var $4431=$4427 | $4430;
      var $4432=$4424 ^ $4431;
      var $4433=(($S+12)|0);
      var $4434=HEAP32[(($4433)>>2)];
      var $4435=$4434 >>> 25;
      var $4436=(($S+12)|0);
      var $4437=HEAP32[(($4436)>>2)];
      var $4438=$4437 << 7;
      var $4439=$4435 | $4438;
      var $4440=$4432 ^ $4439;
      var $4441=((($4417)+($4440))|0);
      var $4442=(($S+20)|0);
      var $4443=HEAP32[(($4442)>>2)];
      var $4444=(($S+12)|0);
      var $4445=HEAP32[(($4444)>>2)];
      var $4446=(($S+16)|0);
      var $4447=HEAP32[(($4446)>>2)];
      var $4448=(($S+20)|0);
      var $4449=HEAP32[(($4448)>>2)];
      var $4450=$4447 ^ $4449;
      var $4451=$4445 & $4450;
      var $4452=$4443 ^ $4451;
      var $4453=((($4441)+($4452))|0);
      var $4454=((($4453)+(506948616))|0);
      var $4455=(($W+196)|0);
      var $4456=HEAP32[(($4455)>>2)];
      var $4457=((($4454)+($4456))|0);
      $t0=$4457;
      var $4458=(($S+28)|0);
      var $4459=HEAP32[(($4458)>>2)];
      var $4460=$4459 >>> 2;
      var $4461=(($S+28)|0);
      var $4462=HEAP32[(($4461)>>2)];
      var $4463=$4462 << 30;
      var $4464=$4460 | $4463;
      var $4465=(($S+28)|0);
      var $4466=HEAP32[(($4465)>>2)];
      var $4467=$4466 >>> 13;
      var $4468=(($S+28)|0);
      var $4469=HEAP32[(($4468)>>2)];
      var $4470=$4469 << 19;
      var $4471=$4467 | $4470;
      var $4472=$4464 ^ $4471;
      var $4473=(($S+28)|0);
      var $4474=HEAP32[(($4473)>>2)];
      var $4475=$4474 >>> 22;
      var $4476=(($S+28)|0);
      var $4477=HEAP32[(($4476)>>2)];
      var $4478=$4477 << 10;
      var $4479=$4475 | $4478;
      var $4480=$4472 ^ $4479;
      var $4481=(($S+28)|0);
      var $4482=HEAP32[(($4481)>>2)];
      var $4483=(($S)|0);
      var $4484=HEAP32[(($4483)>>2)];
      var $4485=$4482 | $4484;
      var $4486=(($S+4)|0);
      var $4487=HEAP32[(($4486)>>2)];
      var $4488=$4485 & $4487;
      var $4489=(($S+28)|0);
      var $4490=HEAP32[(($4489)>>2)];
      var $4491=(($S)|0);
      var $4492=HEAP32[(($4491)>>2)];
      var $4493=$4490 & $4492;
      var $4494=$4488 | $4493;
      var $4495=((($4480)+($4494))|0);
      $t1=$4495;
      var $4496=$t0;
      var $4497=(($S+8)|0);
      var $4498=HEAP32[(($4497)>>2)];
      var $4499=((($4498)+($4496))|0);
      HEAP32[(($4497)>>2)]=$4499;
      var $4500=$t0;
      var $4501=$t1;
      var $4502=((($4500)+($4501))|0);
      var $4503=(($S+24)|0);
      HEAP32[(($4503)>>2)]=$4502;
      var $4504=(($S+20)|0);
      var $4505=HEAP32[(($4504)>>2)];
      var $4506=(($S+8)|0);
      var $4507=HEAP32[(($4506)>>2)];
      var $4508=$4507 >>> 6;
      var $4509=(($S+8)|0);
      var $4510=HEAP32[(($4509)>>2)];
      var $4511=$4510 << 26;
      var $4512=$4508 | $4511;
      var $4513=(($S+8)|0);
      var $4514=HEAP32[(($4513)>>2)];
      var $4515=$4514 >>> 11;
      var $4516=(($S+8)|0);
      var $4517=HEAP32[(($4516)>>2)];
      var $4518=$4517 << 21;
      var $4519=$4515 | $4518;
      var $4520=$4512 ^ $4519;
      var $4521=(($S+8)|0);
      var $4522=HEAP32[(($4521)>>2)];
      var $4523=$4522 >>> 25;
      var $4524=(($S+8)|0);
      var $4525=HEAP32[(($4524)>>2)];
      var $4526=$4525 << 7;
      var $4527=$4523 | $4526;
      var $4528=$4520 ^ $4527;
      var $4529=((($4505)+($4528))|0);
      var $4530=(($S+16)|0);
      var $4531=HEAP32[(($4530)>>2)];
      var $4532=(($S+8)|0);
      var $4533=HEAP32[(($4532)>>2)];
      var $4534=(($S+12)|0);
      var $4535=HEAP32[(($4534)>>2)];
      var $4536=(($S+16)|0);
      var $4537=HEAP32[(($4536)>>2)];
      var $4538=$4535 ^ $4537;
      var $4539=$4533 & $4538;
      var $4540=$4531 ^ $4539;
      var $4541=((($4529)+($4540))|0);
      var $4542=((($4541)+(659060556))|0);
      var $4543=(($W+200)|0);
      var $4544=HEAP32[(($4543)>>2)];
      var $4545=((($4542)+($4544))|0);
      $t0=$4545;
      var $4546=(($S+24)|0);
      var $4547=HEAP32[(($4546)>>2)];
      var $4548=$4547 >>> 2;
      var $4549=(($S+24)|0);
      var $4550=HEAP32[(($4549)>>2)];
      var $4551=$4550 << 30;
      var $4552=$4548 | $4551;
      var $4553=(($S+24)|0);
      var $4554=HEAP32[(($4553)>>2)];
      var $4555=$4554 >>> 13;
      var $4556=(($S+24)|0);
      var $4557=HEAP32[(($4556)>>2)];
      var $4558=$4557 << 19;
      var $4559=$4555 | $4558;
      var $4560=$4552 ^ $4559;
      var $4561=(($S+24)|0);
      var $4562=HEAP32[(($4561)>>2)];
      var $4563=$4562 >>> 22;
      var $4564=(($S+24)|0);
      var $4565=HEAP32[(($4564)>>2)];
      var $4566=$4565 << 10;
      var $4567=$4563 | $4566;
      var $4568=$4560 ^ $4567;
      var $4569=(($S+24)|0);
      var $4570=HEAP32[(($4569)>>2)];
      var $4571=(($S+28)|0);
      var $4572=HEAP32[(($4571)>>2)];
      var $4573=$4570 | $4572;
      var $4574=(($S)|0);
      var $4575=HEAP32[(($4574)>>2)];
      var $4576=$4573 & $4575;
      var $4577=(($S+24)|0);
      var $4578=HEAP32[(($4577)>>2)];
      var $4579=(($S+28)|0);
      var $4580=HEAP32[(($4579)>>2)];
      var $4581=$4578 & $4580;
      var $4582=$4576 | $4581;
      var $4583=((($4568)+($4582))|0);
      $t1=$4583;
      var $4584=$t0;
      var $4585=(($S+4)|0);
      var $4586=HEAP32[(($4585)>>2)];
      var $4587=((($4586)+($4584))|0);
      HEAP32[(($4585)>>2)]=$4587;
      var $4588=$t0;
      var $4589=$t1;
      var $4590=((($4588)+($4589))|0);
      var $4591=(($S+20)|0);
      HEAP32[(($4591)>>2)]=$4590;
      var $4592=(($S+16)|0);
      var $4593=HEAP32[(($4592)>>2)];
      var $4594=(($S+4)|0);
      var $4595=HEAP32[(($4594)>>2)];
      var $4596=$4595 >>> 6;
      var $4597=(($S+4)|0);
      var $4598=HEAP32[(($4597)>>2)];
      var $4599=$4598 << 26;
      var $4600=$4596 | $4599;
      var $4601=(($S+4)|0);
      var $4602=HEAP32[(($4601)>>2)];
      var $4603=$4602 >>> 11;
      var $4604=(($S+4)|0);
      var $4605=HEAP32[(($4604)>>2)];
      var $4606=$4605 << 21;
      var $4607=$4603 | $4606;
      var $4608=$4600 ^ $4607;
      var $4609=(($S+4)|0);
      var $4610=HEAP32[(($4609)>>2)];
      var $4611=$4610 >>> 25;
      var $4612=(($S+4)|0);
      var $4613=HEAP32[(($4612)>>2)];
      var $4614=$4613 << 7;
      var $4615=$4611 | $4614;
      var $4616=$4608 ^ $4615;
      var $4617=((($4593)+($4616))|0);
      var $4618=(($S+12)|0);
      var $4619=HEAP32[(($4618)>>2)];
      var $4620=(($S+4)|0);
      var $4621=HEAP32[(($4620)>>2)];
      var $4622=(($S+8)|0);
      var $4623=HEAP32[(($4622)>>2)];
      var $4624=(($S+12)|0);
      var $4625=HEAP32[(($4624)>>2)];
      var $4626=$4623 ^ $4625;
      var $4627=$4621 & $4626;
      var $4628=$4619 ^ $4627;
      var $4629=((($4617)+($4628))|0);
      var $4630=((($4629)+(883997877))|0);
      var $4631=(($W+204)|0);
      var $4632=HEAP32[(($4631)>>2)];
      var $4633=((($4630)+($4632))|0);
      $t0=$4633;
      var $4634=(($S+20)|0);
      var $4635=HEAP32[(($4634)>>2)];
      var $4636=$4635 >>> 2;
      var $4637=(($S+20)|0);
      var $4638=HEAP32[(($4637)>>2)];
      var $4639=$4638 << 30;
      var $4640=$4636 | $4639;
      var $4641=(($S+20)|0);
      var $4642=HEAP32[(($4641)>>2)];
      var $4643=$4642 >>> 13;
      var $4644=(($S+20)|0);
      var $4645=HEAP32[(($4644)>>2)];
      var $4646=$4645 << 19;
      var $4647=$4643 | $4646;
      var $4648=$4640 ^ $4647;
      var $4649=(($S+20)|0);
      var $4650=HEAP32[(($4649)>>2)];
      var $4651=$4650 >>> 22;
      var $4652=(($S+20)|0);
      var $4653=HEAP32[(($4652)>>2)];
      var $4654=$4653 << 10;
      var $4655=$4651 | $4654;
      var $4656=$4648 ^ $4655;
      var $4657=(($S+20)|0);
      var $4658=HEAP32[(($4657)>>2)];
      var $4659=(($S+24)|0);
      var $4660=HEAP32[(($4659)>>2)];
      var $4661=$4658 | $4660;
      var $4662=(($S+28)|0);
      var $4663=HEAP32[(($4662)>>2)];
      var $4664=$4661 & $4663;
      var $4665=(($S+20)|0);
      var $4666=HEAP32[(($4665)>>2)];
      var $4667=(($S+24)|0);
      var $4668=HEAP32[(($4667)>>2)];
      var $4669=$4666 & $4668;
      var $4670=$4664 | $4669;
      var $4671=((($4656)+($4670))|0);
      $t1=$4671;
      var $4672=$t0;
      var $4673=(($S)|0);
      var $4674=HEAP32[(($4673)>>2)];
      var $4675=((($4674)+($4672))|0);
      HEAP32[(($4673)>>2)]=$4675;
      var $4676=$t0;
      var $4677=$t1;
      var $4678=((($4676)+($4677))|0);
      var $4679=(($S+16)|0);
      HEAP32[(($4679)>>2)]=$4678;
      var $4680=(($S+12)|0);
      var $4681=HEAP32[(($4680)>>2)];
      var $4682=(($S)|0);
      var $4683=HEAP32[(($4682)>>2)];
      var $4684=$4683 >>> 6;
      var $4685=(($S)|0);
      var $4686=HEAP32[(($4685)>>2)];
      var $4687=$4686 << 26;
      var $4688=$4684 | $4687;
      var $4689=(($S)|0);
      var $4690=HEAP32[(($4689)>>2)];
      var $4691=$4690 >>> 11;
      var $4692=(($S)|0);
      var $4693=HEAP32[(($4692)>>2)];
      var $4694=$4693 << 21;
      var $4695=$4691 | $4694;
      var $4696=$4688 ^ $4695;
      var $4697=(($S)|0);
      var $4698=HEAP32[(($4697)>>2)];
      var $4699=$4698 >>> 25;
      var $4700=(($S)|0);
      var $4701=HEAP32[(($4700)>>2)];
      var $4702=$4701 << 7;
      var $4703=$4699 | $4702;
      var $4704=$4696 ^ $4703;
      var $4705=((($4681)+($4704))|0);
      var $4706=(($S+8)|0);
      var $4707=HEAP32[(($4706)>>2)];
      var $4708=(($S)|0);
      var $4709=HEAP32[(($4708)>>2)];
      var $4710=(($S+4)|0);
      var $4711=HEAP32[(($4710)>>2)];
      var $4712=(($S+8)|0);
      var $4713=HEAP32[(($4712)>>2)];
      var $4714=$4711 ^ $4713;
      var $4715=$4709 & $4714;
      var $4716=$4707 ^ $4715;
      var $4717=((($4705)+($4716))|0);
      var $4718=((($4717)+(958139571))|0);
      var $4719=(($W+208)|0);
      var $4720=HEAP32[(($4719)>>2)];
      var $4721=((($4718)+($4720))|0);
      $t0=$4721;
      var $4722=(($S+16)|0);
      var $4723=HEAP32[(($4722)>>2)];
      var $4724=$4723 >>> 2;
      var $4725=(($S+16)|0);
      var $4726=HEAP32[(($4725)>>2)];
      var $4727=$4726 << 30;
      var $4728=$4724 | $4727;
      var $4729=(($S+16)|0);
      var $4730=HEAP32[(($4729)>>2)];
      var $4731=$4730 >>> 13;
      var $4732=(($S+16)|0);
      var $4733=HEAP32[(($4732)>>2)];
      var $4734=$4733 << 19;
      var $4735=$4731 | $4734;
      var $4736=$4728 ^ $4735;
      var $4737=(($S+16)|0);
      var $4738=HEAP32[(($4737)>>2)];
      var $4739=$4738 >>> 22;
      var $4740=(($S+16)|0);
      var $4741=HEAP32[(($4740)>>2)];
      var $4742=$4741 << 10;
      var $4743=$4739 | $4742;
      var $4744=$4736 ^ $4743;
      var $4745=(($S+16)|0);
      var $4746=HEAP32[(($4745)>>2)];
      var $4747=(($S+20)|0);
      var $4748=HEAP32[(($4747)>>2)];
      var $4749=$4746 | $4748;
      var $4750=(($S+24)|0);
      var $4751=HEAP32[(($4750)>>2)];
      var $4752=$4749 & $4751;
      var $4753=(($S+16)|0);
      var $4754=HEAP32[(($4753)>>2)];
      var $4755=(($S+20)|0);
      var $4756=HEAP32[(($4755)>>2)];
      var $4757=$4754 & $4756;
      var $4758=$4752 | $4757;
      var $4759=((($4744)+($4758))|0);
      $t1=$4759;
      var $4760=$t0;
      var $4761=(($S+28)|0);
      var $4762=HEAP32[(($4761)>>2)];
      var $4763=((($4762)+($4760))|0);
      HEAP32[(($4761)>>2)]=$4763;
      var $4764=$t0;
      var $4765=$t1;
      var $4766=((($4764)+($4765))|0);
      var $4767=(($S+12)|0);
      HEAP32[(($4767)>>2)]=$4766;
      var $4768=(($S+8)|0);
      var $4769=HEAP32[(($4768)>>2)];
      var $4770=(($S+28)|0);
      var $4771=HEAP32[(($4770)>>2)];
      var $4772=$4771 >>> 6;
      var $4773=(($S+28)|0);
      var $4774=HEAP32[(($4773)>>2)];
      var $4775=$4774 << 26;
      var $4776=$4772 | $4775;
      var $4777=(($S+28)|0);
      var $4778=HEAP32[(($4777)>>2)];
      var $4779=$4778 >>> 11;
      var $4780=(($S+28)|0);
      var $4781=HEAP32[(($4780)>>2)];
      var $4782=$4781 << 21;
      var $4783=$4779 | $4782;
      var $4784=$4776 ^ $4783;
      var $4785=(($S+28)|0);
      var $4786=HEAP32[(($4785)>>2)];
      var $4787=$4786 >>> 25;
      var $4788=(($S+28)|0);
      var $4789=HEAP32[(($4788)>>2)];
      var $4790=$4789 << 7;
      var $4791=$4787 | $4790;
      var $4792=$4784 ^ $4791;
      var $4793=((($4769)+($4792))|0);
      var $4794=(($S+4)|0);
      var $4795=HEAP32[(($4794)>>2)];
      var $4796=(($S+28)|0);
      var $4797=HEAP32[(($4796)>>2)];
      var $4798=(($S)|0);
      var $4799=HEAP32[(($4798)>>2)];
      var $4800=(($S+4)|0);
      var $4801=HEAP32[(($4800)>>2)];
      var $4802=$4799 ^ $4801;
      var $4803=$4797 & $4802;
      var $4804=$4795 ^ $4803;
      var $4805=((($4793)+($4804))|0);
      var $4806=((($4805)+(1322822218))|0);
      var $4807=(($W+212)|0);
      var $4808=HEAP32[(($4807)>>2)];
      var $4809=((($4806)+($4808))|0);
      $t0=$4809;
      var $4810=(($S+12)|0);
      var $4811=HEAP32[(($4810)>>2)];
      var $4812=$4811 >>> 2;
      var $4813=(($S+12)|0);
      var $4814=HEAP32[(($4813)>>2)];
      var $4815=$4814 << 30;
      var $4816=$4812 | $4815;
      var $4817=(($S+12)|0);
      var $4818=HEAP32[(($4817)>>2)];
      var $4819=$4818 >>> 13;
      var $4820=(($S+12)|0);
      var $4821=HEAP32[(($4820)>>2)];
      var $4822=$4821 << 19;
      var $4823=$4819 | $4822;
      var $4824=$4816 ^ $4823;
      var $4825=(($S+12)|0);
      var $4826=HEAP32[(($4825)>>2)];
      var $4827=$4826 >>> 22;
      var $4828=(($S+12)|0);
      var $4829=HEAP32[(($4828)>>2)];
      var $4830=$4829 << 10;
      var $4831=$4827 | $4830;
      var $4832=$4824 ^ $4831;
      var $4833=(($S+12)|0);
      var $4834=HEAP32[(($4833)>>2)];
      var $4835=(($S+16)|0);
      var $4836=HEAP32[(($4835)>>2)];
      var $4837=$4834 | $4836;
      var $4838=(($S+20)|0);
      var $4839=HEAP32[(($4838)>>2)];
      var $4840=$4837 & $4839;
      var $4841=(($S+12)|0);
      var $4842=HEAP32[(($4841)>>2)];
      var $4843=(($S+16)|0);
      var $4844=HEAP32[(($4843)>>2)];
      var $4845=$4842 & $4844;
      var $4846=$4840 | $4845;
      var $4847=((($4832)+($4846))|0);
      $t1=$4847;
      var $4848=$t0;
      var $4849=(($S+24)|0);
      var $4850=HEAP32[(($4849)>>2)];
      var $4851=((($4850)+($4848))|0);
      HEAP32[(($4849)>>2)]=$4851;
      var $4852=$t0;
      var $4853=$t1;
      var $4854=((($4852)+($4853))|0);
      var $4855=(($S+8)|0);
      HEAP32[(($4855)>>2)]=$4854;
      var $4856=(($S+4)|0);
      var $4857=HEAP32[(($4856)>>2)];
      var $4858=(($S+24)|0);
      var $4859=HEAP32[(($4858)>>2)];
      var $4860=$4859 >>> 6;
      var $4861=(($S+24)|0);
      var $4862=HEAP32[(($4861)>>2)];
      var $4863=$4862 << 26;
      var $4864=$4860 | $4863;
      var $4865=(($S+24)|0);
      var $4866=HEAP32[(($4865)>>2)];
      var $4867=$4866 >>> 11;
      var $4868=(($S+24)|0);
      var $4869=HEAP32[(($4868)>>2)];
      var $4870=$4869 << 21;
      var $4871=$4867 | $4870;
      var $4872=$4864 ^ $4871;
      var $4873=(($S+24)|0);
      var $4874=HEAP32[(($4873)>>2)];
      var $4875=$4874 >>> 25;
      var $4876=(($S+24)|0);
      var $4877=HEAP32[(($4876)>>2)];
      var $4878=$4877 << 7;
      var $4879=$4875 | $4878;
      var $4880=$4872 ^ $4879;
      var $4881=((($4857)+($4880))|0);
      var $4882=(($S)|0);
      var $4883=HEAP32[(($4882)>>2)];
      var $4884=(($S+24)|0);
      var $4885=HEAP32[(($4884)>>2)];
      var $4886=(($S+28)|0);
      var $4887=HEAP32[(($4886)>>2)];
      var $4888=(($S)|0);
      var $4889=HEAP32[(($4888)>>2)];
      var $4890=$4887 ^ $4889;
      var $4891=$4885 & $4890;
      var $4892=$4883 ^ $4891;
      var $4893=((($4881)+($4892))|0);
      var $4894=((($4893)+(1537002063))|0);
      var $4895=(($W+216)|0);
      var $4896=HEAP32[(($4895)>>2)];
      var $4897=((($4894)+($4896))|0);
      $t0=$4897;
      var $4898=(($S+8)|0);
      var $4899=HEAP32[(($4898)>>2)];
      var $4900=$4899 >>> 2;
      var $4901=(($S+8)|0);
      var $4902=HEAP32[(($4901)>>2)];
      var $4903=$4902 << 30;
      var $4904=$4900 | $4903;
      var $4905=(($S+8)|0);
      var $4906=HEAP32[(($4905)>>2)];
      var $4907=$4906 >>> 13;
      var $4908=(($S+8)|0);
      var $4909=HEAP32[(($4908)>>2)];
      var $4910=$4909 << 19;
      var $4911=$4907 | $4910;
      var $4912=$4904 ^ $4911;
      var $4913=(($S+8)|0);
      var $4914=HEAP32[(($4913)>>2)];
      var $4915=$4914 >>> 22;
      var $4916=(($S+8)|0);
      var $4917=HEAP32[(($4916)>>2)];
      var $4918=$4917 << 10;
      var $4919=$4915 | $4918;
      var $4920=$4912 ^ $4919;
      var $4921=(($S+8)|0);
      var $4922=HEAP32[(($4921)>>2)];
      var $4923=(($S+12)|0);
      var $4924=HEAP32[(($4923)>>2)];
      var $4925=$4922 | $4924;
      var $4926=(($S+16)|0);
      var $4927=HEAP32[(($4926)>>2)];
      var $4928=$4925 & $4927;
      var $4929=(($S+8)|0);
      var $4930=HEAP32[(($4929)>>2)];
      var $4931=(($S+12)|0);
      var $4932=HEAP32[(($4931)>>2)];
      var $4933=$4930 & $4932;
      var $4934=$4928 | $4933;
      var $4935=((($4920)+($4934))|0);
      $t1=$4935;
      var $4936=$t0;
      var $4937=(($S+20)|0);
      var $4938=HEAP32[(($4937)>>2)];
      var $4939=((($4938)+($4936))|0);
      HEAP32[(($4937)>>2)]=$4939;
      var $4940=$t0;
      var $4941=$t1;
      var $4942=((($4940)+($4941))|0);
      var $4943=(($S+4)|0);
      HEAP32[(($4943)>>2)]=$4942;
      var $4944=(($S)|0);
      var $4945=HEAP32[(($4944)>>2)];
      var $4946=(($S+20)|0);
      var $4947=HEAP32[(($4946)>>2)];
      var $4948=$4947 >>> 6;
      var $4949=(($S+20)|0);
      var $4950=HEAP32[(($4949)>>2)];
      var $4951=$4950 << 26;
      var $4952=$4948 | $4951;
      var $4953=(($S+20)|0);
      var $4954=HEAP32[(($4953)>>2)];
      var $4955=$4954 >>> 11;
      var $4956=(($S+20)|0);
      var $4957=HEAP32[(($4956)>>2)];
      var $4958=$4957 << 21;
      var $4959=$4955 | $4958;
      var $4960=$4952 ^ $4959;
      var $4961=(($S+20)|0);
      var $4962=HEAP32[(($4961)>>2)];
      var $4963=$4962 >>> 25;
      var $4964=(($S+20)|0);
      var $4965=HEAP32[(($4964)>>2)];
      var $4966=$4965 << 7;
      var $4967=$4963 | $4966;
      var $4968=$4960 ^ $4967;
      var $4969=((($4945)+($4968))|0);
      var $4970=(($S+28)|0);
      var $4971=HEAP32[(($4970)>>2)];
      var $4972=(($S+20)|0);
      var $4973=HEAP32[(($4972)>>2)];
      var $4974=(($S+24)|0);
      var $4975=HEAP32[(($4974)>>2)];
      var $4976=(($S+28)|0);
      var $4977=HEAP32[(($4976)>>2)];
      var $4978=$4975 ^ $4977;
      var $4979=$4973 & $4978;
      var $4980=$4971 ^ $4979;
      var $4981=((($4969)+($4980))|0);
      var $4982=((($4981)+(1747873779))|0);
      var $4983=(($W+220)|0);
      var $4984=HEAP32[(($4983)>>2)];
      var $4985=((($4982)+($4984))|0);
      $t0=$4985;
      var $4986=(($S+4)|0);
      var $4987=HEAP32[(($4986)>>2)];
      var $4988=$4987 >>> 2;
      var $4989=(($S+4)|0);
      var $4990=HEAP32[(($4989)>>2)];
      var $4991=$4990 << 30;
      var $4992=$4988 | $4991;
      var $4993=(($S+4)|0);
      var $4994=HEAP32[(($4993)>>2)];
      var $4995=$4994 >>> 13;
      var $4996=(($S+4)|0);
      var $4997=HEAP32[(($4996)>>2)];
      var $4998=$4997 << 19;
      var $4999=$4995 | $4998;
      var $5000=$4992 ^ $4999;
      var $5001=(($S+4)|0);
      var $5002=HEAP32[(($5001)>>2)];
      var $5003=$5002 >>> 22;
      var $5004=(($S+4)|0);
      var $5005=HEAP32[(($5004)>>2)];
      var $5006=$5005 << 10;
      var $5007=$5003 | $5006;
      var $5008=$5000 ^ $5007;
      var $5009=(($S+4)|0);
      var $5010=HEAP32[(($5009)>>2)];
      var $5011=(($S+8)|0);
      var $5012=HEAP32[(($5011)>>2)];
      var $5013=$5010 | $5012;
      var $5014=(($S+12)|0);
      var $5015=HEAP32[(($5014)>>2)];
      var $5016=$5013 & $5015;
      var $5017=(($S+4)|0);
      var $5018=HEAP32[(($5017)>>2)];
      var $5019=(($S+8)|0);
      var $5020=HEAP32[(($5019)>>2)];
      var $5021=$5018 & $5020;
      var $5022=$5016 | $5021;
      var $5023=((($5008)+($5022))|0);
      $t1=$5023;
      var $5024=$t0;
      var $5025=(($S+16)|0);
      var $5026=HEAP32[(($5025)>>2)];
      var $5027=((($5026)+($5024))|0);
      HEAP32[(($5025)>>2)]=$5027;
      var $5028=$t0;
      var $5029=$t1;
      var $5030=((($5028)+($5029))|0);
      var $5031=(($S)|0);
      HEAP32[(($5031)>>2)]=$5030;
      var $5032=(($S+28)|0);
      var $5033=HEAP32[(($5032)>>2)];
      var $5034=(($S+16)|0);
      var $5035=HEAP32[(($5034)>>2)];
      var $5036=$5035 >>> 6;
      var $5037=(($S+16)|0);
      var $5038=HEAP32[(($5037)>>2)];
      var $5039=$5038 << 26;
      var $5040=$5036 | $5039;
      var $5041=(($S+16)|0);
      var $5042=HEAP32[(($5041)>>2)];
      var $5043=$5042 >>> 11;
      var $5044=(($S+16)|0);
      var $5045=HEAP32[(($5044)>>2)];
      var $5046=$5045 << 21;
      var $5047=$5043 | $5046;
      var $5048=$5040 ^ $5047;
      var $5049=(($S+16)|0);
      var $5050=HEAP32[(($5049)>>2)];
      var $5051=$5050 >>> 25;
      var $5052=(($S+16)|0);
      var $5053=HEAP32[(($5052)>>2)];
      var $5054=$5053 << 7;
      var $5055=$5051 | $5054;
      var $5056=$5048 ^ $5055;
      var $5057=((($5033)+($5056))|0);
      var $5058=(($S+24)|0);
      var $5059=HEAP32[(($5058)>>2)];
      var $5060=(($S+16)|0);
      var $5061=HEAP32[(($5060)>>2)];
      var $5062=(($S+20)|0);
      var $5063=HEAP32[(($5062)>>2)];
      var $5064=(($S+24)|0);
      var $5065=HEAP32[(($5064)>>2)];
      var $5066=$5063 ^ $5065;
      var $5067=$5061 & $5066;
      var $5068=$5059 ^ $5067;
      var $5069=((($5057)+($5068))|0);
      var $5070=((($5069)+(1955562222))|0);
      var $5071=(($W+224)|0);
      var $5072=HEAP32[(($5071)>>2)];
      var $5073=((($5070)+($5072))|0);
      $t0=$5073;
      var $5074=(($S)|0);
      var $5075=HEAP32[(($5074)>>2)];
      var $5076=$5075 >>> 2;
      var $5077=(($S)|0);
      var $5078=HEAP32[(($5077)>>2)];
      var $5079=$5078 << 30;
      var $5080=$5076 | $5079;
      var $5081=(($S)|0);
      var $5082=HEAP32[(($5081)>>2)];
      var $5083=$5082 >>> 13;
      var $5084=(($S)|0);
      var $5085=HEAP32[(($5084)>>2)];
      var $5086=$5085 << 19;
      var $5087=$5083 | $5086;
      var $5088=$5080 ^ $5087;
      var $5089=(($S)|0);
      var $5090=HEAP32[(($5089)>>2)];
      var $5091=$5090 >>> 22;
      var $5092=(($S)|0);
      var $5093=HEAP32[(($5092)>>2)];
      var $5094=$5093 << 10;
      var $5095=$5091 | $5094;
      var $5096=$5088 ^ $5095;
      var $5097=(($S)|0);
      var $5098=HEAP32[(($5097)>>2)];
      var $5099=(($S+4)|0);
      var $5100=HEAP32[(($5099)>>2)];
      var $5101=$5098 | $5100;
      var $5102=(($S+8)|0);
      var $5103=HEAP32[(($5102)>>2)];
      var $5104=$5101 & $5103;
      var $5105=(($S)|0);
      var $5106=HEAP32[(($5105)>>2)];
      var $5107=(($S+4)|0);
      var $5108=HEAP32[(($5107)>>2)];
      var $5109=$5106 & $5108;
      var $5110=$5104 | $5109;
      var $5111=((($5096)+($5110))|0);
      $t1=$5111;
      var $5112=$t0;
      var $5113=(($S+12)|0);
      var $5114=HEAP32[(($5113)>>2)];
      var $5115=((($5114)+($5112))|0);
      HEAP32[(($5113)>>2)]=$5115;
      var $5116=$t0;
      var $5117=$t1;
      var $5118=((($5116)+($5117))|0);
      var $5119=(($S+28)|0);
      HEAP32[(($5119)>>2)]=$5118;
      var $5120=(($S+24)|0);
      var $5121=HEAP32[(($5120)>>2)];
      var $5122=(($S+12)|0);
      var $5123=HEAP32[(($5122)>>2)];
      var $5124=$5123 >>> 6;
      var $5125=(($S+12)|0);
      var $5126=HEAP32[(($5125)>>2)];
      var $5127=$5126 << 26;
      var $5128=$5124 | $5127;
      var $5129=(($S+12)|0);
      var $5130=HEAP32[(($5129)>>2)];
      var $5131=$5130 >>> 11;
      var $5132=(($S+12)|0);
      var $5133=HEAP32[(($5132)>>2)];
      var $5134=$5133 << 21;
      var $5135=$5131 | $5134;
      var $5136=$5128 ^ $5135;
      var $5137=(($S+12)|0);
      var $5138=HEAP32[(($5137)>>2)];
      var $5139=$5138 >>> 25;
      var $5140=(($S+12)|0);
      var $5141=HEAP32[(($5140)>>2)];
      var $5142=$5141 << 7;
      var $5143=$5139 | $5142;
      var $5144=$5136 ^ $5143;
      var $5145=((($5121)+($5144))|0);
      var $5146=(($S+20)|0);
      var $5147=HEAP32[(($5146)>>2)];
      var $5148=(($S+12)|0);
      var $5149=HEAP32[(($5148)>>2)];
      var $5150=(($S+16)|0);
      var $5151=HEAP32[(($5150)>>2)];
      var $5152=(($S+20)|0);
      var $5153=HEAP32[(($5152)>>2)];
      var $5154=$5151 ^ $5153;
      var $5155=$5149 & $5154;
      var $5156=$5147 ^ $5155;
      var $5157=((($5145)+($5156))|0);
      var $5158=((($5157)+(2024104815))|0);
      var $5159=(($W+228)|0);
      var $5160=HEAP32[(($5159)>>2)];
      var $5161=((($5158)+($5160))|0);
      $t0=$5161;
      var $5162=(($S+28)|0);
      var $5163=HEAP32[(($5162)>>2)];
      var $5164=$5163 >>> 2;
      var $5165=(($S+28)|0);
      var $5166=HEAP32[(($5165)>>2)];
      var $5167=$5166 << 30;
      var $5168=$5164 | $5167;
      var $5169=(($S+28)|0);
      var $5170=HEAP32[(($5169)>>2)];
      var $5171=$5170 >>> 13;
      var $5172=(($S+28)|0);
      var $5173=HEAP32[(($5172)>>2)];
      var $5174=$5173 << 19;
      var $5175=$5171 | $5174;
      var $5176=$5168 ^ $5175;
      var $5177=(($S+28)|0);
      var $5178=HEAP32[(($5177)>>2)];
      var $5179=$5178 >>> 22;
      var $5180=(($S+28)|0);
      var $5181=HEAP32[(($5180)>>2)];
      var $5182=$5181 << 10;
      var $5183=$5179 | $5182;
      var $5184=$5176 ^ $5183;
      var $5185=(($S+28)|0);
      var $5186=HEAP32[(($5185)>>2)];
      var $5187=(($S)|0);
      var $5188=HEAP32[(($5187)>>2)];
      var $5189=$5186 | $5188;
      var $5190=(($S+4)|0);
      var $5191=HEAP32[(($5190)>>2)];
      var $5192=$5189 & $5191;
      var $5193=(($S+28)|0);
      var $5194=HEAP32[(($5193)>>2)];
      var $5195=(($S)|0);
      var $5196=HEAP32[(($5195)>>2)];
      var $5197=$5194 & $5196;
      var $5198=$5192 | $5197;
      var $5199=((($5184)+($5198))|0);
      $t1=$5199;
      var $5200=$t0;
      var $5201=(($S+8)|0);
      var $5202=HEAP32[(($5201)>>2)];
      var $5203=((($5202)+($5200))|0);
      HEAP32[(($5201)>>2)]=$5203;
      var $5204=$t0;
      var $5205=$t1;
      var $5206=((($5204)+($5205))|0);
      var $5207=(($S+24)|0);
      HEAP32[(($5207)>>2)]=$5206;
      var $5208=(($S+20)|0);
      var $5209=HEAP32[(($5208)>>2)];
      var $5210=(($S+8)|0);
      var $5211=HEAP32[(($5210)>>2)];
      var $5212=$5211 >>> 6;
      var $5213=(($S+8)|0);
      var $5214=HEAP32[(($5213)>>2)];
      var $5215=$5214 << 26;
      var $5216=$5212 | $5215;
      var $5217=(($S+8)|0);
      var $5218=HEAP32[(($5217)>>2)];
      var $5219=$5218 >>> 11;
      var $5220=(($S+8)|0);
      var $5221=HEAP32[(($5220)>>2)];
      var $5222=$5221 << 21;
      var $5223=$5219 | $5222;
      var $5224=$5216 ^ $5223;
      var $5225=(($S+8)|0);
      var $5226=HEAP32[(($5225)>>2)];
      var $5227=$5226 >>> 25;
      var $5228=(($S+8)|0);
      var $5229=HEAP32[(($5228)>>2)];
      var $5230=$5229 << 7;
      var $5231=$5227 | $5230;
      var $5232=$5224 ^ $5231;
      var $5233=((($5209)+($5232))|0);
      var $5234=(($S+16)|0);
      var $5235=HEAP32[(($5234)>>2)];
      var $5236=(($S+8)|0);
      var $5237=HEAP32[(($5236)>>2)];
      var $5238=(($S+12)|0);
      var $5239=HEAP32[(($5238)>>2)];
      var $5240=(($S+16)|0);
      var $5241=HEAP32[(($5240)>>2)];
      var $5242=$5239 ^ $5241;
      var $5243=$5237 & $5242;
      var $5244=$5235 ^ $5243;
      var $5245=((($5233)+($5244))|0);
      var $5246=((($5245)-(2067236844))|0);
      var $5247=(($W+232)|0);
      var $5248=HEAP32[(($5247)>>2)];
      var $5249=((($5246)+($5248))|0);
      $t0=$5249;
      var $5250=(($S+24)|0);
      var $5251=HEAP32[(($5250)>>2)];
      var $5252=$5251 >>> 2;
      var $5253=(($S+24)|0);
      var $5254=HEAP32[(($5253)>>2)];
      var $5255=$5254 << 30;
      var $5256=$5252 | $5255;
      var $5257=(($S+24)|0);
      var $5258=HEAP32[(($5257)>>2)];
      var $5259=$5258 >>> 13;
      var $5260=(($S+24)|0);
      var $5261=HEAP32[(($5260)>>2)];
      var $5262=$5261 << 19;
      var $5263=$5259 | $5262;
      var $5264=$5256 ^ $5263;
      var $5265=(($S+24)|0);
      var $5266=HEAP32[(($5265)>>2)];
      var $5267=$5266 >>> 22;
      var $5268=(($S+24)|0);
      var $5269=HEAP32[(($5268)>>2)];
      var $5270=$5269 << 10;
      var $5271=$5267 | $5270;
      var $5272=$5264 ^ $5271;
      var $5273=(($S+24)|0);
      var $5274=HEAP32[(($5273)>>2)];
      var $5275=(($S+28)|0);
      var $5276=HEAP32[(($5275)>>2)];
      var $5277=$5274 | $5276;
      var $5278=(($S)|0);
      var $5279=HEAP32[(($5278)>>2)];
      var $5280=$5277 & $5279;
      var $5281=(($S+24)|0);
      var $5282=HEAP32[(($5281)>>2)];
      var $5283=(($S+28)|0);
      var $5284=HEAP32[(($5283)>>2)];
      var $5285=$5282 & $5284;
      var $5286=$5280 | $5285;
      var $5287=((($5272)+($5286))|0);
      $t1=$5287;
      var $5288=$t0;
      var $5289=(($S+4)|0);
      var $5290=HEAP32[(($5289)>>2)];
      var $5291=((($5290)+($5288))|0);
      HEAP32[(($5289)>>2)]=$5291;
      var $5292=$t0;
      var $5293=$t1;
      var $5294=((($5292)+($5293))|0);
      var $5295=(($S+20)|0);
      HEAP32[(($5295)>>2)]=$5294;
      var $5296=(($S+16)|0);
      var $5297=HEAP32[(($5296)>>2)];
      var $5298=(($S+4)|0);
      var $5299=HEAP32[(($5298)>>2)];
      var $5300=$5299 >>> 6;
      var $5301=(($S+4)|0);
      var $5302=HEAP32[(($5301)>>2)];
      var $5303=$5302 << 26;
      var $5304=$5300 | $5303;
      var $5305=(($S+4)|0);
      var $5306=HEAP32[(($5305)>>2)];
      var $5307=$5306 >>> 11;
      var $5308=(($S+4)|0);
      var $5309=HEAP32[(($5308)>>2)];
      var $5310=$5309 << 21;
      var $5311=$5307 | $5310;
      var $5312=$5304 ^ $5311;
      var $5313=(($S+4)|0);
      var $5314=HEAP32[(($5313)>>2)];
      var $5315=$5314 >>> 25;
      var $5316=(($S+4)|0);
      var $5317=HEAP32[(($5316)>>2)];
      var $5318=$5317 << 7;
      var $5319=$5315 | $5318;
      var $5320=$5312 ^ $5319;
      var $5321=((($5297)+($5320))|0);
      var $5322=(($S+12)|0);
      var $5323=HEAP32[(($5322)>>2)];
      var $5324=(($S+4)|0);
      var $5325=HEAP32[(($5324)>>2)];
      var $5326=(($S+8)|0);
      var $5327=HEAP32[(($5326)>>2)];
      var $5328=(($S+12)|0);
      var $5329=HEAP32[(($5328)>>2)];
      var $5330=$5327 ^ $5329;
      var $5331=$5325 & $5330;
      var $5332=$5323 ^ $5331;
      var $5333=((($5321)+($5332))|0);
      var $5334=((($5333)-(1933114872))|0);
      var $5335=(($W+236)|0);
      var $5336=HEAP32[(($5335)>>2)];
      var $5337=((($5334)+($5336))|0);
      $t0=$5337;
      var $5338=(($S+20)|0);
      var $5339=HEAP32[(($5338)>>2)];
      var $5340=$5339 >>> 2;
      var $5341=(($S+20)|0);
      var $5342=HEAP32[(($5341)>>2)];
      var $5343=$5342 << 30;
      var $5344=$5340 | $5343;
      var $5345=(($S+20)|0);
      var $5346=HEAP32[(($5345)>>2)];
      var $5347=$5346 >>> 13;
      var $5348=(($S+20)|0);
      var $5349=HEAP32[(($5348)>>2)];
      var $5350=$5349 << 19;
      var $5351=$5347 | $5350;
      var $5352=$5344 ^ $5351;
      var $5353=(($S+20)|0);
      var $5354=HEAP32[(($5353)>>2)];
      var $5355=$5354 >>> 22;
      var $5356=(($S+20)|0);
      var $5357=HEAP32[(($5356)>>2)];
      var $5358=$5357 << 10;
      var $5359=$5355 | $5358;
      var $5360=$5352 ^ $5359;
      var $5361=(($S+20)|0);
      var $5362=HEAP32[(($5361)>>2)];
      var $5363=(($S+24)|0);
      var $5364=HEAP32[(($5363)>>2)];
      var $5365=$5362 | $5364;
      var $5366=(($S+28)|0);
      var $5367=HEAP32[(($5366)>>2)];
      var $5368=$5365 & $5367;
      var $5369=(($S+20)|0);
      var $5370=HEAP32[(($5369)>>2)];
      var $5371=(($S+24)|0);
      var $5372=HEAP32[(($5371)>>2)];
      var $5373=$5370 & $5372;
      var $5374=$5368 | $5373;
      var $5375=((($5360)+($5374))|0);
      $t1=$5375;
      var $5376=$t0;
      var $5377=(($S)|0);
      var $5378=HEAP32[(($5377)>>2)];
      var $5379=((($5378)+($5376))|0);
      HEAP32[(($5377)>>2)]=$5379;
      var $5380=$t0;
      var $5381=$t1;
      var $5382=((($5380)+($5381))|0);
      var $5383=(($S+16)|0);
      HEAP32[(($5383)>>2)]=$5382;
      var $5384=(($S+12)|0);
      var $5385=HEAP32[(($5384)>>2)];
      var $5386=(($S)|0);
      var $5387=HEAP32[(($5386)>>2)];
      var $5388=$5387 >>> 6;
      var $5389=(($S)|0);
      var $5390=HEAP32[(($5389)>>2)];
      var $5391=$5390 << 26;
      var $5392=$5388 | $5391;
      var $5393=(($S)|0);
      var $5394=HEAP32[(($5393)>>2)];
      var $5395=$5394 >>> 11;
      var $5396=(($S)|0);
      var $5397=HEAP32[(($5396)>>2)];
      var $5398=$5397 << 21;
      var $5399=$5395 | $5398;
      var $5400=$5392 ^ $5399;
      var $5401=(($S)|0);
      var $5402=HEAP32[(($5401)>>2)];
      var $5403=$5402 >>> 25;
      var $5404=(($S)|0);
      var $5405=HEAP32[(($5404)>>2)];
      var $5406=$5405 << 7;
      var $5407=$5403 | $5406;
      var $5408=$5400 ^ $5407;
      var $5409=((($5385)+($5408))|0);
      var $5410=(($S+8)|0);
      var $5411=HEAP32[(($5410)>>2)];
      var $5412=(($S)|0);
      var $5413=HEAP32[(($5412)>>2)];
      var $5414=(($S+4)|0);
      var $5415=HEAP32[(($5414)>>2)];
      var $5416=(($S+8)|0);
      var $5417=HEAP32[(($5416)>>2)];
      var $5418=$5415 ^ $5417;
      var $5419=$5413 & $5418;
      var $5420=$5411 ^ $5419;
      var $5421=((($5409)+($5420))|0);
      var $5422=((($5421)-(1866530822))|0);
      var $5423=(($W+240)|0);
      var $5424=HEAP32[(($5423)>>2)];
      var $5425=((($5422)+($5424))|0);
      $t0=$5425;
      var $5426=(($S+16)|0);
      var $5427=HEAP32[(($5426)>>2)];
      var $5428=$5427 >>> 2;
      var $5429=(($S+16)|0);
      var $5430=HEAP32[(($5429)>>2)];
      var $5431=$5430 << 30;
      var $5432=$5428 | $5431;
      var $5433=(($S+16)|0);
      var $5434=HEAP32[(($5433)>>2)];
      var $5435=$5434 >>> 13;
      var $5436=(($S+16)|0);
      var $5437=HEAP32[(($5436)>>2)];
      var $5438=$5437 << 19;
      var $5439=$5435 | $5438;
      var $5440=$5432 ^ $5439;
      var $5441=(($S+16)|0);
      var $5442=HEAP32[(($5441)>>2)];
      var $5443=$5442 >>> 22;
      var $5444=(($S+16)|0);
      var $5445=HEAP32[(($5444)>>2)];
      var $5446=$5445 << 10;
      var $5447=$5443 | $5446;
      var $5448=$5440 ^ $5447;
      var $5449=(($S+16)|0);
      var $5450=HEAP32[(($5449)>>2)];
      var $5451=(($S+20)|0);
      var $5452=HEAP32[(($5451)>>2)];
      var $5453=$5450 | $5452;
      var $5454=(($S+24)|0);
      var $5455=HEAP32[(($5454)>>2)];
      var $5456=$5453 & $5455;
      var $5457=(($S+16)|0);
      var $5458=HEAP32[(($5457)>>2)];
      var $5459=(($S+20)|0);
      var $5460=HEAP32[(($5459)>>2)];
      var $5461=$5458 & $5460;
      var $5462=$5456 | $5461;
      var $5463=((($5448)+($5462))|0);
      $t1=$5463;
      var $5464=$t0;
      var $5465=(($S+28)|0);
      var $5466=HEAP32[(($5465)>>2)];
      var $5467=((($5466)+($5464))|0);
      HEAP32[(($5465)>>2)]=$5467;
      var $5468=$t0;
      var $5469=$t1;
      var $5470=((($5468)+($5469))|0);
      var $5471=(($S+12)|0);
      HEAP32[(($5471)>>2)]=$5470;
      var $5472=(($S+8)|0);
      var $5473=HEAP32[(($5472)>>2)];
      var $5474=(($S+28)|0);
      var $5475=HEAP32[(($5474)>>2)];
      var $5476=$5475 >>> 6;
      var $5477=(($S+28)|0);
      var $5478=HEAP32[(($5477)>>2)];
      var $5479=$5478 << 26;
      var $5480=$5476 | $5479;
      var $5481=(($S+28)|0);
      var $5482=HEAP32[(($5481)>>2)];
      var $5483=$5482 >>> 11;
      var $5484=(($S+28)|0);
      var $5485=HEAP32[(($5484)>>2)];
      var $5486=$5485 << 21;
      var $5487=$5483 | $5486;
      var $5488=$5480 ^ $5487;
      var $5489=(($S+28)|0);
      var $5490=HEAP32[(($5489)>>2)];
      var $5491=$5490 >>> 25;
      var $5492=(($S+28)|0);
      var $5493=HEAP32[(($5492)>>2)];
      var $5494=$5493 << 7;
      var $5495=$5491 | $5494;
      var $5496=$5488 ^ $5495;
      var $5497=((($5473)+($5496))|0);
      var $5498=(($S+4)|0);
      var $5499=HEAP32[(($5498)>>2)];
      var $5500=(($S+28)|0);
      var $5501=HEAP32[(($5500)>>2)];
      var $5502=(($S)|0);
      var $5503=HEAP32[(($5502)>>2)];
      var $5504=(($S+4)|0);
      var $5505=HEAP32[(($5504)>>2)];
      var $5506=$5503 ^ $5505;
      var $5507=$5501 & $5506;
      var $5508=$5499 ^ $5507;
      var $5509=((($5497)+($5508))|0);
      var $5510=((($5509)-(1538233109))|0);
      var $5511=(($W+244)|0);
      var $5512=HEAP32[(($5511)>>2)];
      var $5513=((($5510)+($5512))|0);
      $t0=$5513;
      var $5514=(($S+12)|0);
      var $5515=HEAP32[(($5514)>>2)];
      var $5516=$5515 >>> 2;
      var $5517=(($S+12)|0);
      var $5518=HEAP32[(($5517)>>2)];
      var $5519=$5518 << 30;
      var $5520=$5516 | $5519;
      var $5521=(($S+12)|0);
      var $5522=HEAP32[(($5521)>>2)];
      var $5523=$5522 >>> 13;
      var $5524=(($S+12)|0);
      var $5525=HEAP32[(($5524)>>2)];
      var $5526=$5525 << 19;
      var $5527=$5523 | $5526;
      var $5528=$5520 ^ $5527;
      var $5529=(($S+12)|0);
      var $5530=HEAP32[(($5529)>>2)];
      var $5531=$5530 >>> 22;
      var $5532=(($S+12)|0);
      var $5533=HEAP32[(($5532)>>2)];
      var $5534=$5533 << 10;
      var $5535=$5531 | $5534;
      var $5536=$5528 ^ $5535;
      var $5537=(($S+12)|0);
      var $5538=HEAP32[(($5537)>>2)];
      var $5539=(($S+16)|0);
      var $5540=HEAP32[(($5539)>>2)];
      var $5541=$5538 | $5540;
      var $5542=(($S+20)|0);
      var $5543=HEAP32[(($5542)>>2)];
      var $5544=$5541 & $5543;
      var $5545=(($S+12)|0);
      var $5546=HEAP32[(($5545)>>2)];
      var $5547=(($S+16)|0);
      var $5548=HEAP32[(($5547)>>2)];
      var $5549=$5546 & $5548;
      var $5550=$5544 | $5549;
      var $5551=((($5536)+($5550))|0);
      $t1=$5551;
      var $5552=$t0;
      var $5553=(($S+24)|0);
      var $5554=HEAP32[(($5553)>>2)];
      var $5555=((($5554)+($5552))|0);
      HEAP32[(($5553)>>2)]=$5555;
      var $5556=$t0;
      var $5557=$t1;
      var $5558=((($5556)+($5557))|0);
      var $5559=(($S+8)|0);
      HEAP32[(($5559)>>2)]=$5558;
      var $5560=(($S+4)|0);
      var $5561=HEAP32[(($5560)>>2)];
      var $5562=(($S+24)|0);
      var $5563=HEAP32[(($5562)>>2)];
      var $5564=$5563 >>> 6;
      var $5565=(($S+24)|0);
      var $5566=HEAP32[(($5565)>>2)];
      var $5567=$5566 << 26;
      var $5568=$5564 | $5567;
      var $5569=(($S+24)|0);
      var $5570=HEAP32[(($5569)>>2)];
      var $5571=$5570 >>> 11;
      var $5572=(($S+24)|0);
      var $5573=HEAP32[(($5572)>>2)];
      var $5574=$5573 << 21;
      var $5575=$5571 | $5574;
      var $5576=$5568 ^ $5575;
      var $5577=(($S+24)|0);
      var $5578=HEAP32[(($5577)>>2)];
      var $5579=$5578 >>> 25;
      var $5580=(($S+24)|0);
      var $5581=HEAP32[(($5580)>>2)];
      var $5582=$5581 << 7;
      var $5583=$5579 | $5582;
      var $5584=$5576 ^ $5583;
      var $5585=((($5561)+($5584))|0);
      var $5586=(($S)|0);
      var $5587=HEAP32[(($5586)>>2)];
      var $5588=(($S+24)|0);
      var $5589=HEAP32[(($5588)>>2)];
      var $5590=(($S+28)|0);
      var $5591=HEAP32[(($5590)>>2)];
      var $5592=(($S)|0);
      var $5593=HEAP32[(($5592)>>2)];
      var $5594=$5591 ^ $5593;
      var $5595=$5589 & $5594;
      var $5596=$5587 ^ $5595;
      var $5597=((($5585)+($5596))|0);
      var $5598=((($5597)-(1090935817))|0);
      var $5599=(($W+248)|0);
      var $5600=HEAP32[(($5599)>>2)];
      var $5601=((($5598)+($5600))|0);
      $t0=$5601;
      var $5602=(($S+8)|0);
      var $5603=HEAP32[(($5602)>>2)];
      var $5604=$5603 >>> 2;
      var $5605=(($S+8)|0);
      var $5606=HEAP32[(($5605)>>2)];
      var $5607=$5606 << 30;
      var $5608=$5604 | $5607;
      var $5609=(($S+8)|0);
      var $5610=HEAP32[(($5609)>>2)];
      var $5611=$5610 >>> 13;
      var $5612=(($S+8)|0);
      var $5613=HEAP32[(($5612)>>2)];
      var $5614=$5613 << 19;
      var $5615=$5611 | $5614;
      var $5616=$5608 ^ $5615;
      var $5617=(($S+8)|0);
      var $5618=HEAP32[(($5617)>>2)];
      var $5619=$5618 >>> 22;
      var $5620=(($S+8)|0);
      var $5621=HEAP32[(($5620)>>2)];
      var $5622=$5621 << 10;
      var $5623=$5619 | $5622;
      var $5624=$5616 ^ $5623;
      var $5625=(($S+8)|0);
      var $5626=HEAP32[(($5625)>>2)];
      var $5627=(($S+12)|0);
      var $5628=HEAP32[(($5627)>>2)];
      var $5629=$5626 | $5628;
      var $5630=(($S+16)|0);
      var $5631=HEAP32[(($5630)>>2)];
      var $5632=$5629 & $5631;
      var $5633=(($S+8)|0);
      var $5634=HEAP32[(($5633)>>2)];
      var $5635=(($S+12)|0);
      var $5636=HEAP32[(($5635)>>2)];
      var $5637=$5634 & $5636;
      var $5638=$5632 | $5637;
      var $5639=((($5624)+($5638))|0);
      $t1=$5639;
      var $5640=$t0;
      var $5641=(($S+20)|0);
      var $5642=HEAP32[(($5641)>>2)];
      var $5643=((($5642)+($5640))|0);
      HEAP32[(($5641)>>2)]=$5643;
      var $5644=$t0;
      var $5645=$t1;
      var $5646=((($5644)+($5645))|0);
      var $5647=(($S+4)|0);
      HEAP32[(($5647)>>2)]=$5646;
      var $5648=(($S)|0);
      var $5649=HEAP32[(($5648)>>2)];
      var $5650=(($S+20)|0);
      var $5651=HEAP32[(($5650)>>2)];
      var $5652=$5651 >>> 6;
      var $5653=(($S+20)|0);
      var $5654=HEAP32[(($5653)>>2)];
      var $5655=$5654 << 26;
      var $5656=$5652 | $5655;
      var $5657=(($S+20)|0);
      var $5658=HEAP32[(($5657)>>2)];
      var $5659=$5658 >>> 11;
      var $5660=(($S+20)|0);
      var $5661=HEAP32[(($5660)>>2)];
      var $5662=$5661 << 21;
      var $5663=$5659 | $5662;
      var $5664=$5656 ^ $5663;
      var $5665=(($S+20)|0);
      var $5666=HEAP32[(($5665)>>2)];
      var $5667=$5666 >>> 25;
      var $5668=(($S+20)|0);
      var $5669=HEAP32[(($5668)>>2)];
      var $5670=$5669 << 7;
      var $5671=$5667 | $5670;
      var $5672=$5664 ^ $5671;
      var $5673=((($5649)+($5672))|0);
      var $5674=(($S+28)|0);
      var $5675=HEAP32[(($5674)>>2)];
      var $5676=(($S+20)|0);
      var $5677=HEAP32[(($5676)>>2)];
      var $5678=(($S+24)|0);
      var $5679=HEAP32[(($5678)>>2)];
      var $5680=(($S+28)|0);
      var $5681=HEAP32[(($5680)>>2)];
      var $5682=$5679 ^ $5681;
      var $5683=$5677 & $5682;
      var $5684=$5675 ^ $5683;
      var $5685=((($5673)+($5684))|0);
      var $5686=((($5685)-(965641998))|0);
      var $5687=(($W+252)|0);
      var $5688=HEAP32[(($5687)>>2)];
      var $5689=((($5686)+($5688))|0);
      $t0=$5689;
      var $5690=(($S+4)|0);
      var $5691=HEAP32[(($5690)>>2)];
      var $5692=$5691 >>> 2;
      var $5693=(($S+4)|0);
      var $5694=HEAP32[(($5693)>>2)];
      var $5695=$5694 << 30;
      var $5696=$5692 | $5695;
      var $5697=(($S+4)|0);
      var $5698=HEAP32[(($5697)>>2)];
      var $5699=$5698 >>> 13;
      var $5700=(($S+4)|0);
      var $5701=HEAP32[(($5700)>>2)];
      var $5702=$5701 << 19;
      var $5703=$5699 | $5702;
      var $5704=$5696 ^ $5703;
      var $5705=(($S+4)|0);
      var $5706=HEAP32[(($5705)>>2)];
      var $5707=$5706 >>> 22;
      var $5708=(($S+4)|0);
      var $5709=HEAP32[(($5708)>>2)];
      var $5710=$5709 << 10;
      var $5711=$5707 | $5710;
      var $5712=$5704 ^ $5711;
      var $5713=(($S+4)|0);
      var $5714=HEAP32[(($5713)>>2)];
      var $5715=(($S+8)|0);
      var $5716=HEAP32[(($5715)>>2)];
      var $5717=$5714 | $5716;
      var $5718=(($S+12)|0);
      var $5719=HEAP32[(($5718)>>2)];
      var $5720=$5717 & $5719;
      var $5721=(($S+4)|0);
      var $5722=HEAP32[(($5721)>>2)];
      var $5723=(($S+8)|0);
      var $5724=HEAP32[(($5723)>>2)];
      var $5725=$5722 & $5724;
      var $5726=$5720 | $5725;
      var $5727=((($5712)+($5726))|0);
      $t1=$5727;
      var $5728=$t0;
      var $5729=(($S+16)|0);
      var $5730=HEAP32[(($5729)>>2)];
      var $5731=((($5730)+($5728))|0);
      HEAP32[(($5729)>>2)]=$5731;
      var $5732=$t0;
      var $5733=$t1;
      var $5734=((($5732)+($5733))|0);
      var $5735=(($S)|0);
      HEAP32[(($5735)>>2)]=$5734;
      $i=0;
      label = 10; break;
    case 10: 
      var $5737=$i;
      var $5738=(($5737)|(0)) < 8;
      if ($5738) { label = 11; break; } else { label = 13; break; }
    case 11: 
      var $5740=$i;
      var $5741=$1;
      var $5742=(($5741+8)|0);
      var $5743=(($5742+($5740<<2))|0);
      var $5744=HEAP32[(($5743)>>2)];
      var $5745=$i;
      var $5746=(($S+($5745<<2))|0);
      var $5747=HEAP32[(($5746)>>2)];
      var $5748=((($5744)+($5747))|0);
      var $5749=$i;
      var $5750=$1;
      var $5751=(($5750+8)|0);
      var $5752=(($5751+($5749<<2))|0);
      HEAP32[(($5752)>>2)]=$5748;
      label = 12; break;
    case 12: 
      var $5754=$i;
      var $5755=((($5754)+(1))|0);
      $i=$5755;
      label = 10; break;
    case 13: 
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _longReverse($buffer, $byteCount, $Endianness) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $value;
      $1=$buffer;
      $2=$byteCount;
      $3=$Endianness;
      var $4=$3;
      var $5=(($4)|(0))==0;
      if ($5) { label = 2; break; } else { label = 3; break; }
    case 2: 
      label = 6; break;
    case 3: 
      var $8=$2;
      var $9=Math.floor(((($8)>>>(0)))/(4));
      $2=$9;
      label = 4; break;
    case 4: 
      var $11=$2;
      var $12=((($11)-(1))|0);
      $2=$12;
      var $13=(($11)|(0))!=0;
      if ($13) { label = 5; break; } else { label = 6; break; }
    case 5: 
      var $15=$1;
      var $16=HEAP32[(($15)>>2)];
      $value=$16;
      var $17=$value;
      var $18=$17 & -16711936;
      var $19=$18 >>> 8;
      var $20=$value;
      var $21=$20 & 16711935;
      var $22=$21 << 8;
      var $23=$19 | $22;
      $value=$23;
      var $24=$value;
      var $25=$24 << 16;
      var $26=$value;
      var $27=$26 >>> 16;
      var $28=$25 | $27;
      var $29=$1;
      var $30=(($29+4)|0);
      $1=$30;
      HEAP32[(($29)>>2)]=$28;
      label = 4; break;
    case 6: 
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _sha_init($sha_info) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 4)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $i=__stackBase__;
      $1=$sha_info;
      HEAP32[(($i)>>2)]=1;
      var $2=$1;
      var $3=(($2+112)|0);
      HEAP32[(($3)>>2)]=0;
      var $4=$i;
      var $5=HEAP8[($4)];
      var $6=(($5 << 24) >> 24);
      var $7=(($6)|(0))==1;
      if ($7) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $9=$1;
      var $10=(($9+112)|0);
      HEAP32[(($10)>>2)]=1;
      label = 3; break;
    case 3: 
      var $12=$1;
      var $13=(($12+8)|0);
      var $14=(($13)|0);
      HEAP32[(($14)>>2)]=1779033703;
      var $15=$1;
      var $16=(($15+8)|0);
      var $17=(($16+4)|0);
      HEAP32[(($17)>>2)]=-1150833019;
      var $18=$1;
      var $19=(($18+8)|0);
      var $20=(($19+8)|0);
      HEAP32[(($20)>>2)]=1013904242;
      var $21=$1;
      var $22=(($21+8)|0);
      var $23=(($22+12)|0);
      HEAP32[(($23)>>2)]=-1521486534;
      var $24=$1;
      var $25=(($24+8)|0);
      var $26=(($25+16)|0);
      HEAP32[(($26)>>2)]=1359893119;
      var $27=$1;
      var $28=(($27+8)|0);
      var $29=(($28+20)|0);
      HEAP32[(($29)>>2)]=-1694144372;
      var $30=$1;
      var $31=(($30+8)|0);
      var $32=(($31+24)|0);
      HEAP32[(($32)>>2)]=528734635;
      var $33=$1;
      var $34=(($33+8)|0);
      var $35=(($34+28)|0);
      HEAP32[(($35)>>2)]=1541459225;
      var $36=$1;
      var $37=(($36+40)|0);
      HEAP32[(($37)>>2)]=0;
      var $38=$1;
      var $39=(($38+44)|0);
      HEAP32[(($39)>>2)]=0;
      var $40=$1;
      var $41=(($40+116)|0);
      HEAP32[(($41)>>2)]=0;
      var $42=$1;
      var $43=(($42+120)|0);
      HEAP32[(($43)>>2)]=32;
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + label);
  }
}
function _newSHA256object() {
  var label = 0;
  var $1=__PyObject_New(_SHA256type);
  var $2=$1;
  return $2;
}
function _SHA_dealloc($ptr) {
  var label = 0;
  var $1;
  $1=$ptr;
  var $2=$1;
  var $3=$2;
  _PyObject_Free($3);
  return;
}
function _SHA256_get_block_size($self, $closure) {
  var label = 0;
  var $1;
  var $2;
  $1=$self;
  $2=$closure;
  var $3=_PyInt_FromLong(64);
  return $3;
}
function _SHA256_get_name($self, $closure) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      $2=$self;
      $3=$closure;
      var $4=$2;
      var $5=$4;
      var $6=(($5+120)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|(0))==32;
      if ($8) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $10=_PyString_FromStringAndSize(((__str8)|0), 6);
      $1=$10;
      label = 4; break;
    case 3: 
      var $12=_PyString_FromStringAndSize(((__str9)|0), 6);
      $1=$12;
      label = 4; break;
    case 4: 
      var $14=$1;
      return $14;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA256_copy($self, $unused) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $newobj;
      $2=$self;
      $3=$unused;
      var $4=$2;
      var $5=$4;
      var $6=(($5+4)|0);
      var $7=HEAP32[(($6)>>2)];
      var $8=(($7)|(0))==((_SHA256type)|(0));
      if ($8) { label = 2; break; } else { label = 5; break; }
    case 2: 
      var $10=_newSHA256object();
      $newobj=$10;
      var $11=(($10)|(0))==0;
      if ($11) { label = 3; break; } else { label = 4; break; }
    case 3: 
      $1=0;
      label = 9; break;
    case 4: 
      label = 8; break;
    case 5: 
      var $15=_newSHA224object();
      $newobj=$15;
      var $16=(($15)|(0))==0;
      if ($16) { label = 6; break; } else { label = 7; break; }
    case 6: 
      $1=0;
      label = 9; break;
    case 7: 
      label = 8; break;
    case 8: 
      var $20=$2;
      var $21=$newobj;
      _SHAcopy($20, $21);
      var $22=$newobj;
      var $23=$22;
      $1=$23;
      label = 9; break;
    case 9: 
      var $25=$1;
      return $25;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA256_digest($self, $unused) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 156)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  var $1;
  var $2;
  var $digest=__stackBase__;
  var $temp=(__stackBase__)+(32);
  $1=$self;
  $2=$unused;
  var $3=$1;
  _SHAcopy($3, $temp);
  var $4=(($digest)|0);
  _sha_final($4, $temp);
  var $5=(($digest)|0);
  var $6=$1;
  var $7=(($6+120)|0);
  var $8=HEAP32[(($7)>>2)];
  var $9=_PyString_FromStringAndSize($5, $8);
  STACKTOP = __stackBase__;
  return $9;
}
function _SHA256_hexdigest($self, $unused) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 156)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $digest=__stackBase__;
      var $temp=(__stackBase__)+(32);
      var $retval;
      var $hex_digest;
      var $i;
      var $j;
      var $c;
      $2=$self;
      $3=$unused;
      var $4=$2;
      _SHAcopy($4, $temp);
      var $5=(($digest)|0);
      _sha_final($5, $temp);
      var $6=$2;
      var $7=(($6+120)|0);
      var $8=HEAP32[(($7)>>2)];
      var $9=($8<<1);
      var $10=_PyString_FromStringAndSize(0, $9);
      $retval=$10;
      var $11=$retval;
      var $12=(($11)|(0))!=0;
      if ($12) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 21; break;
    case 3: 
      var $15=$retval;
      var $16=_PyString_AsString($15);
      $hex_digest=$16;
      var $17=$hex_digest;
      var $18=(($17)|(0))!=0;
      if ($18) { label = 10; break; } else { label = 4; break; }
    case 4: 
      label = 5; break;
    case 5: 
      var $21=$retval;
      var $22=(($21)|0);
      var $23=HEAP32[(($22)>>2)];
      var $24=((($23)-(1))|0);
      HEAP32[(($22)>>2)]=$24;
      var $25=(($24)|(0))!=0;
      if ($25) { label = 6; break; } else { label = 7; break; }
    case 6: 
      label = 8; break;
    case 7: 
      var $28=$retval;
      var $29=(($28+4)|0);
      var $30=HEAP32[(($29)>>2)];
      var $31=(($30+24)|0);
      var $32=HEAP32[(($31)>>2)];
      var $33=$retval;
      FUNCTION_TABLE[$32]($33);
      label = 8; break;
    case 8: 
      label = 9; break;
    case 9: 
      $1=0;
      label = 21; break;
    case 10: 
      $j=0;
      $i=0;
      label = 11; break;
    case 11: 
      var $38=$i;
      var $39=$2;
      var $40=(($39+120)|0);
      var $41=HEAP32[(($40)>>2)];
      var $42=(($38)|(0)) < (($41)|(0));
      if ($42) { label = 12; break; } else { label = 20; break; }
    case 12: 
      var $44=$i;
      var $45=(($digest+$44)|0);
      var $46=HEAP8[($45)];
      var $47=(($46)&(255));
      var $48=$47 >> 4;
      var $49=$48 & 15;
      var $50=(($49) & 255);
      $c=$50;
      var $51=$c;
      var $52=(($51 << 24) >> 24);
      var $53=(($52)|(0)) > 9;
      if ($53) { label = 13; break; } else { label = 14; break; }
    case 13: 
      var $55=$c;
      var $56=(($55 << 24) >> 24);
      var $57=((($56)+(97))|0);
      var $58=((($57)-(10))|0);
      var $64 = $58;label = 15; break;
    case 14: 
      var $60=$c;
      var $61=(($60 << 24) >> 24);
      var $62=((($61)+(48))|0);
      var $64 = $62;label = 15; break;
    case 15: 
      var $64;
      var $65=(($64) & 255);
      $c=$65;
      var $66=$c;
      var $67=$j;
      var $68=((($67)+(1))|0);
      $j=$68;
      var $69=$hex_digest;
      var $70=(($69+$67)|0);
      HEAP8[($70)]=$66;
      var $71=$i;
      var $72=(($digest+$71)|0);
      var $73=HEAP8[($72)];
      var $74=(($73)&(255));
      var $75=$74 & 15;
      var $76=(($75) & 255);
      $c=$76;
      var $77=$c;
      var $78=(($77 << 24) >> 24);
      var $79=(($78)|(0)) > 9;
      if ($79) { label = 16; break; } else { label = 17; break; }
    case 16: 
      var $81=$c;
      var $82=(($81 << 24) >> 24);
      var $83=((($82)+(97))|0);
      var $84=((($83)-(10))|0);
      var $90 = $84;label = 18; break;
    case 17: 
      var $86=$c;
      var $87=(($86 << 24) >> 24);
      var $88=((($87)+(48))|0);
      var $90 = $88;label = 18; break;
    case 18: 
      var $90;
      var $91=(($90) & 255);
      $c=$91;
      var $92=$c;
      var $93=$j;
      var $94=((($93)+(1))|0);
      $j=$94;
      var $95=$hex_digest;
      var $96=(($95+$93)|0);
      HEAP8[($96)]=$92;
      label = 19; break;
    case 19: 
      var $98=$i;
      var $99=((($98)+(1))|0);
      $i=$99;
      label = 11; break;
    case 20: 
      var $101=$retval;
      $1=$101;
      label = 21; break;
    case 21: 
      var $103=$1;
      STACKTOP = __stackBase__;
      return $103;
    default: assert(0, "bad label: " + label);
  }
}
function _SHA256_update($self, $args) {
  var label = 0;
  var __stackBase__  = STACKTOP; STACKTOP = (STACKTOP + 52)|0; assert(!(STACKTOP&3)); assert((STACKTOP|0) < (STACK_MAX|0));
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $3;
      var $buf=__stackBase__;
      $2=$self;
      $3=$args;
      var $4=$3;
      var $5=_PyArg_ParseTuple($4, ((__str16)|0), (tempInt=STACKTOP,STACKTOP = (STACKTOP + 4)|0,assert((STACKTOP|0) < (STACK_MAX|0)),HEAP32[((tempInt)>>2)]=$buf,tempInt));
      var $6=(($5)|(0))!=0;
      if ($6) { label = 3; break; } else { label = 2; break; }
    case 2: 
      $1=0;
      label = 4; break;
    case 3: 
      var $9=$2;
      var $10=(($buf)|0);
      var $11=HEAP32[(($10)>>2)];
      var $12=(($buf+8)|0);
      var $13=HEAP32[(($12)>>2)];
      _sha_update($9, $11, $13);
      _PyBuffer_Release($buf);
      var $14=HEAP32[((((__Py_NoneStruct)|0))>>2)];
      var $15=((($14)+(1))|0);
      HEAP32[((((__Py_NoneStruct)|0))>>2)]=$15;
      $1=__Py_NoneStruct;
      label = 4; break;
    case 4: 
      var $17=$1;
      STACKTOP = __stackBase__;
      return $17;
    default: assert(0, "bad label: " + label);
  }
}
function _SHAcopy($src, $dest) {
  var label = 0;
  var $1;
  var $2;
  $1=$src;
  $2=$dest;
  var $3=$1;
  var $4=(($3+112)|0);
  var $5=HEAP32[(($4)>>2)];
  var $6=$2;
  var $7=(($6+112)|0);
  HEAP32[(($7)>>2)]=$5;
  var $8=$1;
  var $9=(($8+116)|0);
  var $10=HEAP32[(($9)>>2)];
  var $11=$2;
  var $12=(($11+116)|0);
  HEAP32[(($12)>>2)]=$10;
  var $13=$1;
  var $14=(($13+120)|0);
  var $15=HEAP32[(($14)>>2)];
  var $16=$2;
  var $17=(($16+120)|0);
  HEAP32[(($17)>>2)]=$15;
  var $18=$1;
  var $19=(($18+40)|0);
  var $20=HEAP32[(($19)>>2)];
  var $21=$2;
  var $22=(($21+40)|0);
  HEAP32[(($22)>>2)]=$20;
  var $23=$1;
  var $24=(($23+44)|0);
  var $25=HEAP32[(($24)>>2)];
  var $26=$2;
  var $27=(($26+44)|0);
  HEAP32[(($27)>>2)]=$25;
  var $28=$2;
  var $29=(($28+8)|0);
  var $30=$29;
  var $31=$1;
  var $32=(($31+8)|0);
  var $33=$32;
  assert(32 % 1 === 0);_memcpy($30, $33, 32);
  var $34=$2;
  var $35=(($34+48)|0);
  var $36=$35;
  var $37=$1;
  var $38=(($37+48)|0);
  var $39=$38;
  assert(64 % 1 === 0);_memcpy($36, $39, 64);
  return;
}
function _sha_final($digest, $sha_info) {
  var label = 0;
  label = 1; 
  while(1) switch(label) {
    case 1: 
      var $1;
      var $2;
      var $count;
      var $lo_bit_count;
      var $hi_bit_count;
      $1=$digest;
      $2=$sha_info;
      var $3=$2;
      var $4=(($3+40)|0);
      var $5=HEAP32[(($4)>>2)];
      $lo_bit_count=$5;
      var $6=$2;
      var $7=(($6+44)|0);
      var $8=HEAP32[(($7)>>2)];
      $hi_bit_count=$8;
      var $9=$lo_bit_count;
      var $10=$9 >>> 3;
      var $11=$10 & 63;
      $count=$11;
      var $12=$count;
      var $13=((($12)+(1))|0);
      $count=$13;
      var $14=$2;
      var $15=(($14+48)|0);
      var $16=(($15)|0);
      var $17=(($16+$12)|0);
      HEAP8[($17)]=-128;
      var $18=$count;
      var $19=(($18)|(0)) > 56;
      if ($19) { label = 2; break; } else { label = 3; break; }
    case 2: 
      var $21=$2;
      var $22=(($21+48)|0);
      var $23=(($22)|0);
      var $24=$count;
      var $25=(($23+$24)|0);
      var $26=$count;
      var $27=(((64)-($26))|0);
      _memset($25, 0, $27);
      var $28=$2;
      _sha_transform($28);
      var $29=$2;
      var $30=(($29+48)|0);
      var $31=(($30)|0);
      _memset($31, 0, 56);
      label = 4; break;
    case 3: 
      var $33=$2;
      var $34=(($33+48)|0);
      var $35=(($34)|0);
      var $36=$count;
      var $37=(($35+$36)|0);
      var $38=$count;
      var $39=(((56)-($38))|0);
      _memset($37, 0, $39);
      label = 4; break;
    case 4: 
      var $41=$hi_bit_count;
      var $42=$41 >>> 24;
      var $43=$42 & 255;
      var $44=(($43) & 255);
      var $45=$2;
      var $46=(($45+48)|0);
      var $47=(($46+56)|0);
      HEAP8[($47)]=$44;
      var $48=$hi_bit_count;
      var $49=$48 >>> 16;
      var $50=$49 & 255;
      var $51=(($50) & 255);
      var $52=$2;
      var $53=(($52+48)|0);
      var $54=(($53+57)|0);
      HEAP8[($54)]=$51;
      var $55=$hi_bit_count;
      var $56=$55 >>> 8;
      var $57=$56 & 255;
      var $58=(($57) & 255);
      var $59=$2;
      var $60=(($59+48)|0);
      var $61=(($60+58)|0);
      HEAP8[($61)]=$58;
      var $62=$hi_bit_count;
      var $63=$62 >>> 0;
      var $64=$63 & 255;
      var $65=(($64) & 255);
      var $66=$2;
      var $67=(($66+48)|0);
      var $68=(($67+59)|0);
      HEAP8[($68)]=$65;
      var $69=$lo_bit_count;
      var $70=$69 >>> 24;
      var $71=$70 & 255;
      var $72=(($71) & 255);
      var $73=$2;
      var $74=(($73+48)|0);
      var $75=(($74+60)|0);
      HEAP8[($75)]=$72;
      var $76=$lo_bit_count;
      var $77=$76 >>> 16;
      var $78=$77 & 255;
      var $79=(($78) & 255);
      var $80=$2;
      var $81=(($80+48)|0);
      var $82=(($81+61)|0);
      HEAP8[($82)]=$79;
      var $83=$lo_bit_count;
      var $84=$83 >>> 8;
      var $85=$84 & 255;
      var $86=(($85) & 255);
      var $87=$2;
      var $88=(($87+48)|0);
      var $89=(($88+62)|0);
      HEAP8[($89)]=$86;
      var $90=$lo_bit_count;
      var $91=$90 >>> 0;
      var $92=$91 & 255;
      var $93=(($92) & 255);
      var $94=$2;
      var $95=(($94+48)|0);
      var $96=(($95+63)|0);
      HEAP8[($96)]=$93;
      var $97=$2;
      _sha_transform($97);
      var $98=$2;
      var $99=(($98+8)|0);
      var $100=(($99)|0);
      var $101=HEAP32[(($100)>>2)];
      var $102=$101 >>> 24;
      var $103=$102 & 255;
      var $104=(($103) & 255);
      var $105=$1;
      var $106=(($105)|0);
      HEAP8[($106)]=$104;
      var $107=$2;
      var $108=(($107+8)|0);
      var $109=(($108)|0);
      var $110=HEAP32[(($109)>>2)];
      var $111=$110 >>> 16;
      var $112=$111 & 255;
      var $113=(($112) & 255);
      var $114=$1;
      var $115=(($114+1)|0);
      HEAP8[($115)]=$113;
      var $116=$2;
      var $117=(($116+8)|0);
      var $118=(($117)|0);
      var $119=HEAP32[(($118)>>2)];
      var $120=$119 >>> 8;
      var $121=$120 & 255;
      var $122=(($121) & 255);
      var $123=$1;
      var $124=(($123+2)|0);
      HEAP8[($124)]=$122;
      var $125=$2;
      var $126=(($125+8)|0);
      var $127=(($126)|0);
      var $128=HEAP32[(($127)>>2)];
      var $129=$128 & 255;
      var $130=(($129) & 255);
      var $131=$1;
      var $132=(($131+3)|0);
      HEAP8[($132)]=$130;
      var $133=$2;
      var $134=(($133+8)|0);
      var $135=(($134+4)|0);
      var $136=HEAP32[(($135)>>2)];
      var $137=$136 >>> 24;
      var $138=$137 & 255;
      var $139=(($138) & 255);
      var $140=$1;
      var $141=(($140+4)|0);
      HEAP8[($141)]=$139;
      var $142=$2;
      var $143=(($142+8)|0);
      var $144=(($143+4)|0);
      var $145=HEAP32[(($144)>>2)];
      var $146=$145 >>> 16;
      var $147=$146 & 255;
      var $148=(($147) & 255);
      var $149=$1;
      var $150=(($149+5)|0);
      HEAP8[($150)]=$148;
      var $151=$2;
      var $152=(($151+8)|0);
      var $153=(($152+4)|0);
      var $154=HEAP32[(($153)>>2)];
      var $155=$154 >>> 8;
      var $156=$155 & 255;
      var $157=(($156) & 255);
      var $158=$1;
      var $159=(($158+6)|0);
      HEAP8[($159)]=$157;
      var $160=$2;
      var $161=(($160+8)|0);
      var $162=(($161+4)|0);
      var $163=HEAP32[(($162)>>2)];
      var $164=$163 & 255;
      var $165=(($164) & 255);
      var $166=$1;
      var $167=(($166+7)|0);
      HEAP8[($167)]=$165;
      var $168=$2;
      var $169=(($168+8)|0);
      var $170=(($169+8)|0);
      var $171=HEAP32[(($170)>>2)];
      var $172=$171 >>> 24;
      var $173=$172 & 255;
      var $174=(($173) & 255);
      var $175=$1;
      var $176=(($175+8)|0);
      HEAP8[($176)]=$174;
      var $177=$2;
      var $178=(($177+8)|0);
      var $179=(($178+8)|0);
      var $180=HEAP32[(($179)>>2)];
      var $181=$180 >>> 16;
      var $182=$181 & 255;
      var $183=(($182) & 255);
      var $184=$1;
      var $185=(($184+9)|0);
      HEAP8[($185)]=$183;
      var $186=$2;
      var $187=(($186+8)|0);
      var $188=(($187+8)|0);
      var $189=HEAP32[(($188)>>2)];
      var $190=$189 >>> 8;
      var $191=$190 & 255;
      var $192=(($191) & 255);
      var $193=$1;
      var $194=(($193+10)|0);
      HEAP8[($194)]=$192;
      var $195=$2;
      var $196=(($195+8)|0);
      var $197=(($196+8)|0);
      var $198=HEAP32[(($197)>>2)];
      var $199=$198 & 255;
      var $200=(($199) & 255);
      var $201=$1;
      var $202=(($201+11)|0);
      HEAP8[($202)]=$200;
      var $203=$2;
      var $204=(($203+8)|0);
      var $205=(($204+12)|0);
      var $206=HEAP32[(($205)>>2)];
      var $207=$206 >>> 24;
      var $208=$207 & 255;
      var $209=(($208) & 255);
      var $210=$1;
      var $211=(($210+12)|0);
      HEAP8[($211)]=$209;
      var $212=$2;
      var $213=(($212+8)|0);
      var $214=(($213+12)|0);
      var $215=HEAP32[(($214)>>2)];
      var $216=$215 >>> 16;
      var $217=$216 & 255;
      var $218=(($217) & 255);
      var $219=$1;
      var $220=(($219+13)|0);
      HEAP8[($220)]=$218;
      var $221=$2;
      var $222=(($221+8)|0);
      var $223=(($222+12)|0);
      var $224=HEAP32[(($223)>>2)];
      var $225=$224 >>> 8;
      var $226=$225 & 255;
      var $227=(($226) & 255);
      var $228=$1;
      var $229=(($228+14)|0);
      HEAP8[($229)]=$227;
      var $230=$2;
      var $231=(($230+8)|0);
      var $232=(($231+12)|0);
      var $233=HEAP32[(($232)>>2)];
      var $234=$233 & 255;
      var $235=(($234) & 255);
      var $236=$1;
      var $237=(($236+15)|0);
      HEAP8[($237)]=$235;
      var $238=$2;
      var $239=(($238+8)|0);
      var $240=(($239+16)|0);
      var $241=HEAP32[(($240)>>2)];
      var $242=$241 >>> 24;
      var $243=$242 & 255;
      var $244=(($243) & 255);
      var $245=$1;
      var $246=(($245+16)|0);
      HEAP8[($246)]=$244;
      var $247=$2;
      var $248=(($247+8)|0);
      var $249=(($248+16)|0);
      var $250=HEAP32[(($249)>>2)];
      var $251=$250 >>> 16;
      var $252=$251 & 255;
      var $253=(($252) & 255);
      var $254=$1;
      var $255=(($254+17)|0);
      HEAP8[($255)]=$253;
      var $256=$2;
      var $257=(($256+8)|0);
      var $258=(($257+16)|0);
      var $259=HEAP32[(($258)>>2)];
      var $260=$259 >>> 8;
      var $261=$260 & 255;
      var $262=(($261) & 255);
      var $263=$1;
      var $264=(($263+18)|0);
      HEAP8[($264)]=$262;
      var $265=$2;
      var $266=(($265+8)|0);
      var $267=(($266+16)|0);
      var $268=HEAP32[(($267)>>2)];
      var $269=$268 & 255;
      var $270=(($269) & 255);
      var $271=$1;
      var $272=(($271+19)|0);
      HEAP8[($272)]=$270;
      var $273=$2;
      var $274=(($273+8)|0);
      var $275=(($274+20)|0);
      var $276=HEAP32[(($275)>>2)];
      var $277=$276 >>> 24;
      var $278=$277 & 255;
      var $279=(($278) & 255);
      var $280=$1;
      var $281=(($280+20)|0);
      HEAP8[($281)]=$279;
      var $282=$2;
      var $283=(($282+8)|0);
      var $284=(($283+20)|0);
      var $285=HEAP32[(($284)>>2)];
      var $286=$285 >>> 16;
      var $287=$286 & 255;
      var $288=(($287) & 255);
      var $289=$1;
      var $290=(($289+21)|0);
      HEAP8[($290)]=$288;
      var $291=$2;
      var $292=(($291+8)|0);
      var $293=(($292+20)|0);
      var $294=HEAP32[(($293)>>2)];
      var $295=$294 >>> 8;
      var $296=$295 & 255;
      var $297=(($296) & 255);
      var $298=$1;
      var $299=(($298+22)|0);
      HEAP8[($299)]=$297;
      var $300=$2;
      var $301=(($300+8)|0);
      var $302=(($301+20)|0);
      var $303=HEAP32[(($302)>>2)];
      var $304=$303 & 255;
      var $305=(($304) & 255);
      var $306=$1;
      var $307=(($306+23)|0);
      HEAP8[($307)]=$305;
      var $308=$2;
      var $309=(($308+8)|0);
      var $310=(($309+24)|0);
      var $311=HEAP32[(($310)>>2)];
      var $312=$311 >>> 24;
      var $313=$312 & 255;
      var $314=(($313) & 255);
      var $315=$1;
      var $316=(($315+24)|0);
      HEAP8[($316)]=$314;
      var $317=$2;
      var $318=(($317+8)|0);
      var $319=(($318+24)|0);
      var $320=HEAP32[(($319)>>2)];
      var $321=$320 >>> 16;
      var $322=$321 & 255;
      var $323=(($322) & 255);
      var $324=$1;
      var $325=(($324+25)|0);
      HEAP8[($325)]=$323;
      var $326=$2;
      var $327=(($326+8)|0);
      var $328=(($327+24)|0);
      var $329=HEAP32[(($328)>>2)];
      var $330=$329 >>> 8;
      var $331=$330 & 255;
      var $332=(($331) & 255);
      var $333=$1;
      var $334=(($333+26)|0);
      HEAP8[($334)]=$332;
      var $335=$2;
      var $336=(($335+8)|0);
      var $337=(($336+24)|0);
      var $338=HEAP32[(($337)>>2)];
      var $339=$338 & 255;
      var $340=(($339) & 255);
      var $341=$1;
      var $342=(($341+27)|0);
      HEAP8[($342)]=$340;
      var $343=$2;
      var $344=(($343+8)|0);
      var $345=(($344+28)|0);
      var $346=HEAP32[(($345)>>2)];
      var $347=$346 >>> 24;
      var $348=$347 & 255;
      var $349=(($348) & 255);
      var $350=$1;
      var $351=(($350+28)|0);
      HEAP8[($351)]=$349;
      var $352=$2;
      var $353=(($352+8)|0);
      var $354=(($353+28)|0);
      var $355=HEAP32[(($354)>>2)];
      var $356=$355 >>> 16;
      var $357=$356 & 255;
      var $358=(($357) & 255);
      var $359=$1;
      var $360=(($359+29)|0);
      HEAP8[($360)]=$358;
      var $361=$2;
      var $362=(($361+8)|0);
      var $363=(($362+28)|0);
      var $364=HEAP32[(($363)>>2)];
      var $365=$364 >>> 8;
      var $366=$365 & 255;
      var $367=(($366) & 255);
      var $368=$1;
      var $369=(($368+30)|0);
      HEAP8[($369)]=$367;
      var $370=$2;
      var $371=(($370+8)|0);
      var $372=(($371+28)|0);
      var $373=HEAP32[(($372)>>2)];
      var $374=$373 & 255;
      var $375=(($374) & 255);
      var $376=$1;
      var $377=(($376+31)|0);
      HEAP8[($377)]=$375;
      return;
    default: assert(0, "bad label: " + label);
  }
}
// EMSCRIPTEN_END_FUNCS
// EMSCRIPTEN_END_FUNCS
// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;
// === Auto-generated postamble setup entry stuff ===
function run(args) {
  initRuntime();
}
Module['run'] = run;
// {{PRE_RUN_ADDITIONS}}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
  return Module;
});
